{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 31,   2],\\n        [-37,  95],\\n        [-60,  98],\\n        [  7,  -3],\\n        [ 47,  24],\\n        [-65,  60],\\n        [ 57, -11],\\n        [ 46,  29],\\n        [  9,  33],\\n        [-96, -86],\\n        [ 47, -15],\\n        [-70,  55],\\n        [-92,  -5],\\n        [-27,  63],\\n        [ 99, -14],\\n        [-34, -44],\\n        [ 73, -19],\\n        [ 19,   9],\\n        [-53,  -4],\\n        [ 42,  -9],\\n        [ 54,  -9],\\n        [-31, -98],\\n        [-87, -98],\\n        [ 39, -26],\\n        [ 60, -61],\\n        [-54,  11],\\n        [ 19, -10],\\n        [-87,  81],\\n        [ 22,  79],\\n        [ 93, -32],\\n        [ -2, -31],\\n        [-55, -38],\\n        [-25,  10]]))",
    0.0063
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 133",
    0.04613
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.04403
  ]
}