{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-50, -17],\\n        [ 64, -72],\\n        [-24, -38],\\n        [ 36, -11],\\n        [ 98, -10],\\n        [ 83, -68],\\n        [ 35,  47],\\n        [-18,  86],\\n        [  0,  26],\\n        [ 25,  17],\\n        [-10,  26],\\n        [ 79,  83],\\n        [-10,  16],\\n        [ 58,   0],\\n        [-96,  50],\\n        [  6, -74],\\n        [-79,  21],\\n        [ 63, -81],\\n        [ 57,  -2],\\n        [  3, -84],\\n        [-56, -58],\\n        [ 37,  49],\\n        [-31,  17],\\n        [-62, -58],\\n        [ 35,  73],\\n        [100,  51],\\n        [-50,  21],\\n        [ 14,  11],\\n        [-35, -52],\\n        [-91,  93],\\n        [ 69, -83],\\n        [-19, -20],\\n        [ -9,  71],\\n        [ 83, -32],\\n        [-95, -51],\\n        [ 53, -52],\\n        [-43,  -7],\\n        [  9,  55],\\n        [ 85, -46],\\n        [-82,  93],\\n        [ 39,  70],\\n        [-77,  -7],\\n        [  7, -19],\\n        [ 67, -13]]))",
    0.01228
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.06238
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.06501
  ]
}