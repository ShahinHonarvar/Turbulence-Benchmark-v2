{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -31,   11],\\n        [  60,  -91],\\n        [  -1,  -30],\\n        [ -97,  -75],\\n        [  42,  -48],\\n        [  61,  -24],\\n        [ -48,   59],\\n        [ -84,  -28],\\n        [  29,   71],\\n        [  50,   77],\\n        [ -57,  -92],\\n        [ -47,   38],\\n        [  88,  -45],\\n        [ -65,  -86],\\n        [  10,    9],\\n        [ -28,  -14],\\n        [ -41,    0],\\n        [  30,  -63],\\n        [ -60,  -43],\\n        [ -33,  -21],\\n        [ -65,  -38],\\n        [ -87,   35],\\n        [-100,   49],\\n        [  98,   32],\\n        [  76,   93],\\n        [ -13,   -9],\\n        [  -5,   99],\\n        [  30,   91],\\n        [ -78,  -75],\\n        [ -58,   87],\\n        [ -44,  -83],\\n        [  81,  -89],\\n        [  15,    1],\\n        [ -41,  -53],\\n        [ -74,   -4],\\n        [  61,   61],\\n        [  29,   12],\\n        [ -43,  -23],\\n        [  20,  -73],\\n        [ -28,  -95],\\n        [  72,   53],\\n        [  79,  -61],\\n        [ -47,  -74],\\n        [ -55,  -99]]))",
    0.01394
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.084
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.10115
  ]
}