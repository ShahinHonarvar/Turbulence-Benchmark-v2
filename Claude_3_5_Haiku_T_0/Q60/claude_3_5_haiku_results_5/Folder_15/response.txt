Message(id='msg_01DWa9tCLpBi35EGidQkAWFo', content=[TextBlock(text="Here's the Python implementation for the specified function:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[6]\n    result = []\n    \n    for num in range(x, 11, -1):\n        if '0' in str(num):\n            continue\n        \n        is_truncatable = True\n        temp_num = num\n        \n        while temp_num > 9:\n            temp_num //= 10\n            if not is_prime(temp_num):\n                is_truncatable = False\n                break\n        \n        if not is_truncatable:\n            continue\n        \n        temp_num = num\n        while temp_num > 9:\n            temp_num %= 10**(len(str(temp_num)) - 1)\n            if not is_prime(temp_num):\n                is_truncatable = False\n                break\n        \n        if is_truncatable and is_prime(num):\n            result.append(num)\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. The `is_prime` helper function checks if a given number is prime by testing divisibility up to its square root.\n\n2. The `all_left_right_truncatable_prime` function takes a tuple of numbers and uses the number at index 6 as the upper limit.\n\n3. It iterates through numbers from x down to 12 (the smallest left-and-right-truncatable prime).\n\n4. It skips numbers containing 0.\n\n5. For each number, it checks if removing leading digits from left to right maintains primality.\n\n6. Then it checks if removing trailing digits from right to left maintains primality.\n\n7. If a number passes both checks and is prime itself, it's added to the result list.\n\n8. The result list is returned in descending order.\n\n9. If no such primes are found, an empty list is returned.\n\nThe function handles the requirements of finding left-and-right-truncatable primes less than or equal to the specified number.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=534))