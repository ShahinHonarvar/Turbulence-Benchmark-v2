{
  "parameter(s)": [
    15,
    30,
    300
  ],
  "test_float_numbers": [
    "failed",
    "AssertionError: assert 'The list should have between 30 and 300 elements' == 6.708203932499369\n +  where 'The list should have between 30 and 300 elements' = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00021
  ],
  "test_unsorted_large_range": [
    "failed",
    "AssertionError: assert 'The list should have between 30 and 300 elements' == -845\n +  where 'The list should have between 30 and 300 elements' = find_n_th_smallest_num([-945, 667, -850, -467, -904, 1, ...])",
    0.00074
  ],
  "test_n_th_smallest_is_in_range": [
    "failed",
    "AssertionError: assert 'The list should have between 30 and 300 elements' in [0, 1, 2, 3, 4, 5, ...]\n +  where 'The list should have between 30 and 300 elements' = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00667
  ]
}