{
  "parameter(s)": [
    21
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_numbers_and_letters": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    7e-05
  ],
  "test_length_less_than_21": [
    "passed",
    "",
    6e-05
  ],
  "test_length_equal_to_21": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_identical_punctuations": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_punctuations_and_nums": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_spaces_and_punctuations_nums_letters": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaa', ...}\n +  where {'aaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaa', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.0023
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 76 == 21\n +  where 76 = len('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')",
    0.0307
  ]
}