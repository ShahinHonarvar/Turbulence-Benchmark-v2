{
  "parameter(s)": [
    860
  ],
  "test_set_of_strings": [
    "passed",
    "",
    0.00012
  ],
  "test_smaller_sets": [
    "passed",
    "",
    0.00014
  ],
  "test_largest_subset": [
    "passed",
    "",
    0.0001
  ],
  "test_result_smaller_than_number_of_all_subsets": [
    "passed",
    "",
    0.0001
  ],
  "test_set_of_length_860_plus_1": [
    "passed",
    "",
    8e-05
  ],
  "test_set_of_float_numbers": [
    "failed",
    "assert 821386999232456187...8526009107191169024 == 821386999232340464...4455835941690491040\n +  where 821386999232456187...8526009107191169024 = find_subset_of_length_n({-99.8963, -99.64824, -99.60823, -99.38145, -99.10857, -98.68947, ...})\n +  and   821386999232340464...4455835941690491040 = <built-in function comb>(961, 860)\n +    where <built-in function comb> = math.comb\n +    and   961 = len({-99.8963, -99.64824, -99.60823, -99.38145, -99.10857, -98.68947, ...})",
    0.00118
  ],
  "test_set_of_numbers_strings_bools": [
    "failed",
    "assert 405032206354803870...3882081914095927296 == 405032206354799600...3952441474387117760\n +  where 405032206354803870...3882081914095927296 = find_subset_of_length_n({-0.53423, 1.94944, 2.29023, 1.66406, 4.94831, 5.07363, ...})\n +  and   405032206354799600...3952441474387117760 = <built-in function comb>(1063, 860)\n +    where <built-in function comb> = math.comb\n +    and   1063 = len({-0.53423, 1.94944, 2.29023, 1.66406, 4.94831, 5.07363, ...})",
    0.00081
  ]
}