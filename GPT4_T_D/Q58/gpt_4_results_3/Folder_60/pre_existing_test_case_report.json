{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00041
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.08819
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  53,  -17],\\n        [ -81,  -84],\\n        [-100,  -44],\\n        [ -76,  -41],\\n        [ -67,  -72],\\n        [ -39,  -41],\\n        [ -91,  -34],\\n        [  89,  -95],\\n        [ -55,  -60],\\n        [   7,   87],\\n        [  14,   -2],\\n        [  84,   37],\\n        [ -10,  -18],\\n        [ -97,  -65],\\n        [  58,   89],\\n        [  98,   18],\\n        [   4,   66],\\n        [  -6,   82],\\n        [  74,   19],\\n        [   2,  -84],\\n        [   4,  -14],\\n        [  79,  -30],\\n        [  67,   11],\\n        [  21,  -41],\\n        [ -97,  -93],\\n        [-100,  -49],\\n        [  54,  -64],\\n        [  19,  -49],\\n        [  59,  -61],\\n        [  57,  -18],\\n        [ -81,   -8],\\n        [  50,  -45],\\n        [ -62,   23],\\n        [ -96,  -69],\\n        [ -27,  -32],\\n        [ -75,  -69],\\n        [  66,    2],\\n        [   2,  -62],\\n        [ -28,  -47],\\n        [ -45,   18],\\n        [ -57,   92],\\n        [ -92,  -23],\\n        [  76,   95],\\n        [ -62,  -52]]))",
    0.01227
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.09636
  ]
}