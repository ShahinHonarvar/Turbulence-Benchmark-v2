{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00102
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 40,  38],\\n        [ 34,  59],\\n        [ 12,  16],\\n        [ 80, -32],\\n        [-92,  79],\\n        [-28,  12],\\n        [-40, -56],\\n        [ -9,  -4],\\n        [ 20,  56],\\n        [ 61, -69],\\n        [ -5, -67],\\n        [ -7, -73],\\n        [ 95,  88],\\n        [-45,   3],\\n        [-63,  83],\\n        [ -7,  16],\\n        [ 87,  25],\\n        [ 22,  38],\\n        [-30,  59],\\n        [-45,  42],\\n        [-68, -22],\\n        [ 46,  19],\\n        [-86,  98],\\n        [ 41,  51],\\n        [-45,  44],\\n        [-24,  86],\\n        [-31, -56],\\n        [-91,  41],\\n        [ 95,  14],\\n        [-46,   7],\\n        [ 92,  17],\\n        [-39, -71],\\n        [ 83,  78],\\n        [ 43,  68],\\n        [-77,  -4],\\n        [-99,  -6],\\n        [ 30,  13],\\n        [-17, -38],\\n        [-10, -93],\\n        [-54, -96],\\n        [ 32,  67],\\n        [-33, -71],\\n        [-26,  -3],\\n        [-56, -97],\\n        [ 64,  74],\\n        [-24,  44]]))",
    0.00353
  ]
}