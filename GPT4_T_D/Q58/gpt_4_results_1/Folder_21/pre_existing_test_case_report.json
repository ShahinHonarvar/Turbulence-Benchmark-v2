{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00036
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00093
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 99,   3,  57,  47,  18,  36, -68, -70,  90,  -8,  -3,  56, -35,\\n           0, -13,  87,  62, -34, -51,  41,   6, -45,  98, -81, -55, -65,\\n         -25, -81, -18,  49,  74,  -1, -58,   8, -32,  64,  81, -99, -37,\\n          83, -15,  93,  27,  74, -70,  94, -57,  12,  10, -56, -30, -12,\\n          30,  96,  65,  65, -49,  55,   4,  36, -29, -49,  44,  23,  46,\\n          35, -10,  61,  73,  -4,  36,   9, -90, -33, -81, -72,  12, -51,\\n          98,  47,  55, -13, -17,  98,  80, -77, -98,  14, -69,  -2, -16,\\n         -25, -28, -23,  91,  30, -51, -76,   9, -17, 100,  22, -80,  59,\\n          36, -63, -84,  86,  20, -33, -66, -79,   3,  34, -56,  99, -68,\\n          41, -92,  77, -10,  -1, -95,  39, -81,  95,  66, -22,  90,  13,\\n          89,  37,  35, -13, -26, -42, -74,  35,  92]]))",
    0.00068
  ]
}