{
  "parameter(s)": [
    68
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00338
  ],
  "test_matrix_of_having_68_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  12,  -54],\\n        [ -82,  -24],\\n        [  25,   97],\\n        [ -95,  -97],\\n        [  11,    0],\\n        [  85,   60],\\n        [ -51,   39],\\n        [ -99,  -23],\\n        [ -61,   78],\\n        [  45,  -52],\\n        [  36,  -84],\\n        [  23,  -78],\\n        [  24,   65],\\n        [ -67,  -68],\\n        [ -38,  -36],\\n        [  64,  -83],\\n        [  54,  -52],\\n        [ -14,  -63],\\n        [ -48,   40],\\n        [ -16,  -58],\\n        [ -85,  -55],\\n        [ -12,  -76],\\n        [  16,   64],\\n        [  67,  -71],\\n        [  92,  -10],\\n        [ -71,   17],\\n        [ -97,   39],\\n        [  97,   95],\\n        [   3,   74],\\n        [ -65,   21],\\n        [  55,   21],\\n        [ -90,   87],\\n        [-100,   71],\\n        [ -72,   35]]))",
    0.00461
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 137",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 137",
    0.00065
  ]
}