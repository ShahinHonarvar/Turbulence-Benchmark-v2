{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_77_5.py::test_horizontal_matrix", "location": ["tests58_77_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001194180003949441, "start": 1738569778.3945537, "stop": 1738569778.3946733, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013001700426684693, "start": 1738569778.394614, "stop": 1738569778.3947444, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014442900283029303, "start": 1738569778.3968399, "stop": 1738569778.3969848, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_77_5.py::test_horizontal_matrix", "location": ["tests58_77_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError: tuple indices must be integers or slices, not tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(179)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 179 < 30:", "            num = 4", "        elif 30 <= 179 < 70:", "            num = 3", "        elif 70 <= 179 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/tests58_77_5.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    submatrices = [matrix[i:i + sub_rows, j:j + sub_cols] for i in range(rows - sub_rows + 1) for j in range(cols - sub_cols + 1) if np.size(matrix[i:i + sub_rows, j:j + sub_cols], axis=(0, 1)) == 179]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/generated_answer.py", "lineno": 8, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_size_dispatcher)", "    def size(a, axis=None):", "        \"\"\"", "        Return the number of elements along a given axis.", "    ", "        Parameters", "        ----------", "        a : array_like", "            Input data.", "        axis : int, optional", "            Axis along which the elements are counted.  By default, give", "            the total number of elements.", "    ", "        Returns", "        -------", "        element_count : int", "            Number of elements along the specified axis.", "    ", "        See Also", "        --------", "        shape : dimensions of array", "        ndarray.shape : dimensions of array", "        ndarray.size : number of elements in array", "    ", "        Examples", "        --------", "        >>> a = np.array([[1,2,3],[4,5,6]])", "        >>> np.size(a)", "        6", "        >>> np.size(a,1)", "        3", "        >>> np.size(a,0)", "        2", "    ", "        \"\"\"", "        if axis is None:", "            try:", "                return a.size", "            except AttributeError:", "                return asarray(a).size", "        else:", "            try:", ">               return a.shape[axis]", "E               TypeError: tuple indices must be integers or slices, not tuple"], "reprfuncargs": {"args": [["a", "matrix([[6]])"], ["axis", "(0, 1)"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(179)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 179 < 30:", "            num = 4", "        elif 30 <= 179 < 70:", "            num = 3", "        elif 70 <= 179 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/tests58_77_5.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    submatrices = [matrix[i:i + sub_rows, j:j + sub_cols] for i in range(rows - sub_rows + 1) for j in range(cols - sub_cols + 1) if np.size(matrix[i:i + sub_rows, j:j + sub_cols], axis=(0, 1)) == 179]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/generated_answer.py", "lineno": 8, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_size_dispatcher)", "    def size(a, axis=None):", "        \"\"\"", "        Return the number of elements along a given axis.", "    ", "        Parameters", "        ----------", "        a : array_like", "            Input data.", "        axis : int, optional", "            Axis along which the elements are counted.  By default, give", "            the total number of elements.", "    ", "        Returns", "        -------", "        element_count : int", "            Number of elements along the specified axis.", "    ", "        See Also", "        --------", "        shape : dimensions of array", "        ndarray.shape : dimensions of array", "        ndarray.size : number of elements in array", "    ", "        Examples", "        --------", "        >>> a = np.array([[1,2,3],[4,5,6]])", "        >>> np.size(a)", "        6", "        >>> np.size(a,1)", "        3", "        >>> np.size(a,0)", "        2", "    ", "        \"\"\"", "        if axis is None:", "            try:", "                return a.size", "            except AttributeError:", "                return asarray(a).size", "        else:", "            try:", ">               return a.shape[axis]", "E               TypeError: tuple indices must be integers or slices, not tuple"], "reprfuncargs": {"args": [["a", "matrix([[6]])"], ["axis", "(0, 1)"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError: tuple indices must be integers or slices, not tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00026983499992638826, "start": 1738569778.3949502, "stop": 1738569778.3952205, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_77_5.py::test_horizontal_matrix", "location": ["tests58_77_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013807399955112487, "start": 1738569778.4210813, "stop": 1738569778.4212203, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError: tuple indices must be integers or slices, not tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_one_integer():", "        input_matrix = [[179]]", "        input_matrix = np.asmatrix(input_matrix)", "        if 179 == 1:", "            assert submatrix_with_n_numbers(input_matrix) == 1", "        else:", ">           assert not submatrix_with_n_numbers(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/tests58_77_5.py", "lineno": 26, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    submatrices = [matrix[i:i + sub_rows, j:j + sub_cols] for i in range(rows - sub_rows + 1) for j in range(cols - sub_cols + 1) if np.size(matrix[i:i + sub_rows, j:j + sub_cols], axis=(0, 1)) == 179]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/generated_answer.py", "lineno": 8, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_size_dispatcher)", "    def size(a, axis=None):", "        \"\"\"", "        Return the number of elements along a given axis.", "    ", "        Parameters", "        ----------", "        a : array_like", "            Input data.", "        axis : int, optional", "            Axis along which the elements are counted.  By default, give", "            the total number of elements.", "    ", "        Returns", "        -------", "        element_count : int", "            Number of elements along the specified axis.", "    ", "        See Also", "        --------", "        shape : dimensions of array", "        ndarray.shape : dimensions of array", "        ndarray.size : number of elements in array", "    ", "        Examples", "        --------", "        >>> a = np.array([[1,2,3],[4,5,6]])", "        >>> np.size(a)", "        6", "        >>> np.size(a,1)", "        3", "        >>> np.size(a,0)", "        2", "    ", "        \"\"\"", "        if axis is None:", "            try:", "                return a.size", "            except AttributeError:", "                return asarray(a).size", "        else:", "            try:", ">               return a.shape[axis]", "E               TypeError: tuple indices must be integers or slices, not tuple"], "reprfuncargs": {"args": [["a", "matrix([[179]])"], ["axis", "(0, 1)"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_one_integer():", "        input_matrix = [[179]]", "        input_matrix = np.asmatrix(input_matrix)", "        if 179 == 1:", "            assert submatrix_with_n_numbers(input_matrix) == 1", "        else:", ">           assert not submatrix_with_n_numbers(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/tests58_77_5.py", "lineno": 26, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    submatrices = [matrix[i:i + sub_rows, j:j + sub_cols] for i in range(rows - sub_rows + 1) for j in range(cols - sub_cols + 1) if np.size(matrix[i:i + sub_rows, j:j + sub_cols], axis=(0, 1)) == 179]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/generated_answer.py", "lineno": 8, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_size_dispatcher)", "    def size(a, axis=None):", "        \"\"\"", "        Return the number of elements along a given axis.", "    ", "        Parameters", "        ----------", "        a : array_like", "            Input data.", "        axis : int, optional", "            Axis along which the elements are counted.  By default, give", "            the total number of elements.", "    ", "        Returns", "        -------", "        element_count : int", "            Number of elements along the specified axis.", "    ", "        See Also", "        --------", "        shape : dimensions of array", "        ndarray.shape : dimensions of array", "        ndarray.size : number of elements in array", "    ", "        Examples", "        --------", "        >>> a = np.array([[1,2,3],[4,5,6]])", "        >>> np.size(a)", "        6", "        >>> np.size(a,1)", "        3", "        >>> np.size(a,0)", "        2", "    ", "        \"\"\"", "        if axis is None:", "            try:", "                return a.size", "            except AttributeError:", "                return asarray(a).size", "        else:", "            try:", ">               return a.shape[axis]", "E               TypeError: tuple indices must be integers or slices, not tuple"], "reprfuncargs": {"args": [["a", "matrix([[179]])"], ["axis", "(0, 1)"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError: tuple indices must be integers or slices, not tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00071771300281398, "start": 1738569778.3949223, "stop": 1738569778.3956406, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001214560033986345, "start": 1738569778.423103, "stop": 1738569778.4232252, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError: tuple indices must be integers or slices, not tuple"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    submatrices = [matrix[i:i + sub_rows, j:j + sub_cols] for i in range(rows - sub_rows + 1) for j in range(cols - sub_cols + 1) if np.size(matrix[i:i + sub_rows, j:j + sub_cols], axis=(0, 1)) == 179]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/generated_answer.py", "lineno": 8, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_size_dispatcher)", "    def size(a, axis=None):", "        \"\"\"", "        Return the number of elements along a given axis.", "    ", "        Parameters", "        ----------", "        a : array_like", "            Input data.", "        axis : int, optional", "            Axis along which the elements are counted.  By default, give", "            the total number of elements.", "    ", "        Returns", "        -------", "        element_count : int", "            Number of elements along the specified axis.", "    ", "        See Also", "        --------", "        shape : dimensions of array", "        ndarray.shape : dimensions of array", "        ndarray.size : number of elements in array", "    ", "        Examples", "        --------", "        >>> a = np.array([[1,2,3],[4,5,6]])", "        >>> np.size(a)", "        6", "        >>> np.size(a,1)", "        3", "        >>> np.size(a,0)", "        2", "    ", "        \"\"\"", "        if axis is None:", "            try:", "                return a.size", "            except AttributeError:", "                return asarray(a).size", "        else:", "            try:", ">               return a.shape[axis]", "E               TypeError: tuple indices must be integers or slices, not tuple"], "reprfuncargs": {"args": [["a", "matrix([[76]])"], ["axis", "(0, 1)"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    submatrices = [matrix[i:i + sub_rows, j:j + sub_cols] for i in range(rows - sub_rows + 1) for j in range(cols - sub_cols + 1) if np.size(matrix[i:i + sub_rows, j:j + sub_cols], axis=(0, 1)) == 179]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/gpt_4_results_5/Folder_77/generated_answer.py", "lineno": 8, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_size_dispatcher)", "    def size(a, axis=None):", "        \"\"\"", "        Return the number of elements along a given axis.", "    ", "        Parameters", "        ----------", "        a : array_like", "            Input data.", "        axis : int, optional", "            Axis along which the elements are counted.  By default, give", "            the total number of elements.", "    ", "        Returns", "        -------", "        element_count : int", "            Number of elements along the specified axis.", "    ", "        See Also", "        --------", "        shape : dimensions of array", "        ndarray.shape : dimensions of array", "        ndarray.size : number of elements in array", "    ", "        Examples", "        --------", "        >>> a = np.array([[1,2,3],[4,5,6]])", "        >>> np.size(a)", "        6", "        >>> np.size(a,1)", "        3", "        >>> np.size(a,0)", "        2", "    ", "        \"\"\"", "        if axis is None:", "            try:", "                return a.size", "            except AttributeError:", "                return asarray(a).size", "        else:", "            try:", ">               return a.shape[axis]", "E               TypeError: tuple indices must be integers or slices, not tuple"], "reprfuncargs": {"args": [["a", "matrix([[76]])"], ["axis", "(0, 1)"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 3260, "message": "TypeError: tuple indices must be integers or slices, not tuple"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00029080500098643824, "start": 1738569778.3971741, "stop": 1738569778.3974657, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013082600344205275, "start": 1738569778.4383695, "stop": 1738569778.4385011, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "28fd574e914d401e9af16e6f0221e82d", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
