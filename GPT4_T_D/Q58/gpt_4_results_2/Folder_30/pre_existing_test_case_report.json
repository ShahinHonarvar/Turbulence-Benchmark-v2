{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-37,  54],\\n        [ 88, -45],\\n        [ -6,  25],\\n        [  4,  15],\\n        [ -6, -45],\\n        [-19,  24],\\n        [-33,  59],\\n        [-51, -11],\\n        [-97,  60],\\n        [ 22,  99],\\n        [ 24,  54],\\n        [ 63,  63],\\n        [ -6,   5],\\n        [ 85, -29],\\n        [-26,  89],\\n        [ 28,  99],\\n        [-29, 100],\\n        [-49, -92],\\n        [ 38,  39],\\n        [-95, -42],\\n        [ 63,  71],\\n        [-45, -67],\\n        [ 17,  65],\\n        [-90,  55],\\n        [ 14,  65],\\n        [-75, -82],\\n        [-19,  63],\\n        [-93,  35],\\n        [-39, -98],\\n        [ 81,  -7],\\n        [-58,   8],\\n        [ -9,  41],\\n        [ 88, -30],\\n        [-83,  28],\\n        [ 69,  45],\\n        [-91,  -6],\\n        [-56,  86],\\n        [ 22, -96],\\n        [-50,  85],\\n        [ 39,  26],\\n        [-85,  20],\\n        [ 21, -74],\\n        [ 50, -18],\\n        [-23,  60],\\n        [ 39,   0],\\n        [-83, -27],\\n        [ 12,  28]]))",
    0.00444
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00712
  ]
}