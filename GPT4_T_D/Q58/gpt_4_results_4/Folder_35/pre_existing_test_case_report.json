{
  "parameter(s)": [
    111
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[111]]))",
    0.00043
  ],
  "test_matrix_of_having_111_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  66,   53,   69,  -16,   32,  -85,   45,   41,  -81,   13,\\n           65,   -9,   47,   46,   -3,  -19,  -76,  -12,   41,   48,\\n          -21,  -43,   74,  -24,   53,   74,  -59,   10,  -75,   78,\\n          -33,  -79,   61,    5,   82,   62,    0,   80,   53,   95,\\n           83,   11,  -35,  -58,  -14,  -49,  -55,  -36,  -32,   59,\\n           36,  -29,  -35,   28,  -83, -100,  -93,  -19,  -94,  -75,\\n          -99,  -13,   81,  -37,   56,  -27,  -91,  -23,   44,  -30,\\n          -82,   -2,  -14,   29,  -95,  -46,  -27,   48,  -99,   38,\\n            6,  -66,   23,  -86,   96,  -18,   59,   52,  -60,    4,\\n           49,  -41,   72,   86,   21,  -78,   14,   12,  -52,    1,\\n           59,  -70,   -8,   11,    6,   97,   63,   -6,  -56,   88,\\n          -53]]))",
    0.13526
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 223",
    0.74878
  ]
}