{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -46,  -98],\\n        [  39,   -7],\\n        [  97,  -56],\\n        [  42,  -57],\\n        [  23,  -31],\\n        [ -71,    8],\\n        [  48,  -26],\\n        [  -9,   72],\\n        [ -92,   62],\\n        [ -23,   25],\\n        [ -27,   -6],\\n        [ -78,  -34],\\n        [ -55,  -92],\\n        [ -48,  -76],\\n        [ -19,   43],\\n        [ -18,   40],\\n        [ -50,   97],\\n        [ -95,  -14],\\n        [ -68,  -80],\\n        [ -84,  -87],\\n        [   1,   19],\\n        [ -78,  -72],\\n        [ -16,    8],\\n        [ -19,  -40],\\n        [  61,   92],\\n        [  35,    0],\\n        [ -12,   62],\\n        [  21,   66],\\n        [  -5,   20],\\n        [  67,  -99],\\n        [  61,  -90],\\n        [  44, -100],\\n        [  58,  -15],\\n        [  -1,  -14],\\n        [  15,  -83],\\n        [ -83,   54],\\n        [  83,  -88],\\n        [  27,   81],\\n        [ -51,  -77],\\n        [  31,  -66],\\n        [ -47,  -31],\\n        [ -86,   42],\\n        [-100,    0],\\n        [  66,  -81],\\n        [ -35,    3],\\n        [ -78,   14],\\n        [ -73,  -90]]))",
    0.0021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00065
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00128
  ]
}