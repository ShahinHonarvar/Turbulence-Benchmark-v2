{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests52_16_1.py::test_string_of_many_chars", "location": ["tests52_16_1.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_16_1.py": 1, "Folder_16": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.743496775627136e-05, "start": 1738458517.4778547, "stop": 1738458517.4779525, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "90d1b60786d84e72acb45b1f86d135e6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_16_1.py::test_string_of_many_chars", "location": ["tests52_16_1.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_16_1.py": 1, "Folder_16": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q52/Phi_3_results_1/Folder_16/tests52_16_1.py", "lineno": 9, "message": "AssertionError: assert not {'f'}\n +  where {'f'} = palindrome_of_length_n('abcdef')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'f'}", "E        +  where {'f'} = palindrome_of_length_n('abcdef')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/Phi_3_results_1/Folder_16/tests52_16_1.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'f'}", "E        +  where {'f'} = palindrome_of_length_n('abcdef')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/Phi_3_results_1/Folder_16/tests52_16_1.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q52/Phi_3_results_1/Folder_16/tests52_16_1.py", "lineno": 9, "message": "AssertionError: assert not {'f'}\n +  where {'f'} = palindrome_of_length_n('abcdef')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016277097165584564, "start": 1738458517.4780805, "stop": 1738458517.4782436, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "90d1b60786d84e72acb45b1f86d135e6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_16_1.py::test_string_of_many_chars", "location": ["tests52_16_1.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_16_1.py": 1, "Folder_16": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013998150825500488, "start": 1738458517.4874055, "stop": 1738458517.4875462, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "90d1b60786d84e72acb45b1f86d135e6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
