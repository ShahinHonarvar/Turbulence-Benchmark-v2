{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests59_95_3.py::test_if_result_is_less_than_77", "location": ["tests59_95_3.py", 34, "test_if_result_is_less_than_77"], "keywords": {"test_if_result_is_less_than_77": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001064180105458945, "start": 1730305642.0046463, "stop": 1730305642.004753, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_95_3.py::test_list_of_all_one_digit_nums", "location": ["tests59_95_3.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013873999705538154, "start": 1730305642.0046818, "stop": 1730305642.0048208, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_95_3.py::test_if_result_integers_are_odd", "location": ["tests59_95_3.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015801499830558896, "start": 1730305642.004769, "stop": 1730305642.0049276, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_95_3.py::test_list_of_all_one_digit_nums", "location": ["tests59_95_3.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError: True is not an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_all_one_digit_nums():", "        for i in range(1,10):", "            input_list = (i,) * (77 + 1)", "            if i <= 2:", "                assert not all_left_truncatable_prime(input_list)", "            elif i == 3:", ">               assert all_left_truncatable_prime(input_list) == [2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/tests59_95_3.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_left_truncatable(prime):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 16, "message": "in all_left_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    if not isprime(n):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 8, "message": "in is_left_truncatable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    n = as_int(n)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/ntheory/primetest.py", "lineno": 668, "message": "in isprime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", "                    raise TypeError", "                return operator.index(n)", "            except TypeError:", ">               raise ValueError('%s is not an integer' % (n,))", "E               ValueError: True is not an integer"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", ">                   raise TypeError", "E                   TypeError"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 554, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 554, "message": "TypeError"}, "During handling of the above exception, another exception occurred:"], [{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_all_one_digit_nums():", "        for i in range(1,10):", "            input_list = (i,) * (77 + 1)", "            if i <= 2:", "                assert not all_left_truncatable_prime(input_list)", "            elif i == 3:", ">               assert all_left_truncatable_prime(input_list) == [2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/tests59_95_3.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_left_truncatable(prime):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 16, "message": "in all_left_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    if not isprime(n):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 8, "message": "in is_left_truncatable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    n = as_int(n)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/ntheory/primetest.py", "lineno": 668, "message": "in isprime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", "                    raise TypeError", "                return operator.index(n)", "            except TypeError:", ">               raise ValueError('%s is not an integer' % (n,))", "E               ValueError: True is not an integer"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError: True is not an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000124988000607118, "start": 1730305642.0050154, "stop": 1730305642.0051408, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_95_3.py::test_list_of_all_one_digit_nums", "location": ["tests59_95_3.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011433800682425499, "start": 1730305642.0416486, "stop": 1730305642.0417638, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_95_3.py::test_if_result_is_less_than_77", "location": ["tests59_95_3.py", 34, "test_if_result_is_less_than_77"], "keywords": {"test_if_result_is_less_than_77": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError: True is not an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_77():", "        input_list = tuple([random.randint(3, 1000) for _ in range(77 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/tests59_95_3.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_left_truncatable(prime):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 16, "message": "in all_left_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    if not isprime(n):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 8, "message": "in is_left_truncatable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    n = as_int(n)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/ntheory/primetest.py", "lineno": 668, "message": "in isprime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", "                    raise TypeError", "                return operator.index(n)", "            except TypeError:", ">               raise ValueError('%s is not an integer' % (n,))", "E               ValueError: True is not an integer"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", ">                   raise TypeError", "E                   TypeError"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 554, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 554, "message": "TypeError"}, "During handling of the above exception, another exception occurred:"], [{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_77():", "        input_list = tuple([random.randint(3, 1000) for _ in range(77 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/tests59_95_3.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_left_truncatable(prime):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 16, "message": "in all_left_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    if not isprime(n):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 8, "message": "in is_left_truncatable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    n = as_int(n)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/ntheory/primetest.py", "lineno": 668, "message": "in isprime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", "                    raise TypeError", "                return operator.index(n)", "            except TypeError:", ">               raise ValueError('%s is not an integer' % (n,))", "E               ValueError: True is not an integer"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError: True is not an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013371699606068432, "start": 1730305642.0049322, "stop": 1730305642.0050662, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_95_3.py::test_if_result_is_less_than_77", "location": ["tests59_95_3.py", 34, "test_if_result_is_less_than_77"], "keywords": {"test_if_result_is_less_than_77": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010338498395867646, "start": 1730305642.0422, "stop": 1730305642.0423043, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_95_3.py::test_if_result_integers_are_odd", "location": ["tests59_95_3.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError: True is not an integer"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_integers_are_odd():", "        input_list = tuple(range(1, 77 + 2))", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/tests59_95_3.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_left_truncatable(prime):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 16, "message": "in all_left_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    if not isprime(n):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 8, "message": "in is_left_truncatable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    n = as_int(n)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/ntheory/primetest.py", "lineno": 668, "message": "in isprime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", "                    raise TypeError", "                return operator.index(n)", "            except TypeError:", ">               raise ValueError('%s is not an integer' % (n,))", "E               ValueError: True is not an integer"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", ">                   raise TypeError", "E                   TypeError"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 554, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 554, "message": "TypeError"}, "During handling of the above exception, another exception occurred:"], [{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_integers_are_odd():", "        input_list = tuple(range(1, 77 + 2))", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/tests59_95_3.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if is_left_truncatable(prime):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 16, "message": "in all_left_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    if not isprime(n):"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q59/Phi_3_results_3/Folder_95/generated_answer.py", "lineno": 8, "message": "in is_left_truncatable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    n = as_int(n)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/ntheory/primetest.py", "lineno": 668, "message": "in isprime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def as_int(n, strict=True):", "        \"\"\"", "        Convert the argument to a builtin integer.", "    ", "        The return value is guaranteed to be equal to the input. ValueError is", "        raised if the input has a non-integral value. When ``strict`` is True, this", "        uses `__index__ <https://docs.python.org/3/reference/datamodel.html#object.__index__>`_", "        and when it is False it uses ``int``.", "    ", "    ", "        Examples", "        ========", "    ", "        >>> from sympy.utilities.misc import as_int", "        >>> from sympy import sqrt, S", "    ", "        The function is primarily concerned with sanitizing input for", "        functions that need to work with builtin integers, so anything that", "        is unambiguously an integer should be returned as an int:", "    ", "        >>> as_int(S(3))", "        3", "    ", "        Floats, being of limited precision, are not assumed to be exact and", "        will raise an error unless the ``strict`` flag is False. This", "        precision issue becomes apparent for large floating point numbers:", "    ", "        >>> big = 1e23", "        >>> type(big) is float", "        True", "        >>> big == int(big)", "        True", "        >>> as_int(big)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        >>> as_int(big, strict=False)", "        99999999999999991611392", "    ", "        Input that might be a complex representation of an integer value is", "        also rejected by default:", "    ", "        >>> one = sqrt(3 + 2*sqrt(2)) - sqrt(2)", "        >>> int(one) == 1", "        True", "        >>> as_int(one)", "        Traceback (most recent call last):", "        ...", "        ValueError: ... is not an integer", "        \"\"\"", "        if strict:", "            try:", "                if isinstance(n, bool):", "                    raise TypeError", "                return operator.index(n)", "            except TypeError:", ">               raise ValueError('%s is not an integer' % (n,))", "E               ValueError: True is not an integer"], "reprfuncargs": {"args": [["n", "True"], ["strict", "True"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/sympy/utilities/misc.py", "lineno": 557, "message": "ValueError: True is not an integer"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014804297825321555, "start": 1730305642.0051305, "stop": 1730305642.0052788, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_95_3.py::test_if_result_integers_are_odd", "location": ["tests59_95_3.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_95_3.py": 1, "Folder_95": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010280098649673164, "start": 1730305642.0419016, "stop": 1730305642.042005, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8d843bd0b08e422eaa99cbedf21d40f8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
