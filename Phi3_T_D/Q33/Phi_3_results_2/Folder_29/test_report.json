{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests33_29_2.py::test_repeat_consonant_char", "location": ["tests33_29_2.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_29_2.py": 1, "Folder_29": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.70698893070221e-05, "start": 1738449843.8082983, "stop": 1738449843.8083956, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5d3bba77f96343699ba6ceae2e103750", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_29_2.py::test_repeat_consonant_char", "location": ["tests33_29_2.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_29_2.py": 1, "Folder_29": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q33/Phi_3_results_2/Folder_29/tests33_29_2.py", "lineno": 8, "message": "AssertionError: assert not ['m']\n +  where ['m'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmm')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_consonant_char():", "        s = 'm' * (20 + 2)", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['m']", "E        +  where ['m'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/Phi_3_results_2/Folder_29/tests33_29_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_consonant_char():", "        s = 'm' * (20 + 2)", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['m']", "E        +  where ['m'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/Phi_3_results_2/Folder_29/tests33_29_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q33/Phi_3_results_2/Folder_29/tests33_29_2.py", "lineno": 8, "message": "AssertionError: assert not ['m']\n +  where ['m'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmm')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016450416296720505, "start": 1738449843.808523, "stop": 1738449843.808688, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5d3bba77f96343699ba6ceae2e103750", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_29_2.py::test_repeat_consonant_char", "location": ["tests33_29_2.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_29_2.py": 1, "Folder_29": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011025741696357727, "start": 1738449843.819452, "stop": 1738449843.819563, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5d3bba77f96343699ba6ceae2e103750", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
