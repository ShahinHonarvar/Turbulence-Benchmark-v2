{
  "parameter(s)": [
    13,
    14,
    96
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00019
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.00015
  ],
  "test_float_numbers": [
    "failed",
    "assert 5.0990195135927845 == 5.196152422706632\n +  where 5.0990195135927845 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.0002
  ],
  "test_reversed_range": [
    "failed",
    "assert -75 == -74\n +  where -75 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00018
  ],
  "test_large_range": [
    "failed",
    "assert 25 == 26\n +  where 25 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00186
  ]
}