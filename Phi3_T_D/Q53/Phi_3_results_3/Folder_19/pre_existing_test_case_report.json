{
  "parameter(s)": [
    23
  ],
  "test_string_of_similar_chars_of_length_23": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_similar_chars_of_length_greater_than_23": [
    "passed",
    "",
    8e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabc', 'abcdefabcdefabcdefabcdefabcd', 'abcdefabcdefabcdefabcdefabcdef', ...}\n +  where {'abcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabc', 'abcdefabcdefabcdefabcdefabcd', 'abcdefabcdefabcdefabcdefabcdef', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00116
  ]
}