{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests51_84_2.py::test_list_of_strings_of_length_two", "location": ["tests51_84_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.228475391864777e-05, "start": 1738457482.9551492, "stop": 1738457482.9552417, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a6b7386eee949f896fd3e1587536d8c", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_84_2.py::test_list_of_strings_of_length_two", "location": ["tests51_84_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011116918176412582, "start": 1738457482.9553664, "stop": 1738457482.9554777, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a6b7386eee949f896fd3e1587536d8c", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_84_2.py::test_list_of_strings_of_length_two", "location": ["tests51_84_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.529075860977173e-05, "start": 1738457482.9556885, "stop": 1738457482.955744, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5a6b7386eee949f896fd3e1587536d8c", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_84_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests51_84_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests51_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.652569234371185e-05, "start": 1738457482.9560177, "stop": 1738457482.9560742, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a6b7386eee949f896fd3e1587536d8c", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_84_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests51_84_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests51_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/collections/__init__.py", "lineno": 699, "message": "TypeError: unhashable type: 'Counter'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_different_lengths():", "        l = ['aaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/Phi_3_results_2/Folder_84/tests51_84_2.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    distinct_words_counter = Counter([count_letters(word) for word in strings if len(word) >= 3])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/Phi_3_results_2/Folder_84/generated_answer.py", "lineno": 7, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.update(iterable, **kwds)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/collections/__init__.py", "lineno": 607, "message": "in __init__"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def update(self, iterable=None, /, **kwds):", "        '''Like dict.update() but add counts instead of replacing them.", "    ", "        Source can be an iterable, a dictionary, or another Counter instance.", "    ", "        >>> c = Counter('which')", "        >>> c.update('witch')           # add elements from another iterable", "        >>> d = Counter('watch')", "        >>> c.update(d)                 # add elements from another counter", "        >>> c['h']                      # four 'h' in which, witch, and watch", "        4", "    ", "        '''", "        # The regular dict.update() operation makes no sense here because the", "        # replace behavior results in some of the original untouched counts", "        # being mixed-in with all of the other counts for a mismash that", "        # doesn't have a straight-forward interpretation in most counting", "        # contexts.  Instead, we implement straight-addition.  Both the inputs", "        # and outputs are allowed to contain zero and negative counts.", "    ", "        if iterable is not None:", "            if isinstance(iterable, _collections_abc.Mapping):", "                if self:", "                    self_get = self.get", "                    for elem, count in iterable.items():", "                        self[elem] = count + self_get(elem, 0)", "                else:", "                    # fast path when counter is empty", "                    super().update(iterable)", "            else:", ">               _count_elements(self, iterable)", "E               TypeError: unhashable type: 'Counter'"], "reprfuncargs": {"args": [["self", "Counter()"], ["iterable", "[Counter({'a': 3}), Counter({'a': 4})]"], ["kwds", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/collections/__init__.py", "lineno": 699, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_different_lengths():", "        l = ['aaa', 'aaaa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/Phi_3_results_2/Folder_84/tests51_84_2.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    distinct_words_counter = Counter([count_letters(word) for word in strings if len(word) >= 3])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/Phi_3_results_2/Folder_84/generated_answer.py", "lineno": 7, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.update(iterable, **kwds)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/collections/__init__.py", "lineno": 607, "message": "in __init__"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def update(self, iterable=None, /, **kwds):", "        '''Like dict.update() but add counts instead of replacing them.", "    ", "        Source can be an iterable, a dictionary, or another Counter instance.", "    ", "        >>> c = Counter('which')", "        >>> c.update('witch')           # add elements from another iterable", "        >>> d = Counter('watch')", "        >>> c.update(d)                 # add elements from another counter", "        >>> c['h']                      # four 'h' in which, witch, and watch", "        4", "    ", "        '''", "        # The regular dict.update() operation makes no sense here because the", "        # replace behavior results in some of the original untouched counts", "        # being mixed-in with all of the other counts for a mismash that", "        # doesn't have a straight-forward interpretation in most counting", "        # contexts.  Instead, we implement straight-addition.  Both the inputs", "        # and outputs are allowed to contain zero and negative counts.", "    ", "        if iterable is not None:", "            if isinstance(iterable, _collections_abc.Mapping):", "                if self:", "                    self_get = self.get", "                    for elem, count in iterable.items():", "                        self[elem] = count + self_get(elem, 0)", "                else:", "                    # fast path when counter is empty", "                    super().update(iterable)", "            else:", ">               _count_elements(self, iterable)", "E               TypeError: unhashable type: 'Counter'"], "reprfuncargs": {"args": [["self", "Counter()"], ["iterable", "[Counter({'a': 3}), Counter({'a': 4})]"], ["kwds", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/collections/__init__.py", "lineno": 699, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/collections/__init__.py", "lineno": 699, "message": "TypeError: unhashable type: 'Counter'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010389834642410278, "start": 1738457482.9561424, "stop": 1738457482.9562466, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a6b7386eee949f896fd3e1587536d8c", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_84_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests51_84_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests51_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013825111091136932, "start": 1738457482.9791925, "stop": 1738457482.9793315, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "5a6b7386eee949f896fd3e1587536d8c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
