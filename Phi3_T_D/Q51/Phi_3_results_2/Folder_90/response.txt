{
  "id": "cmpl-0448c97b98f645d6b3a7118e04200c7c",
  "object": "chat.completion",
  "created": 1725530086,
  "model": "phi3-medium-4k",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": " ```python\ndef if_contains_anagrams(lst):\n    from collections import Counter\n    def normalize_string(s):\n        return Counter(s.lower())\n\n    counts = {}\n    for word in lst:\n        if len(word) < 3:\n            continue\n        norm_word = normalize_string(word)\n        key = tuple(sorted(norm_word.keys()))\n        anagrams = counts.setdefault(key, [])\n        if word not in anagrams:\n            anagrams.append(word)\n\n    anagram_pairs = 0\n    for anagrams_list in counts.values():\n        anagram_pairs += sum(range(len(anagrams_list) - 1))\n\n    return anagram_pairs <= 147\n```\n\n```python\n# Unit test the function\nprint(if_contains_anagrams([\"cat\", \"tac\", \"table\", \"lable\", \"act\"]))  # True, there are 3 pairs (cat-tac, tac-act, cat-act)\nprint(if_contains_anagrams([\"listen\", \"silent\", \"enlist\", \"inlets\"]))  # True, there are 6 unique pairs\nprint(if_contains_anagrams([\"silent\", \"listen\", \"enlists\", \"inlets\"]))  # False, more than 147 pairs\nprint(if_contains_anagrams([\"hello\", \"world\"]))  # False, no anagrams\n```",
        "tool_calls": []
      },
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 149,
    "total_tokens": 508,
    "completion_tokens": 359
  }
}