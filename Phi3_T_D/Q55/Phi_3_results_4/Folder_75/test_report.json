{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_75_4.py::test_list_of_single_number", "location": ["tests55_75_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_75_4.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020660459995269775, "start": 1738459707.5237274, "stop": 1738459707.523935, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "51b96b49e68643b0856b6d4cfafa1102", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_75_4.py::test_list_of_single_number", "location": ["tests55_75_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_75_4.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017974432557821274, "start": 1738459707.5241756, "stop": 1738459707.5243564, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "51b96b49e68643b0856b6d4cfafa1102", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_75_4.py::test_list_of_single_number", "location": ["tests55_75_4.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_75_4.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.512886077165604e-05, "start": 1738459707.524777, "stop": 1738459707.5248525, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "51b96b49e68643b0856b6d4cfafa1102", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_75_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_75_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_75_4.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.67208805680275e-05, "start": 1738459707.5258868, "stop": 1738459707.5259538, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "51b96b49e68643b0856b6d4cfafa1102", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_75_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_75_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_75_4.py": 1, "Folder_75": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_4/Folder_75/tests55_75_4.py", "lineno": 21, "message": "assert (6 == 3)\n +  where 6 = <built-in method count of list object at 0x7247e1e78100>([13])\n +    where <built-in method count of list object at 0x7247e1e78100> = [[1, 13], [1, 13], [1, 13, 1], [1, 13, 1], [13], [13, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 13, 1, 13, 1, 13]", "        result = lists_with_product_equal_n(input_list)", "        if 13 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 13 == 1:", "            assert result.count([13]) == 6 and result.count([1, 13]) == 6 and result.count([13, 1]) == 6 and result.count([1, 13, 1]) == 6", "        else:", ">           assert result.count([13]) == 3 and result.count([1, 13]) == 3 and result.count([13, 1]) == 3 and result.count([1, 13, 1]) == 3", "E           assert (6 == 3)", "E            +  where 6 = <built-in method count of list object at 0x7247e1e78100>([13])", "E            +    where <built-in method count of list object at 0x7247e1e78100> = [[1, 13], [1, 13], [1, 13, 1], [1, 13, 1], [13], [13, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_4/Folder_75/tests55_75_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 13, 1, 13, 1, 13]", "        result = lists_with_product_equal_n(input_list)", "        if 13 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 13 == 1:", "            assert result.count([13]) == 6 and result.count([1, 13]) == 6 and result.count([13, 1]) == 6 and result.count([1, 13, 1]) == 6", "        else:", ">           assert result.count([13]) == 3 and result.count([1, 13]) == 3 and result.count([13, 1]) == 3 and result.count([1, 13, 1]) == 3", "E           assert (6 == 3)", "E            +  where 6 = <built-in method count of list object at 0x7247e1e78100>([13])", "E            +    where <built-in method count of list object at 0x7247e1e78100> = [[1, 13], [1, 13], [1, 13, 1], [1, 13, 1], [13], [13, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_4/Folder_75/tests55_75_4.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_4/Folder_75/tests55_75_4.py", "lineno": 21, "message": "assert (6 == 3)\n +  where 6 = <built-in method count of list object at 0x7247e1e78100>([13])\n +    where <built-in method count of list object at 0x7247e1e78100> = [[1, 13], [1, 13], [1, 13, 1], [1, 13, 1], [13], [13, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002659568563103676, "start": 1738459707.5260265, "stop": 1738459707.5262928, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "51b96b49e68643b0856b6d4cfafa1102", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_75_4.py::test_presence_of_duplicates_in_result", "location": ["tests55_75_4.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_75_4.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.224750101566315e-05, "start": 1738459707.5354607, "stop": 1738459707.535553, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "51b96b49e68643b0856b6d4cfafa1102", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
