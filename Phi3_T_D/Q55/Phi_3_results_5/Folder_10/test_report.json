{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_10_5.py::test_list_of_single_number", "location": ["tests55_10_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_10_5.py": 1, "Folder_10": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.307451546192169e-05, "start": 1738459737.3002663, "stop": 1738459737.3003595, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e8d26c36275c46f28fe6eb5fb2d62d5f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_10_5.py::test_list_of_single_number", "location": ["tests55_10_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_10_5.py": 1, "Folder_10": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.969288319349289e-05, "start": 1738459737.3004878, "stop": 1738459737.3005779, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e8d26c36275c46f28fe6eb5fb2d62d5f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_10_5.py::test_list_of_single_number", "location": ["tests55_10_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_10_5.py": 1, "Folder_10": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9194862842559814e-05, "start": 1738459737.300799, "stop": 1738459737.3008587, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e8d26c36275c46f28fe6eb5fb2d62d5f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_10_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_10_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_10_5.py": 1, "Folder_10": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.686841905117035e-05, "start": 1738459737.3018126, "stop": 1738459737.3018699, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e8d26c36275c46f28fe6eb5fb2d62d5f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_10_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_10_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_10_5.py": 1, "Folder_10": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_5/Folder_10/tests55_10_5.py", "lineno": 21, "message": "assert (4 == 3)\n +  where 4 = <built-in method count of list object at 0x7fd5f9c63440>([-93])\n +    where <built-in method count of list object at 0x7fd5f9c63440> = [[-93], [-93, 1], [-93], [-93, 1], [-93], [-93]].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -93, 1, -93, 1, -93]", "        result = lists_with_product_equal_n(input_list)", "        if -93 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -93 == 1:", "            assert result.count([-93]) == 6 and result.count([1, -93]) == 6 and result.count([-93, 1]) == 6 and result.count([1, -93, 1]) == 6", "        else:", ">           assert result.count([-93]) == 3 and result.count([1, -93]) == 3 and result.count([-93, 1]) == 3 and result.count([1, -93, 1]) == 3", "E           assert (4 == 3)", "E            +  where 4 = <built-in method count of list object at 0x7fd5f9c63440>([-93])", "E            +    where <built-in method count of list object at 0x7fd5f9c63440> = [[-93], [-93, 1], [-93], [-93, 1], [-93], [-93]].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_5/Folder_10/tests55_10_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -93, 1, -93, 1, -93]", "        result = lists_with_product_equal_n(input_list)", "        if -93 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -93 == 1:", "            assert result.count([-93]) == 6 and result.count([1, -93]) == 6 and result.count([-93, 1]) == 6 and result.count([1, -93, 1]) == 6", "        else:", ">           assert result.count([-93]) == 3 and result.count([1, -93]) == 3 and result.count([-93, 1]) == 3 and result.count([1, -93, 1]) == 3", "E           assert (4 == 3)", "E            +  where 4 = <built-in method count of list object at 0x7fd5f9c63440>([-93])", "E            +    where <built-in method count of list object at 0x7fd5f9c63440> = [[-93], [-93, 1], [-93], [-93, 1], [-93], [-93]].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_5/Folder_10/tests55_10_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_5/Folder_10/tests55_10_5.py", "lineno": 21, "message": "assert (4 == 3)\n +  where 4 = <built-in method count of list object at 0x7fd5f9c63440>([-93])\n +    where <built-in method count of list object at 0x7fd5f9c63440> = [[-93], [-93, 1], [-93], [-93, 1], [-93], [-93]].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021785777062177658, "start": 1738459737.3019345, "stop": 1738459737.3021526, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e8d26c36275c46f28fe6eb5fb2d62d5f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_10_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_10_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_10_5.py": 1, "Folder_10": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.48919153213501e-05, "start": 1738459737.3112469, "stop": 1738459737.311332, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e8d26c36275c46f28fe6eb5fb2d62d5f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
