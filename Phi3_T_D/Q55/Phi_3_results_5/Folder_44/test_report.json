{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_44_5.py::test_list_of_single_number", "location": ["tests55_44_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_44_5.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.695068001747131e-05, "start": 1738459755.7105014, "stop": 1738459755.7105985, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e09ef23295ef42939dfed6d0bf6601ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_44_5.py::test_list_of_single_number", "location": ["tests55_44_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_44_5.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.160116314888e-05, "start": 1738459755.7107391, "stop": 1738459755.7108312, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e09ef23295ef42939dfed6d0bf6601ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_44_5.py::test_list_of_single_number", "location": ["tests55_44_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_44_5.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.815178155899048e-05, "start": 1738459755.711051, "stop": 1738459755.7111094, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e09ef23295ef42939dfed6d0bf6601ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_44_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_44_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_44_5.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.735976785421371e-05, "start": 1738459755.7117555, "stop": 1738459755.7118235, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e09ef23295ef42939dfed6d0bf6601ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_44_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_44_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_44_5.py": 1, "Folder_44": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_5/Folder_44/tests55_44_5.py", "lineno": 21, "message": "assert (4 == 3)\n +  where 4 = <built-in method count of list object at 0x7065a5415c80>([29])\n +    where <built-in method count of list object at 0x7065a5415c80> = [[1, 29], [1, 29, 1], [29], [29, 1], [1, 29], [1, 29, 1], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 29, 1, 29, 1, 29]", "        result = lists_with_product_equal_n(input_list)", "        if 29 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 29 == 1:", "            assert result.count([29]) == 6 and result.count([1, 29]) == 6 and result.count([29, 1]) == 6 and result.count([1, 29, 1]) == 6", "        else:", ">           assert result.count([29]) == 3 and result.count([1, 29]) == 3 and result.count([29, 1]) == 3 and result.count([1, 29, 1]) == 3", "E           assert (4 == 3)", "E            +  where 4 = <built-in method count of list object at 0x7065a5415c80>([29])", "E            +    where <built-in method count of list object at 0x7065a5415c80> = [[1, 29], [1, 29, 1], [29], [29, 1], [1, 29], [1, 29, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_5/Folder_44/tests55_44_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 29, 1, 29, 1, 29]", "        result = lists_with_product_equal_n(input_list)", "        if 29 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 29 == 1:", "            assert result.count([29]) == 6 and result.count([1, 29]) == 6 and result.count([29, 1]) == 6 and result.count([1, 29, 1]) == 6", "        else:", ">           assert result.count([29]) == 3 and result.count([1, 29]) == 3 and result.count([29, 1]) == 3 and result.count([1, 29, 1]) == 3", "E           assert (4 == 3)", "E            +  where 4 = <built-in method count of list object at 0x7065a5415c80>([29])", "E            +    where <built-in method count of list object at 0x7065a5415c80> = [[1, 29], [1, 29, 1], [29], [29, 1], [1, 29], [1, 29, 1], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_5/Folder_44/tests55_44_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_5/Folder_44/tests55_44_5.py", "lineno": 21, "message": "assert (4 == 3)\n +  where 4 = <built-in method count of list object at 0x7065a5415c80>([29])\n +    where <built-in method count of list object at 0x7065a5415c80> = [[1, 29], [1, 29, 1], [29], [29, 1], [1, 29], [1, 29, 1], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023828819394111633, "start": 1738459755.7118986, "stop": 1738459755.7121372, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e09ef23295ef42939dfed6d0bf6601ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_44_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_44_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_44_5.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.951740503311157e-05, "start": 1738459755.7214727, "stop": 1738459755.7215726, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e09ef23295ef42939dfed6d0bf6601ef", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
