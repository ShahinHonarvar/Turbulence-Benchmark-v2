{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_20_1.py::test_list_of_single_number", "location": ["tests55_20_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_20_1.py": 1, "Folder_20": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.093619883060455e-05, "start": 1738459437.1746352, "stop": 1738459437.1747267, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "237cebb8841149b8a4a5f233e792390a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_20_1.py::test_list_of_single_number", "location": ["tests55_20_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_20_1.py": 1, "Folder_20": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.790288120508194e-05, "start": 1738459437.1748526, "stop": 1738459437.1749406, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "237cebb8841149b8a4a5f233e792390a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_20_1.py::test_list_of_single_number", "location": ["tests55_20_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_20_1.py": 1, "Folder_20": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.5721960961818695e-05, "start": 1738459437.1751492, "stop": 1738459437.1752055, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "237cebb8841149b8a4a5f233e792390a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_20_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_20_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_20_1.py": 1, "Folder_20": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.533173680305481e-05, "start": 1738459437.1757445, "stop": 1738459437.1758, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "237cebb8841149b8a4a5f233e792390a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_20_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_20_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_20_1.py": 1, "Folder_20": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_1/Folder_20/tests55_20_1.py", "lineno": 21, "message": "assert (4 == 3)\n +  where 4 = <built-in method count of list object at 0x74e92eea3d00>([-69])\n +    where <built-in method count of list object at 0x74e92eea3d00> = [[-69], [-69, 1], [-69], [-69, 1], [-69], [-69]].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -69, 1, -69, 1, -69]", "        result = lists_with_product_equal_n(input_list)", "        if -69 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -69 == 1:", "            assert result.count([-69]) == 6 and result.count([1, -69]) == 6 and result.count([-69, 1]) == 6 and result.count([1, -69, 1]) == 6", "        else:", ">           assert result.count([-69]) == 3 and result.count([1, -69]) == 3 and result.count([-69, 1]) == 3 and result.count([1, -69, 1]) == 3", "E           assert (4 == 3)", "E            +  where 4 = <built-in method count of list object at 0x74e92eea3d00>([-69])", "E            +    where <built-in method count of list object at 0x74e92eea3d00> = [[-69], [-69, 1], [-69], [-69, 1], [-69], [-69]].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_1/Folder_20/tests55_20_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -69, 1, -69, 1, -69]", "        result = lists_with_product_equal_n(input_list)", "        if -69 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -69 == 1:", "            assert result.count([-69]) == 6 and result.count([1, -69]) == 6 and result.count([-69, 1]) == 6 and result.count([1, -69, 1]) == 6", "        else:", ">           assert result.count([-69]) == 3 and result.count([1, -69]) == 3 and result.count([-69, 1]) == 3 and result.count([1, -69, 1]) == 3", "E           assert (4 == 3)", "E            +  where 4 = <built-in method count of list object at 0x74e92eea3d00>([-69])", "E            +    where <built-in method count of list object at 0x74e92eea3d00> = [[-69], [-69, 1], [-69], [-69, 1], [-69], [-69]].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/Phi_3_results_1/Folder_20/tests55_20_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q55/Phi_3_results_1/Folder_20/tests55_20_1.py", "lineno": 21, "message": "assert (4 == 3)\n +  where 4 = <built-in method count of list object at 0x74e92eea3d00>([-69])\n +    where <built-in method count of list object at 0x74e92eea3d00> = [[-69], [-69, 1], [-69], [-69, 1], [-69], [-69]].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021904334425926208, "start": 1738459437.1758654, "stop": 1738459437.1760845, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "237cebb8841149b8a4a5f233e792390a", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_20_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_20_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_20_1.py": 1, "Folder_20": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.322352707386017e-05, "start": 1738459437.1851602, "stop": 1738459437.1852539, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "237cebb8841149b8a4a5f233e792390a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
