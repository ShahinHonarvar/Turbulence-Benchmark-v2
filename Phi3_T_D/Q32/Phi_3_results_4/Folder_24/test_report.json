{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_24_4.py::test_compare_length_of_strings", "location": ["tests32_24_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.817299724090844e-05, "start": 1730210909.319962, "stop": 1730210909.3200607, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_24_4.py::test_string_of_length_one", "location": ["tests32_24_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015399200492538512, "start": 1730210909.3201325, "stop": 1730210909.3202872, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_24_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_24_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002003499976126477, "start": 1730210909.3203356, "stop": 1730210909.3205366, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_24_4.py::test_compare_length_of_strings", "location": ["tests32_24_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('2ywujOrqTcQFVIGBgpoL0')\n +  and   21 = len('2ywujOrqTcQFVIGBgpoL4')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + '0'", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('2ywujOrqTcQFVIGBgpoL0')", "E        +  and   21 = len('2ywujOrqTcQFVIGBgpoL4')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + '0'", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('2ywujOrqTcQFVIGBgpoL0')", "E        +  and   21 = len('2ywujOrqTcQFVIGBgpoL4')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('2ywujOrqTcQFVIGBgpoL0')\n +  and   21 = len('2ywujOrqTcQFVIGBgpoL4')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018780300160869956, "start": 1730210909.3202255, "stop": 1730210909.3204134, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_24_4.py::test_compare_length_of_strings", "location": ["tests32_24_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010585799464024603, "start": 1730210909.3290365, "stop": 1730210909.3291433, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_24_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_24_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = '0' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = '0' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000397998999687843, "start": 1730210909.320845, "stop": 1730210909.3212433, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_24_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_24_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010736800322774798, "start": 1730210909.3334043, "stop": 1730210909.3335125, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_24_4.py::test_string_of_length_one", "location": ["tests32_24_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 8, "message": "AssertionError: assert '4' == '04'\n  - 04\n  + 4"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = '0'", ">       assert insert_after_character(s) == '0' + '4'", "E       AssertionError: assert '4' == '04'", "E         - 04", "E         + 4"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = '0'", ">       assert insert_after_character(s) == '0' + '4'", "E       AssertionError: assert '4' == '04'", "E         - 04", "E         + 4"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_4/Folder_24/tests32_24_4.py", "lineno": 8, "message": "AssertionError: assert '4' == '04'\n  - 04\n  + 4"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00029503800033126026, "start": 1730210909.3205223, "stop": 1730210909.3208177, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_24_4.py::test_string_of_length_one", "location": ["tests32_24_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_24_4.py": 1, "Folder_24": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010140000085812062, "start": 1730210909.3393726, "stop": 1730210909.3394747, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b51d75c8aea498ba33f98586f838279", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
