{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_2_5.py::test_compare_length_of_strings", "location": ["tests32_2_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.566600783728063e-05, "start": 1730211599.7355733, "stop": 1730211599.735669, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_2_5.py::test_string_of_length_one", "location": ["tests32_2_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017403099627699703, "start": 1730211599.7357311, "stop": 1730211599.7359061, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_2_5.py::test_compare_length_of_strings", "location": ["tests32_2_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010591399041004479, "start": 1730211599.7358377, "stop": 1730211599.735944, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_2_5.py::test_compare_length_of_strings", "location": ["tests32_2_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.621901073027402e-05, "start": 1730211599.7361524, "stop": 1730211599.736209, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_2_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_2_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018972200632560998, "start": 1730211599.7359252, "stop": 1730211599.7361157, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_2_5.py::test_length_of_result", "location": ["tests32_2_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.427000334952027e-05, "start": 1730211599.7380283, "stop": 1730211599.738093, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_2_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_2_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 18, "message": "AssertionError: assert 1999 == (2 * 1000)\n +  where 1999 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'C' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1999 == (2 * 1000)", "E        +  where 1999 = len('CZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZCZC')", "E        +    whereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'C' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1999 == (2 * 1000)", "E        +  where 1999 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 18, "message": "AssertionError: assert 1999 == (2 * 1000)\n +  where 1999 = lenn +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003915980050805956, "start": 1730211599.7363954, "stop": 1730211599.7367876, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_2_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_2_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001124949922086671, "start": 1730211599.746299, "stop": 1730211599.7464123, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_2_5.py::test_length_of_result", "location": ["tests32_2_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 40, "message": "AssertionError: assert 21 == (21 + 1)\n +  where 21 = len('T8QIbjx1DS3cJYdauXK2C')\n +  and   21 = len('T8QIbjx1DS3cJYdauXK2C')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + 'C'", "        returned_string = insert_after_character(s)", "        count = s.count('C')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 21 == (21 + 1)", "E        +  where 21 = len('T8QIbjx1DS3cJYdauXK2C')", "E        +  and   21 = len('T8QIbjx1DS3cJYdauXK2C')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + 'C'", "        returned_string = insert_after_character(s)", "        count = s.count('C')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 21 == (21 + 1)", "E        +  where 21 = len('T8QIbjx1DS3cJYdauXK2C')", "E        +  and   21 = len('T8QIbjx1DS3cJYdauXK2C')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 40, "message": "AssertionError: assert 21 == (21 + 1)\n +  where 21 = len('T8QIbjx1DS3cJYdauXK2C')\n +  and   21 = len('T8QIbjx1DS3cJYdauXK2C')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001838329917518422, "start": 1730211599.7381651, "stop": 1730211599.7383492, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_2_5.py::test_length_of_result", "location": ["tests32_2_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.506099740974605e-05, "start": 1730211599.7469635, "stop": 1730211599.7470589, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_2_5.py::test_string_of_length_one", "location": ["tests32_2_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 8, "message": "AssertionError: assert 'C' == 'CZ'\n  - CZ\n  + C"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'C'", ">       assert insert_after_character(s) == 'C' + 'Z'", "E       AssertionError: assert 'C' == 'CZ'", "E         - CZ", "E         + C"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'C'", ">       assert insert_after_character(s) == 'C' + 'Z'", "E       AssertionError: assert 'C' == 'CZ'", "E         - CZ", "E         + C"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q32/Phi_3_results_5/Folder_2/tests32_2_5.py", "lineno": 8, "message": "AssertionError: assert 'C' == 'CZ'\n  - CZ\n  + C"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002797880006255582, "start": 1730211599.7361355, "stop": 1730211599.7364154, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_2_5.py::test_string_of_length_one", "location": ["tests32_2_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.839300764724612e-05, "start": 1730211599.7474132, "stop": 1730211599.7475123, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5b7002b25b0044318afc61dafa0f94bb", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
