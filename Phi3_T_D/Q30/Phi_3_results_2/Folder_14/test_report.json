{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_14_2.py::test_string_of_length_one", "location": ["tests30_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016110698925331235, "start": 1730200756.9256384, "stop": 1730200756.9258, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_compare_length_of_strings", "location": ["tests30_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.679399954620749e-05, "start": 1730200756.9255376, "stop": 1730200756.9256346, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_compare_length_of_strings", "location": ["tests30_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010426100925542414, "start": 1730200756.925801, "stop": 1730200756.9259055, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_compare_length_of_strings", "location": ["tests30_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.652199615724385e-05, "start": 1730200756.9261098, "stop": 1730200756.9261665, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001322290045209229, "start": 1730200756.9256055, "stop": 1730200756.9257386, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_2.py::test_string_of_length_one", "location": ["tests30_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012611299462150782, "start": 1730200756.926058, "stop": 1730200756.9261847, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_string_of_length_one", "location": ["tests30_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.691400242038071e-05, "start": 1730200756.926475, "stop": 1730200756.9265523, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_length_of_result", "location": ["tests30_14_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.564598879776895e-05, "start": 1730200756.9278593, "stop": 1730200756.9279253, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_result", "location": ["tests30_14_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.613800698891282e-05, "start": 1730200756.9279966, "stop": 1730200756.928073, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_result", "location": ["tests30_14_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.258299643173814e-05, "start": 1730200756.9282484, "stop": 1730200756.9283013, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.686900011729449e-05, "start": 1730200756.9283967, "stop": 1730200756.9284945, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_first_index_of_insert_char_in_result", "location": ["tests30_14_2.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.489100294653326e-05, "start": 1730200756.929178, "stop": 1730200756.929233, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_first_index_of_insert_char_in_result", "location": ["tests30_14_2.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.546200893353671e-05, "start": 1730200756.9292958, "stop": 1730200756.9293616, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_first_index_of_insert_char_in_result", "location": ["tests30_14_2.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.3669992010109127e-05, "start": 1730200756.9295163, "stop": 1730200756.9295604, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00031863800541032106, "start": 1730200756.925961, "stop": 1730200756.92628, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001360159949399531, "start": 1730200756.935114, "stop": 1730200756.9352508, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_2.py::test_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 13, "message": "AssertionError: assert '            ...             ' == '            ...             '\n  Strings contain only whitespace, escaping them using repr()\nn  \n  ...Full output truncated (3 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_before_character(s) == (' ' + ' ') * 1000", "E       AssertionError: assert '            ...             ' == '            ...             '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ...", "E         ", "E         ...Full output truncated (3 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_before_character(s) == (' ' + ' ') * 1000", "E       AssertionError: assert '            ...             ' == '            ...             '", "E         Strings contain only whitespace, escaping them using reprull output truncated (3 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_2/Folder_14/tests30_14_2.py", "lineno": 13, "message": "AssertionError: assert '            ...             ' == '            ...             '\n  Strings contain only whitespace, escaping them using repr()\nn  \n  ...Full output truncated (3 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014798460033489391, "start": 1730200756.9285936, "stop": 1730200756.9300737, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012627099931705743, "start": 1730200756.9405932, "stop": 1730200756.94072, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4dddc89835ff4816be47381ac195a9d6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
