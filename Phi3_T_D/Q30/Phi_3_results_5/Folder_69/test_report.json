{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_69_5.py::test_compare_length_of_strings", "location": ["tests30_69_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.587898966856301e-05, "start": 1730203858.4245396, "stop": 1730203858.424636, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_5.py::test_string_of_length_one", "location": ["tests30_69_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015544900088571012, "start": 1730203858.4247262, "stop": 1730203858.4248824, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_5.py::test_compare_length_of_strings", "location": ["tests30_69_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001278449926758185, "start": 1730203858.424807, "stop": 1730203858.424935, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_5.py::test_compare_length_of_strings", "location": ["tests30_69_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.414499123115093e-05, "start": 1730203858.425164, "stop": 1730203858.4252388, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_5.py::test_string_of_length_one", "location": ["tests30_69_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010969198774546385, "start": 1730203858.425078, "stop": 1730203858.425188, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_5.py::test_string_of_length_one", "location": ["tests30_69_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.115500582382083e-05, "start": 1730203858.4254148, "stop": 1730203858.4254766, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_69_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001276139955734834, "start": 1730203858.4249053, "stop": 1730203858.4250336, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_69_5.py::test_length_of_result", "location": ["tests30_69_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.909300959203392e-05, "start": 1730203858.4276416, "stop": 1730203858.427731, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_5.py::test_large_string_of_only_specified_character", "location": ["tests30_69_5.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.141000580508262e-05, "start": 1730203858.4283462, "stop": 1730203858.4284277, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_69_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 18, "message": "AssertionError: assert 1001 == (2 * 1000)\n +  where 1001 = lenn +    where 'P                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ' = insert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1001 == (2 * 1000)", "E        +  where 1001 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1001 == (2 * 1000)", "E        +  where 1001 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 18, "message": "AssertionError: assert 1001 == (2 * 1000)\n +  where 1001 = lenn +    whereinsert_before_character('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')\n +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002731319982558489, "start": 1730203858.4252286, "stop": 1730203858.425502, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_69_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_69_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010399000893812627, "start": 1730203858.4339368, "stop": 1730203858.4340417, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_69_5.py::test_length_of_result", "location": ["tests30_69_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 40, "message": "AssertionError: assert 21 == (21 + 1)\n +  where 21 = len('ALiPI03m56oQOzNHnCpe ')\n +  and   21 = len('ALiPI03m56oQOzNHnCpe ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 21 == (21 + 1)", "E        +  where 21 = len('ALiPI03m56oQOzNHnCpe ')", "E        +  and   21 = len('ALiPI03m56oQOzNHnCpe ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 21 == (21 + 1)", "E        +  where 21 = len('ALiPI03m56oQOzNHnCpe ')", "E        +  and   21 = len('ALiPI03m56oQOzNHnCpe ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 40, "message": "AssertionError: assert 21 == (21 + 1)\n +  where 21 = len('ALiPI03m56oQOzNHnCpe ')\n +  and   21 = len('ALiPI03m56oQOzNHnCpe ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021004599693696946, "start": 1730203858.4278214, "stop": 1730203858.4280314, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_5.py::test_length_of_result", "location": ["tests30_69_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010069299605675042, "start": 1730203858.4367013, "stop": 1730203858.4368024, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_5.py::test_large_string_of_only_specified_character", "location": ["tests30_69_5.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 13, "message": "AssertionError: assert 'P           ...             ' == 'P P P P P P ... P P P P P P '\nn  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_before_character(s) == ('P' + ' ') * 1000", "E       AssertionError: assert 'P           ...             ' == 'P P P P P P ... P P P P P P '", "E         - P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P ...", "E         ", "E         ...Full output truncated (2 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_before_character(s) == ('P' + ' ') * 1000", "E       AssertionError: assert 'P           ...             ' == 'P P P P P P ... P P P P P P '", "E         - P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P ...", "E         ", "E         ...Full output truncated (2 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q30/Phi_3_results_5/Folder_69/tests30_69_5.py", "lineno": 13, "message": "AssertionError: assert 'P           ...             ' == 'P P P P P P ... P P P P P P '\nn  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032040498626884073, "start": 1730203858.428511, "stop": 1730203858.4288318, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_5.py::test_large_string_of_only_specified_character", "location": ["tests30_69_5.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_69_5.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.301899990532547e-05, "start": 1730203858.4371953, "stop": 1730203858.4372888, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e24330179b4b46118c5a2c942824fa43", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
