{
  "parameter(s)": [
    86,
    99
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    0.0001
  ],
  "test_range_sum": [
    "passed",
    "",
    9e-05
  ],
  "test_large_range": [
    "failed",
    "assert [86, 87, 88, 89, 90, 91, ...] == [88, 89, 90, 91, 92, 93, ...]\n  At index 0 diff: 86 != 88\n  Left contains one more item: 98\n  Full diff:\n  - [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]\n  ?                                            ----\n  + [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98]\n  ?  ++++++++",
    0.00048
  ],
  "test_even_range": [
    "failed",
    "assert [172, 174, 17...180, 182, ...] == [176, 178, 18...184, 186, ...]\n  At index 0 diff: 172 != 176\n  Left contains one more item: 196\n  Full diff:\n  - [176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198]\n  ?                                                       -----\n  + [172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196]\n  ?  ++++++++++",
    0.0005
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 13 == ((99 - 86) - 1)\n +  where 13 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00026
  ]
}