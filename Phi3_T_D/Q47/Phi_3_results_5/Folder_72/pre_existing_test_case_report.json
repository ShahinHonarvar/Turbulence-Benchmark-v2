{
  "parameter(s)": [
    26,
    90,
    27,
    58
  ],
  "test_string_of_distinct_chars": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00015
  ],
  "test_location_of_palindrome": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_punctuations_and_space": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', ...}\n +  where {'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', ...} = palindromes_of_specific_lengths(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00021
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {'aa', 'aaa',...aaaaaaa', ...} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaa'\n  'aaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (87 lines hidden), use '-vv' to show",
    0.00095
  ]
}