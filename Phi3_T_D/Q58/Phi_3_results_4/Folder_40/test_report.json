{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_40_4.py::test_matrix_of_one_integer", "location": ["tests58_40_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_40_4.py": 1, "Folder_40": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012735463678836823, "start": 1738462295.981128, "stop": 1738462295.9812558, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "842e97c7843e47eb922e5a345c7c3524", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_40_4.py::test_matrix_of_one_integer", "location": ["tests58_40_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_40_4.py": 1, "Folder_40": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_one_integer():", "        input_matrix = [[1]]", "        input_matrix = np.asmatrix(input_matrix)", "        if 1 == 1:", ">           assert submatrix_with_n_numbers(input_matrix) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_4/Folder_40/tests58_40_4.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if matrix.dtype != np.int:"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_4/Folder_40/generated_answer.py", "lineno": 6, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_one_integer():", "        input_matrix = [[1]]", "        input_matrix = np.asmatrix(input_matrix)", "        if 1 == 1:", ">           assert submatrix_with_n_numbers(input_matrix) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_4/Folder_40/tests58_40_4.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    if matrix.dtype != np.int:"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_4/Folder_40/generated_answer.py", "lineno": 6, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018648244440555573, "start": 1738462295.9814205, "stop": 1738462295.9816072, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "842e97c7843e47eb922e5a345c7c3524", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_40_4.py::test_matrix_of_one_integer", "location": ["tests58_40_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_40_4.py": 1, "Folder_40": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011147186160087585, "start": 1738462296.016671, "stop": 1738462296.016783, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "842e97c7843e47eb922e5a345c7c3524", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
