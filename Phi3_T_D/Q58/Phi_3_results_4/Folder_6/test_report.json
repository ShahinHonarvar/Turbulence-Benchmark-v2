{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00039623863995075226, "start": 1738462228.8963227, "stop": 1738462228.8967197, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "907dcfd01e6d438480266b456bb8ed11", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00046039652079343796, "start": 1738462228.8970132, "stop": 1738462228.897474, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "907dcfd01e6d438480266b456bb8ed11", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017482414841651917, "start": 1738462228.897786, "stop": 1738462228.897961, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "907dcfd01e6d438480266b456bb8ed11", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012670177966356277, "start": 1738462228.8989644, "stop": 1738462228.8990917, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "907dcfd01e6d438480266b456bb8ed11", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  22,   64],\\n        [ -81,   81],\\n        [  12,   46],\\n        [  68,   -3],\\n        [ -75,  -79],\\n        [  52,   29],\\n        [  44,  -42],\\n        [   3,   12],\\n        [  55,   32],\\n        [ -61,  -91],\\n        [ -98,  -25],\\n        [  82,   92],\\n        [  54,    9],\\n        [  81,   55],\\n        [  57,   83],\\n        [ -39,  -62],\\n        [  46,  -15],\\n        [ -70,   18],\\n        [  19,   37],\\n        [ -13,   95],\\n        [  29,   90],\\n        [  90,   -3],\\n        [  43,  -52],\\n        [ -47,    0],\\n        [  79,  -78],\\n        [  84,  -68],\\n        [  75,  -22],\\n        [ -41,   28],\\n        [ -64,   89],\\n        [ -29,  -60],\\n        [ -66,  -91],\\n        [ -45,   72],\\n        [ -93,  -74],\\n        [  62,   23],\\n        [   0,   78],\\n        [  98,   27],\\n        [  33,   40],\\n        [  -5,  -19],\\n        [ -28,  -90],\\n        [ -48,  100],\\n        [ -74,   58],\\n        [  72,  -87],\\n        [ -55,  -53],\\n        [ -62,   20],\\n        [ -17,   51],\\n        [ -45,  -64],\\n        [  20,   69],\\n        [  62,  -27],\\n        [ -16,    4],\\n        [ 100,   45],\\n        [-100,  -20],\\n        [ -57,    2],\\n        [ -91,   79],\\n        [  73,   73],\\n        [  10,    2],\\n        [  52,  -26],\\n        [  21,   -6],\\n        [  44,   -4],\\n        [   2,   56],\\n        [-100,  -36],\\n        [ -21,  -11]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  22,   64],\\n        [ -81,   81],\\n        [  12,   46],\\n        [  68,   -3],\\n        [ -75,  -79],\\n        [  52,   29],\\n        [  44,  -42],\\n        [   3,   12],\\n        [  55,   32],\\n        [ -61,  -91],\\n        [ -98,  -25],\\n        [  82,   92],\\n        [  54,    9],\\n        [  81,   55],\\n        [  57,   83],\\n        [ -39,  -62],\\n        [  46,  -15],\\n        [ -70,   18],\\n        [  19,   37],\\n        [ -13,   95],\\n        [  29,   90],\\n        [  90,   -3],\\n        [  43,  -52],\\n        [ -47,    0],\\n        [  79,  -78],\\n        [  84,  -68],\\n        [  75,  -22],\\n        [ -41,   28],\\n        [ -64,   89],\\n        [ -29,  -60],\\n        [ -66,  -91],\\n        [ -45,   72],\\n        [ -93,  -74],\\n        [  62,   23],\\n        [   0,   78],\\n        [  98,   27],\\n        [  33,   40],\\n        [  -5,  -19],\\n        [ -28,  -90],\\n        [ -48,  100],\\n        [ -74,   58],\\n        [  72,  -87],\\n        [ -55,  -53],\\n        [ -62,   20],\\n        [ -17,   51],\\n        [ -45,  -64],\\n        [  20,   69],\\n        [  62,  -27],\\n        [ -16,    4],\\n        [ 100,   45],\\n        [-100,  -20],\\n        [ -57,    2],\\n        [ -91,   79],\\n        [  73,   73],\\n        [  10,    2],\\n        [  52,  -26],\\n        [  21,   -6],\\n        [  44,   -4],\\n        [   2,   56],\\n        [-100,  -36],\\n        [ -21,  -11]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  22,   64],\\n        [ -81,   81],\\n        [  12,   46],\\n        [  68,   -3],\\n        [ -75,  -79],\\n        [  52,   29],\\n        [  44,  -42],\\n        [   3,   12],\\n        [  55,   32],\\n        [ -61,  -91],\\n        [ -98,  -25],\\n        [  82,   92],\\n        [  54,    9],\\n        [  81,   55],\\n        [  57,   83],\\n        [ -39,  -62],\\n        [  46,  -15],\\n        [ -70,   18],\\n        [  19,   37],\\n        [ -13,   95],\\n        [  29,   90],\\n        [  90,   -3],\\n        [  43,  -52],\\n        [ -47,    0],\\n        [  79,  -78],\\n        [  84,  -68],\\n        [  75,  -22],\\n        [ -41,   28],\\n        [ -64,   89],\\n        [ -29,  -60],\\n        [ -66,  -91],\\n        [ -45,   72],\\n        [ -93,  -74],\\n        [  62,   23],\\n        [   0,   78],\\n        [  98,   27],\\n        [  33,   40],\\n        [  -5,  -19],\\n        [ -28,  -90],\\n        [ -48,  100],\\n        [ -74,   58],\\n        [  72,  -87],\\n        [ -55,  -53],\\n        [ -62,   20],\\n        [ -17,   51],\\n        [ -45,  -64],\\n        [  20,   69],\\n        [  62,  -27],\\n        [ -16,    4],\\n        [ 100,   45],\\n        [-100,  -20],\\n        [ -57,    2],\\n        [ -91,   79],\\n        [  73,   73],\\n        [  10,    2],\\n        [  52,  -26],\\n        [  21,   -6],\\n        [  44,   -4],\\n        [   2,   56],\\n        [-100,  -36],\\n        [ -21,  -11]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  22,   64],\\n        [ -81,   81],\\n        [  12,   46],\\n        [  68,   -3],\\n        [ -75,  -79],\\n        [  52,   29],\\n        [  44,  -42],\\n        [   3,   12],\\n        [  55,   32],\\n        [ -61,  -91],\\n        [ -98,  -25],\\n        [  82,   92],\\n        [  54,    9],\\n        [  81,   55],\\n        [  57,   83],\\n        [ -39,  -62],\\n        [  46,  -15],\\n        [ -70,   18],\\n        [  19,   37],\\n        [ -13,   95],\\n        [  29,   90],\\n        [  90,   -3],\\n        [  43,  -52],\\n        [ -47,    0],\\n        [  79,  -78],\\n        [  84,  -68],\\n        [  75,  -22],\\n        [ -41,   28],\\n        [ -64,   89],\\n        [ -29,  -60],\\n        [ -66,  -91],\\n        [ -45,   72],\\n        [ -93,  -74],\\n        [  62,   23],\\n        [   0,   78],\\n        [  98,   27],\\n        [  33,   40],\\n        [  -5,  -19],\\n        [ -28,  -90],\\n        [ -48,  100],\\n        [ -74,   58],\\n        [  72,  -87],\\n        [ -55,  -53],\\n        [ -62,   20],\\n        [ -17,   51],\\n        [ -45,  -64],\\n        [  20,   69],\\n        [  62,  -27],\\n        [ -16,    4],\\n        [ 100,   45],\\n        [-100,  -20],\\n        [ -57,    2],\\n        [ -91,   79],\\n        [  73,   73],\\n        [  10,    2],\\n        [  52,  -26],\\n        [  21,   -6],\\n        [  44,   -4],\\n        [   2,   56],\\n        [-100,  -36],\\n        [ -21,  -11]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.03954017534852028, "start": 1738462228.8991883, "stop": 1738462228.9387293, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "907dcfd01e6d438480266b456bb8ed11", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013694912195205688, "start": 1738462228.95727, "stop": 1738462228.9574075, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "907dcfd01e6d438480266b456bb8ed11", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
