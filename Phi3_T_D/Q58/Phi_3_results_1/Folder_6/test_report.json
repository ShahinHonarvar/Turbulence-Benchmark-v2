{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001119738444685936, "start": 1738461611.0417194, "stop": 1738461611.041832, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "16ac7b69dd044c57a4f15568405bd857", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013280007988214493, "start": 1738461611.0419915, "stop": 1738461611.0421245, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "16ac7b69dd044c57a4f15568405bd857", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.623193621635437e-05, "start": 1738461611.0424, "stop": 1738461611.0424666, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "16ac7b69dd044c57a4f15568405bd857", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.334033191204071e-05, "start": 1738461611.0440078, "stop": 1738461611.0440915, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "16ac7b69dd044c57a4f15568405bd857", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -73,  -80],\\n        [  17,   81],\\n        [   8,  -93],\\n        [ -32,  -15],\\n        [ -76,  -71],\\n        [  63,   -7],\\n        [  43,  -78],\\n        [ -84,   -3],\\n        [  38,  -50],\\n        [ -91,  -10],\\n        [  -4,   16],\\n        [  74,   92],\\n        [ -57,  -13],\\n        [ -44,    8],\\n        [  99,   86],\\n        [  31,   51],\\n        [  97,  -92],\\n        [   7,  -82],\\n        [   6,  -86],\\n        [  76,  -12],\\n        [  70,  -50],\\n        [ -26,  -61],\\n        [  65,  -67],\\n        [  30,   16],\\n        [ -19,   67],\\n        [  62,   34],\\n        [-100,   95],\\n        [  75,   39],\\n        [   0,  -20],\\n        [ -80,   11],\\n        [ -79,   97],\\n        [  29,  -69],\\n        [ -17,  -71],\\n        [ -49,  -66],\\n        [   7,   39],\\n        [ -31,   76],\\n        [  89,  -46],\\n        [  43,   60],\\n        [  59,   36],\\n        [ -21,   47],\\n        [   9,  -52],\\n        [  35,  -40],\\n        [  49,   -3],\\n        [ -29,   58],\\n        [  41,   89],\\n        [  -2,   -1],\\n        [ -73,  -76],\\n        [  58,   40],\\n        [ -96,  -29],\\n        [  20,  -54],\\n        [ -91,   63],\\n        [  40,   44],\\n        [ -19,  -95],\\n        [  65,  -48],\\n        [ -16,  -73],\\n        [ -47,   11],\\n        [  45,  -59],\\n        [  -7,  -21],\\n        [   5,  -75],\\n        [ -37,  -45],\\n        [  20,   38]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -73,  -80],\\n        [  17,   81],\\n        [   8,  -93],\\n        [ -32,  -15],\\n        [ -76,  -71],\\n        [  63,   -7],\\n        [  43,  -78],\\n        [ -84,   -3],\\n        [  38,  -50],\\n        [ -91,  -10],\\n        [  -4,   16],\\n        [  74,   92],\\n        [ -57,  -13],\\n        [ -44,    8],\\n        [  99,   86],\\n        [  31,   51],\\n        [  97,  -92],\\n        [   7,  -82],\\n        [   6,  -86],\\n        [  76,  -12],\\n        [  70,  -50],\\n        [ -26,  -61],\\n        [  65,  -67],\\n        [  30,   16],\\n        [ -19,   67],\\n        [  62,   34],\\n        [-100,   95],\\n        [  75,   39],\\n        [   0,  -20],\\n        [ -80,   11],\\n        [ -79,   97],\\n        [  29,  -69],\\n        [ -17,  -71],\\n        [ -49,  -66],\\n        [   7,   39],\\n        [ -31,   76],\\n        [  89,  -46],\\n        [  43,   60],\\n        [  59,   36],\\n        [ -21,   47],\\n        [   9,  -52],\\n        [  35,  -40],\\n        [  49,   -3],\\n        [ -29,   58],\\n        [  41,   89],\\n        [  -2,   -1],\\n        [ -73,  -76],\\n        [  58,   40],\\n        [ -96,  -29],\\n        [  20,  -54],\\n        [ -91,   63],\\n        [  40,   44],\\n        [ -19,  -95],\\n        [  65,  -48],\\n        [ -16,  -73],\\n        [ -47,   11],\\n        [  45,  -59],\\n        [  -7,  -21],\\n        [   5,  -75],\\n        [ -37,  -45],\\n        [  20,   38]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -73,  -80],\\n        [  17,   81],\\n        [   8,  -93],\\n        [ -32,  -15],\\n        [ -76,  -71],\\n        [  63,   -7],\\n        [  43,  -78],\\n        [ -84,   -3],\\n        [  38,  -50],\\n        [ -91,  -10],\\n        [  -4,   16],\\n        [  74,   92],\\n        [ -57,  -13],\\n        [ -44,    8],\\n        [  99,   86],\\n        [  31,   51],\\n        [  97,  -92],\\n        [   7,  -82],\\n        [   6,  -86],\\n        [  76,  -12],\\n        [  70,  -50],\\n        [ -26,  -61],\\n        [  65,  -67],\\n        [  30,   16],\\n        [ -19,   67],\\n        [  62,   34],\\n        [-100,   95],\\n        [  75,   39],\\n        [   0,  -20],\\n        [ -80,   11],\\n        [ -79,   97],\\n        [  29,  -69],\\n        [ -17,  -71],\\n        [ -49,  -66],\\n        [   7,   39],\\n        [ -31,   76],\\n        [  89,  -46],\\n        [  43,   60],\\n        [  59,   36],\\n        [ -21,   47],\\n        [   9,  -52],\\n        [  35,  -40],\\n        [  49,   -3],\\n        [ -29,   58],\\n        [  41,   89],\\n        [  -2,   -1],\\n        [ -73,  -76],\\n        [  58,   40],\\n        [ -96,  -29],\\n        [  20,  -54],\\n        [ -91,   63],\\n        [  40,   44],\\n        [ -19,  -95],\\n        [  65,  -48],\\n        [ -16,  -73],\\n        [ -47,   11],\\n        [  45,  -59],\\n        [  -7,  -21],\\n        [   5,  -75],\\n        [ -37,  -45],\\n        [  20,   38]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -73,  -80],\\n        [  17,   81],\\n        [   8,  -93],\\n        [ -32,  -15],\\n        [ -76,  -71],\\n        [  63,   -7],\\n        [  43,  -78],\\n        [ -84,   -3],\\n        [  38,  -50],\\n        [ -91,  -10],\\n        [  -4,   16],\\n        [  74,   92],\\n        [ -57,  -13],\\n        [ -44,    8],\\n        [  99,   86],\\n        [  31,   51],\\n        [  97,  -92],\\n        [   7,  -82],\\n        [   6,  -86],\\n        [  76,  -12],\\n        [  70,  -50],\\n        [ -26,  -61],\\n        [  65,  -67],\\n        [  30,   16],\\n        [ -19,   67],\\n        [  62,   34],\\n        [-100,   95],\\n        [  75,   39],\\n        [   0,  -20],\\n        [ -80,   11],\\n        [ -79,   97],\\n        [  29,  -69],\\n        [ -17,  -71],\\n        [ -49,  -66],\\n        [   7,   39],\\n        [ -31,   76],\\n        [  89,  -46],\\n        [  43,   60],\\n        [  59,   36],\\n        [ -21,   47],\\n        [   9,  -52],\\n        [  35,  -40],\\n        [  49,   -3],\\n        [ -29,   58],\\n        [  41,   89],\\n        [  -2,   -1],\\n        [ -73,  -76],\\n        [  58,   40],\\n        [ -96,  -29],\\n        [  20,  -54],\\n        [ -91,   63],\\n        [  40,   44],\\n        [ -19,  -95],\\n        [  65,  -48],\\n        [ -16,  -73],\\n        [ -47,   11],\\n        [  45,  -59],\\n        [  -7,  -21],\\n        [   5,  -75],\\n        [ -37,  -45],\\n        [  20,   38]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006839931011199951, "start": 1738461611.0441952, "stop": 1738461611.0448797, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "16ac7b69dd044c57a4f15568405bd857", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012963265180587769, "start": 1738461611.0630474, "stop": 1738461611.0631776, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "16ac7b69dd044c57a4f15568405bd857", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
