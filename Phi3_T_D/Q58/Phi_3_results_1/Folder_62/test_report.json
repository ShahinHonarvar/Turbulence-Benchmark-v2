{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_1.py::test_matrix_of_one_integer", "location": ["tests58_62_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005466872826218605, "start": 1738461722.3393066, "stop": 1738461722.3398538, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ab7fa663804474e89d56e55719dd435", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_one_integer", "location": ["tests58_62_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006132377311587334, "start": 1738461722.3402154, "stop": 1738461722.3408294, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ab7fa663804474e89d56e55719dd435", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_one_integer", "location": ["tests58_62_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00024429894983768463, "start": 1738461722.3412333, "stop": 1738461722.341478, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9ab7fa663804474e89d56e55719dd435", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_having_186_integers", "location": ["tests58_62_1.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00037818029522895813, "start": 1738461722.3429997, "stop": 1738461722.3433788, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9ab7fa663804474e89d56e55719dd435", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_having_186_integers", "location": ["tests58_62_1.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -10,  -35],\\n        [   6,   71],\\n        [  41,    0],\\n        [  29,    3],\\n        [ -59,   53],\\n        [  27,  -68],\\n        [ 100,   99],\\n        [ -93,  -40],\\n        [  77,  -29],\\n        [  63,    8],\\n        [  16,   80],\\n        [  99,   74],\\n        [  91,   53],\\n        [  11,   90],\\n        [  25,   32],\\n        [ -34,   23],\\n        [  81,   91],\\n        [  42,   35],\\n        [  25,    9],\\n        [  -1,   74],\\n        [ -76,   -9],\\n        [ -59,   81],\\n        [ -95,  -22],\\n        [  -5,   94],\\n        [ -53,   62],\\n        [  38,    8],\\n        [  68,  -85],\\n        [  12,  -83],\\n        [ -73,  -67],\\n        [ -75,  -30],\\n        [  -2,   10],\\n        [  -2,  -42],\\n        [  46,  -84],\\n        [ -91,   66],\\n        [  29,  -94],\\n        [ -61,  -48],\\n        [ -47,  -32],\\n        [ -91,   55],\\n        [  73,   64],\\n        [  89,  -72],\\n        [  68,  -16],\\n        [ -97,  -22],\\n        [  79,   78],\\n        [  73,  -83],\\n        [ -29,  -15],\\n        [  80,  -72],\\n        [  94,   -8],\\n        [  83,   67],\\n        [ -99,  -30],\\n        [  51,   67],\\n        [ -89,   14],\\n        [ -81,   61],\\n        [ -69,   72],\\n        [  83,  -76],\\n        [  82,   -4],\\n        [ -19,   48],\\n        [  87,  -98],\\n        [ -35,  -91],\\n        [ -41,  -58],\\n        [  52,   32],\\n        [ -88,   21],\\n        [  87,  -71],\\n        [ -73,    5],\\n        [  16,    1],\\n        [  54,   96],\\n        [ -22,    8],\\n        [  90,   40],\\n        [ -76,  -84],\\n        [  89,  -43],\\n        [ -18,  -26],\\n        [ -26,  -28],\\n        [ -65,   36],\\n        [  12,  -42],\\n        [  45,   24],\\n        [  43,  -34],\\n        [  40,  -20],\\n        [ -30,  -63],\\n        [  83,  -97],\\n        [ -77,  -73],\\n        [ -88,  -14],\\n        [  -5,  -29],\\n        [ -79,  -88],\\n        [ -83,  -80],\\n        [-100,   47],\\n        [  -3,  -33],\\n        [ -21,  -60],\\n        [  16,  -29],\\n        [ -91,  -17],\\n        [  79,   18],\\n        [  15,  -90],\\n        [  61,   77],\\n        [  34,  -98],\\n        [ -32,   -8]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -10,  -35],\\n        [   6,   71],\\n        [  41,    0],\\n        [  29,    3],\\n        [ -59,   53],\\n        [  27,  -68],\\n        [ 100,   99],\\n        [ -93,  -40],\\n        [  77,  -29],\\n        [  63,    8],\\n        [  16,   80],\\n        [  99,   74],\\n        [  91,   53],\\n        [  11,   90],\\n        [  25,   32],\\n        [ -34,   23],\\n        [  81,   91],\\n        [  42,   35],\\n        [  25,    9],\\n        [  -1,   74],\\n        [ -76,   -9],\\n        [ -59,   81],\\n        [ -95,  -22],\\n        [  -5,   94],\\n        [ -53,   62],\\n        [  38,    8],\\n        [  68,  -85],\\n        [  12,  -83],\\n        [ -73,  -67],\\n        [ -75,  -30],\\n        [  -2,   10],\\n        [  -2,  -42],\\n        [  46,  -84],\\n        [ -91,   66],\\n        [  29,  -94],\\n        [ -61,  -48],\\n        [ -47,  -32],\\n        [ -91,   55],\\n        [  73,   64],\\n        [  89,  -72],\\n        [  68,  -16],\\n        [ -97,  -22],\\n        [  79,   78],\\n        [  73,  -83],\\n        [ -29,  -15],\\n        [  80,  -72],\\n        [  94,   -8],\\n        [  83,   67],\\n        [ -99,  -30],\\n        [  51,   67],\\n        [ -89,   14],\\n        [ -81,   61],\\n        [ -69,   72],\\n        [  83,  -76],\\n        [  82,   -4],\\n        [ -19,   48],\\n        [  87,  -98],\\n        [ -35,  -91],\\n        [ -41,  -58],\\n        [  52,   32],\\n        [ -88,   21],\\n        [  87,  -71],\\n        [ -73,    5],\\n        [  16,    1],\\n        [  54,   96],\\n        [ -22,    8],\\n        [  90,   40],\\n        [ -76,  -84],\\n        [  89,  -43],\\n        [ -18,  -26],\\n        [ -26,  -28],\\n        [ -65,   36],\\n        [  12,  -42],\\n        [  45,   24],\\n        [  43,  -34],\\n        [  40,  -20],\\n        [ -30,  -63],\\n        [  83,  -97],\\n        [ -77,  -73],\\n        [ -88,  -14],\\n        [  -5,  -29],\\n        [ -79,  -88],\\n        [ -83,  -80],\\n        [-100,   47],\\n        [  -3,  -33],\\n        [ -21,  -60],\\n        [  16,  -29],\\n        [ -91,  -17],\\n        [  79,   18],\\n        [  15,  -90],\\n        [  61,   77],\\n        [  34,  -98],\\n        [ -32,   -8]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -10,  -35],\\n        [   6,   71],\\n        [  41,    0],\\n        [  29,    3],\\n        [ -59,   53],\\n        [  27,  -68],\\n        [ 100,   99],\\n        [ -93,  -40],\\n        [  77,  -29],\\n        [  63,    8],\\n        [  16,   80],\\n        [  99,   74],\\n        [  91,   53],\\n        [  11,   90],\\n        [  25,   32],\\n        [ -34,   23],\\n        [  81,   91],\\n        [  42,   35],\\n        [  25,    9],\\n        [  -1,   74],\\n        [ -76,   -9],\\n        [ -59,   81],\\n        [ -95,  -22],\\n        [  -5,   94],\\n        [ -53,   62],\\n        [  38,    8],\\n        [  68,  -85],\\n        [  12,  -83],\\n        [ -73,  -67],\\n        [ -75,  -30],\\n        [  -2,   10],\\n        [  -2,  -42],\\n        [  46,  -84],\\n        [ -91,   66],\\n        [  29,  -94],\\n        [ -61,  -48],\\n        [ -47,  -32],\\n        [ -91,   55],\\n        [  73,   64],\\n        [  89,  -72],\\n        [  68,  -16],\\n        [ -97,  -22],\\n        [  79,   78],\\n        [  73,  -83],\\n        [ -29,  -15],\\n        [  80,  -72],\\n        [  94,   -8],\\n        [  83,   67],\\n        [ -99,  -30],\\n        [  51,   67],\\n        [ -89,   14],\\n        [ -81,   61],\\n        [ -69,   72],\\n        [  83,  -76],\\n        [  82,   -4],\\n        [ -19,   48],\\n        [  87,  -98],\\n        [ -35,  -91],\\n        [ -41,  -58],\\n        [  52,   32],\\n        [ -88,   21],\\n        [  87,  -71],\\n        [ -73,    5],\\n        [  16,    1],\\n        [  54,   96],\\n        [ -22,    8],\\n        [  90,   40],\\n        [ -76,  -84],\\n        [  89,  -43],\\n        [ -18,  -26],\\n        [ -26,  -28],\\n        [ -65,   36],\\n        [  12,  -42],\\n        [  45,   24],\\n        [  43,  -34],\\n        [  40,  -20],\\n        [ -30,  -63],\\n        [  83,  -97],\\n        [ -77,  -73],\\n        [ -88,  -14],\\n        [  -5,  -29],\\n        [ -79,  -88],\\n        [ -83,  -80],\\n        [-100,   47],\\n        [  -3,  -33],\\n        [ -21,  -60],\\n        [  16,  -29],\\n        [ -91,  -17],\\n        [  79,   18],\\n        [  15,  -90],\\n        [  61,   77],\\n        [  34,  -98],\\n        [ -32,   -8]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_1/Folder_62/tests58_62_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -10,  -35],\\n        [   6,   71],\\n        [  41,    0],\\n        [  29,    3],\\n        [ -59,   53],\\n        [  27,  -68],\\n        [ 100,   99],\\n        [ -93,  -40],\\n        [  77,  -29],\\n        [  63,    8],\\n        [  16,   80],\\n        [  99,   74],\\n        [  91,   53],\\n        [  11,   90],\\n        [  25,   32],\\n        [ -34,   23],\\n        [  81,   91],\\n        [  42,   35],\\n        [  25,    9],\\n        [  -1,   74],\\n        [ -76,   -9],\\n        [ -59,   81],\\n        [ -95,  -22],\\n        [  -5,   94],\\n        [ -53,   62],\\n        [  38,    8],\\n        [  68,  -85],\\n        [  12,  -83],\\n        [ -73,  -67],\\n        [ -75,  -30],\\n        [  -2,   10],\\n        [  -2,  -42],\\n        [  46,  -84],\\n        [ -91,   66],\\n        [  29,  -94],\\n        [ -61,  -48],\\n        [ -47,  -32],\\n        [ -91,   55],\\n        [  73,   64],\\n        [  89,  -72],\\n        [  68,  -16],\\n        [ -97,  -22],\\n        [  79,   78],\\n        [  73,  -83],\\n        [ -29,  -15],\\n        [  80,  -72],\\n        [  94,   -8],\\n        [  83,   67],\\n        [ -99,  -30],\\n        [  51,   67],\\n        [ -89,   14],\\n        [ -81,   61],\\n        [ -69,   72],\\n        [  83,  -76],\\n        [  82,   -4],\\n        [ -19,   48],\\n        [  87,  -98],\\n        [ -35,  -91],\\n        [ -41,  -58],\\n        [  52,   32],\\n        [ -88,   21],\\n        [  87,  -71],\\n        [ -73,    5],\\n        [  16,    1],\\n        [  54,   96],\\n        [ -22,    8],\\n        [  90,   40],\\n        [ -76,  -84],\\n        [  89,  -43],\\n        [ -18,  -26],\\n        [ -26,  -28],\\n        [ -65,   36],\\n        [  12,  -42],\\n        [  45,   24],\\n        [  43,  -34],\\n        [  40,  -20],\\n        [ -30,  -63],\\n        [  83,  -97],\\n        [ -77,  -73],\\n        [ -88,  -14],\\n        [  -5,  -29],\\n        [ -79,  -88],\\n        [ -83,  -80],\\n        [-100,   47],\\n        [  -3,  -33],\\n        [ -21,  -60],\\n        [  16,  -29],\\n        [ -91,  -17],\\n        [  79,   18],\\n        [  15,  -90],\\n        [  61,   77],\\n        [  34,  -98],\\n        [ -32,   -8]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001905057579278946, "start": 1738461722.3435297, "stop": 1738461722.3454354, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9ab7fa663804474e89d56e55719dd435", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_1.py::test_matrix_of_having_186_integers", "location": ["tests58_62_1.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_1.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018252059817314148, "start": 1738461722.374929, "stop": 1738461722.3751118, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9ab7fa663804474e89d56e55719dd435", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
