{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 83,   7, -46,  -5,  68,  16, -46, -98,   6, -31,  66, -48, -30,\\n          67,   3,  43, -48,  66,  75, -35,  56,  42, -55, -81, -58,  32,\\n         -18, -96, -54,  51, -64, -63,  60, -26, -24,   9,  65, -32, -72,\\n          73,  94, -98, -49,  34, -61, -44, -38,  98,  32, -47, -44,  -3,\\n         -45,  20,   7, -41,  43, -58,  29, -94, -74,  59, -48, -19,  68,\\n         -64,   5,  70,  52, -18,  19, -30, -91, -96,  86,  86,  -5,  31,\\n          43, -50,   9,  18,  39, -42, -65, -18, -86, -80,  54,  94, -23,\\n         -60,  -5,  77, -10, -88, -40, -60, -60,  14,  35,  91,  -5,  64,\\n          -7,  52,  95,  88,  31,  33,  68, -46, -53,  51,  30,  26, -44,\\n          28,  -4,  24,  95,  27,  -3, -75, -60, -38, -21,   5,  35,  42,\\n         -25, -15,  99,  27, -89,  56,  -3,  10,  91, -27, -54, -31,  56,\\n          87, 100, -13,  81,  -1, -92, -86,  70,  27, -55, -83,  -7, -76,\\n          83,  83,   7]]))",
    0.00121
  ]
}