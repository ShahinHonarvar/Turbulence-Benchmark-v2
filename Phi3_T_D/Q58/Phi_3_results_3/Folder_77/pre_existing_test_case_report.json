{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00042
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,   65,   59,  -60,   12,   77,   14,  -61,  -28,  -81,\\n          -89,   88,  -49, -100,   47,   13,   48,   -1,    8,   23,\\n           94,    6,  -25,   90,  -15,   87,   57,  -76,   56,  -54,\\n           23,   53,   19,  -13,   96,  -75,   30,  -85,   63,   40,\\n            6,  -29,   81,   64,  -58,   -3,   32,  -91,  -81,   70,\\n           69,  -74,   34,   -5,  -41,   59,  -61,  -92,   31,  -60,\\n          -36,  -18,   92,   88,  -79,  -71,  -50,   71,   42,  -76,\\n           66,   -3,  -64,  -19,  -69,    6,  -71,  -48,  -27,   55,\\n          -15,   67,  -51,   81,  -33,  -64,   77,  -59,   97,   99,\\n          -54,   -6,  -48,  -62,  -96,   19,  -23,   64,   45,  -45,\\n           -5,   64,   97,  -49,  -10, -100,    7,   -1,  -80,   33,\\n           80,   -8,   98,   -5,  -84,  -34,   85,   49,  -21,   -5,\\n           46,   14,   -5,   11,   97,   91,  -79,   37,  -16,  -52,\\n          -99,   81,  -59,   74,   94,   88,   90,  -37,   52,   -5,\\n          -15,   -3,    4,  -39,   31,   68,   58,   85,  -65,  -87,\\n          -36,  -85,  -54,   34,   94,  -72,  -74,   35,   73,   34,\\n          -46,  100,   87,   76,  -17,   42,  -87,  -39,   -5,   21,\\n           43,   41,   94,  -91,  -91,  -95,   57,  -45,  -45]]))",
    0.85504
  ]
}