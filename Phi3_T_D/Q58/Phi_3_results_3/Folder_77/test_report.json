{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_77_3.py::test_matrix_of_one_integer", "location": ["tests58_77_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_3.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00041724182665348053, "start": 1738462173.868261, "stop": 1738462173.8686788, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d0b8780f3c5433a98843bd30ce67a52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_3.py::test_matrix_of_one_integer", "location": ["tests58_77_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_3.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017855316400527954, "start": 1738462173.8691978, "stop": 1738462173.8693767, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d0b8780f3c5433a98843bd30ce67a52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_3.py::test_matrix_of_one_integer", "location": ["tests58_77_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_3.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.277315646409988e-05, "start": 1738462173.8696764, "stop": 1738462173.8697596, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d0b8780f3c5433a98843bd30ce67a52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_3.py::test_matrix_of_having_179_integers", "location": ["tests58_77_3.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_3.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012283213436603546, "start": 1738462173.8710508, "stop": 1738462173.8711739, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8d0b8780f3c5433a98843bd30ce67a52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_3.py::test_matrix_of_having_179_integers", "location": ["tests58_77_3.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_3.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_3/Folder_77/tests58_77_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,   65,   59,  -60,   12,   77,   14,  -61,  -28,  -81,\\n          -89,   88,  -49, -100,   47,   13,   48,   -1,    8,   23,\\n           94,    6,  -25,   90,  -15,   87,   57,  -76,   56,  -54,\\n           23,   53,   19,  -13,   96,  -75,   30,  -85,   63,   40,\\n            6,  -29,   81,   64,  -58,   -3,   32,  -91,  -81,   70,\\n           69,  -74,   34,   -5,  -41,   59,  -61,  -92,   31,  -60,\\n          -36,  -18,   92,   88,  -79,  -71,  -50,   71,   42,  -76,\\n           66,   -3,  -64,  -19,  -69,    6,  -71,  -48,  -27,   55,\\n          -15,   67,  -51,   81,  -33,  -64,   77,  -59,   97,   99,\\n          -54,   -6,  -48,  -62,  -96,   19,  -23,   64,   45,  -45,\\n           -5,   64,   97,  -49,  -10, -100,    7,   -1,  -80,   33,\\n           80,   -8,   98,   -5,  -84,  -34,   85,   49,  -21,   -5,\\n           46,   14,   -5,   11,   97,   91,  -79,   37,  -16,  -52,\\n          -99,   81,  -59,   74,   94,   88,   90,  -37,   52,   -5,\\n          -15,   -3,    4,  -39,   31,   68,   58,   85,  -65,  -87,\\n          -36,  -85,  -54,   34,   94,  -72,  -74,   35,   73,   34,\\n          -46,  100,   87,   76,  -17,   42,  -87,  -39,   -5,   21,\\n           43,   41,   94,  -91,  -91,  -95,   57,  -45,  -45]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  41,   65,   59,  -60,   12,   77,   14,  -61,  -28,  -81,\\n          -89,   88,  -49, -100,   47,   13,   48,   -1,    8,   23,\\n           94,    6,  -25,   90,  -15,   87,   57,  -76,   56,  -54,\\n           23,   53,   19,  -13,   96,  -75,   30,  -85,   63,   40,\\n            6,  -29,   81,   64,  -58,   -3,   32,  -91,  -81,   70,\\n           69,  -74,   34,   -5,  -41,   59,  -61,  -92,   31,  -60,\\n          -36,  -18,   92,   88,  -79,  -71,  -50,   71,   42,  -76,\\n           66,   -3,  -64,  -19,  -69,    6,  -71,  -48,  -27,   55,\\n          -15,   67,  -51,   81,  -33,  -64,   77,  -59,   97,   99,\\n          -54,   -6,  -48,  -62,  -96,   19,  -23,   64,   45,  -45,\\n           -5,   64,   97,  -49,  -10, -100,    7,   -1,  -80,   33,\\n           80,   -8,   98,   -5,  -84,  -34,   85,   49,  -21,   -5,\\n           46,   14,   -5,   11,   97,   91,  -79,   37,  -16,  -52,\\n          -99,   81,  -59,   74,   94,   88,   90,  -37,   52,   -5,\\n          -15,   -3,    4,  -39,   31,   68,   58,   85,  -65,  -87,\\n          -36,  -85,  -54,   34,   94,  -72,  -74,   35,   73,   34,\\n          -46,  100,   87,   76,  -17,   42,  -87,  -39,   -5,   21,\\n           43,   41,   94,  -91,  -91,  -95,   57,  -45,  -45]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_3/Folder_77/tests58_77_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  41,   65,   59,  -60,   12,   77,   14,  -61,  -28,  -81,\\n          -89,   88,  -49, -100,   47,   13,   48,   -1,    8,   23,\\n           94,    6,  -25,   90,  -15,   87,   57,  -76,   56,  -54,\\n           23,   53,   19,  -13,   96,  -75,   30,  -85,   63,   40,\\n            6,  -29,   81,   64,  -58,   -3,   32,  -91,  -81,   70,\\n           69,  -74,   34,   -5,  -41,   59,  -61,  -92,   31,  -60,\\n          -36,  -18,   92,   88,  -79,  -71,  -50,   71,   42,  -76,\\n           66,   -3,  -64,  -19,  -69,    6,  -71,  -48,  -27,   55,\\n          -15,   67,  -51,   81,  -33,  -64,   77,  -59,   97,   99,\\n          -54,   -6,  -48,  -62,  -96,   19,  -23,   64,   45,  -45,\\n           -5,   64,   97,  -49,  -10, -100,    7,   -1,  -80,   33,\\n           80,   -8,   98,   -5,  -84,  -34,   85,   49,  -21,   -5,\\n           46,   14,   -5,   11,   97,   91,  -79,   37,  -16,  -52,\\n          -99,   81,  -59,   74,   94,   88,   90,  -37,   52,   -5,\\n          -15,   -3,    4,  -39,   31,   68,   58,   85,  -65,  -87,\\n          -36,  -85,  -54,   34,   94,  -72,  -74,   35,   73,   34,\\n          -46,  100,   87,   76,  -17,   42,  -87,  -39,   -5,   21,\\n           43,   41,   94,  -91,  -91,  -95,   57,  -45,  -45]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_3/Folder_77/tests58_77_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_3/Folder_77/tests58_77_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,   65,   59,  -60,   12,   77,   14,  -61,  -28,  -81,\\n          -89,   88,  -49, -100,   47,   13,   48,   -1,    8,   23,\\n           94,    6,  -25,   90,  -15,   87,   57,  -76,   56,  -54,\\n           23,   53,   19,  -13,   96,  -75,   30,  -85,   63,   40,\\n            6,  -29,   81,   64,  -58,   -3,   32,  -91,  -81,   70,\\n           69,  -74,   34,   -5,  -41,   59,  -61,  -92,   31,  -60,\\n          -36,  -18,   92,   88,  -79,  -71,  -50,   71,   42,  -76,\\n           66,   -3,  -64,  -19,  -69,    6,  -71,  -48,  -27,   55,\\n          -15,   67,  -51,   81,  -33,  -64,   77,  -59,   97,   99,\\n          -54,   -6,  -48,  -62,  -96,   19,  -23,   64,   45,  -45,\\n           -5,   64,   97,  -49,  -10, -100,    7,   -1,  -80,   33,\\n           80,   -8,   98,   -5,  -84,  -34,   85,   49,  -21,   -5,\\n           46,   14,   -5,   11,   97,   91,  -79,   37,  -16,  -52,\\n          -99,   81,  -59,   74,   94,   88,   90,  -37,   52,   -5,\\n          -15,   -3,    4,  -39,   31,   68,   58,   85,  -65,  -87,\\n          -36,  -85,  -54,   34,   94,  -72,  -74,   35,   73,   34,\\n          -46,  100,   87,   76,  -17,   42,  -87,  -39,   -5,   21,\\n           43,   41,   94,  -91,  -91,  -95,   57,  -45,  -45]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.8550413846969604, "start": 1738462173.8713481, "stop": 1738462174.7263901, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8d0b8780f3c5433a98843bd30ce67a52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_3.py::test_matrix_of_having_179_integers", "location": ["tests58_77_3.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_3.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010026618838310242, "start": 1738462174.737473, "stop": 1738462174.7375739, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8d0b8780f3c5433a98843bd30ce67a52", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
