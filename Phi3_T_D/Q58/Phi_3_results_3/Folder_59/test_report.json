{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_3.py::test_matrix_of_one_integer", "location": ["tests58_59_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00038873404264450073, "start": 1738462134.3208146, "stop": 1738462134.321204, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "32fe447bb90d4b188d6ad1dd68822f77", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_one_integer", "location": ["tests58_59_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017477013170719147, "start": 1738462134.3217254, "stop": 1738462134.3219008, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "32fe447bb90d4b188d6ad1dd68822f77", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_one_integer", "location": ["tests58_59_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.392147719860077e-05, "start": 1738462134.3222175, "stop": 1738462134.3223016, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "32fe447bb90d4b188d6ad1dd68822f77", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_having_76_integers", "location": ["tests58_59_3.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013143103569746017, "start": 1738462134.3236399, "stop": 1738462134.3237717, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "32fe447bb90d4b188d6ad1dd68822f77", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_having_76_integers", "location": ["tests58_59_3.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -5,   19],\\n        [ -36,   15],\\n        [  38,  -89],\\n        [  27,   66],\\n        [ -50,   92],\\n        [ -56,  -68],\\n        [  19,  -28],\\n        [ -57,  -99],\\n        [   4,  -70],\\n        [ -58,   32],\\n        [ -45,   18],\\n        [  93,   95],\\n        [  71,   53],\\n        [  10,  -65],\\n        [ -32,  -87],\\n        [  17,   47],\\n        [  96, -100],\\n        [  36,   86],\\n        [  57,   49],\\n        [  24,  -82],\\n        [ -45,   65],\\n        [ -66,   85],\\n        [ -43,   33],\\n        [   2,   90],\\n        [  98,  -44],\\n        [  25,   19],\\n        [ -24,   69],\\n        [  60,   54],\\n        [ -15,   69],\\n        [  47,  -14],\\n        [  28,   -6],\\n        [ -16,   67],\\n        [  -5,  -21],\\n        [ -12,  -75],\\n        [  46,  -11],\\n        [ -20,  -84],\\n        [ -73,   60],\\n        [  13,   54]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -5,   19],\\n        [ -36,   15],\\n        [  38,  -89],\\n        [  27,   66],\\n        [ -50,   92],\\n        [ -56,  -68],\\n        [  19,  -28],\\n        [ -57,  -99],\\n        [   4,  -70],\\n        [ -58,   32],\\n        [ -45,   18],\\n        [  93,   95],\\n        [  71,   53],\\n        [  10,  -65],\\n        [ -32,  -87],\\n        [  17,   47],\\n        [  96, -100],\\n        [  36,   86],\\n        [  57,   49],\\n        [  24,  -82],\\n        [ -45,   65],\\n        [ -66,   85],\\n        [ -43,   33],\\n        [   2,   90],\\n        [  98,  -44],\\n        [  25,   19],\\n        [ -24,   69],\\n        [  60,   54],\\n        [ -15,   69],\\n        [  47,  -14],\\n        [  28,   -6],\\n        [ -16,   67],\\n        [  -5,  -21],\\n        [ -12,  -75],\\n        [  46,  -11],\\n        [ -20,  -84],\\n        [ -73,   60],\\n        [  13,   54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  -5,   19],\\n        [ -36,   15],\\n        [  38,  -89],\\n        [  27,   66],\\n        [ -50,   92],\\n        [ -56,  -68],\\n        [  19,  -28],\\n        [ -57,  -99],\\n        [   4,  -70],\\n        [ -58,   32],\\n        [ -45,   18],\\n        [  93,   95],\\n        [  71,   53],\\n        [  10,  -65],\\n        [ -32,  -87],\\n        [  17,   47],\\n        [  96, -100],\\n        [  36,   86],\\n        [  57,   49],\\n        [  24,  -82],\\n        [ -45,   65],\\n        [ -66,   85],\\n        [ -43,   33],\\n        [   2,   90],\\n        [  98,  -44],\\n        [  25,   19],\\n        [ -24,   69],\\n        [  60,   54],\\n        [ -15,   69],\\n        [  47,  -14],\\n        [  28,   -6],\\n        [ -16,   67],\\n        [  -5,  -21],\\n        [ -12,  -75],\\n        [  46,  -11],\\n        [ -20,  -84],\\n        [ -73,   60],\\n        [  13,   54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Phi_3_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q58/Phi_3_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -5,   19],\\n        [ -36,   15],\\n        [  38,  -89],\\n        [  27,   66],\\n        [ -50,   92],\\n        [ -56,  -68],\\n        [  19,  -28],\\n        [ -57,  -99],\\n        [   4,  -70],\\n        [ -58,   32],\\n        [ -45,   18],\\n        [  93,   95],\\n        [  71,   53],\\n        [  10,  -65],\\n        [ -32,  -87],\\n        [  17,   47],\\n        [  96, -100],\\n        [  36,   86],\\n        [  57,   49],\\n        [  24,  -82],\\n        [ -45,   65],\\n        [ -66,   85],\\n        [ -43,   33],\\n        [   2,   90],\\n        [  98,  -44],\\n        [  25,   19],\\n        [ -24,   69],\\n        [  60,   54],\\n        [ -15,   69],\\n        [  47,  -14],\\n        [  28,   -6],\\n        [ -16,   67],\\n        [  -5,  -21],\\n        [ -12,  -75],\\n        [  46,  -11],\\n        [ -20,  -84],\\n        [ -73,   60],\\n        [  13,   54]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001335236243903637, "start": 1738462134.3241, "stop": 1738462134.3254359, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "32fe447bb90d4b188d6ad1dd68822f77", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_having_76_integers", "location": ["tests58_59_3.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012129917740821838, "start": 1738462134.356666, "stop": 1738462134.3567882, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "32fe447bb90d4b188d6ad1dd68822f77", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
