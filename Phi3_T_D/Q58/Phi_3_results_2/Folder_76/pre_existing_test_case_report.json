{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,  -93,   59,   -7,  -91,  -87,   -1,  -24,   68,   90,\\n          -74,  -74,  -84,  -69,   15,  -63,  -40,  -99,  -11,   77,\\n          -87,   26,   -1,  -34,    7,  -53,   50,   92,  -16,  -54,\\n          -36,   16,  -27,   19,  -75,   68,   47,   51,   18,  -59,\\n           14,   39,  -19,   -5,  -17, -100,   51,    4,   22,   76,\\n          -56,  -11,   57,   66,  -14,   -9,  -40,   12,  -52,  -85,\\n          -82,  -48,  -38,   23,  -70,    0,   48,   98,   53,   -2,\\n           20,   -8,   45,  -53,  -15,   20,   98,  -45,    4,   28,\\n          -58,   -7,  -13,   55,   44,  -48,   63,  -22,  -95,   83,\\n            6,   31,  -42,  -89,   20,  -82,  -69,  -43,  -79,   71,\\n          -14,   73,  -51,  -59,   43,  -50,   33,  -55,   53,  -84,\\n          -78,  -94,  -87,   93,  -40,   69,    3,   22,  -71,  -17,\\n          -90,  -71,   86,   88,   42,  -12,  -76,  -65,  -38,   48,\\n            7,   92,  -70,  -96,  -72,  -63,    9,   63,  -71,  -92,\\n          -85,  -78,  -65,   52,  -31,   75,  -14,  -62,   87,  -77,\\n           69,   18,   34,   67,   93,   91,   -4,  -85,  -37]]))",
    0.05466
  ]
}