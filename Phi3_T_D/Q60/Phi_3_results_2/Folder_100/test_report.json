{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests60_100_2.py::test_result_size_is_less_than_specified_number", "location": ["tests60_100_2.py", 62, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010038798791356385, "start": 1730306172.0771382, "stop": 1730306172.077239, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw2>"}
{"nodeid": "tests60_100_2.py::test_if_result_is_less_than_equal_to_26", "location": ["tests60_100_2.py", 43, "test_if_result_is_less_than_equal_to_26"], "keywords": {"test_if_result_is_less_than_equal_to_26": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013471199781633914, "start": 1730306172.0772147, "stop": 1730306172.0773497, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_100_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_100_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018554800772108138, "start": 1730306172.077275, "stop": 1730306172.0774612, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_100_2.py::test_result_size_is_less_than_specified_number", "location": ["tests60_100_2.py", 62, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError: invalid literal for int() with base 10: 'rue'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_size_is_less_than_specified_number():", "        input_tuple = tuple([random.randint(1, 1000) for _ in range(26 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/tests60_100_2.py", "lineno": 65, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    truncatable_primes = [p for p in sieve if p and is_left_right_truncatable(p, sieve)]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 24, "message": "in all_left_right_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_left_right_truncatable(prime, sieve):", "        str_prime = str(prime)", "        for i in range(1, len(str_prime)):", ">           if not is_prime(int(str_prime[i:])) or not is_prime(int(str_prime[:i])):", "E           ValueError: invalid literal for int() with base 10: 'rue'"], "reprfuncargs": {"args": [["prime", "True"], ["sieve", "[False, False, True, True, False, True, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_size_is_less_than_specified_number():", "        input_tuple = tuple([random.randint(1, 1000) for _ in range(26 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/tests60_100_2.py", "lineno": 65, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    truncatable_primes = [p for p in sieve if p and is_left_right_truncatable(p, sieve)]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 24, "message": "in all_left_right_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_left_right_truncatable(prime, sieve):", "        str_prime = str(prime)", "        for i in range(1, len(str_prime)):", ">           if not is_prime(int(str_prime[i:])) or not is_prime(int(str_prime[:i])):", "E           ValueError: invalid literal for int() with base 10: 'rue'"], "reprfuncargs": {"args": [["prime", "True"], ["sieve", "[False, False, True, True, False, True, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError: invalid literal for int() with base 10: 'rue'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014774402370676398, "start": 1730306172.077415, "stop": 1730306172.0775628, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw2>"}
{"nodeid": "tests60_100_2.py::test_result_size_is_less_than_specified_number", "location": ["tests60_100_2.py", 62, "test_result_size_is_less_than_specified_number"], "keywords": {"test_result_size_is_less_than_specified_number": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001118200016207993, "start": 1730306172.087386, "stop": 1730306172.0874982, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw2>"}
{"nodeid": "tests60_100_2.py::test_if_result_is_less_than_equal_to_26", "location": ["tests60_100_2.py", 43, "test_if_result_is_less_than_equal_to_26"], "keywords": {"test_if_result_is_less_than_equal_to_26": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError: invalid literal for int() with base 10: 'rue'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_26():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(26 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/tests60_100_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    truncatable_primes = [p for p in sieve if p and is_left_right_truncatable(p, sieve)]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 24, "message": "in all_left_right_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_left_right_truncatable(prime, sieve):", "        str_prime = str(prime)", "        for i in range(1, len(str_prime)):", ">           if not is_prime(int(str_prime[i:])) or not is_prime(int(str_prime[:i])):", "E           ValueError: invalid literal for int() with base 10: 'rue'"], "reprfuncargs": {"args": [["prime", "True"], ["sieve", "[False, False, True, True, False, True, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_equal_to_26():", "        input_tuple = tuple([random.randint(3, 1000) for _ in range(26 + 1)])", ">       output = all_left_right_truncatable_prime(input_tuple)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/tests60_100_2.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    truncatable_primes = [p for p in sieve if p and is_left_right_truncatable(p, sieve)]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 24, "message": "in all_left_right_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_left_right_truncatable(prime, sieve):", "        str_prime = str(prime)", "        for i in range(1, len(str_prime)):", ">           if not is_prime(int(str_prime[i:])) or not is_prime(int(str_prime[:i])):", "E           ValueError: invalid literal for int() with base 10: 'rue'"], "reprfuncargs": {"args": [["prime", "True"], ["sieve", "[False, False, True, True, False, True, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError: invalid literal for int() with base 10: 'rue'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014618301065638661, "start": 1730306172.077549, "stop": 1730306172.0776958, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_100_2.py::test_if_result_is_less_than_equal_to_26", "location": ["tests60_100_2.py", 43, "test_if_result_is_less_than_equal_to_26"], "keywords": {"test_if_result_is_less_than_equal_to_26": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001129260053858161, "start": 1730306172.087386, "stop": 1730306172.0874996, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw1>"}
{"nodeid": "tests60_100_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_100_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError: invalid literal for int() with base 10: 'rue'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (26 + 1)", "            if i < 2:", "                assert not all_left_right_truncatable_prime(input_tuple)", "            elif i == 2:", ">               assert all_left_right_truncatable_prime(input_tuple) == [2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/tests60_100_2.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    truncatable_primes = [p for p in sieve if p and is_left_right_truncatable(p, sieve)]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 24, "message": "in all_left_right_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_left_right_truncatable(prime, sieve):", "        str_prime = str(prime)", "        for i in range(1, len(str_prime)):", ">           if not is_prime(int(str_prime[i:])) or not is_prime(int(str_prime[:i])):", "E           ValueError: invalid literal for int() with base 10: 'rue'"], "reprfuncargs": {"args": [["prime", "True"], ["sieve", "[False, False, True]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_tuple_of_all_one_digit_nums():", "        for i in range(1,11):", "            input_tuple = (i,) * (26 + 1)", "            if i < 2:", "                assert not all_left_right_truncatable_prime(input_tuple)", "            elif i == 2:", ">               assert all_left_right_truncatable_prime(input_tuple) == [2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/tests60_100_2.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    truncatable_primes = [p for p in sieve if p and is_left_right_truncatable(p, sieve)]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 24, "message": "in all_left_right_truncatable_prime"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_left_right_truncatable(prime, sieve):", "        str_prime = str(prime)", "        for i in range(1, len(str_prime)):", ">           if not is_prime(int(str_prime[i:])) or not is_prime(int(str_prime[:i])):", "E           ValueError: invalid literal for int() with base 10: 'rue'"], "reprfuncargs": {"args": [["prime", "True"], ["sieve", "[False, False, True]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Phi3_T_D/Q60/Phi_3_results_2/Folder_100/generated_answer.py", "lineno": 14, "message": "ValueError: invalid literal for int() with base 10: 'rue'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017949400353245437, "start": 1730306172.0777395, "stop": 1730306172.0779197, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw0>"}
{"nodeid": "tests60_100_2.py::test_tuple_of_all_one_digit_nums", "location": ["tests60_100_2.py", 4, "test_tuple_of_all_one_digit_nums"], "keywords": {"test_tuple_of_all_one_digit_nums": 1, "tests60_100_2.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010573299368843436, "start": 1730306172.0880299, "stop": 1730306172.0881362, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b143353287d2430f946d1c2150d574e3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
