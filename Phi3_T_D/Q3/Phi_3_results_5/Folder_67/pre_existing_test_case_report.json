{
  "parameter(s)": [
    22,
    50
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00016
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [44, 46, 48, 50, 52, 54, ...] == [46, 48, 50, 52, 54, 56, ...]\n  At index 0 diff: 44 != 46\n  Left contains one more item: 102\n  Full diff:\n    [\n  +  44,\n     46,\n     48,...\n  \n  ...Full output truncated (28 lines hidden), use '-vv' to show",
    0.00066
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [22, 23, 24, 25, 26, 27, ...] == [23, 24, 25, 26, 27, 28, ...]\n  At index 0 diff: 22 != 23\n  Left contains one more item: 51\n  Full diff:\n    [\n  +  22,\n     23,\n     24,...\n  \n  ...Full output truncated (28 lines hidden), use '-vv' to show",
    0.00062
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 30 == ((50 - 22) + 1)\n +  where 30 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00027
  ]
}