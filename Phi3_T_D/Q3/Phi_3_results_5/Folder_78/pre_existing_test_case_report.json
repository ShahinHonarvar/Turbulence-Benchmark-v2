{
  "parameter(s)": [
    43,
    51
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00021
  ],
  "test_range_size": [
    "passed",
    "",
    0.00019
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00012
  ],
  "test_large_range": [
    "failed",
    "assert [43, 44, 45, 46, 47, 48, ...] == [44, 45, 46, 47, 48, 49, ...]\n  At index 0 diff: 43 != 44\n  Left contains one more item: 52\n  Full diff:\n  - [44, 45, 46, 47, 48, 49, 50, 51, 52]\n  + [43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n  ?  ++++",
    0.0005
  ],
  "test_even_range": [
    "failed",
    "assert [86, 88, 90, 92, 94, 96, ...] == [88, 90, 92, 94, 96, 98, ...]\n  At index 0 diff: 86 != 88\n  Left contains one more item: 104\n  Full diff:\n  - [88, 90, 92, 94, 96, 98, 100, 102, 104]\n  + [86, 88, 90, 92, 94, 96, 98, 100, 102, 104]\n  ?  ++++",
    0.00061
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 10 == ((51 - 43) + 1)\n +  where 10 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00028
  ]
}