{
  "parameter(s)": [
    29,
    79
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [58, 60, 62, 64, 66, 68, ...] == [60, 62, 64, 66, 68, 70, ...]\n  At index 0 diff: 58 != 60\n  Left contains one more item: 160\n  Full diff:\n    [\n  +  58,\n     60,\n     62,...\n  \n  ...Full output truncated (50 lines hidden), use '-vv' to show",
    0.00048
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [29, 30, 31, 32, 33, 34, ...] == [30, 31, 32, 33, 34, 35, ...]\n  At index 0 diff: 29 != 30\n  Left contains one more item: 80\n  Full diff:\n    [\n  +  29,\n     30,\n     31,...\n  \n  ...Full output truncated (50 lines hidden), use '-vv' to show",
    0.00054
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 52 == ((79 - 29) + 1)\n +  where 52 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}