{
  "parameter(s)": [
    3,
    5
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "assert [3, 4, 5, 6, 7] == [4, 5, 6]\n  At index 0 diff: 3 != 4\n  Left contains 2 more items, first extra item: 6\n  Full diff:\n  - [4, 5, 6]\n  + [3, 4, 5, 6, 7]\n  ?  +++       +++",
    0.0004
  ],
  "test_even_range": [
    "failed",
    "assert [6, 8, 10, 12] == [8, 10, 12]\n  At index 0 diff: 6 != 8\n  Left contains one more item: 12\n  Full diff:\n  - [8, 10, 12]\n  + [6, 8, 10, 12]\n  ?  +++",
    0.00034
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 5 == ((5 - 3) + 1)\n +  where 5 = sum([1, 1, 1, 1, 1])\n +    where [1, 1, 1, 1, 1] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}