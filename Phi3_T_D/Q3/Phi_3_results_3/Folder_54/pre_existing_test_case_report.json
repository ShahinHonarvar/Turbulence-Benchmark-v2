{
  "parameter(s)": [
    34,
    55
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00024
  ],
  "test_range_size": [
    "passed",
    "",
    0.00016
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00012
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [34, 35, 36, 37, 38, 39, ...] == [35, 36, 37, 38, 39, 40, ...]\n  At index 0 diff: 34 != 35\n  Left contains one more item: 56\n  Full diff:\n    [\n  +  34,\n     35,\n     36,...\n  \n  ...Full output truncated (21 lines hidden), use '-vv' to show",
    0.00048
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [68, 70, 72, 74, 76, 78, ...] == [70, 72, 74, 76, 78, 80, ...]\n  At index 0 diff: 68 != 70\n  Left contains one more item: 112\n  Full diff:\n    [\n  +  68,\n     70,\n     72,...\n  \n  ...Full output truncated (21 lines hidden), use '-vv' to show",
    0.00053
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 23 == ((55 - 34) + 1)\n +  where 23 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00036
  ]
}