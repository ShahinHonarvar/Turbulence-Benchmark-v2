{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011010299203917384, "start": 1738696263.1509814, "stop": 1738696263.1510918, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dccfab3cf2874280b87a045f1718e682", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013084200327284634, "start": 1738696263.1512444, "stop": 1738696263.1513753, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dccfab3cf2874280b87a045f1718e682", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.924399349372834e-05, "start": 1738696263.151639, "stop": 1738696263.1517086, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dccfab3cf2874280b87a045f1718e682", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.959999493323267e-05, "start": 1738696263.1531603, "stop": 1738696263.1532402, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dccfab3cf2874280b87a045f1718e682", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Llama3_450_T_D/Q58/Llama_3_405_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 2 == 1\n +  where 2 = submatrix_with_n_numbers(matrix([[-90,  91],\\n        [ 83, -28],\\n        [-48,  77],\\n        [-74,  86],\\n        [ 53,  31],\\n        [ 26,  81],\\n        [-80, -72],\\n        [ 57,  80],\\n        [ 76,  82],\\n        [-17, -69],\\n        [-85, -20],\\n        [  6,  18],\\n        [-99,  17],\\n        [-19,  -3],\\n        [-52,  31],\\n        [ 21,  61],\\n        [-34, -14],\\n        [ 28,  61],\\n        [-97, -15],\\n        [ -4,  74],\\n        [ -2,  70],\\n        [ 95, -58],\\n        [ 23, -70],\\n        [-13, -51],\\n        [ 66,  83],\\n        [ 77,  21],\\n        [-26,  -7],\\n        [ 57,  10],\\n        [  2,  52],\\n        [-44, -33],\\n        [-54, -93],\\n        [ 30, -88],\\n        [-77, -63],\\n        [ 19,  11],\\n        [-30,  41],\\n        [-95,  34],\\n        [-25,  79],\\n        [-30,  79],\\n        [ 74,  69],\\n        [ 39, -55],\\n        [ 78,  76],\\n        [-70, -98],\\n        [ 62, -97],\\n        [ 41,   0],\\n        [-31,  29],\\n        [-61,  62],\\n        [-22, -73],\\n        [ 94,  75],\\n        [-73,  95],\\n        [ 32,  -1],\\n        [-27,  37],\\n        [-53,  97],\\n        [-75, -19],\\n        [  9,  17],\\n        [-23, -16],\\n        [ 99,  86],\\n        [  6, -37],\\n        [-49, -18],\\n        [ -6,  30],\\n        [ 73,   2],\\n        [-41, -10],\\n        [-51, -60],\\n        [ 82,   3],\\n        [  3, -41],\\n        [-87, -17],\\n        [-94,  64],\\n        [-95,   2],\\n        [-55,   4],\\n        [-58,  42],\\n        [ 43,  79],\\n        [ 22, -80],\\n        [-71,  89],\\n        [ 22,   0],\\n        [ 68, -94],\\n        [ 79, -84],\\n        [ 30,  85],\\n        [ 31,  65],\\n        [ 19,  22],\\n        [ 71, -16],\\n        [-35,  -9],\\n        [-66, -12],\\n        [ -3, -32],\\n        [-91,  93],\\n        [ 88, -56],\\n        [-25,  10],\\n        [ 90,  87],\\n        [-90, -35],\\n        [ 28, -52]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 2 == 1", "E        +  where 2 = submatrix_with_n_numbers(matrix([[-90,  91],\\n        [ 83, -28],\\n        [-48,  77],\\n        [-74,  86],\\n        [ 53,  31],\\n        [ 26,  81],\\n        [-80, -72],\\n        [ 57,  80],\\n        [ 76,  82],\\n        [-17, -69],\\n        [-85, -20],\\n        [  6,  18],\\n        [-99,  17],\\n        [-19,  -3],\\n        [-52,  31],\\n        [ 21,  61],\\n        [-34, -14],\\n        [ 28,  61],\\n        [-97, -15],\\n        [ -4,  74],\\n        [ -2,  70],\\n        [ 95, -58],\\n        [ 23, -70],\\n        [-13, -51],\\n        [ 66,  83],\\n        [ 77,  21],\\n        [-26,  -7],\\n        [ 57,  10],\\n        [  2,  52],\\n        [-44, -33],\\n        [-54, -93],\\n        [ 30, -88],\\n        [-77, -63],\\n        [ 19,  11],\\n        [-30,  41],\\n        [-95,  34],\\n        [-25,  79],\\n        [-30,  79],\\n        [ 74,  69],\\n        [ 39, -55],\\n        [ 78,  76],\\n        [-70, -98],\\n        [ 62, -97],\\n        [ 41,   0],\\n        [-31,  29],\\n        [-61,  62],\\n        [-22, -73],\\n        [ 94,  75],\\n        [-73,  95],\\n        [ 32,  -1],\\n        [-27,  37],\\n        [-53,  97],\\n        [-75, -19],\\n        [  9,  17],\\n        [-23, -16],\\n        [ 99,  86],\\n        [  6, -37],\\n        [-49, -18],\\n        [ -6,  30],\\n        [ 73,   2],\\n        [-41, -10],\\n        [-51, -60],\\n        [ 82,   3],\\n        [  3, -41],\\n        [-87, -17],\\n        [-94,  64],\\n        [-95,   2],\\n        [-55,   4],\\n        [-58,  42],\\n        [ 43,  79],\\n        [ 22, -80],\\n        [-71,  89],\\n        [ 22,   0],\\n        [ 68, -94],\\n        [ 79, -84],\\n        [ 30,  85],\\n        [ 31,  65],\\n        [ 19,  22],\\n        [ 71, -16],\\n        [-35,  -9],\\n        [-66, -12],\\n        [ -3, -32],\\n        [-91,  93],\\n        [ 88, -56],\\n        [-25,  10],\\n        [ 90,  87],\\n        [-90, -35],\\n        [ 28, -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Llama_3_405_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 2 == 1", "E        +  where 2 = submatrix_with_n_numbers(matrix([[-90,  91],\\n        [ 83, -28],\\n        [-48,  77],\\n        [-74,  86],\\n        [ 53,  31],\\n        [ 26,  81],\\n        [-80, -72],\\n        [ 57,  80],\\n        [ 76,  82],\\n        [-17, -69],\\n        [-85, -20],\\n        [  6,  18],\\n        [-99,  17],\\n        [-19,  -3],\\n        [-52,  31],\\n        [ 21,  61],\\n        [-34, -14],\\n        [ 28,  61],\\n        [-97, -15],\\n        [ -4,  74],\\n        [ -2,  70],\\n        [ 95, -58],\\n        [ 23, -70],\\n        [-13, -51],\\n        [ 66,  83],\\n        [ 77,  21],\\n        [-26,  -7],\\n        [ 57,  10],\\n        [  2,  52],\\n        [-44, -33],\\n        [-54, -93],\\n        [ 30, -88],\\n        [-77, -63],\\n        [ 19,  11],\\n        [-30,  41],\\n        [-95,  34],\\n        [-25,  79],\\n        [-30,  79],\\n        [ 74,  69],\\n        [ 39, -55],\\n        [ 78,  76],\\n        [-70, -98],\\n        [ 62, -97],\\n        [ 41,   0],\\n        [-31,  29],\\n        [-61,  62],\\n        [-22, -73],\\n        [ 94,  75],\\n        [-73,  95],\\n        [ 32,  -1],\\n        [-27,  37],\\n        [-53,  97],\\n        [-75, -19],\\n        [  9,  17],\\n        [-23, -16],\\n        [ 99,  86],\\n        [  6, -37],\\n        [-49, -18],\\n        [ -6,  30],\\n        [ 73,   2],\\n        [-41, -10],\\n        [-51, -60],\\n        [ 82,   3],\\n        [  3, -41],\\n        [-87, -17],\\n        [-94,  64],\\n        [-95,   2],\\n        [-55,   4],\\n        [-58,  42],\\n        [ 43,  79],\\n        [ 22, -80],\\n        [-71,  89],\\n        [ 22,   0],\\n        [ 68, -94],\\n        [ 79, -84],\\n        [ 30,  85],\\n        [ 31,  65],\\n        [ 19,  22],\\n        [ 71, -16],\\n        [-35,  -9],\\n        [-66, -12],\\n        [ -3, -32],\\n        [-91,  93],\\n        [ 88, -56],\\n        [-25,  10],\\n        [ 90,  87],\\n        [-90, -35],\\n        [ 28, -52]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/Llama_3_405_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Llama3_450_T_D/Q58/Llama_3_405_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 2 == 1\n +  where 2 = submatrix_with_n_numbers(matrix([[-90,  91],\\n        [ 83, -28],\\n        [-48,  77],\\n        [-74,  86],\\n        [ 53,  31],\\n        [ 26,  81],\\n        [-80, -72],\\n        [ 57,  80],\\n        [ 76,  82],\\n        [-17, -69],\\n        [-85, -20],\\n        [  6,  18],\\n        [-99,  17],\\n        [-19,  -3],\\n        [-52,  31],\\n        [ 21,  61],\\n        [-34, -14],\\n        [ 28,  61],\\n        [-97, -15],\\n        [ -4,  74],\\n        [ -2,  70],\\n        [ 95, -58],\\n        [ 23, -70],\\n        [-13, -51],\\n        [ 66,  83],\\n        [ 77,  21],\\n        [-26,  -7],\\n        [ 57,  10],\\n        [  2,  52],\\n        [-44, -33],\\n        [-54, -93],\\n        [ 30, -88],\\n        [-77, -63],\\n        [ 19,  11],\\n        [-30,  41],\\n        [-95,  34],\\n        [-25,  79],\\n        [-30,  79],\\n        [ 74,  69],\\n        [ 39, -55],\\n        [ 78,  76],\\n        [-70, -98],\\n        [ 62, -97],\\n        [ 41,   0],\\n        [-31,  29],\\n        [-61,  62],\\n        [-22, -73],\\n        [ 94,  75],\\n        [-73,  95],\\n        [ 32,  -1],\\n        [-27,  37],\\n        [-53,  97],\\n        [-75, -19],\\n        [  9,  17],\\n        [-23, -16],\\n        [ 99,  86],\\n        [  6, -37],\\n        [-49, -18],\\n        [ -6,  30],\\n        [ 73,   2],\\n        [-41, -10],\\n        [-51, -60],\\n        [ 82,   3],\\n        [  3, -41],\\n        [-87, -17],\\n        [-94,  64],\\n        [-95,   2],\\n        [-55,   4],\\n        [-58,  42],\\n        [ 43,  79],\\n        [ 22, -80],\\n        [-71,  89],\\n        [ 22,   0],\\n        [ 68, -94],\\n        [ 79, -84],\\n        [ 30,  85],\\n        [ 31,  65],\\n        [ 19,  22],\\n        [ 71, -16],\\n        [-35,  -9],\\n        [-66, -12],\\n        [ -3, -32],\\n        [-91,  93],\\n        [ 88, -56],\\n        [-25,  10],\\n        [ 90,  87],\\n        [-90, -35],\\n        [ 28, -52]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010143600084120408, "start": 1738696263.1533368, "stop": 1738696263.1543517, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dccfab3cf2874280b87a045f1718e682", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011589199129957706, "start": 1738696263.1724844, "stop": 1738696263.1726007, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dccfab3cf2874280b87a045f1718e682", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
