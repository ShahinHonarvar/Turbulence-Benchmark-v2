{
  "id": "cmpl-894a2470732d4342b5cbb245766840ba",
  "object": "chat.completion",
  "created": 1725691324,
  "model": "Meta-Llama-3-405B-Instruct",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "```\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    count = 0\n    rows, cols = matrix.shape\n    target_sum = 175\n\n    for row in range(rows):\n        for col in range(cols):\n            curr_sum = 0\n            for sub_row in range(row, rows):\n                curr_sum += np.sum(matrix[sub_row, col:])\n                if curr_sum == target_sum:\n                    count += 1\n                elif curr_sum > target_sum:\n                    break\n            for sub_col in range(col, cols):\n                curr_sum = 0\n                for sub_row in range(row, rows):\n                    curr_sum += matrix[sub_row, sub_col]\n                    if curr_sum == target_sum:\n                        count += 1\n                    elif curr_sum > target_sum:\n                        break\n\n    for size in range(2, min(rows, cols) + 1):\n        for row in range(rows - size + 1):\n            for col in range(cols - size + 1):\n                submat = matrix[row:row + size, col:col + size]\n                if np.sum(submat) == target_sum:\n                    count += 1\n\n    return count\n```",
        "tool_calls": []
      },
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 128,
    "total_tokens": 376,
    "completion_tokens": 248
  }
}