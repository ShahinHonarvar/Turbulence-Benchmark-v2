{
  "parameter(s)": [
    20,
    35
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00014
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    9e-05
  ],
  "test_large_range": [
    "failed",
    "assert [20, 21, 22, 23, 24, 25, ...] == [22, 23, 24, 25, 26, 27, ...]\n  At index 0 diff: 20 != 22\n  Left contains one more item: 34\n  Full diff:\n  - [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]\n  ?                                                    ----\n  + [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]\n  ?  ++++++++",
    0.00092
  ],
  "test_even_range": [
    "failed",
    "assert [20, 22, 24, 26, 28, 30, ...] == [44, 46, 48, 50, 52, 54, ...]\n  At index 0 diff: 20 != 44\n  Right contains 6 more items, first extra item: 60\n  Full diff:\n  - [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70]\n  + [20, 22, 24, 26, 28, 30, 32, 34]",
    0.00048
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((35 - 20) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00023
  ]
}