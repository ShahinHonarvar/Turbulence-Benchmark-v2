{
  "parameter(s)": [
    28,
    53
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00019
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [28, 30, 32, 34, 36, 38, ...] == [60, 62, 64, 66, 68, 70, ...]\n  At index 0 diff: 28 != 60\n  Right contains 11 more items, first extra item: 86\n  Full diff:\n    [\n  -  60,\n  -  62,\n  ?  -...\n  \n  ...Full output truncated (61 lines hidden), use '-vv' to show",
    0.00283
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [28, 29, 30, 31, 32, 33, ...] == [30, 31, 32, 33, 34, 35, ...]\n  At index 0 diff: 28 != 30\n  Left contains 2 more items, first extra item: 52\n  Full diff:\n    [\n  +  28,\n  +  29,\n     30,...\n  \n  ...Full output truncated (24 lines hidden), use '-vv' to show",
    0.00072
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((53 - 28) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00034
  ]
}