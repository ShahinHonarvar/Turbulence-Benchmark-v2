{
  "parameter(s)": [
    28,
    49
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00013
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "assert [28, 30, 32, 34, 36, 38, ...] == [60, 62, 64, 66, 68, 70, ...]\n  At index 0 diff: 28 != 60\n  Right contains 9 more items, first extra item: 82\n  Full diff:\n  - [60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98]\n  + [28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48]",
    0.00039
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [28, 29, 30, 31, 32, 33, ...] == [30, 31, 32, 33, 34, 35, ...]\n  At index 0 diff: 28 != 30\n  Left contains one more item: 48\n  Full diff:\n    [\n  +  28,\n  +  29,\n     30,...\n  \n  ...Full output truncated (20 lines hidden), use '-vv' to show",
    0.0007
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((49 - 28) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00023
  ]
}