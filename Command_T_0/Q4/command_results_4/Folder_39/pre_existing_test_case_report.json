{
  "parameter(s)": [
    43,
    99
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [43, 44, 45, 46, 47, 48, ...] == [45, 46, 47, 48, 49, 50, ...]\n  At index 0 diff: 43 != 45\n  Left contains one more item: 98\n  Full diff:\n    [\n  +  43,\n  +  44,\n     45,...\n  \n  ...Full output truncated (55 lines hidden), use '-vv' to show",
    0.0009
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [44, 46, 48, 50, 52, 54, ...] == [90, 92, 94, 96, 98, 100, ...]\n  At index 0 diff: 44 != 90\n  Right contains 27 more items, first extra item: 146\n  Full diff:\n    [\n  +  44,\n  +  46,\n  +  48,...\n  \n  ...Full output truncated (76 lines hidden), use '-vv' to show",
    0.00083
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((99 - 43) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00021
  ]
}