{
  "parameter(s)": [
    38,
    52
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [38, 40, 42, 44, 46, 48, ...] == [80, 82, 84, 86, 88, 90, ...]\n  At index 0 diff: 38 != 80\n  Right contains 5 more items, first extra item: 96\n  Full diff:\n  - [80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104]\n  + [38, 40, 42, 44, 46, 48, 50, 52]",
    0.00039
  ],
  "test_large_range": [
    "failed",
    "assert [38, 39, 40, 41, 42, 43, ...] == [40, 41, 42, 43, 44, 45, ...]\n  At index 0 diff: 38 != 40\n  Left contains 2 more items, first extra item: 51\n  Full diff:\n  - [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n  + [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n  ?  ++++++++",
    0.00082
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((52 - 38) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}