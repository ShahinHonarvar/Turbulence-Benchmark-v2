{
  "parameter(s)": [
    30,
    200
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00013
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [30, 32, 34, 36, 38, 40, ...] == [64, 66, 68, 70, 72, 74, ...]\n  At index 0 diff: 30 != 64\n  Right contains 84 more items, first extra item: 234\n  Full diff:\n    [\n  +  30,\n  +  32,\n  +  34,...\n  \n  ...Full output truncated (184 lines hidden), use '-vv' to show",
    0.00084
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [30, 31, 32, 33, 34, 35, ...] == [32, 33, 34, 35, 36, 37, ...]\n  At index 0 diff: 30 != 32\n  Left contains one more item: 199\n  Full diff:\n    [\n  +  30,\n  +  31,\n     32,...\n  \n  ...Full output truncated (169 lines hidden), use '-vv' to show",
    0.00144
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((200 - 30) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00053
  ]
}