{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests43_42_4.py::test_list_of_primes", "location": ["tests43_42_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012257799971848726, "start": 1731122337.2965047, "stop": 1731122337.2966278, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_42_4.py::test_list_of_non_prime_nums", "location": ["tests43_42_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012242095544934273, "start": 1731122337.2965627, "stop": 1731122337.2966852, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_list_of_non_prime_nums", "location": ["tests43_42_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002082010032609105, "start": 1731122337.2968814, "stop": 1731122337.2970898, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_list_of_non_prime_nums", "location": ["tests43_42_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.17599580436945e-05, "start": 1731122337.2973194, "stop": 1731122337.2973816, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_prime_nums_are_odd", "location": ["tests43_42_4.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017202598974108696, "start": 1731122337.2966878, "stop": 1731122337.2968605, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_list_of_negative_nums", "location": ["tests43_42_4.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.1578000895679e-05, "start": 1731122337.297655, "stop": 1731122337.2977166, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_prime_nums_are_odd", "location": ["tests43_42_4.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001816808944568038, "start": 1731122337.2971358, "stop": 1731122337.2973182, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_prime_nums_are_odd", "location": ["tests43_42_4.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012201897334307432, "start": 1731122337.2976804, "stop": 1731122337.297803, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_result_order", "location": ["tests43_42_4.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001224549487233162, "start": 1731122337.298309, "stop": 1731122337.298432, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_list_of_primes", "location": ["tests43_42_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 2\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n  ?                                      ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(43 * 10)]", "            expected_result = list_of_primes[30:43 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E             Right contains one more item: 2", "E             Full diff:", "E             - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "E             ?                                      ---", "E             + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(43 * 10)]", "            expected_result = list_of_primes[30:43 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E             Right contains one more item: 2", "E             Full diff:", "E             - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "E             ?                                      ---", "E             + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 2\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n  ?                                      ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004923139931634068, "start": 1731122337.2968173, "stop": 1731122337.2973099, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_42_4.py::test_list_of_primes", "location": ["tests43_42_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.850901551544666e-05, "start": 1731122337.30569, "stop": 1731122337.3057892, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_42_4.py::test_list_of_negative_nums", "location": ["tests43_42_4.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 4, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(43 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for i in range(30, 43):", ">           if all((nums[i] % k != 0 for k in range(2, int(nums[i] ** 0.5) + 1))):", "E           TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["nums", "[-1, -2, -3, -4, -5, -6, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 4, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(43 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for i in range(30, 43):", ">           if all((nums[i] % k != 0 for k in range(2, int(nums[i] ** 0.5) + 1))):", "E           TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["nums", "[-1, -2, -3, -4, -5, -6, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 4, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 4, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 9.739701636135578e-05, "start": 1731122337.2977908, "stop": 1731122337.2978885, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_list_of_negative_nums", "location": ["tests43_42_4.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.446094579994678e-05, "start": 1731122337.3064194, "stop": 1731122337.3065042, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_result_order", "location": ["tests43_42_4.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 3\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]\n  ?                                       ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 30 == 43:", "            initial_list = [i for i in range(1, (43 + 1) * 10)]", "            initial_list[30] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 43 - 30 + 1", "            prefix = random.choices(range(1, 1000), k=30)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E                 Right contains one more item: 3", "E                 Full diff:", "E                 - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]", "E                 ?                                       ---", "E                 + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 30 == 43:", "            initial_list = [i for i in range(1, (43 + 1) * 10)]", "            initial_list[30] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 43 - 30 + 1", "            prefix = random.choices(range(1, 1000), k=30)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E                 Right contains one more item: 3", "E                 Full diff:", "E                 - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]", "E                 ?                                       ---", "E                 + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 3\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]\n  ?                                       ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007655509980395436, "start": 1731122337.2985585, "stop": 1731122337.2993245, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_result_order", "location": ["tests43_42_4.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.590701665729284e-05, "start": 1731122337.3124695, "stop": 1731122337.312566, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "15e58aa673c14605b9f79cdeb223b11b", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
