{
  "parameter(s)": [
    12,
    92
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00016
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00012
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [12, 14, 16, 18, 20, 22, ...] == [26, 28, 30, 32, 34, 36, ...]\n  At index 0 diff: 12 != 26\n  Right contains 41 more items, first extra item: 106\n  Full diff:\n    [\n  +  12,\n  +  14,\n  +  16,...\n  \n  ...Full output truncated (86 lines hidden), use '-vv' to show",
    0.00065
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [12, 13, 14, 15, 16, 17, ...] == [13, 14, 15, 16, 17, 18, ...]\n  At index 0 diff: 12 != 13\n  Right contains one more item: 93\n  Full diff:\n    [\n  +  12,\n     13,\n     14,...\n  \n  ...Full output truncated (80 lines hidden), use '-vv' to show",
    0.00096
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((92 - 12) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00037
  ]
}