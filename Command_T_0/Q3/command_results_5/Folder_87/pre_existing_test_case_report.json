{
  "parameter(s)": [
    36,
    46
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00015
  ],
  "test_range_size": [
    "passed",
    "",
    0.00013
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "assert [36, 38, 40, 42, 44, 46] == [74, 76, 78, 80, 82, 84, ...]\n  At index 0 diff: 36 != 74\n  Right contains 5 more items, first extra item: 86\n  Full diff:\n  - [74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94]\n  + [36, 38, 40, 42, 44, 46]",
    0.00034
  ],
  "test_large_range": [
    "failed",
    "assert [36, 37, 38, 39, 40, 41, ...] == [37, 38, 39, 40, 41, 42, ...]\n  At index 0 diff: 36 != 37\n  Full diff:\n  - [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n  ?                                        ----\n  + [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]\n  ?  ++++",
    0.00073
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((46 - 36) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00029
  ]
}