{
  "parameter(s)": [
    26,
    52
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00018
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [26, 28, 30, 32, 34, 36, ...] == [54, 56, 58, 60, 62, 64, ...]\n  At index 0 diff: 26 != 54\n  Right contains 13 more items, first extra item: 82\n  Full diff:\n    [\n  -  54,\n  -  56,\n  ?  ^...\n  \n  ...Full output truncated (67 lines hidden), use '-vv' to show",
    0.00289
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [26, 27, 28, 29, 30, 31, ...] == [27, 28, 29, 30, 31, 32, ...]\n  At index 0 diff: 26 != 27\n  Full diff:\n    [\n  +  26,\n     27,\n     28,\n     29,...\n  \n  ...Full output truncated (25 lines hidden), use '-vv' to show",
    0.00059
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((52 - 26) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00025
  ]
}