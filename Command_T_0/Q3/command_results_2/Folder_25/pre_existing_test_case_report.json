{
  "parameter(s)": [
    29,
    93
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00016
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00014
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [29, 30, 31, 32, 33, 34, ...] == [30, 31, 32, 33, 34, 35, ...]\n  At index 0 diff: 29 != 30\n  Right contains one more item: 94\n  Full diff:\n    [\n  +  29,\n     30,\n     31,...\n  \n  ...Full output truncated (64 lines hidden), use '-vv' to show",
    0.00058
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [30, 32, 34, 36, 38, 40, ...] == [60, 62, 64, 66, 68, 70, ...]\n  At index 0 diff: 30 != 60\n  Right contains 33 more items, first extra item: 124\n  Full diff:\n    [\n  +  30,\n  +  32,\n  +  34,...\n  \n  ...Full output truncated (78 lines hidden), use '-vv' to show",
    0.0007
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((93 - 29) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00031
  ]
}