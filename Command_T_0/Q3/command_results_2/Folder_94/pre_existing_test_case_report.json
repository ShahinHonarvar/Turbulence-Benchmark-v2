{
  "parameter(s)": [
    28,
    40
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [28, 30, 32, 34, 36, 38, ...] == [58, 60, 62, 64, 66, 68, ...]\n  At index 0 diff: 28 != 58\n  Right contains 6 more items, first extra item: 72\n  Full diff:\n  - [58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82]\n  + [28, 30, 32, 34, 36, 38, 40]",
    0.00038
  ],
  "test_large_range": [
    "failed",
    "assert [28, 29, 30, 31, 32, 33, ...] == [29, 30, 31, 32, 33, 34, ...]\n  At index 0 diff: 28 != 29\n  Full diff:\n  - [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]\n  ?                                                ----\n  + [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n  ?  ++++",
    0.00079
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((40 - 28) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}