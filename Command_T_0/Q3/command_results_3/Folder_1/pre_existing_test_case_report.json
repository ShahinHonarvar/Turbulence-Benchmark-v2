{
  "parameter(s)": [
    31,
    72
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00019
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00012
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [32, 34, 36, 38, 40, 42, ...] == [64, 66, 68, 70, 72, 74, ...]\n  At index 0 diff: 32 != 64\n  Right contains 21 more items, first extra item: 106\n  Full diff:\n    [\n  +  32,\n  +  34,\n  +  36,...\n  \n  ...Full output truncated (56 lines hidden), use '-vv' to show",
    0.00061
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [31, 32, 33, 34, 35, 36, ...] == [32, 33, 34, 35, 36, 37, ...]\n  At index 0 diff: 31 != 32\n  Full diff:\n    [\n  +  31,\n     32,\n     33,\n     34,...\n  \n  ...Full output truncated (40 lines hidden), use '-vv' to show",
    0.00051
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((72 - 31) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00036
  ]
}