{
  "parameter(s)": [
    23,
    23
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [24]\n  At index 0 diff: 1 != 24\n  Left contains 22 more items, first extra item: 2\n  Full diff:\n    [\n  +  1,\n  -  24,\n  ?   -...\n  \n  ...Full output truncated (23 lines hidden), use '-vv' to show",
    0.00067
  ],
  "test_even_range": [
    "failed",
    "assert [2, 4, 6, 8, 10, 12, ...] == [48]\n  At index 0 diff: 2 != 48\n  Left contains 10 more items, first extra item: 4\n  Full diff:\n  - [48]\n  + [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]",
    0.00048
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 25 == ((23 - 23) + 1)\n +  where 25 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00024
  ]
}