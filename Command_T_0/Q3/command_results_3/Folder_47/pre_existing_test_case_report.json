{
  "parameter(s)": [
    37,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [38, 40, 42, 44, 46, 48, ...] == [76, 78, 80, 82, 84, 86, ...]\n  At index 0 diff: 38 != 76\n  Right contains 20 more items, first extra item: 116\n  Full diff:\n    [\n  +  38,\n  +  40,\n  +  42,...\n  \n  ...Full output truncated (57 lines hidden), use '-vv' to show",
    0.00061
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [37, 38, 39, 40, 41, 42, ...] == [38, 39, 40, 41, 42, 43, ...]\n  At index 0 diff: 37 != 38\n  Full diff:\n    [\n  +  37,\n     38,\n     39,\n     40,...\n  \n  ...Full output truncated (38 lines hidden), use '-vv' to show",
    0.00065
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((76 - 37) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00021
  ]
}