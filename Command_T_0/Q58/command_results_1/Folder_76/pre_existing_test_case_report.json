{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -45,  -47,   86,   -4,   47,   35,   24,  -55, -100,  -89,\\n           57,  -97,   71,  -81,  -45,   22,   52,  -28,   19,   16,\\n          -70,  -30,  -26,  -41,  -57,   76, -100,  -48,   59,  -22,\\n          -48,  -15,   65,  -63,    2,  -87,   13,  -43,   78,   46,\\n           32,   23,   47,  -79,  -53,  -54,   58,  -28,   21,  -32,\\n           85,   20,   43,   48,  -15,   40,   82,  -76,   46,  -51,\\n           13,   24,  -68,  -67,   82,   99,  -25,   38,   73,   47,\\n           -2,  -25,  -63,   38,  -56, -100,    9,   42,   -4,   -4,\\n          -38,   68,  -64,  -38,  -94,  -70,  -93,   72,   85,  -98,\\n          -59,   62,  -14,   40,  -45,  -77,  -39,   25,   40,   -5,\\n           96,   75,   56,  -88,    7,  -24,   68,  -28,  -27,  -59,\\n          -30,   65,   80,  -34,  -87,  -88,  -98,  -84,  -15,   59,\\n           91,  -21,  -29,  -57,   26,   26,  -61,  -97,   27,   77,\\n          -23,   59,  -18,   72,    8,  -97,   50,   -3,   71,   66,\\n           73,  -34,   99,  -27,  -58,  -79,  -38,  -15,  -61,   -1,\\n           -5,    5,   93,   27,  -44,   59,   39,   60,   69]]))",
    0.00247
  ]
}