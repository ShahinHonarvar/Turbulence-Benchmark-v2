{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_71_1.py::test_matrix_of_one_integer", "location": ["tests58_71_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_1.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003879377618432045, "start": 1738453703.2704563, "stop": 1738453703.2708447, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ceb0f5a2b1604424bbcf73b8da312664", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_1.py::test_matrix_of_one_integer", "location": ["tests58_71_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_1.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003833035007119179, "start": 1738453703.2711296, "stop": 1738453703.2715135, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ceb0f5a2b1604424bbcf73b8da312664", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_1.py::test_matrix_of_one_integer", "location": ["tests58_71_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_1.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.333660662174225e-05, "start": 1738453703.2719016, "stop": 1738453703.2719853, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ceb0f5a2b1604424bbcf73b8da312664", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_1.py::test_matrix_of_having_78_integers", "location": ["tests58_71_1.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_1.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.959323167800903e-05, "start": 1738453703.2731373, "stop": 1738453703.2732272, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ceb0f5a2b1604424bbcf73b8da312664", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_1.py::test_matrix_of_having_78_integers", "location": ["tests58_71_1.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_1.py": 1, "Folder_71": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_71/tests58_71_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -55,   76],\\n        [ -73,   25],\\n        [ -12,   95],\\n        [  -7,  -49],\\n        [ -39,  -31],\\n        [  97, -100],\\n        [  59,  -94],\\n        [ -86,   46],\\n        [ -42,   30],\\n        [  77,   56],\\n        [  99,  -19],\\n        [ -86,   36],\\n        [  85,   22],\\n        [  28,   82],\\n        [   3,   82],\\n        [  70,  -39],\\n        [   7,  -99],\\n        [ -64,   68],\\n        [ -40,  -56],\\n        [ 100,   41],\\n        [ -15,   42],\\n        [   0,    3],\\n        [  43,   -8],\\n        [   7,  -14],\\n        [  92,  -95],\\n        [ -31,   -9],\\n        [  61,   90],\\n        [  17,   68],\\n        [  79,   59],\\n        [  45,   86],\\n        [ -68,  -61],\\n        [   4,  -55],\\n        [  12,   49],\\n        [  21,  -96],\\n        [  58,  -92],\\n        [  22,   57],\\n        [  15,  -35],\\n        [  34,   -9],\\n        [ 100,  -14]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -55,   76],\\n        [ -73,   25],\\n        [ -12,   95],\\n        [  -7,  -49],\\n        [ -39,  -31],\\n        [  97, -100],\\n        [  59,  -94],\\n        [ -86,   46],\\n        [ -42,   30],\\n        [  77,   56],\\n        [  99,  -19],\\n        [ -86,   36],\\n        [  85,   22],\\n        [  28,   82],\\n        [   3,   82],\\n        [  70,  -39],\\n        [   7,  -99],\\n        [ -64,   68],\\n        [ -40,  -56],\\n        [ 100,   41],\\n        [ -15,   42],\\n        [   0,    3],\\n        [  43,   -8],\\n        [   7,  -14],\\n        [  92,  -95],\\n        [ -31,   -9],\\n        [  61,   90],\\n        [  17,   68],\\n        [  79,   59],\\n        [  45,   86],\\n        [ -68,  -61],\\n        [   4,  -55],\\n        [  12,   49],\\n        [  21,  -96],\\n        [  58,  -92],\\n        [  22,   57],\\n        [  15,  -35],\\n        [  34,   -9],\\n        [ 100,  -14]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_71/tests58_71_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -55,   76],\\n        [ -73,   25],\\n        [ -12,   95],\\n        [  -7,  -49],\\n        [ -39,  -31],\\n        [  97, -100],\\n        [  59,  -94],\\n        [ -86,   46],\\n        [ -42,   30],\\n        [  77,   56],\\n        [  99,  -19],\\n        [ -86,   36],\\n        [  85,   22],\\n        [  28,   82],\\n        [   3,   82],\\n        [  70,  -39],\\n        [   7,  -99],\\n        [ -64,   68],\\n        [ -40,  -56],\\n        [ 100,   41],\\n        [ -15,   42],\\n        [   0,    3],\\n        [  43,   -8],\\n        [   7,  -14],\\n        [  92,  -95],\\n        [ -31,   -9],\\n        [  61,   90],\\n        [  17,   68],\\n        [  79,   59],\\n        [  45,   86],\\n        [ -68,  -61],\\n        [   4,  -55],\\n        [  12,   49],\\n        [  21,  -96],\\n        [  58,  -92],\\n        [  22,   57],\\n        [  15,  -35],\\n        [  34,   -9],\\n        [ 100,  -14]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_71/tests58_71_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_71/tests58_71_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -55,   76],\\n        [ -73,   25],\\n        [ -12,   95],\\n        [  -7,  -49],\\n        [ -39,  -31],\\n        [  97, -100],\\n        [  59,  -94],\\n        [ -86,   46],\\n        [ -42,   30],\\n        [  77,   56],\\n        [  99,  -19],\\n        [ -86,   36],\\n        [  85,   22],\\n        [  28,   82],\\n        [   3,   82],\\n        [  70,  -39],\\n        [   7,  -99],\\n        [ -64,   68],\\n        [ -40,  -56],\\n        [ 100,   41],\\n        [ -15,   42],\\n        [   0,    3],\\n        [  43,   -8],\\n        [   7,  -14],\\n        [  92,  -95],\\n        [ -31,   -9],\\n        [  61,   90],\\n        [  17,   68],\\n        [  79,   59],\\n        [  45,   86],\\n        [ -68,  -61],\\n        [   4,  -55],\\n        [  12,   49],\\n        [  21,  -96],\\n        [  58,  -92],\\n        [  22,   57],\\n        [  15,  -35],\\n        [  34,   -9],\\n        [ 100,  -14]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006133010610938072, "start": 1738453703.273504, "stop": 1738453703.274118, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ceb0f5a2b1604424bbcf73b8da312664", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_1.py::test_matrix_of_having_78_integers", "location": ["tests58_71_1.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_1.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0003805067390203476, "start": 1738453703.2908401, "stop": 1738453703.2912216, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ceb0f5a2b1604424bbcf73b8da312664", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
