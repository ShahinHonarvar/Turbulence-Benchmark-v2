{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001489538699388504, "start": 1738453718.412221, "stop": 1738453718.4123704, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2365c18464dc423cb73e0f1965aad8b3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018759071826934814, "start": 1738453718.4125571, "stop": 1738453718.412745, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2365c18464dc423cb73e0f1965aad8b3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.364712655544281e-05, "start": 1738453718.4130487, "stop": 1738453718.4131231, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2365c18464dc423cb73e0f1965aad8b3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001245606690645218, "start": 1738453718.4219797, "stop": 1738453718.4221048, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2365c18464dc423cb73e0f1965aad8b3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 12, -44],\\n        [ 72,   4],\\n        [-22, -93],\\n        [ 29, -42],\\n        [ 85, -52],\\n        [-85, -85],\\n        [-88,  93],\\n        [ 27, -93],\\n        [ 70, -49],\\n        [-77, -94],\\n        [ 40, -30],\\n        [ -5,  96],\\n        [-76,  53],\\n        [  9,  63],\\n        [ 19,  16],\\n        [-44, -22],\\n        [-69,   1],\\n        [-47, -64],\\n        [-97,  73],\\n        [ 12,   3],\\n        [ 99,  77],\\n        [ 99,  28],\\n        [-60, -29],\\n        [-26,  92],\\n        [-73, -95],\\n        [ -3,  97],\\n        [ 70,  97],\\n        [ 19,  60],\\n        [ 20, -71],\\n        [-73,  82],\\n        [ 10,   0],\\n        [ 26,  18],\\n        [ 47,  32],\\n        [-42,  65],\\n        [ 71,   7],\\n        [ 83, -43],\\n        [-20,  96],\\n        [-64,  86],\\n        [ 32,  -4],\\n        [-84, -11],\\n        [-90,  -2],\\n        [-74, -47],\\n        [-59, -55],\\n        [-44, -28],\\n        [ 42,  19],\\n        [-94, -56],\\n        [ 61, -77],\\n        [-73, -17],\\n        [-95,  34],\\n        [ 86,  -2],\\n        [-72, -43],\\n        [  1, -81],\\n        [-85, -45],\\n        [-57,  86],\\n        [ 64,  97],\\n        [ 44, -56],\\n        [-99, -71],\\n        [-26,  86],\\n        [-62,  87],\\n        [-76,  22],\\n        [ 21,  61],\\n        [ -3,  49],\\n        [ 18, -10],\\n        [-79, 100],\\n        [-47, -23],\\n        [ 53,  -3],\\n        [ 47,  80],\\n        [-33, 100],\\n        [-98, -90],\\n        [  1, -29],\\n        [-10,  24],\\n        [ 52, -41],\\n        [  5,  69],\\n        [ 41,  65],\\n        [  7,  59],\\n        [ 42, -98],\\n        [ 51,  76],\\n        [-82,  40],\\n        [ -5,  95],\\n        [-25,  80],\\n        [-61, -86],\\n        [-61, -36],\\n        [ 44,  16],\\n        [-50,  13],\\n        [  0, -90],\\n        [ 34,  20],\\n        [-89, -20],\\n        [ 74,  19]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 12, -44],\\n        [ 72,   4],\\n        [-22, -93],\\n        [ 29, -42],\\n        [ 85, -52],\\n        [-85, -85],\\n        [-88,  93],\\n        [ 27, -93],\\n        [ 70, -49],\\n        [-77, -94],\\n        [ 40, -30],\\n        [ -5,  96],\\n        [-76,  53],\\n        [  9,  63],\\n        [ 19,  16],\\n        [-44, -22],\\n        [-69,   1],\\n        [-47, -64],\\n        [-97,  73],\\n        [ 12,   3],\\n        [ 99,  77],\\n        [ 99,  28],\\n        [-60, -29],\\n        [-26,  92],\\n        [-73, -95],\\n        [ -3,  97],\\n        [ 70,  97],\\n        [ 19,  60],\\n        [ 20, -71],\\n        [-73,  82],\\n        [ 10,   0],\\n        [ 26,  18],\\n        [ 47,  32],\\n        [-42,  65],\\n        [ 71,   7],\\n        [ 83, -43],\\n        [-20,  96],\\n        [-64,  86],\\n        [ 32,  -4],\\n        [-84, -11],\\n        [-90,  -2],\\n        [-74, -47],\\n        [-59, -55],\\n        [-44, -28],\\n        [ 42,  19],\\n        [-94, -56],\\n        [ 61, -77],\\n        [-73, -17],\\n        [-95,  34],\\n        [ 86,  -2],\\n        [-72, -43],\\n        [  1, -81],\\n        [-85, -45],\\n        [-57,  86],\\n        [ 64,  97],\\n        [ 44, -56],\\n        [-99, -71],\\n        [-26,  86],\\n        [-62,  87],\\n        [-76,  22],\\n        [ 21,  61],\\n        [ -3,  49],\\n        [ 18, -10],\\n        [-79, 100],\\n        [-47, -23],\\n        [ 53,  -3],\\n        [ 47,  80],\\n        [-33, 100],\\n        [-98, -90],\\n        [  1, -29],\\n        [-10,  24],\\n        [ 52, -41],\\n        [  5,  69],\\n        [ 41,  65],\\n        [  7,  59],\\n        [ 42, -98],\\n        [ 51,  76],\\n        [-82,  40],\\n        [ -5,  95],\\n        [-25,  80],\\n        [-61, -86],\\n        [-61, -36],\\n        [ 44,  16],\\n        [-50,  13],\\n        [  0, -90],\\n        [ 34,  20],\\n        [-89, -20],\\n        [ 74,  19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 12, -44],\\n        [ 72,   4],\\n        [-22, -93],\\n        [ 29, -42],\\n        [ 85, -52],\\n        [-85, -85],\\n        [-88,  93],\\n        [ 27, -93],\\n        [ 70, -49],\\n        [-77, -94],\\n        [ 40, -30],\\n        [ -5,  96],\\n        [-76,  53],\\n        [  9,  63],\\n        [ 19,  16],\\n        [-44, -22],\\n        [-69,   1],\\n        [-47, -64],\\n        [-97,  73],\\n        [ 12,   3],\\n        [ 99,  77],\\n        [ 99,  28],\\n        [-60, -29],\\n        [-26,  92],\\n        [-73, -95],\\n        [ -3,  97],\\n        [ 70,  97],\\n        [ 19,  60],\\n        [ 20, -71],\\n        [-73,  82],\\n        [ 10,   0],\\n        [ 26,  18],\\n        [ 47,  32],\\n        [-42,  65],\\n        [ 71,   7],\\n        [ 83, -43],\\n        [-20,  96],\\n        [-64,  86],\\n        [ 32,  -4],\\n        [-84, -11],\\n        [-90,  -2],\\n        [-74, -47],\\n        [-59, -55],\\n        [-44, -28],\\n        [ 42,  19],\\n        [-94, -56],\\n        [ 61, -77],\\n        [-73, -17],\\n        [-95,  34],\\n        [ 86,  -2],\\n        [-72, -43],\\n        [  1, -81],\\n        [-85, -45],\\n        [-57,  86],\\n        [ 64,  97],\\n        [ 44, -56],\\n        [-99, -71],\\n        [-26,  86],\\n        [-62,  87],\\n        [-76,  22],\\n        [ 21,  61],\\n        [ -3,  49],\\n        [ 18, -10],\\n        [-79, 100],\\n        [-47, -23],\\n        [ 53,  -3],\\n        [ 47,  80],\\n        [-33, 100],\\n        [-98, -90],\\n        [  1, -29],\\n        [-10,  24],\\n        [ 52, -41],\\n        [  5,  69],\\n        [ 41,  65],\\n        [  7,  59],\\n        [ 42, -98],\\n        [ 51,  76],\\n        [-82,  40],\\n        [ -5,  95],\\n        [-25,  80],\\n        [-61, -86],\\n        [-61, -36],\\n        [ 44,  16],\\n        [-50,  13],\\n        [  0, -90],\\n        [ 34,  20],\\n        [-89, -20],\\n        [ 74,  19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 12, -44],\\n        [ 72,   4],\\n        [-22, -93],\\n        [ 29, -42],\\n        [ 85, -52],\\n        [-85, -85],\\n        [-88,  93],\\n        [ 27, -93],\\n        [ 70, -49],\\n        [-77, -94],\\n        [ 40, -30],\\n        [ -5,  96],\\n        [-76,  53],\\n        [  9,  63],\\n        [ 19,  16],\\n        [-44, -22],\\n        [-69,   1],\\n        [-47, -64],\\n        [-97,  73],\\n        [ 12,   3],\\n        [ 99,  77],\\n        [ 99,  28],\\n        [-60, -29],\\n        [-26,  92],\\n        [-73, -95],\\n        [ -3,  97],\\n        [ 70,  97],\\n        [ 19,  60],\\n        [ 20, -71],\\n        [-73,  82],\\n        [ 10,   0],\\n        [ 26,  18],\\n        [ 47,  32],\\n        [-42,  65],\\n        [ 71,   7],\\n        [ 83, -43],\\n        [-20,  96],\\n        [-64,  86],\\n        [ 32,  -4],\\n        [-84, -11],\\n        [-90,  -2],\\n        [-74, -47],\\n        [-59, -55],\\n        [-44, -28],\\n        [ 42,  19],\\n        [-94, -56],\\n        [ 61, -77],\\n        [-73, -17],\\n        [-95,  34],\\n        [ 86,  -2],\\n        [-72, -43],\\n        [  1, -81],\\n        [-85, -45],\\n        [-57,  86],\\n        [ 64,  97],\\n        [ 44, -56],\\n        [-99, -71],\\n        [-26,  86],\\n        [-62,  87],\\n        [-76,  22],\\n        [ 21,  61],\\n        [ -3,  49],\\n        [ 18, -10],\\n        [-79, 100],\\n        [-47, -23],\\n        [ 53,  -3],\\n        [ 47,  80],\\n        [-33, 100],\\n        [-98, -90],\\n        [  1, -29],\\n        [-10,  24],\\n        [ 52, -41],\\n        [  5,  69],\\n        [ 41,  65],\\n        [  7,  59],\\n        [ 42, -98],\\n        [ 51,  76],\\n        [-82,  40],\\n        [ -5,  95],\\n        [-25,  80],\\n        [-61, -86],\\n        [-61, -36],\\n        [ 44,  16],\\n        [-50,  13],\\n        [  0, -90],\\n        [ 34,  20],\\n        [-89, -20],\\n        [ 74,  19]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009648725390434265, "start": 1738453718.4222314, "stop": 1738453718.423197, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2365c18464dc423cb73e0f1965aad8b3", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012494996190071106, "start": 1738453718.477043, "stop": 1738453718.4771686, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2365c18464dc423cb73e0f1965aad8b3", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
