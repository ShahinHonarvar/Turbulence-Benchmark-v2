{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-18,  89, -77,  88,   1, -86, -28, -88,  70, -36, -61,  67,  83,\\n          50, -95, -93, -66,  77, -90, -93, -37, -24, -62, -14,  89,  40,\\n          72,  84, -29,  41,  95, -68, -54, -67, -43, -93, -93, -40, -84,\\n         -96, -66, -15, -66,  41,   5,  96, -22,  18,  44, -67, -54, -45,\\n          46,  43,  41, -30,  66,  -3, -96,  33, -52, -45, -39, -43,  16,\\n          -4,  -7,  53,  -4,  22, -58,  89, -97, -10, -27,  51,  74,  38,\\n         -38,  69, -21, -13,  13,  67,  -8,  98,  -6,   7,  44,  59, -53,\\n         -17, -43, -75,  86, -38,   1,  93,  95, -22, -71,  98, -53,  22,\\n         -85,  22, -84, -77, -49, -11,  91, -55, -45,  44,   2,  80, -56,\\n         -24, -76, -79,  15,  86, -92,  -1,  70, -56, -13, -44,  -7, -72,\\n          14,  84,  66,  54, -25,  58, -94,  -2, -95,  11,  75,  -6,  74,\\n         -57, -24,  -1, -13,  10,  68,  48, -82, -35, -31,   8, -28, -83,\\n          86,   5, -60, -40, -73, -33, -45,  68, -28,  59,  65, -89, -42,\\n          32, -84,  77,  -7, -30, -48]]))",
    0.00078
  ]
}