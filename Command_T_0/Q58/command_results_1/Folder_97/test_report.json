{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012852996587753296, "start": 1738453723.6563346, "stop": 1738453723.6564634, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b136f9d66d455999d62492c6a68ad4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017265696078538895, "start": 1738453723.656636, "stop": 1738453723.6568089, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b136f9d66d455999d62492c6a68ad4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002846773713827133, "start": 1738453723.6571088, "stop": 1738453723.6573937, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b136f9d66d455999d62492c6a68ad4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010516401380300522, "start": 1738453723.659638, "stop": 1738453723.6597435, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "49b136f9d66d455999d62492c6a68ad4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -26,    0],\\n        [  48,   99],\\n        [ -16,   30],\\n        [ -41,   16],\\n        [ -81,  -83],\\n        [  33,   37],\\n        [  88,  -53],\\n        [  14,   29],\\n        [ -31,   -9],\\n        [ -64,   26],\\n        [ -45,  -86],\\n        [ -44,   98],\\n        [  73,   12],\\n        [  48,   98],\\n        [ -55,   69],\\n        [  93,  -12],\\n        [ -23,   -4],\\n        [ -62,   -5],\\n        [ -91,   54],\\n        [  94,  -58],\\n        [  19,  -53],\\n        [ -54,  -37],\\n        [ -85,   72],\\n        [  10,  -60],\\n        [  93,  -24],\\n        [  52,   15],\\n        [  -3,  -57],\\n        [  25,   78],\\n        [ -75,   65],\\n        [ 100,   97],\\n        [ -54,   72],\\n        [  17,   19],\\n        [ -39,   57],\\n        [ -65,  -30],\\n        [ -68,   23],\\n        [  98,    9],\\n        [  54,   92],\\n        [  65,   74],\\n        [  -9,   77],\\n        [  37,   26],\\n        [ -67,  -47],\\n        [-100,   -2],\\n        [-100,   -8],\\n        [  31,    0],\\n        [   1, -100],\\n        [  10,   29],\\n        [  72,  -14],\\n        [  38,  -12],\\n        [ -25,  -52],\\n        [  20,   18],\\n        [ -56,  -95],\\n        [ -42,  -42],\\n        [ -14,  -55],\\n        [ -59,  -40],\\n        [ -50,   69],\\n        [  16,  -39],\\n        [ -52,   32],\\n        [  16,   76],\\n        [   7,  -42],\\n        [  20,  -24]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -26,    0],\\n        [  48,   99],\\n        [ -16,   30],\\n        [ -41,   16],\\n        [ -81,  -83],\\n        [  33,   37],\\n        [  88,  -53],\\n        [  14,   29],\\n        [ -31,   -9],\\n        [ -64,   26],\\n        [ -45,  -86],\\n        [ -44,   98],\\n        [  73,   12],\\n        [  48,   98],\\n        [ -55,   69],\\n        [  93,  -12],\\n        [ -23,   -4],\\n        [ -62,   -5],\\n        [ -91,   54],\\n        [  94,  -58],\\n        [  19,  -53],\\n        [ -54,  -37],\\n        [ -85,   72],\\n        [  10,  -60],\\n        [  93,  -24],\\n        [  52,   15],\\n        [  -3,  -57],\\n        [  25,   78],\\n        [ -75,   65],\\n        [ 100,   97],\\n        [ -54,   72],\\n        [  17,   19],\\n        [ -39,   57],\\n        [ -65,  -30],\\n        [ -68,   23],\\n        [  98,    9],\\n        [  54,   92],\\n        [  65,   74],\\n        [  -9,   77],\\n        [  37,   26],\\n        [ -67,  -47],\\n        [-100,   -2],\\n        [-100,   -8],\\n        [  31,    0],\\n        [   1, -100],\\n        [  10,   29],\\n        [  72,  -14],\\n        [  38,  -12],\\n        [ -25,  -52],\\n        [  20,   18],\\n        [ -56,  -95],\\n        [ -42,  -42],\\n        [ -14,  -55],\\n        [ -59,  -40],\\n        [ -50,   69],\\n        [  16,  -39],\\n        [ -52,   32],\\n        [  16,   76],\\n        [   7,  -42],\\n        [  20,  -24]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -26,    0],\\n        [  48,   99],\\n        [ -16,   30],\\n        [ -41,   16],\\n        [ -81,  -83],\\n        [  33,   37],\\n        [  88,  -53],\\n        [  14,   29],\\n        [ -31,   -9],\\n        [ -64,   26],\\n        [ -45,  -86],\\n        [ -44,   98],\\n        [  73,   12],\\n        [  48,   98],\\n        [ -55,   69],\\n        [  93,  -12],\\n        [ -23,   -4],\\n        [ -62,   -5],\\n        [ -91,   54],\\n        [  94,  -58],\\n        [  19,  -53],\\n        [ -54,  -37],\\n        [ -85,   72],\\n        [  10,  -60],\\n        [  93,  -24],\\n        [  52,   15],\\n        [  -3,  -57],\\n        [  25,   78],\\n        [ -75,   65],\\n        [ 100,   97],\\n        [ -54,   72],\\n        [  17,   19],\\n        [ -39,   57],\\n        [ -65,  -30],\\n        [ -68,   23],\\n        [  98,    9],\\n        [  54,   92],\\n        [  65,   74],\\n        [  -9,   77],\\n        [  37,   26],\\n        [ -67,  -47],\\n        [-100,   -2],\\n        [-100,   -8],\\n        [  31,    0],\\n        [   1, -100],\\n        [  10,   29],\\n        [  72,  -14],\\n        [  38,  -12],\\n        [ -25,  -52],\\n        [  20,   18],\\n        [ -56,  -95],\\n        [ -42,  -42],\\n        [ -14,  -55],\\n        [ -59,  -40],\\n        [ -50,   69],\\n        [  16,  -39],\\n        [ -52,   32],\\n        [  16,   76],\\n        [   7,  -42],\\n        [  20,  -24]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -26,    0],\\n        [  48,   99],\\n        [ -16,   30],\\n        [ -41,   16],\\n        [ -81,  -83],\\n        [  33,   37],\\n        [  88,  -53],\\n        [  14,   29],\\n        [ -31,   -9],\\n        [ -64,   26],\\n        [ -45,  -86],\\n        [ -44,   98],\\n        [  73,   12],\\n        [  48,   98],\\n        [ -55,   69],\\n        [  93,  -12],\\n        [ -23,   -4],\\n        [ -62,   -5],\\n        [ -91,   54],\\n        [  94,  -58],\\n        [  19,  -53],\\n        [ -54,  -37],\\n        [ -85,   72],\\n        [  10,  -60],\\n        [  93,  -24],\\n        [  52,   15],\\n        [  -3,  -57],\\n        [  25,   78],\\n        [ -75,   65],\\n        [ 100,   97],\\n        [ -54,   72],\\n        [  17,   19],\\n        [ -39,   57],\\n        [ -65,  -30],\\n        [ -68,   23],\\n        [  98,    9],\\n        [  54,   92],\\n        [  65,   74],\\n        [  -9,   77],\\n        [  37,   26],\\n        [ -67,  -47],\\n        [-100,   -2],\\n        [-100,   -8],\\n        [  31,    0],\\n        [   1, -100],\\n        [  10,   29],\\n        [  72,  -14],\\n        [  38,  -12],\\n        [ -25,  -52],\\n        [  20,   18],\\n        [ -56,  -95],\\n        [ -42,  -42],\\n        [ -14,  -55],\\n        [ -59,  -40],\\n        [ -50,   69],\\n        [  16,  -39],\\n        [ -52,   32],\\n        [  16,   76],\\n        [   7,  -42],\\n        [  20,  -24]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.004948096349835396, "start": 1738453723.6598482, "stop": 1738453723.664797, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "49b136f9d66d455999d62492c6a68ad4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011321436613798141, "start": 1738453723.6940002, "stop": 1738453723.694114, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "49b136f9d66d455999d62492c6a68ad4", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
