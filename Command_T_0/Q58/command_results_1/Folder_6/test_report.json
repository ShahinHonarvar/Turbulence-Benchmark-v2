{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003938348963856697, "start": 1738453655.26628, "stop": 1738453655.2666743, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46fa9890b7434e7b84245dc143f775e9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004123952239751816, "start": 1738453655.2671776, "stop": 1738453655.26759, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46fa9890b7434e7b84245dc143f775e9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00022643152624368668, "start": 1738453655.268208, "stop": 1738453655.268435, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "46fa9890b7434e7b84245dc143f775e9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002592978999018669, "start": 1738453655.269764, "stop": 1738453655.2700233, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "46fa9890b7434e7b84245dc143f775e9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -98,   14],\\n        [  49, -100],\\n        [ -35,   79],\\n        [  31,   84],\\n        [ -34,   90],\\n        [ -51,   35],\\n        [  58,  -95],\\n        [ -64,  -20],\\n        [ -59,   84],\\n        [  34,  -86],\\n        [ -64,   60],\\n        [  23,  -46],\\n        [ -70,    8],\\n        [ -66,  -85],\\n        [ -80,   18],\\n        [  28,   21],\\n        [ 100,  -50],\\n        [  80,  -88],\\n        [  51,   -6],\\n        [  14,  -48],\\n        [ -57,   16],\\n        [  27,   18],\\n        [ -87,  -78],\\n        [ -48,   32],\\n        [  55,  -36],\\n        [ -81,   52],\\n        [  32,  -61],\\n        [ -96,  -78],\\n        [  12,  -56],\\n        [  23,   64],\\n        [  85,  -34],\\n        [  85,  -63],\\n        [  26,   32],\\n        [  -2,  -40],\\n        [ -20,  -11],\\n        [ -51,  -74],\\n        [  71,    0],\\n        [  50,  -48],\\n        [  -4,    7],\\n        [ -39,   94],\\n        [ -95,  -81],\\n        [  59,   76],\\n        [  46,  -62],\\n        [  75,  -38],\\n        [ -96,  -10],\\n        [ -60,   21],\\n        [ -60,  -16],\\n        [ -71,  -74],\\n        [  73,   82],\\n        [ -11,  -94],\\n        [ -42,   72],\\n        [  91,   78],\\n        [  86,  -19],\\n        [ -13,  -16],\\n        [ -47,   87],\\n        [ -10,   39],\\n        [  10,   93],\\n        [ -72,   63],\\n        [   0,  -53],\\n        [  -2,    0],\\n        [ -84,   13]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -98,   14],\\n        [  49, -100],\\n        [ -35,   79],\\n        [  31,   84],\\n        [ -34,   90],\\n        [ -51,   35],\\n        [  58,  -95],\\n        [ -64,  -20],\\n        [ -59,   84],\\n        [  34,  -86],\\n        [ -64,   60],\\n        [  23,  -46],\\n        [ -70,    8],\\n        [ -66,  -85],\\n        [ -80,   18],\\n        [  28,   21],\\n        [ 100,  -50],\\n        [  80,  -88],\\n        [  51,   -6],\\n        [  14,  -48],\\n        [ -57,   16],\\n        [  27,   18],\\n        [ -87,  -78],\\n        [ -48,   32],\\n        [  55,  -36],\\n        [ -81,   52],\\n        [  32,  -61],\\n        [ -96,  -78],\\n        [  12,  -56],\\n        [  23,   64],\\n        [  85,  -34],\\n        [  85,  -63],\\n        [  26,   32],\\n        [  -2,  -40],\\n        [ -20,  -11],\\n        [ -51,  -74],\\n        [  71,    0],\\n        [  50,  -48],\\n        [  -4,    7],\\n        [ -39,   94],\\n        [ -95,  -81],\\n        [  59,   76],\\n        [  46,  -62],\\n        [  75,  -38],\\n        [ -96,  -10],\\n        [ -60,   21],\\n        [ -60,  -16],\\n        [ -71,  -74],\\n        [  73,   82],\\n        [ -11,  -94],\\n        [ -42,   72],\\n        [  91,   78],\\n        [  86,  -19],\\n        [ -13,  -16],\\n        [ -47,   87],\\n        [ -10,   39],\\n        [  10,   93],\\n        [ -72,   63],\\n        [   0,  -53],\\n        [  -2,    0],\\n        [ -84,   13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -98,   14],\\n        [  49, -100],\\n        [ -35,   79],\\n        [  31,   84],\\n        [ -34,   90],\\n        [ -51,   35],\\n        [  58,  -95],\\n        [ -64,  -20],\\n        [ -59,   84],\\n        [  34,  -86],\\n        [ -64,   60],\\n        [  23,  -46],\\n        [ -70,    8],\\n        [ -66,  -85],\\n        [ -80,   18],\\n        [  28,   21],\\n        [ 100,  -50],\\n        [  80,  -88],\\n        [  51,   -6],\\n        [  14,  -48],\\n        [ -57,   16],\\n        [  27,   18],\\n        [ -87,  -78],\\n        [ -48,   32],\\n        [  55,  -36],\\n        [ -81,   52],\\n        [  32,  -61],\\n        [ -96,  -78],\\n        [  12,  -56],\\n        [  23,   64],\\n        [  85,  -34],\\n        [  85,  -63],\\n        [  26,   32],\\n        [  -2,  -40],\\n        [ -20,  -11],\\n        [ -51,  -74],\\n        [  71,    0],\\n        [  50,  -48],\\n        [  -4,    7],\\n        [ -39,   94],\\n        [ -95,  -81],\\n        [  59,   76],\\n        [  46,  -62],\\n        [  75,  -38],\\n        [ -96,  -10],\\n        [ -60,   21],\\n        [ -60,  -16],\\n        [ -71,  -74],\\n        [  73,   82],\\n        [ -11,  -94],\\n        [ -42,   72],\\n        [  91,   78],\\n        [  86,  -19],\\n        [ -13,  -16],\\n        [ -47,   87],\\n        [ -10,   39],\\n        [  10,   93],\\n        [ -72,   63],\\n        [   0,  -53],\\n        [  -2,    0],\\n        [ -84,   13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -98,   14],\\n        [  49, -100],\\n        [ -35,   79],\\n        [  31,   84],\\n        [ -34,   90],\\n        [ -51,   35],\\n        [  58,  -95],\\n        [ -64,  -20],\\n        [ -59,   84],\\n        [  34,  -86],\\n        [ -64,   60],\\n        [  23,  -46],\\n        [ -70,    8],\\n        [ -66,  -85],\\n        [ -80,   18],\\n        [  28,   21],\\n        [ 100,  -50],\\n        [  80,  -88],\\n        [  51,   -6],\\n        [  14,  -48],\\n        [ -57,   16],\\n        [  27,   18],\\n        [ -87,  -78],\\n        [ -48,   32],\\n        [  55,  -36],\\n        [ -81,   52],\\n        [  32,  -61],\\n        [ -96,  -78],\\n        [  12,  -56],\\n        [  23,   64],\\n        [  85,  -34],\\n        [  85,  -63],\\n        [  26,   32],\\n        [  -2,  -40],\\n        [ -20,  -11],\\n        [ -51,  -74],\\n        [  71,    0],\\n        [  50,  -48],\\n        [  -4,    7],\\n        [ -39,   94],\\n        [ -95,  -81],\\n        [  59,   76],\\n        [  46,  -62],\\n        [  75,  -38],\\n        [ -96,  -10],\\n        [ -60,   21],\\n        [ -60,  -16],\\n        [ -71,  -74],\\n        [  73,   82],\\n        [ -11,  -94],\\n        [ -42,   72],\\n        [  91,   78],\\n        [  86,  -19],\\n        [ -13,  -16],\\n        [ -47,   87],\\n        [ -10,   39],\\n        [  10,   93],\\n        [ -72,   63],\\n        [   0,  -53],\\n        [  -2,    0],\\n        [ -84,   13]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012840451672673225, "start": 1738453655.270283, "stop": 1738453655.2715678, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "46fa9890b7434e7b84245dc143f775e9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004375409334897995, "start": 1738453655.2908516, "stop": 1738453655.2912898, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "46fa9890b7434e7b84245dc143f775e9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
