{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00026
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-84,  58,   1,  17,  -3,  66,  98, -36, -38,  88, -81,  39,  93,\\n          83,  89, -93, -93,  67, -78,  21, -13, -92, -60,  95,  61, -16,\\n          11, -87,  16, -73,  92, -34,  87,  55, -66,  81,  12, -97,  69,\\n          66,   6, -85,  81,  80,  82,  39, -36, -66, -79,  73, -33, -36,\\n         -63, -87, -34, -46,  73, -73,  -7,  71,  87, -17,  -5, -74,  -3,\\n         -75,  43,  56,  54,  19, -38, -98, -20, -50,  40,  47,  60,  64,\\n         -71,  62,  -8, -69,  57, -23,  -2, -14,  92, -68, -57,   8, -19,\\n          64, -20,  24, -68,  -8,  27, -89, -99,  34,  32, -25,   1,   8,\\n         -75,  29, -85,  16,  88,  38, -71, -80,  50,  49, -79, -51, -81,\\n          75, -31,   9,  73,   5, -10,  32, -87, -71, -16, -41, -49, -34,\\n          21,  -4, -16,  19, -56, -54, -99,  81, -44, -12, -84, -48, -48,\\n         -54,  65, -66, -56, -84,   6,  87,  93,  55, -26, -53,   1, -47,\\n          -2, -91,  42, -84, -37, -76, -35, -72, -25, -88,   4,  96, -30,\\n         -60,  52, -14,   5, -35, -84, -36,  43,  93,  98]]))",
    0.00076
  ]
}