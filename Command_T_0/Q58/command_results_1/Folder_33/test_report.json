{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_1.py::test_matrix_of_one_integer", "location": ["tests58_33_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_1.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00035842880606651306, "start": 1738453675.824741, "stop": 1738453675.8250997, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3418a7633a3c4e17a33cebed50e1958e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_1.py::test_matrix_of_one_integer", "location": ["tests58_33_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_1.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017249677330255508, "start": 1738453675.8255675, "stop": 1738453675.8257403, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3418a7633a3c4e17a33cebed50e1958e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_1.py::test_matrix_of_one_integer", "location": ["tests58_33_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_1.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016059540212154388, "start": 1738453675.8260362, "stop": 1738453675.8261971, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3418a7633a3c4e17a33cebed50e1958e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_1.py::test_matrix_of_having_118_integers", "location": ["tests58_33_1.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_1.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.23652371764183e-05, "start": 1738453675.8271039, "stop": 1738453675.8271863, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3418a7633a3c4e17a33cebed50e1958e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_1.py::test_matrix_of_having_118_integers", "location": ["tests58_33_1.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_1.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_33/tests58_33_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   23],\\n        [  78,   17],\\n        [ -90,   28],\\n        [ -46,   93],\\n        [  60,   29],\\n        [  47,   65],\\n        [ -83,   26],\\n        [  36,  -45],\\n        [ -63,   62],\\n        [ -79,  -47],\\n        [ -60,   94],\\n        [  72,   59],\\n        [ -94,    0],\\n        [ -33,   53],\\n        [ -90,   51],\\n        [ -14,  -96],\\n        [  75,  -25],\\n        [ -99,   68],\\n        [ -94,   46],\\n        [ -88,  -78],\\n        [  80,   -9],\\n        [ -29,  -93],\\n        [ -14,  -87],\\n        [ -10,  -35],\\n        [  -4,  -17],\\n        [ -66,   -4],\\n        [  21,  -29],\\n        [   8,  -30],\\n        [ -85,   68],\\n        [ -71,   -4],\\n        [ -66,   61],\\n        [ -68,  -27],\\n        [  45,   22],\\n        [ -81,    1],\\n        [ -12,  -54],\\n        [  -8,  -27],\\n        [ -12,   16],\\n        [  55,  -45],\\n        [  37,   90],\\n        [   7,  -51],\\n        [ -94,  -30],\\n        [  19,  -89],\\n        [  81,  -82],\\n        [ -11,  -84],\\n        [  65,   64],\\n        [  14,   -6],\\n        [   7,  -83],\\n        [  77,   86],\\n        [  81,  -24],\\n        [   1,  -96],\\n        [  29,  -57],\\n        [ -72,   70],\\n        [ -19,   21],\\n        [  82,  -60],\\n        [ -69,   46],\\n        [  24,    0],\\n        [-100,  -79],\\n        [   5,  -85],\\n        [  66,  -27]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   23],\\n        [  78,   17],\\n        [ -90,   28],\\n        [ -46,   93],\\n        [  60,   29],\\n        [  47,   65],\\n        [ -83,   26],\\n        [  36,  -45],\\n        [ -63,   62],\\n        [ -79,  -47],\\n        [ -60,   94],\\n        [  72,   59],\\n        [ -94,    0],\\n        [ -33,   53],\\n        [ -90,   51],\\n        [ -14,  -96],\\n        [  75,  -25],\\n        [ -99,   68],\\n        [ -94,   46],\\n        [ -88,  -78],\\n        [  80,   -9],\\n        [ -29,  -93],\\n        [ -14,  -87],\\n        [ -10,  -35],\\n        [  -4,  -17],\\n        [ -66,   -4],\\n        [  21,  -29],\\n        [   8,  -30],\\n        [ -85,   68],\\n        [ -71,   -4],\\n        [ -66,   61],\\n        [ -68,  -27],\\n        [  45,   22],\\n        [ -81,    1],\\n        [ -12,  -54],\\n        [  -8,  -27],\\n        [ -12,   16],\\n        [  55,  -45],\\n        [  37,   90],\\n        [   7,  -51],\\n        [ -94,  -30],\\n        [  19,  -89],\\n        [  81,  -82],\\n        [ -11,  -84],\\n        [  65,   64],\\n        [  14,   -6],\\n        [   7,  -83],\\n        [  77,   86],\\n        [  81,  -24],\\n        [   1,  -96],\\n        [  29,  -57],\\n        [ -72,   70],\\n        [ -19,   21],\\n        [  82,  -60],\\n        [ -69,   46],\\n        [  24,    0],\\n        [-100,  -79],\\n        [   5,  -85],\\n        [  66,  -27]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_33/tests58_33_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   23],\\n        [  78,   17],\\n        [ -90,   28],\\n        [ -46,   93],\\n        [  60,   29],\\n        [  47,   65],\\n        [ -83,   26],\\n        [  36,  -45],\\n        [ -63,   62],\\n        [ -79,  -47],\\n        [ -60,   94],\\n        [  72,   59],\\n        [ -94,    0],\\n        [ -33,   53],\\n        [ -90,   51],\\n        [ -14,  -96],\\n        [  75,  -25],\\n        [ -99,   68],\\n        [ -94,   46],\\n        [ -88,  -78],\\n        [  80,   -9],\\n        [ -29,  -93],\\n        [ -14,  -87],\\n        [ -10,  -35],\\n        [  -4,  -17],\\n        [ -66,   -4],\\n        [  21,  -29],\\n        [   8,  -30],\\n        [ -85,   68],\\n        [ -71,   -4],\\n        [ -66,   61],\\n        [ -68,  -27],\\n        [  45,   22],\\n        [ -81,    1],\\n        [ -12,  -54],\\n        [  -8,  -27],\\n        [ -12,   16],\\n        [  55,  -45],\\n        [  37,   90],\\n        [   7,  -51],\\n        [ -94,  -30],\\n        [  19,  -89],\\n        [  81,  -82],\\n        [ -11,  -84],\\n        [  65,   64],\\n        [  14,   -6],\\n        [   7,  -83],\\n        [  77,   86],\\n        [  81,  -24],\\n        [   1,  -96],\\n        [  29,  -57],\\n        [ -72,   70],\\n        [ -19,   21],\\n        [  82,  -60],\\n        [ -69,   46],\\n        [  24,    0],\\n        [-100,  -79],\\n        [   5,  -85],\\n        [  66,  -27]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_1/Folder_33/tests58_33_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_1/Folder_33/tests58_33_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   23],\\n        [  78,   17],\\n        [ -90,   28],\\n        [ -46,   93],\\n        [  60,   29],\\n        [  47,   65],\\n        [ -83,   26],\\n        [  36,  -45],\\n        [ -63,   62],\\n        [ -79,  -47],\\n        [ -60,   94],\\n        [  72,   59],\\n        [ -94,    0],\\n        [ -33,   53],\\n        [ -90,   51],\\n        [ -14,  -96],\\n        [  75,  -25],\\n        [ -99,   68],\\n        [ -94,   46],\\n        [ -88,  -78],\\n        [  80,   -9],\\n        [ -29,  -93],\\n        [ -14,  -87],\\n        [ -10,  -35],\\n        [  -4,  -17],\\n        [ -66,   -4],\\n        [  21,  -29],\\n        [   8,  -30],\\n        [ -85,   68],\\n        [ -71,   -4],\\n        [ -66,   61],\\n        [ -68,  -27],\\n        [  45,   22],\\n        [ -81,    1],\\n        [ -12,  -54],\\n        [  -8,  -27],\\n        [ -12,   16],\\n        [  55,  -45],\\n        [  37,   90],\\n        [   7,  -51],\\n        [ -94,  -30],\\n        [  19,  -89],\\n        [  81,  -82],\\n        [ -11,  -84],\\n        [  65,   64],\\n        [  14,   -6],\\n        [   7,  -83],\\n        [  77,   86],\\n        [  81,  -24],\\n        [   1,  -96],\\n        [  29,  -57],\\n        [ -72,   70],\\n        [ -19,   21],\\n        [  82,  -60],\\n        [ -69,   46],\\n        [  24,    0],\\n        [-100,  -79],\\n        [   5,  -85],\\n        [  66,  -27]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001049981452524662, "start": 1738453675.8272765, "stop": 1738453675.828327, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3418a7633a3c4e17a33cebed50e1958e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_1.py::test_matrix_of_having_118_integers", "location": ["tests58_33_1.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_1.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001290133222937584, "start": 1738453675.8455799, "stop": 1738453675.8457093, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3418a7633a3c4e17a33cebed50e1958e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
