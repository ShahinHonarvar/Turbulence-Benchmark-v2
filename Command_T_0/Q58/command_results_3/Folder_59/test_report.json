{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_3.py::test_matrix_of_one_integer", "location": ["tests58_59_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00041601061820983887, "start": 1738453850.9222367, "stop": 1738453850.922653, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1013ec58e8f64a3b8fb450a12d24023a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_one_integer", "location": ["tests58_59_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003257161006331444, "start": 1738453850.923042, "stop": 1738453850.9233682, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1013ec58e8f64a3b8fb450a12d24023a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_one_integer", "location": ["tests58_59_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.902178913354874e-05, "start": 1738453850.9236724, "stop": 1738453850.9237518, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1013ec58e8f64a3b8fb450a12d24023a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_having_76_integers", "location": ["tests58_59_3.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002671685069799423, "start": 1738453850.9248197, "stop": 1738453850.9250872, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1013ec58e8f64a3b8fb450a12d24023a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_having_76_integers", "location": ["tests58_59_3.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -31,   72],\\n        [ -47, -100],\\n        [   5,   80],\\n        [ -53,    5],\\n        [  16,   75],\\n        [  38,   -3],\\n        [  93,   85],\\n        [  85,   30],\\n        [  84,   -1],\\n        [ -49,   44],\\n        [ -84,   66],\\n        [ -79,   63],\\n        [  -6,  -17],\\n        [ -66,  -31],\\n        [ -11,  -23],\\n        [  34,   62],\\n        [  -1,  -77],\\n        [  21,   81],\\n        [ -35,   67],\\n        [  83,  -38],\\n        [  96,   23],\\n        [  26,  -72],\\n        [ -29,  -76],\\n        [  80,   59],\\n        [  73,   54],\\n        [  93,  -54],\\n        [  44,  -51],\\n        [ -86,   26],\\n        [ -51,   -9],\\n        [ -39,  -25],\\n        [  -3,    1],\\n        [ -42,  -39],\\n        [-100,  -81],\\n        [  57,  -50],\\n        [  54,  -58],\\n        [ -58,  -45],\\n        [  19,  -37],\\n        [ -96,   -1]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -31,   72],\\n        [ -47, -100],\\n        [   5,   80],\\n        [ -53,    5],\\n        [  16,   75],\\n        [  38,   -3],\\n        [  93,   85],\\n        [  85,   30],\\n        [  84,   -1],\\n        [ -49,   44],\\n        [ -84,   66],\\n        [ -79,   63],\\n        [  -6,  -17],\\n        [ -66,  -31],\\n        [ -11,  -23],\\n        [  34,   62],\\n        [  -1,  -77],\\n        [  21,   81],\\n        [ -35,   67],\\n        [  83,  -38],\\n        [  96,   23],\\n        [  26,  -72],\\n        [ -29,  -76],\\n        [  80,   59],\\n        [  73,   54],\\n        [  93,  -54],\\n        [  44,  -51],\\n        [ -86,   26],\\n        [ -51,   -9],\\n        [ -39,  -25],\\n        [  -3,    1],\\n        [ -42,  -39],\\n        [-100,  -81],\\n        [  57,  -50],\\n        [  54,  -58],\\n        [ -58,  -45],\\n        [  19,  -37],\\n        [ -96,   -1]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -31,   72],\\n        [ -47, -100],\\n        [   5,   80],\\n        [ -53,    5],\\n        [  16,   75],\\n        [  38,   -3],\\n        [  93,   85],\\n        [  85,   30],\\n        [  84,   -1],\\n        [ -49,   44],\\n        [ -84,   66],\\n        [ -79,   63],\\n        [  -6,  -17],\\n        [ -66,  -31],\\n        [ -11,  -23],\\n        [  34,   62],\\n        [  -1,  -77],\\n        [  21,   81],\\n        [ -35,   67],\\n        [  83,  -38],\\n        [  96,   23],\\n        [  26,  -72],\\n        [ -29,  -76],\\n        [  80,   59],\\n        [  73,   54],\\n        [  93,  -54],\\n        [  44,  -51],\\n        [ -86,   26],\\n        [ -51,   -9],\\n        [ -39,  -25],\\n        [  -3,    1],\\n        [ -42,  -39],\\n        [-100,  -81],\\n        [  57,  -50],\\n        [  54,  -58],\\n        [ -58,  -45],\\n        [  19,  -37],\\n        [ -96,   -1]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_59/tests58_59_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -31,   72],\\n        [ -47, -100],\\n        [   5,   80],\\n        [ -53,    5],\\n        [  16,   75],\\n        [  38,   -3],\\n        [  93,   85],\\n        [  85,   30],\\n        [  84,   -1],\\n        [ -49,   44],\\n        [ -84,   66],\\n        [ -79,   63],\\n        [  -6,  -17],\\n        [ -66,  -31],\\n        [ -11,  -23],\\n        [  34,   62],\\n        [  -1,  -77],\\n        [  21,   81],\\n        [ -35,   67],\\n        [  83,  -38],\\n        [  96,   23],\\n        [  26,  -72],\\n        [ -29,  -76],\\n        [  80,   59],\\n        [  73,   54],\\n        [  93,  -54],\\n        [  44,  -51],\\n        [ -86,   26],\\n        [ -51,   -9],\\n        [ -39,  -25],\\n        [  -3,    1],\\n        [ -42,  -39],\\n        [-100,  -81],\\n        [  57,  -50],\\n        [  54,  -58],\\n        [ -58,  -45],\\n        [  19,  -37],\\n        [ -96,   -1]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007988922297954559, "start": 1738453850.92519, "stop": 1738453850.9259894, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1013ec58e8f64a3b8fb450a12d24023a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_3.py::test_matrix_of_having_76_integers", "location": ["tests58_59_3.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_3.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001795496791601181, "start": 1738453850.9436023, "stop": 1738453850.9437823, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1013ec58e8f64a3b8fb450a12d24023a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
