{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012937188148498535, "start": 1738453842.9507384, "stop": 1738453842.9508681, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f3bd655ef8944777bd19e518aeef4535", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018352270126342773, "start": 1738453842.95139, "stop": 1738453842.951574, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f3bd655ef8944777bd19e518aeef4535", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_one_integer", "location": ["tests58_48_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010981038212776184, "start": 1738453842.9556448, "stop": 1738453842.9557552, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f3bd655ef8944777bd19e518aeef4535", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.793268352746964e-05, "start": 1738453842.9565077, "stop": 1738453842.9565957, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f3bd655ef8944777bd19e518aeef4535", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 88,  78],\\n        [-28, -76],\\n        [-29, -51],\\n        [  3,  87],\\n        [  6, -63],\\n        [-49,  11],\\n        [ 60, -79],\\n        [ 77,  88],\\n        [ -6,  46],\\n        [-29, -48],\\n        [-52,  84],\\n        [-16,  77],\\n        [ 62, -71],\\n        [-35, -60],\\n        [-19,  56],\\n        [-22, -98],\\n        [-55, -22],\\n        [ 21, -70],\\n        [-24, -56],\\n        [-94,  89],\\n        [ 68, -12],\\n        [100,  -1],\\n        [ 28, -65],\\n        [-15, -77],\\n        [ -2,  49],\\n        [ -6,  98],\\n        [-97,  95],\\n        [-62, -68],\\n        [ 73, -50],\\n        [ -6,  79],\\n        [-26,  97],\\n        [-87, -76],\\n        [-47,  -6],\\n        [-49, -79],\\n        [ 61,   6],\\n        [-33, -93],\\n        [ 94,  -1],\\n        [ 30,  81],\\n        [-21,  -3],\\n        [-23, -44],\\n        [ 98, -16],\\n        [ 78,  42],\\n        [ 29,  29],\\n        [ 92,  38],\\n        [ 99, -38],\\n        [ 74, -87],\\n        [ 62, -92],\\n        [ 75,  78],\\n        [-58,   2],\\n        [-70, -40],\\n        [-76,  40],\\n        [ -7, -14],\\n        [ 38,  85],\\n        [-35,  40],\\n        [-48,  92],\\n        [ 62, -80],\\n        [-18, -88],\\n        [-23, -11],\\n        [ 51,  31],\\n        [ -6,  52],\\n        [ 72,  61],\\n        [-38, -44],\\n        [-63,  96],\\n        [-70,  -5],\\n        [-60,   4]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 88,  78],\\n        [-28, -76],\\n        [-29, -51],\\n        [  3,  87],\\n        [  6, -63],\\n        [-49,  11],\\n        [ 60, -79],\\n        [ 77,  88],\\n        [ -6,  46],\\n        [-29, -48],\\n        [-52,  84],\\n        [-16,  77],\\n        [ 62, -71],\\n        [-35, -60],\\n        [-19,  56],\\n        [-22, -98],\\n        [-55, -22],\\n        [ 21, -70],\\n        [-24, -56],\\n        [-94,  89],\\n        [ 68, -12],\\n        [100,  -1],\\n        [ 28, -65],\\n        [-15, -77],\\n        [ -2,  49],\\n        [ -6,  98],\\n        [-97,  95],\\n        [-62, -68],\\n        [ 73, -50],\\n        [ -6,  79],\\n        [-26,  97],\\n        [-87, -76],\\n        [-47,  -6],\\n        [-49, -79],\\n        [ 61,   6],\\n        [-33, -93],\\n        [ 94,  -1],\\n        [ 30,  81],\\n        [-21,  -3],\\n        [-23, -44],\\n        [ 98, -16],\\n        [ 78,  42],\\n        [ 29,  29],\\n        [ 92,  38],\\n        [ 99, -38],\\n        [ 74, -87],\\n        [ 62, -92],\\n        [ 75,  78],\\n        [-58,   2],\\n        [-70, -40],\\n        [-76,  40],\\n        [ -7, -14],\\n        [ 38,  85],\\n        [-35,  40],\\n        [-48,  92],\\n        [ 62, -80],\\n        [-18, -88],\\n        [-23, -11],\\n        [ 51,  31],\\n        [ -6,  52],\\n        [ 72,  61],\\n        [-38, -44],\\n        [-63,  96],\\n        [-70,  -5],\\n        [-60,   4]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 88,  78],\\n        [-28, -76],\\n        [-29, -51],\\n        [  3,  87],\\n        [  6, -63],\\n        [-49,  11],\\n        [ 60, -79],\\n        [ 77,  88],\\n        [ -6,  46],\\n        [-29, -48],\\n        [-52,  84],\\n        [-16,  77],\\n        [ 62, -71],\\n        [-35, -60],\\n        [-19,  56],\\n        [-22, -98],\\n        [-55, -22],\\n        [ 21, -70],\\n        [-24, -56],\\n        [-94,  89],\\n        [ 68, -12],\\n        [100,  -1],\\n        [ 28, -65],\\n        [-15, -77],\\n        [ -2,  49],\\n        [ -6,  98],\\n        [-97,  95],\\n        [-62, -68],\\n        [ 73, -50],\\n        [ -6,  79],\\n        [-26,  97],\\n        [-87, -76],\\n        [-47,  -6],\\n        [-49, -79],\\n        [ 61,   6],\\n        [-33, -93],\\n        [ 94,  -1],\\n        [ 30,  81],\\n        [-21,  -3],\\n        [-23, -44],\\n        [ 98, -16],\\n        [ 78,  42],\\n        [ 29,  29],\\n        [ 92,  38],\\n        [ 99, -38],\\n        [ 74, -87],\\n        [ 62, -92],\\n        [ 75,  78],\\n        [-58,   2],\\n        [-70, -40],\\n        [-76,  40],\\n        [ -7, -14],\\n        [ 38,  85],\\n        [-35,  40],\\n        [-48,  92],\\n        [ 62, -80],\\n        [-18, -88],\\n        [-23, -11],\\n        [ 51,  31],\\n        [ -6,  52],\\n        [ 72,  61],\\n        [-38, -44],\\n        [-63,  96],\\n        [-70,  -5],\\n        [-60,   4]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_48/tests58_48_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 88,  78],\\n        [-28, -76],\\n        [-29, -51],\\n        [  3,  87],\\n        [  6, -63],\\n        [-49,  11],\\n        [ 60, -79],\\n        [ 77,  88],\\n        [ -6,  46],\\n        [-29, -48],\\n        [-52,  84],\\n        [-16,  77],\\n        [ 62, -71],\\n        [-35, -60],\\n        [-19,  56],\\n        [-22, -98],\\n        [-55, -22],\\n        [ 21, -70],\\n        [-24, -56],\\n        [-94,  89],\\n        [ 68, -12],\\n        [100,  -1],\\n        [ 28, -65],\\n        [-15, -77],\\n        [ -2,  49],\\n        [ -6,  98],\\n        [-97,  95],\\n        [-62, -68],\\n        [ 73, -50],\\n        [ -6,  79],\\n        [-26,  97],\\n        [-87, -76],\\n        [-47,  -6],\\n        [-49, -79],\\n        [ 61,   6],\\n        [-33, -93],\\n        [ 94,  -1],\\n        [ 30,  81],\\n        [-21,  -3],\\n        [-23, -44],\\n        [ 98, -16],\\n        [ 78,  42],\\n        [ 29,  29],\\n        [ 92,  38],\\n        [ 99, -38],\\n        [ 74, -87],\\n        [ 62, -92],\\n        [ 75,  78],\\n        [-58,   2],\\n        [-70, -40],\\n        [-76,  40],\\n        [ -7, -14],\\n        [ 38,  85],\\n        [-35,  40],\\n        [-48,  92],\\n        [ 62, -80],\\n        [-18, -88],\\n        [-23, -11],\\n        [ 51,  31],\\n        [ -6,  52],\\n        [ 72,  61],\\n        [-38, -44],\\n        [-63,  96],\\n        [-70,  -5],\\n        [-60,   4]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007436741143465042, "start": 1738453842.9566934, "stop": 1738453842.9574375, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f3bd655ef8944777bd19e518aeef4535", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_3.py::test_matrix_of_having_130_integers", "location": ["tests58_48_3.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_3.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011716969311237335, "start": 1738453842.9785538, "stop": 1738453842.9786718, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f3bd655ef8944777bd19e518aeef4535", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
