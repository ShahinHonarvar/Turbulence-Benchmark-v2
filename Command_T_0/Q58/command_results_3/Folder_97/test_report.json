{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_3.py::test_matrix_of_one_integer", "location": ["tests58_97_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040597841143608093, "start": 1738453879.7607305, "stop": 1738453879.7611372, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b68b3f3721da4cc78c2e499d8eb2d10c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_one_integer", "location": ["tests58_97_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00041091907769441605, "start": 1738453879.7614248, "stop": 1738453879.7618363, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b68b3f3721da4cc78c2e499d8eb2d10c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_one_integer", "location": ["tests58_97_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.730310946702957e-05, "start": 1738453879.762248, "stop": 1738453879.7623355, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b68b3f3721da4cc78c2e499d8eb2d10c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_having_120_integers", "location": ["tests58_97_3.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.551271796226501e-05, "start": 1738453879.7635872, "stop": 1738453879.7636833, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b68b3f3721da4cc78c2e499d8eb2d10c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_having_120_integers", "location": ["tests58_97_3.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -88,   34],\\n        [  35,   55],\\n        [   4,  -77],\\n        [   4,   -1],\\n        [ -57,   69],\\n        [  52,  -96],\\n        [  49,   87],\\n        [  28,   94],\\n        [ -80,  -95],\\n        [ -30,   -8],\\n        [  70,  -53],\\n        [  74,   54],\\n        [-100,   13],\\n        [  26,  -24],\\n        [  96,   21],\\n        [  18,   63],\\n        [ -92,  -36],\\n        [  15,  -17],\\n        [ -69,  -63],\\n        [  68,   69],\\n        [ -78,   65],\\n        [ -27,  -73],\\n        [  16,  -42],\\n        [  47,   92],\\n        [  99,   63],\\n        [  81,   22],\\n        [ -71,  -84],\\n        [ -72,    3],\\n        [ -42,  -52],\\n        [  79,   85],\\n        [ -11,  -26],\\n        [ -65,  -17],\\n        [  74,   49],\\n        [ -41,   16],\\n        [ -29,   75],\\n        [ -14,  -23],\\n        [  67,  -50],\\n        [  16,   47],\\n        [  79,   38],\\n        [  79,  -81],\\n        [  68,  -92],\\n        [  17,   77],\\n        [  53,  -13],\\n        [ -57,  -73],\\n        [  46,   83],\\n        [ -16,   35],\\n        [  39,  -80],\\n        [  14,   24],\\n        [ -86,   60],\\n        [  45,   90],\\n        [ -99,  -14],\\n        [ -97,  -57],\\n        [  18,    9],\\n        [  85, -100],\\n        [  68,  -76],\\n        [ -96,  -57],\\n        [  60,   87],\\n        [  10,   96],\\n        [ -62,  -19],\\n        [  57,  -19]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -88,   34],\\n        [  35,   55],\\n        [   4,  -77],\\n        [   4,   -1],\\n        [ -57,   69],\\n        [  52,  -96],\\n        [  49,   87],\\n        [  28,   94],\\n        [ -80,  -95],\\n        [ -30,   -8],\\n        [  70,  -53],\\n        [  74,   54],\\n        [-100,   13],\\n        [  26,  -24],\\n        [  96,   21],\\n        [  18,   63],\\n        [ -92,  -36],\\n        [  15,  -17],\\n        [ -69,  -63],\\n        [  68,   69],\\n        [ -78,   65],\\n        [ -27,  -73],\\n        [  16,  -42],\\n        [  47,   92],\\n        [  99,   63],\\n        [  81,   22],\\n        [ -71,  -84],\\n        [ -72,    3],\\n        [ -42,  -52],\\n        [  79,   85],\\n        [ -11,  -26],\\n        [ -65,  -17],\\n        [  74,   49],\\n        [ -41,   16],\\n        [ -29,   75],\\n        [ -14,  -23],\\n        [  67,  -50],\\n        [  16,   47],\\n        [  79,   38],\\n        [  79,  -81],\\n        [  68,  -92],\\n        [  17,   77],\\n        [  53,  -13],\\n        [ -57,  -73],\\n        [  46,   83],\\n        [ -16,   35],\\n        [  39,  -80],\\n        [  14,   24],\\n        [ -86,   60],\\n        [  45,   90],\\n        [ -99,  -14],\\n        [ -97,  -57],\\n        [  18,    9],\\n        [  85, -100],\\n        [  68,  -76],\\n        [ -96,  -57],\\n        [  60,   87],\\n        [  10,   96],\\n        [ -62,  -19],\\n        [  57,  -19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -88,   34],\\n        [  35,   55],\\n        [   4,  -77],\\n        [   4,   -1],\\n        [ -57,   69],\\n        [  52,  -96],\\n        [  49,   87],\\n        [  28,   94],\\n        [ -80,  -95],\\n        [ -30,   -8],\\n        [  70,  -53],\\n        [  74,   54],\\n        [-100,   13],\\n        [  26,  -24],\\n        [  96,   21],\\n        [  18,   63],\\n        [ -92,  -36],\\n        [  15,  -17],\\n        [ -69,  -63],\\n        [  68,   69],\\n        [ -78,   65],\\n        [ -27,  -73],\\n        [  16,  -42],\\n        [  47,   92],\\n        [  99,   63],\\n        [  81,   22],\\n        [ -71,  -84],\\n        [ -72,    3],\\n        [ -42,  -52],\\n        [  79,   85],\\n        [ -11,  -26],\\n        [ -65,  -17],\\n        [  74,   49],\\n        [ -41,   16],\\n        [ -29,   75],\\n        [ -14,  -23],\\n        [  67,  -50],\\n        [  16,   47],\\n        [  79,   38],\\n        [  79,  -81],\\n        [  68,  -92],\\n        [  17,   77],\\n        [  53,  -13],\\n        [ -57,  -73],\\n        [  46,   83],\\n        [ -16,   35],\\n        [  39,  -80],\\n        [  14,   24],\\n        [ -86,   60],\\n        [  45,   90],\\n        [ -99,  -14],\\n        [ -97,  -57],\\n        [  18,    9],\\n        [  85, -100],\\n        [  68,  -76],\\n        [ -96,  -57],\\n        [  60,   87],\\n        [  10,   96],\\n        [ -62,  -19],\\n        [  57,  -19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -88,   34],\\n        [  35,   55],\\n        [   4,  -77],\\n        [   4,   -1],\\n        [ -57,   69],\\n        [  52,  -96],\\n        [  49,   87],\\n        [  28,   94],\\n        [ -80,  -95],\\n        [ -30,   -8],\\n        [  70,  -53],\\n        [  74,   54],\\n        [-100,   13],\\n        [  26,  -24],\\n        [  96,   21],\\n        [  18,   63],\\n        [ -92,  -36],\\n        [  15,  -17],\\n        [ -69,  -63],\\n        [  68,   69],\\n        [ -78,   65],\\n        [ -27,  -73],\\n        [  16,  -42],\\n        [  47,   92],\\n        [  99,   63],\\n        [  81,   22],\\n        [ -71,  -84],\\n        [ -72,    3],\\n        [ -42,  -52],\\n        [  79,   85],\\n        [ -11,  -26],\\n        [ -65,  -17],\\n        [  74,   49],\\n        [ -41,   16],\\n        [ -29,   75],\\n        [ -14,  -23],\\n        [  67,  -50],\\n        [  16,   47],\\n        [  79,   38],\\n        [  79,  -81],\\n        [  68,  -92],\\n        [  17,   77],\\n        [  53,  -13],\\n        [ -57,  -73],\\n        [  46,   83],\\n        [ -16,   35],\\n        [  39,  -80],\\n        [  14,   24],\\n        [ -86,   60],\\n        [  45,   90],\\n        [ -99,  -14],\\n        [ -97,  -57],\\n        [  18,    9],\\n        [  85, -100],\\n        [  68,  -76],\\n        [ -96,  -57],\\n        [  60,   87],\\n        [  10,   96],\\n        [ -62,  -19],\\n        [  57,  -19]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007790364325046539, "start": 1738453879.7639883, "stop": 1738453879.7647676, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b68b3f3721da4cc78c2e499d8eb2d10c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_having_120_integers", "location": ["tests58_97_3.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013899896293878555, "start": 1738453879.7914617, "stop": 1738453879.7916014, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b68b3f3721da4cc78c2e499d8eb2d10c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
