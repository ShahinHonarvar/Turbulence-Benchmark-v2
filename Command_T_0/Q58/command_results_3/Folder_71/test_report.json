{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_71_3.py::test_matrix_of_one_integer", "location": ["tests58_71_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_3.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014023017138242722, "start": 1738453859.5511599, "stop": 1738453859.5513003, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d9b60fabe3864524a59ea87ad29bb947", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_3.py::test_matrix_of_one_integer", "location": ["tests58_71_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_3.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001831240952014923, "start": 1738453859.5514803, "stop": 1738453859.5516636, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d9b60fabe3864524a59ea87ad29bb947", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_3.py::test_matrix_of_one_integer", "location": ["tests58_71_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_3.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.726438343524933e-05, "start": 1738453859.5519617, "stop": 1738453859.5520394, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d9b60fabe3864524a59ea87ad29bb947", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_3.py::test_matrix_of_having_78_integers", "location": ["tests58_71_3.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_3.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.846501052379608e-05, "start": 1738453859.553718, "stop": 1738453859.5538168, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d9b60fabe3864524a59ea87ad29bb947", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_3.py::test_matrix_of_having_78_integers", "location": ["tests58_71_3.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_3.py": 1, "Folder_71": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_71/tests58_71_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -30,   86],\\n        [  32,  -88],\\n        [ -34,  -33],\\n        [  54,  -14],\\n        [ -91,  -97],\\n        [   1,  -26],\\n        [  76,   46],\\n        [   1,   91],\\n        [  -3,  -99],\\n        [  77,   -9],\\n        [ -57,   44],\\n        [ -60,   81],\\n        [  67,  -34],\\n        [ -17,   -8],\\n        [  64,  100],\\n        [  44,    7],\\n        [ -55,   71],\\n        [ -11,   95],\\n        [  89,  -82],\\n        [ -93,   66],\\n        [   1,  -45],\\n        [  52,  -46],\\n        [  31,   16],\\n        [   9,  -25],\\n        [  44,  -79],\\n        [  45,  -47],\\n        [ -85,   56],\\n        [  71,  -83],\\n        [  72,  -58],\\n        [ -48,   73],\\n        [-100,  -12],\\n        [ -75,   60],\\n        [  82,  -61],\\n        [ -99,  -24],\\n        [ -98,    5],\\n        [  73,    9],\\n        [  98,   76],\\n        [ -63,   84],\\n        [  -6,   53]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -30,   86],\\n        [  32,  -88],\\n        [ -34,  -33],\\n        [  54,  -14],\\n        [ -91,  -97],\\n        [   1,  -26],\\n        [  76,   46],\\n        [   1,   91],\\n        [  -3,  -99],\\n        [  77,   -9],\\n        [ -57,   44],\\n        [ -60,   81],\\n        [  67,  -34],\\n        [ -17,   -8],\\n        [  64,  100],\\n        [  44,    7],\\n        [ -55,   71],\\n        [ -11,   95],\\n        [  89,  -82],\\n        [ -93,   66],\\n        [   1,  -45],\\n        [  52,  -46],\\n        [  31,   16],\\n        [   9,  -25],\\n        [  44,  -79],\\n        [  45,  -47],\\n        [ -85,   56],\\n        [  71,  -83],\\n        [  72,  -58],\\n        [ -48,   73],\\n        [-100,  -12],\\n        [ -75,   60],\\n        [  82,  -61],\\n        [ -99,  -24],\\n        [ -98,    5],\\n        [  73,    9],\\n        [  98,   76],\\n        [ -63,   84],\\n        [  -6,   53]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_71/tests58_71_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -30,   86],\\n        [  32,  -88],\\n        [ -34,  -33],\\n        [  54,  -14],\\n        [ -91,  -97],\\n        [   1,  -26],\\n        [  76,   46],\\n        [   1,   91],\\n        [  -3,  -99],\\n        [  77,   -9],\\n        [ -57,   44],\\n        [ -60,   81],\\n        [  67,  -34],\\n        [ -17,   -8],\\n        [  64,  100],\\n        [  44,    7],\\n        [ -55,   71],\\n        [ -11,   95],\\n        [  89,  -82],\\n        [ -93,   66],\\n        [   1,  -45],\\n        [  52,  -46],\\n        [  31,   16],\\n        [   9,  -25],\\n        [  44,  -79],\\n        [  45,  -47],\\n        [ -85,   56],\\n        [  71,  -83],\\n        [  72,  -58],\\n        [ -48,   73],\\n        [-100,  -12],\\n        [ -75,   60],\\n        [  82,  -61],\\n        [ -99,  -24],\\n        [ -98,    5],\\n        [  73,    9],\\n        [  98,   76],\\n        [ -63,   84],\\n        [  -6,   53]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_71/tests58_71_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_71/tests58_71_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -30,   86],\\n        [  32,  -88],\\n        [ -34,  -33],\\n        [  54,  -14],\\n        [ -91,  -97],\\n        [   1,  -26],\\n        [  76,   46],\\n        [   1,   91],\\n        [  -3,  -99],\\n        [  77,   -9],\\n        [ -57,   44],\\n        [ -60,   81],\\n        [  67,  -34],\\n        [ -17,   -8],\\n        [  64,  100],\\n        [  44,    7],\\n        [ -55,   71],\\n        [ -11,   95],\\n        [  89,  -82],\\n        [ -93,   66],\\n        [   1,  -45],\\n        [  52,  -46],\\n        [  31,   16],\\n        [   9,  -25],\\n        [  44,  -79],\\n        [  45,  -47],\\n        [ -85,   56],\\n        [  71,  -83],\\n        [  72,  -58],\\n        [ -48,   73],\\n        [-100,  -12],\\n        [ -75,   60],\\n        [  82,  -61],\\n        [ -99,  -24],\\n        [ -98,    5],\\n        [  73,    9],\\n        [  98,   76],\\n        [ -63,   84],\\n        [  -6,   53]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006450200453400612, "start": 1738453859.5539203, "stop": 1738453859.5545657, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d9b60fabe3864524a59ea87ad29bb947", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_3.py::test_matrix_of_having_78_integers", "location": ["tests58_71_3.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_3.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000148724764585495, "start": 1738453859.610723, "stop": 1738453859.6108725, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d9b60fabe3864524a59ea87ad29bb947", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
