{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00041
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  92,   88],\\n        [ -67,  -90],\\n        [ -32,  -86],\\n        [  73,  -39],\\n        [ -40,  -66],\\n        [ -88,  -66],\\n        [   1,   26],\\n        [ -27,   52],\\n        [ -60,   39],\\n        [  83,   -9],\\n        [ -83,   50],\\n        [ -59,   -5],\\n        [  89,   -2],\\n        [  96,  -26],\\n        [  -6,   37],\\n        [ -49,  -62],\\n        [  53,  -73],\\n        [  25,  -37],\\n        [  -7,   84],\\n        [  19,   11],\\n        [  57,  -80],\\n        [  72,  -24],\\n        [ -50,   79],\\n        [ -36,  -12],\\n        [  88,  -96],\\n        [  96,  -36],\\n        [  26,  -56],\\n        [  75,    1],\\n        [ -55,    1],\\n        [  75,   54],\\n        [  19,  -89],\\n        [  21,   58],\\n        [ -60,   -6],\\n        [ -31,   99],\\n        [ -36,  -48],\\n        [ -43,   75],\\n        [  63,   36],\\n        [ -45,  -79],\\n        [ -30,  -32],\\n        [ -18,   -7],\\n        [  16,    9],\\n        [  61,   15],\\n        [ -36,   26],\\n        [ -42,   58],\\n        [ -27,  -43],\\n        [  67,  -37],\\n        [-100,  -72],\\n        [ -30,   -4]]))",
    0.00089
  ]
}