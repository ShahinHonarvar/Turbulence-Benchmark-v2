{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040810927748680115, "start": 1738453841.4755538, "stop": 1738453841.4759624, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5017164407d44488b126b0aefd87c2a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001836884766817093, "start": 1738453841.476479, "stop": 1738453841.476663, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5017164407d44488b126b0aefd87c2a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001689838245511055, "start": 1738453841.4769695, "stop": 1738453841.477139, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5017164407d44488b126b0aefd87c2a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003516916185617447, "start": 1738453841.4781644, "stop": 1738453841.478517, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5017164407d44488b126b0aefd87c2a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -91],\\n        [  81,   19],\\n        [  69,  -35],\\n        [ -84,  -26],\\n        [  79,  -88],\\n        [   8,   29],\\n        [ -45,   97],\\n        [  74,   82],\\n        [  78,   40],\\n        [ -29,  -97],\\n        [  22,  -43],\\n        [   5,   31],\\n        [ -27,   21],\\n        [ -52,  -28],\\n        [ -98,  -69],\\n        [ -93,   -8],\\n        [  88,   31],\\n        [  78,  -56],\\n        [  11,   94],\\n        [  90,  -22],\\n        [  27,   50],\\n        [  34,   42],\\n        [  34,  -49],\\n        [  70,   -1],\\n        [  11,  100],\\n        [   5,  -95],\\n        [  13,   79],\\n        [ -93,   -2],\\n        [  26,   54],\\n        [  61,   20],\\n        [ -47,   30],\\n        [   9,   82],\\n        [ -46,   30],\\n        [ -95,  -15],\\n        [  10,   -2],\\n        [ -68,   55],\\n        [ -84,   47],\\n        [  21,    8],\\n        [ -43,  -41],\\n        [  30,  -49],\\n        [  85,  -45],\\n        [  48,  -11],\\n        [ -90,   19],\\n        [  19,  -62],\\n        [  85,   23],\\n        [  58,  -41],\\n        [  50,   69],\\n        [ -90,   51],\\n        [ -11,   13],\\n        [  48,   20],\\n        [ -71,   70],\\n        [ -70,  -46],\\n        [-100,  -38],\\n        [ -31, -100],\\n        [  52,  -20],\\n        [ -88,  -35],\\n        [  79,  -56],\\n        [  -9,  -48],\\n        [  44,  -35],\\n        [ -99,   33],\\n        [ -61,   91],\\n        [ 100,  -60],\\n        [  35,  -67],\\n        [  63,  -27],\\n        [  85,   83],\\n        [  12,   40],\\n        [  68,    7],\\n        [ -66,   10],\\n        [  24,   85],\\n        [  42,  -25],\\n        [  96,  -62],\\n        [ -45,  -96]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -91],\\n        [  81,   19],\\n        [  69,  -35],\\n        [ -84,  -26],\\n        [  79,  -88],\\n        [   8,   29],\\n        [ -45,   97],\\n        [  74,   82],\\n        [  78,   40],\\n        [ -29,  -97],\\n        [  22,  -43],\\n        [   5,   31],\\n        [ -27,   21],\\n        [ -52,  -28],\\n        [ -98,  -69],\\n        [ -93,   -8],\\n        [  88,   31],\\n        [  78,  -56],\\n        [  11,   94],\\n        [  90,  -22],\\n        [  27,   50],\\n        [  34,   42],\\n        [  34,  -49],\\n        [  70,   -1],\\n        [  11,  100],\\n        [   5,  -95],\\n        [  13,   79],\\n        [ -93,   -2],\\n        [  26,   54],\\n        [  61,   20],\\n        [ -47,   30],\\n        [   9,   82],\\n        [ -46,   30],\\n        [ -95,  -15],\\n        [  10,   -2],\\n        [ -68,   55],\\n        [ -84,   47],\\n        [  21,    8],\\n        [ -43,  -41],\\n        [  30,  -49],\\n        [  85,  -45],\\n        [  48,  -11],\\n        [ -90,   19],\\n        [  19,  -62],\\n        [  85,   23],\\n        [  58,  -41],\\n        [  50,   69],\\n        [ -90,   51],\\n        [ -11,   13],\\n        [  48,   20],\\n        [ -71,   70],\\n        [ -70,  -46],\\n        [-100,  -38],\\n        [ -31, -100],\\n        [  52,  -20],\\n        [ -88,  -35],\\n        [  79,  -56],\\n        [  -9,  -48],\\n        [  44,  -35],\\n        [ -99,   33],\\n        [ -61,   91],\\n        [ 100,  -60],\\n        [  35,  -67],\\n        [  63,  -27],\\n        [  85,   83],\\n        [  12,   40],\\n        [  68,    7],\\n        [ -66,   10],\\n        [  24,   85],\\n        [  42,  -25],\\n        [  96,  -62],\\n        [ -45,  -96]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -91],\\n        [  81,   19],\\n        [  69,  -35],\\n        [ -84,  -26],\\n        [  79,  -88],\\n        [   8,   29],\\n        [ -45,   97],\\n        [  74,   82],\\n        [  78,   40],\\n        [ -29,  -97],\\n        [  22,  -43],\\n        [   5,   31],\\n        [ -27,   21],\\n        [ -52,  -28],\\n        [ -98,  -69],\\n        [ -93,   -8],\\n        [  88,   31],\\n        [  78,  -56],\\n        [  11,   94],\\n        [  90,  -22],\\n        [  27,   50],\\n        [  34,   42],\\n        [  34,  -49],\\n        [  70,   -1],\\n        [  11,  100],\\n        [   5,  -95],\\n        [  13,   79],\\n        [ -93,   -2],\\n        [  26,   54],\\n        [  61,   20],\\n        [ -47,   30],\\n        [   9,   82],\\n        [ -46,   30],\\n        [ -95,  -15],\\n        [  10,   -2],\\n        [ -68,   55],\\n        [ -84,   47],\\n        [  21,    8],\\n        [ -43,  -41],\\n        [  30,  -49],\\n        [  85,  -45],\\n        [  48,  -11],\\n        [ -90,   19],\\n        [  19,  -62],\\n        [  85,   23],\\n        [  58,  -41],\\n        [  50,   69],\\n        [ -90,   51],\\n        [ -11,   13],\\n        [  48,   20],\\n        [ -71,   70],\\n        [ -70,  -46],\\n        [-100,  -38],\\n        [ -31, -100],\\n        [  52,  -20],\\n        [ -88,  -35],\\n        [  79,  -56],\\n        [  -9,  -48],\\n        [  44,  -35],\\n        [ -99,   33],\\n        [ -61,   91],\\n        [ 100,  -60],\\n        [  35,  -67],\\n        [  63,  -27],\\n        [  85,   83],\\n        [  12,   40],\\n        [  68,    7],\\n        [ -66,   10],\\n        [  24,   85],\\n        [  42,  -25],\\n        [  96,  -62],\\n        [ -45,  -96]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -91],\\n        [  81,   19],\\n        [  69,  -35],\\n        [ -84,  -26],\\n        [  79,  -88],\\n        [   8,   29],\\n        [ -45,   97],\\n        [  74,   82],\\n        [  78,   40],\\n        [ -29,  -97],\\n        [  22,  -43],\\n        [   5,   31],\\n        [ -27,   21],\\n        [ -52,  -28],\\n        [ -98,  -69],\\n        [ -93,   -8],\\n        [  88,   31],\\n        [  78,  -56],\\n        [  11,   94],\\n        [  90,  -22],\\n        [  27,   50],\\n        [  34,   42],\\n        [  34,  -49],\\n        [  70,   -1],\\n        [  11,  100],\\n        [   5,  -95],\\n        [  13,   79],\\n        [ -93,   -2],\\n        [  26,   54],\\n        [  61,   20],\\n        [ -47,   30],\\n        [   9,   82],\\n        [ -46,   30],\\n        [ -95,  -15],\\n        [  10,   -2],\\n        [ -68,   55],\\n        [ -84,   47],\\n        [  21,    8],\\n        [ -43,  -41],\\n        [  30,  -49],\\n        [  85,  -45],\\n        [  48,  -11],\\n        [ -90,   19],\\n        [  19,  -62],\\n        [  85,   23],\\n        [  58,  -41],\\n        [  50,   69],\\n        [ -90,   51],\\n        [ -11,   13],\\n        [  48,   20],\\n        [ -71,   70],\\n        [ -70,  -46],\\n        [-100,  -38],\\n        [ -31, -100],\\n        [  52,  -20],\\n        [ -88,  -35],\\n        [  79,  -56],\\n        [  -9,  -48],\\n        [  44,  -35],\\n        [ -99,   33],\\n        [ -61,   91],\\n        [ 100,  -60],\\n        [  35,  -67],\\n        [  63,  -27],\\n        [  85,   83],\\n        [  12,   40],\\n        [  68,    7],\\n        [ -66,   10],\\n        [  24,   85],\\n        [  42,  -25],\\n        [  96,  -62],\\n        [ -45,  -96]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007587503641843796, "start": 1738453841.4788072, "stop": 1738453841.4795663, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5017164407d44488b126b0aefd87c2a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012062210589647293, "start": 1738453841.5009642, "stop": 1738453841.5010853, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5017164407d44488b126b0aefd87c2a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
