{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000181674025952816, "start": 1738453751.8645709, "stop": 1738453751.864753, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "295076b11a34412cb17104cbe1e81799", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005611348897218704, "start": 1738453751.86492, "stop": 1738453751.8654811, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "295076b11a34412cb17104cbe1e81799", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006007188931107521, "start": 1738453751.8657985, "stop": 1738453751.8663995, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "295076b11a34412cb17104cbe1e81799", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.571147918701172e-05, "start": 1738453751.867338, "stop": 1738453751.8674242, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "295076b11a34412cb17104cbe1e81799", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  30,   -7],\\n        [  35,   80],\\n        [  80,  -58],\\n        [ -70,  -97],\\n        [  79,   23],\\n        [  92,  -15],\\n        [  86,  -78],\\n        [   5,  -80],\\n        [ -91,  -22],\\n        [  66,   -6],\\n        [ -32,  -42],\\n        [  -9,  -16],\\n        [   4,  -90],\\n        [  41,   -6],\\n        [ -75,  -76],\\n        [  12,   -4],\\n        [  21,   87],\\n        [ -91,  -14],\\n        [  31,   98],\\n        [   3,  -97],\\n        [ -14,  -21],\\n        [  -2,   78],\\n        [  69,    2],\\n        [ -27,   79],\\n        [ -40,  -78],\\n        [ -86,  100],\\n        [ -56,   13],\\n        [  76,  -84],\\n        [  93,  -47],\\n        [  42,  -27],\\n        [   5, -100],\\n        [ -20,   86],\\n        [  15,  -35],\\n        [ -62,  -69],\\n        [ -81,   21],\\n        [   8,   20],\\n        [  77,   49],\\n        [ -21,   94],\\n        [ -39,   91],\\n        [  46,   34],\\n        [  58,  -72],\\n        [  89,   93],\\n        [ -94,   13],\\n        [  26,  -15],\\n        [   7,   44],\\n        [ -19,  -59],\\n        [ -37,  -51],\\n        [  89,   15],\\n        [  39,  -64],\\n        [ -11,   52],\\n        [ -16,  -41],\\n        [  27,   33],\\n        [ -85,   96],\\n        [ -93,  -31],\\n        [  46,   43],\\n        [ -69,  -88],\\n        [  15,   20],\\n        [  50,   15],\\n        [  38,  -79]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  30,   -7],\\n        [  35,   80],\\n        [  80,  -58],\\n        [ -70,  -97],\\n        [  79,   23],\\n        [  92,  -15],\\n        [  86,  -78],\\n        [   5,  -80],\\n        [ -91,  -22],\\n        [  66,   -6],\\n        [ -32,  -42],\\n        [  -9,  -16],\\n        [   4,  -90],\\n        [  41,   -6],\\n        [ -75,  -76],\\n        [  12,   -4],\\n        [  21,   87],\\n        [ -91,  -14],\\n        [  31,   98],\\n        [   3,  -97],\\n        [ -14,  -21],\\n        [  -2,   78],\\n        [  69,    2],\\n        [ -27,   79],\\n        [ -40,  -78],\\n        [ -86,  100],\\n        [ -56,   13],\\n        [  76,  -84],\\n        [  93,  -47],\\n        [  42,  -27],\\n        [   5, -100],\\n        [ -20,   86],\\n        [  15,  -35],\\n        [ -62,  -69],\\n        [ -81,   21],\\n        [   8,   20],\\n        [  77,   49],\\n        [ -21,   94],\\n        [ -39,   91],\\n        [  46,   34],\\n        [  58,  -72],\\n        [  89,   93],\\n        [ -94,   13],\\n        [  26,  -15],\\n        [   7,   44],\\n        [ -19,  -59],\\n        [ -37,  -51],\\n        [  89,   15],\\n        [  39,  -64],\\n        [ -11,   52],\\n        [ -16,  -41],\\n        [  27,   33],\\n        [ -85,   96],\\n        [ -93,  -31],\\n        [  46,   43],\\n        [ -69,  -88],\\n        [  15,   20],\\n        [  50,   15],\\n        [  38,  -79]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  30,   -7],\\n        [  35,   80],\\n        [  80,  -58],\\n        [ -70,  -97],\\n        [  79,   23],\\n        [  92,  -15],\\n        [  86,  -78],\\n        [   5,  -80],\\n        [ -91,  -22],\\n        [  66,   -6],\\n        [ -32,  -42],\\n        [  -9,  -16],\\n        [   4,  -90],\\n        [  41,   -6],\\n        [ -75,  -76],\\n        [  12,   -4],\\n        [  21,   87],\\n        [ -91,  -14],\\n        [  31,   98],\\n        [   3,  -97],\\n        [ -14,  -21],\\n        [  -2,   78],\\n        [  69,    2],\\n        [ -27,   79],\\n        [ -40,  -78],\\n        [ -86,  100],\\n        [ -56,   13],\\n        [  76,  -84],\\n        [  93,  -47],\\n        [  42,  -27],\\n        [   5, -100],\\n        [ -20,   86],\\n        [  15,  -35],\\n        [ -62,  -69],\\n        [ -81,   21],\\n        [   8,   20],\\n        [  77,   49],\\n        [ -21,   94],\\n        [ -39,   91],\\n        [  46,   34],\\n        [  58,  -72],\\n        [  89,   93],\\n        [ -94,   13],\\n        [  26,  -15],\\n        [   7,   44],\\n        [ -19,  -59],\\n        [ -37,  -51],\\n        [  89,   15],\\n        [  39,  -64],\\n        [ -11,   52],\\n        [ -16,  -41],\\n        [  27,   33],\\n        [ -85,   96],\\n        [ -93,  -31],\\n        [  46,   43],\\n        [ -69,  -88],\\n        [  15,   20],\\n        [  50,   15],\\n        [  38,  -79]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  30,   -7],\\n        [  35,   80],\\n        [  80,  -58],\\n        [ -70,  -97],\\n        [  79,   23],\\n        [  92,  -15],\\n        [  86,  -78],\\n        [   5,  -80],\\n        [ -91,  -22],\\n        [  66,   -6],\\n        [ -32,  -42],\\n        [  -9,  -16],\\n        [   4,  -90],\\n        [  41,   -6],\\n        [ -75,  -76],\\n        [  12,   -4],\\n        [  21,   87],\\n        [ -91,  -14],\\n        [  31,   98],\\n        [   3,  -97],\\n        [ -14,  -21],\\n        [  -2,   78],\\n        [  69,    2],\\n        [ -27,   79],\\n        [ -40,  -78],\\n        [ -86,  100],\\n        [ -56,   13],\\n        [  76,  -84],\\n        [  93,  -47],\\n        [  42,  -27],\\n        [   5, -100],\\n        [ -20,   86],\\n        [  15,  -35],\\n        [ -62,  -69],\\n        [ -81,   21],\\n        [   8,   20],\\n        [  77,   49],\\n        [ -21,   94],\\n        [ -39,   91],\\n        [  46,   34],\\n        [  58,  -72],\\n        [  89,   93],\\n        [ -94,   13],\\n        [  26,  -15],\\n        [   7,   44],\\n        [ -19,  -59],\\n        [ -37,  -51],\\n        [  89,   15],\\n        [  39,  -64],\\n        [ -11,   52],\\n        [ -16,  -41],\\n        [  27,   33],\\n        [ -85,   96],\\n        [ -93,  -31],\\n        [  46,   43],\\n        [ -69,  -88],\\n        [  15,   20],\\n        [  50,   15],\\n        [  38,  -79]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007472727447748184, "start": 1738453751.8677301, "stop": 1738453751.868478, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "295076b11a34412cb17104cbe1e81799", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012657418847084045, "start": 1738453751.8859296, "stop": 1738453751.8860567, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "295076b11a34412cb17104cbe1e81799", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
