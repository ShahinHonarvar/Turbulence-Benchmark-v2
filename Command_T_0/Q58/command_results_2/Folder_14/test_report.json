{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_14_2.py::test_matrix_of_one_integer", "location": ["tests58_14_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_14_2.py": 1, "Folder_14": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014478527009487152, "start": 1738453736.827318, "stop": 1738453736.8274632, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bb16247d162d49d28ec266b75730a2bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_2.py::test_matrix_of_one_integer", "location": ["tests58_14_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_14_2.py": 1, "Folder_14": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017247721552848816, "start": 1738453736.8276494, "stop": 1738453736.827822, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bb16247d162d49d28ec266b75730a2bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_2.py::test_matrix_of_one_integer", "location": ["tests58_14_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_14_2.py": 1, "Folder_14": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.106922566890717e-05, "start": 1738453736.8281186, "stop": 1738453736.8281898, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bb16247d162d49d28ec266b75730a2bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_2.py::test_matrix_of_having_84_integers", "location": ["tests58_14_2.py", 28, "test_matrix_of_having_84_integers"], "keywords": {"test_matrix_of_having_84_integers": 1, "__wrapped__": 1, "tests58_14_2.py": 1, "Folder_14": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010204315185546875, "start": 1738453736.8330224, "stop": 1738453736.8331249, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bb16247d162d49d28ec266b75730a2bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_2.py::test_matrix_of_having_84_integers", "location": ["tests58_14_2.py", 28, "test_matrix_of_having_84_integers"], "keywords": {"test_matrix_of_having_84_integers": 1, "__wrapped__": 1, "tests58_14_2.py": 1, "Folder_14": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_14/tests58_14_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 28,  78],\\n        [ 91,  92],\\n        [-33,  20],\\n        [-11, -81],\\n        [ 13,  12],\\n        [-20,  88],\\n        [ 52,  95],\\n        [-73,  37],\\n        [-39, -91],\\n        [ 17,  66],\\n        [ 91, -47],\\n        [-40, -37],\\n        [ 96, -51],\\n        [ 23, -23],\\n        [ 79, -62],\\n        [-25, -75],\\n        [-85, -48],\\n        [-89,  58],\\n        [-69,  56],\\n        [-54,  62],\\n        [ 52,   6],\\n        [-37,  65],\\n        [ 71, -53],\\n        [ 74, -10],\\n        [ 68, -97],\\n        [ 65,   3],\\n        [-21,  56],\\n        [-81,  50],\\n        [ 93,  -2],\\n        [ 84,  45],\\n        [-54,  10],\\n        [-97,  51],\\n        [-17,  21],\\n        [-81, -14],\\n        [ 54,  46],\\n        [ 60, -83],\\n        [ 52,   1],\\n        [-94, -38],\\n        [  0, -72],\\n        [ 22, -44],\\n        [-31,  23],\\n        [ 61, -48]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_84_integers():", "        if 84 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(84 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(84)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 28,  78],\\n        [ 91,  92],\\n        [-33,  20],\\n        [-11, -81],\\n        [ 13,  12],\\n        [-20,  88],\\n        [ 52,  95],\\n        [-73,  37],\\n        [-39, -91],\\n        [ 17,  66],\\n        [ 91, -47],\\n        [-40, -37],\\n        [ 96, -51],\\n        [ 23, -23],\\n        [ 79, -62],\\n        [-25, -75],\\n        [-85, -48],\\n        [-89,  58],\\n        [-69,  56],\\n        [-54,  62],\\n        [ 52,   6],\\n        [-37,  65],\\n        [ 71, -53],\\n        [ 74, -10],\\n        [ 68, -97],\\n        [ 65,   3],\\n        [-21,  56],\\n        [-81,  50],\\n        [ 93,  -2],\\n        [ 84,  45],\\n        [-54,  10],\\n        [-97,  51],\\n        [-17,  21],\\n        [-81, -14],\\n        [ 54,  46],\\n        [ 60, -83],\\n        [ 52,   1],\\n        [-94, -38],\\n        [  0, -72],\\n        [ 22, -44],\\n        [-31,  23],\\n        [ 61, -48]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_14/tests58_14_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_84_integers():", "        if 84 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(84 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(84)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 28,  78],\\n        [ 91,  92],\\n        [-33,  20],\\n        [-11, -81],\\n        [ 13,  12],\\n        [-20,  88],\\n        [ 52,  95],\\n        [-73,  37],\\n        [-39, -91],\\n        [ 17,  66],\\n        [ 91, -47],\\n        [-40, -37],\\n        [ 96, -51],\\n        [ 23, -23],\\n        [ 79, -62],\\n        [-25, -75],\\n        [-85, -48],\\n        [-89,  58],\\n        [-69,  56],\\n        [-54,  62],\\n        [ 52,   6],\\n        [-37,  65],\\n        [ 71, -53],\\n        [ 74, -10],\\n        [ 68, -97],\\n        [ 65,   3],\\n        [-21,  56],\\n        [-81,  50],\\n        [ 93,  -2],\\n        [ 84,  45],\\n        [-54,  10],\\n        [-97,  51],\\n        [-17,  21],\\n        [-81, -14],\\n        [ 54,  46],\\n        [ 60, -83],\\n        [ 52,   1],\\n        [-94, -38],\\n        [  0, -72],\\n        [ 22, -44],\\n        [-31,  23],\\n        [ 61, -48]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_14/tests58_14_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_14/tests58_14_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 28,  78],\\n        [ 91,  92],\\n        [-33,  20],\\n        [-11, -81],\\n        [ 13,  12],\\n        [-20,  88],\\n        [ 52,  95],\\n        [-73,  37],\\n        [-39, -91],\\n        [ 17,  66],\\n        [ 91, -47],\\n        [-40, -37],\\n        [ 96, -51],\\n        [ 23, -23],\\n        [ 79, -62],\\n        [-25, -75],\\n        [-85, -48],\\n        [-89,  58],\\n        [-69,  56],\\n        [-54,  62],\\n        [ 52,   6],\\n        [-37,  65],\\n        [ 71, -53],\\n        [ 74, -10],\\n        [ 68, -97],\\n        [ 65,   3],\\n        [-21,  56],\\n        [-81,  50],\\n        [ 93,  -2],\\n        [ 84,  45],\\n        [-54,  10],\\n        [-97,  51],\\n        [-17,  21],\\n        [-81, -14],\\n        [ 54,  46],\\n        [ 60, -83],\\n        [ 52,   1],\\n        [-94, -38],\\n        [  0, -72],\\n        [ 22, -44],\\n        [-31,  23],\\n        [ 61, -48]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006694458425045013, "start": 1738453736.8332336, "stop": 1738453736.8339036, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bb16247d162d49d28ec266b75730a2bb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_2.py::test_matrix_of_having_84_integers", "location": ["tests58_14_2.py", 28, "test_matrix_of_having_84_integers"], "keywords": {"test_matrix_of_having_84_integers": 1, "__wrapped__": 1, "tests58_14_2.py": 1, "Folder_14": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00045788753777742386, "start": 1738453736.8458502, "stop": 1738453736.8463092, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bb16247d162d49d28ec266b75730a2bb", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
