{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_76_2.py::test_matrix_of_one_integer", "location": ["tests58_76_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_2.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004280628636479378, "start": 1738453786.0381188, "stop": 1738453786.0385478, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4b591996dc014e328ab90e9cb5825602", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_2.py::test_matrix_of_one_integer", "location": ["tests58_76_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_2.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003992738202214241, "start": 1738453786.0388455, "stop": 1738453786.0392451, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4b591996dc014e328ab90e9cb5825602", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_2.py::test_matrix_of_one_integer", "location": ["tests58_76_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_2.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018048565834760666, "start": 1738453786.039558, "stop": 1738453786.039739, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4b591996dc014e328ab90e9cb5825602", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_2.py::test_matrix_of_having_159_integers", "location": ["tests58_76_2.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_2.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027048029005527496, "start": 1738453786.041302, "stop": 1738453786.0415728, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4b591996dc014e328ab90e9cb5825602", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_2.py::test_matrix_of_having_159_integers", "location": ["tests58_76_2.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_2.py": 1, "Folder_76": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_76/tests58_76_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-29, -15,  94,  37,  -7, -44, -93,  37,  23,  26, -93, -78, -65,\\n          80, -59, -90, -92,  78,  75,  26,  41,  68, -42,  59, -83, -68,\\n         -83,  11,  14,   9,  65,  49,  16,  86,  10,  53, -76, -68, -17,\\n          64,  -1, -45, -85, -73,  46, -54,  -9,   2, -16,   9, -19,  99,\\n          90, -35, -79,  35, -25,  70,   8,  54,  76,  61,  28,  97,  -6,\\n         -23,  50,  30,  72, -63, -43, -19,  88, -66, -17, -62, -47, -72,\\n          24,  36,  35, 100, -52,  42,  58, -23, -85, -50,  -2, -39, -73,\\n         -85, -42, -68,  25,  88, -61,  79, -99, -70,  20, -84, -39,  35,\\n          10, -35,  17,  80,  83, -64,  71,  12,  48, -55, -39,  68, -49,\\n         -51, -20, -16, -46, -44, -72,  26,  38, -36, -99,   9, -47,   4,\\n         -87,  59,  12,  48, -15, -62,  73, -88,  12,  -3, -54,  53,  63,\\n         -45,   5,   7,  33,  18, -51, -49,  36,  39,   4,  23, -53,  78,\\n          56,  14, -92]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-29, -15,  94,  37,  -7, -44, -93,  37,  23,  26, -93, -78, -65,\\n          80, -59, -90, -92,  78,  75,  26,  41,  68, -42,  59, -83, -68,\\n         -83,  11,  14,   9,  65,  49,  16,  86,  10,  53, -76, -68, -17,\\n          64,  -1, -45, -85, -73,  46, -54,  -9,   2, -16,   9, -19,  99,\\n          90, -35, -79,  35, -25,  70,   8,  54,  76,  61,  28,  97,  -6,\\n         -23,  50,  30,  72, -63, -43, -19,  88, -66, -17, -62, -47, -72,\\n          24,  36,  35, 100, -52,  42,  58, -23, -85, -50,  -2, -39, -73,\\n         -85, -42, -68,  25,  88, -61,  79, -99, -70,  20, -84, -39,  35,\\n          10, -35,  17,  80,  83, -64,  71,  12,  48, -55, -39,  68, -49,\\n         -51, -20, -16, -46, -44, -72,  26,  38, -36, -99,   9, -47,   4,\\n         -87,  59,  12,  48, -15, -62,  73, -88,  12,  -3, -54,  53,  63,\\n         -45,   5,   7,  33,  18, -51, -49,  36,  39,   4,  23, -53,  78,\\n          56,  14, -92]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_76/tests58_76_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-29, -15,  94,  37,  -7, -44, -93,  37,  23,  26, -93, -78, -65,\\n          80, -59, -90, -92,  78,  75,  26,  41,  68, -42,  59, -83, -68,\\n         -83,  11,  14,   9,  65,  49,  16,  86,  10,  53, -76, -68, -17,\\n          64,  -1, -45, -85, -73,  46, -54,  -9,   2, -16,   9, -19,  99,\\n          90, -35, -79,  35, -25,  70,   8,  54,  76,  61,  28,  97,  -6,\\n         -23,  50,  30,  72, -63, -43, -19,  88, -66, -17, -62, -47, -72,\\n          24,  36,  35, 100, -52,  42,  58, -23, -85, -50,  -2, -39, -73,\\n         -85, -42, -68,  25,  88, -61,  79, -99, -70,  20, -84, -39,  35,\\n          10, -35,  17,  80,  83, -64,  71,  12,  48, -55, -39,  68, -49,\\n         -51, -20, -16, -46, -44, -72,  26,  38, -36, -99,   9, -47,   4,\\n         -87,  59,  12,  48, -15, -62,  73, -88,  12,  -3, -54,  53,  63,\\n         -45,   5,   7,  33,  18, -51, -49,  36,  39,   4,  23, -53,  78,\\n          56,  14, -92]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_76/tests58_76_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_76/tests58_76_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-29, -15,  94,  37,  -7, -44, -93,  37,  23,  26, -93, -78, -65,\\n          80, -59, -90, -92,  78,  75,  26,  41,  68, -42,  59, -83, -68,\\n         -83,  11,  14,   9,  65,  49,  16,  86,  10,  53, -76, -68, -17,\\n          64,  -1, -45, -85, -73,  46, -54,  -9,   2, -16,   9, -19,  99,\\n          90, -35, -79,  35, -25,  70,   8,  54,  76,  61,  28,  97,  -6,\\n         -23,  50,  30,  72, -63, -43, -19,  88, -66, -17, -62, -47, -72,\\n          24,  36,  35, 100, -52,  42,  58, -23, -85, -50,  -2, -39, -73,\\n         -85, -42, -68,  25,  88, -61,  79, -99, -70,  20, -84, -39,  35,\\n          10, -35,  17,  80,  83, -64,  71,  12,  48, -55, -39,  68, -49,\\n         -51, -20, -16, -46, -44, -72,  26,  38, -36, -99,   9, -47,   4,\\n         -87,  59,  12,  48, -15, -62,  73, -88,  12,  -3, -54,  53,  63,\\n         -45,   5,   7,  33,  18, -51, -49,  36,  39,   4,  23, -53,  78,\\n          56,  14, -92]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015353551134467125, "start": 1738453786.041683, "stop": 1738453786.0432189, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4b591996dc014e328ab90e9cb5825602", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_2.py::test_matrix_of_having_159_integers", "location": ["tests58_76_2.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_2.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0008617006242275238, "start": 1738453786.072574, "stop": 1738453786.0734367, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4b591996dc014e328ab90e9cb5825602", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
