{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012655183672904968, "start": 1738453763.0803392, "stop": 1738453763.0804663, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8520d30f41194672895bc1a4053924ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016771163791418076, "start": 1738453763.080638, "stop": 1738453763.0808058, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8520d30f41194672895bc1a4053924ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_one_integer", "location": ["tests58_48_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.644055247306824e-05, "start": 1738453763.0810478, "stop": 1738453763.0811145, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8520d30f41194672895bc1a4053924ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.087100625038147e-05, "start": 1738453763.0821762, "stop": 1738453763.0822678, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8520d30f41194672895bc1a4053924ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-93,  75],\\n        [-40,  65],\\n        [-56,  11],\\n        [ 92,  70],\\n        [-80,  11],\\n        [ 57, -54],\\n        [-77, -32],\\n        [ 58, -96],\\n        [-31, -79],\\n        [ 50,  82],\\n        [ 15, -41],\\n        [-14,  35],\\n        [ 77,  21],\\n        [-89,  70],\\n        [-89, -41],\\n        [ 49, -80],\\n        [-56, -83],\\n        [ 14, -83],\\n        [-72, -57],\\n        [-65, -43],\\n        [-69,   2],\\n        [-33, -96],\\n        [  3,  22],\\n        [-55,  75],\\n        [ 59, -31],\\n        [-16,  -1],\\n        [-50,  88],\\n        [ 21,  75],\\n        [-13,  65],\\n        [ 94, -33],\\n        [-68,  48],\\n        [ 27,  95],\\n        [-52, -67],\\n        [-71,  69],\\n        [ 96, -28],\\n        [-18,  68],\\n        [ 26,  58],\\n        [-87, -15],\\n        [ 33,  69],\\n        [ 96,  78],\\n        [ 10,  -1],\\n        [-35,  -4],\\n        [ 39,  31],\\n        [ 52, -93],\\n        [-59, -52],\\n        [-27,  33],\\n        [ 20,  95],\\n        [ 18,  27],\\n        [-18,  42],\\n        [-98,  30],\\n        [ 68, -60],\\n        [-50,   3],\\n        [ 56,  24],\\n        [ 34, -69],\\n        [-49,  -9],\\n        [ 70, -63],\\n        [ 44,  39],\\n        [ 21,  39],\\n        [ 60, -73],\\n        [ 90,  15],\\n        [-78,  60],\\n        [  9,  89],\\n        [ 29, -41],\\n        [-33, -85],\\n        [ 13,  44]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-93,  75],\\n        [-40,  65],\\n        [-56,  11],\\n        [ 92,  70],\\n        [-80,  11],\\n        [ 57, -54],\\n        [-77, -32],\\n        [ 58, -96],\\n        [-31, -79],\\n        [ 50,  82],\\n        [ 15, -41],\\n        [-14,  35],\\n        [ 77,  21],\\n        [-89,  70],\\n        [-89, -41],\\n        [ 49, -80],\\n        [-56, -83],\\n        [ 14, -83],\\n        [-72, -57],\\n        [-65, -43],\\n        [-69,   2],\\n        [-33, -96],\\n        [  3,  22],\\n        [-55,  75],\\n        [ 59, -31],\\n        [-16,  -1],\\n        [-50,  88],\\n        [ 21,  75],\\n        [-13,  65],\\n        [ 94, -33],\\n        [-68,  48],\\n        [ 27,  95],\\n        [-52, -67],\\n        [-71,  69],\\n        [ 96, -28],\\n        [-18,  68],\\n        [ 26,  58],\\n        [-87, -15],\\n        [ 33,  69],\\n        [ 96,  78],\\n        [ 10,  -1],\\n        [-35,  -4],\\n        [ 39,  31],\\n        [ 52, -93],\\n        [-59, -52],\\n        [-27,  33],\\n        [ 20,  95],\\n        [ 18,  27],\\n        [-18,  42],\\n        [-98,  30],\\n        [ 68, -60],\\n        [-50,   3],\\n        [ 56,  24],\\n        [ 34, -69],\\n        [-49,  -9],\\n        [ 70, -63],\\n        [ 44,  39],\\n        [ 21,  39],\\n        [ 60, -73],\\n        [ 90,  15],\\n        [-78,  60],\\n        [  9,  89],\\n        [ 29, -41],\\n        [-33, -85],\\n        [ 13,  44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-93,  75],\\n        [-40,  65],\\n        [-56,  11],\\n        [ 92,  70],\\n        [-80,  11],\\n        [ 57, -54],\\n        [-77, -32],\\n        [ 58, -96],\\n        [-31, -79],\\n        [ 50,  82],\\n        [ 15, -41],\\n        [-14,  35],\\n        [ 77,  21],\\n        [-89,  70],\\n        [-89, -41],\\n        [ 49, -80],\\n        [-56, -83],\\n        [ 14, -83],\\n        [-72, -57],\\n        [-65, -43],\\n        [-69,   2],\\n        [-33, -96],\\n        [  3,  22],\\n        [-55,  75],\\n        [ 59, -31],\\n        [-16,  -1],\\n        [-50,  88],\\n        [ 21,  75],\\n        [-13,  65],\\n        [ 94, -33],\\n        [-68,  48],\\n        [ 27,  95],\\n        [-52, -67],\\n        [-71,  69],\\n        [ 96, -28],\\n        [-18,  68],\\n        [ 26,  58],\\n        [-87, -15],\\n        [ 33,  69],\\n        [ 96,  78],\\n        [ 10,  -1],\\n        [-35,  -4],\\n        [ 39,  31],\\n        [ 52, -93],\\n        [-59, -52],\\n        [-27,  33],\\n        [ 20,  95],\\n        [ 18,  27],\\n        [-18,  42],\\n        [-98,  30],\\n        [ 68, -60],\\n        [-50,   3],\\n        [ 56,  24],\\n        [ 34, -69],\\n        [-49,  -9],\\n        [ 70, -63],\\n        [ 44,  39],\\n        [ 21,  39],\\n        [ 60, -73],\\n        [ 90,  15],\\n        [-78,  60],\\n        [  9,  89],\\n        [ 29, -41],\\n        [-33, -85],\\n        [ 13,  44]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_2/Folder_48/tests58_48_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-93,  75],\\n        [-40,  65],\\n        [-56,  11],\\n        [ 92,  70],\\n        [-80,  11],\\n        [ 57, -54],\\n        [-77, -32],\\n        [ 58, -96],\\n        [-31, -79],\\n        [ 50,  82],\\n        [ 15, -41],\\n        [-14,  35],\\n        [ 77,  21],\\n        [-89,  70],\\n        [-89, -41],\\n        [ 49, -80],\\n        [-56, -83],\\n        [ 14, -83],\\n        [-72, -57],\\n        [-65, -43],\\n        [-69,   2],\\n        [-33, -96],\\n        [  3,  22],\\n        [-55,  75],\\n        [ 59, -31],\\n        [-16,  -1],\\n        [-50,  88],\\n        [ 21,  75],\\n        [-13,  65],\\n        [ 94, -33],\\n        [-68,  48],\\n        [ 27,  95],\\n        [-52, -67],\\n        [-71,  69],\\n        [ 96, -28],\\n        [-18,  68],\\n        [ 26,  58],\\n        [-87, -15],\\n        [ 33,  69],\\n        [ 96,  78],\\n        [ 10,  -1],\\n        [-35,  -4],\\n        [ 39,  31],\\n        [ 52, -93],\\n        [-59, -52],\\n        [-27,  33],\\n        [ 20,  95],\\n        [ 18,  27],\\n        [-18,  42],\\n        [-98,  30],\\n        [ 68, -60],\\n        [-50,   3],\\n        [ 56,  24],\\n        [ 34, -69],\\n        [-49,  -9],\\n        [ 70, -63],\\n        [ 44,  39],\\n        [ 21,  39],\\n        [ 60, -73],\\n        [ 90,  15],\\n        [-78,  60],\\n        [  9,  89],\\n        [ 29, -41],\\n        [-33, -85],\\n        [ 13,  44]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005912631750106812, "start": 1738453763.082356, "stop": 1738453763.0829475, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8520d30f41194672895bc1a4053924ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_2.py::test_matrix_of_having_130_integers", "location": ["tests58_48_2.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_2.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014130119234323502, "start": 1738453763.0942519, "stop": 1738453763.0943935, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8520d30f41194672895bc1a4053924ab", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
