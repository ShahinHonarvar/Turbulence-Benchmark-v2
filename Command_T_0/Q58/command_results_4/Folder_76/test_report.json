{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_76_4.py::test_matrix_of_one_integer", "location": ["tests58_76_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_4.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012791529297828674, "start": 1738453937.8732564, "stop": 1738453937.8733847, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d875de1dc0df4877b1980b59071278fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_4.py::test_matrix_of_one_integer", "location": ["tests58_76_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_4.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016847718507051468, "start": 1738453937.8735507, "stop": 1738453937.8737195, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d875de1dc0df4877b1980b59071278fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_4.py::test_matrix_of_one_integer", "location": ["tests58_76_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_4.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.078982889652252e-05, "start": 1738453937.8740036, "stop": 1738453937.874075, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d875de1dc0df4877b1980b59071278fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_4.py::test_matrix_of_having_159_integers", "location": ["tests58_76_4.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_4.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010754074901342392, "start": 1738453937.8789642, "stop": 1738453937.8790724, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d875de1dc0df4877b1980b59071278fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_4.py::test_matrix_of_having_159_integers", "location": ["tests58_76_4.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_4.py": 1, "Folder_76": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_4/Folder_76/tests58_76_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,   3, -19, -92,  -6,  69,  89,  35, -28, -52,  72, -44, -17,\\n          82, -22,  93,  34, -35,  61,  75,  73, -68,  95, -46,  36,  65,\\n         -53, -63,  69, -13, -16, -11,  19, -94, -34,  32,  88, -58, -70,\\n         -98,  53,  17, -92,  40,  24,  39,  76,  47, -95,  55,  96,  55,\\n         -61,  13,   4, -30,   0,  69, -76, -21, -69, -95, -72,  74,  78,\\n         -53,  69, -60,  19, -19, -29,  22,  48, -15,  89, -64,  20,  38,\\n         -15,  66,  56, -87,  71,  68,  30, -47, -91, -23,  -3,  51, -32,\\n          61,  39,  98,  32,  60,  19,  92, -31,   0, -75,  58, -40,  71,\\n         -61,  73,  67,  39, -64, -59,  50, -49, -53, -18, -64,  67,  49,\\n          62, -33,  14,  75,  32,  68, 100, -44,  98, -29, -88, -42, -50,\\n         -44,  -2, -41, -27,  44,  -1,  98,  62, -75, -79, -43,  67,  82,\\n         -32, -92,  89, -71, -47,  81,  84, -79, -47, -54,  36, 100, -31,\\n         -91, -26, -61]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 74,   3, -19, -92,  -6,  69,  89,  35, -28, -52,  72, -44, -17,\\n          82, -22,  93,  34, -35,  61,  75,  73, -68,  95, -46,  36,  65,\\n         -53, -63,  69, -13, -16, -11,  19, -94, -34,  32,  88, -58, -70,\\n         -98,  53,  17, -92,  40,  24,  39,  76,  47, -95,  55,  96,  55,\\n         -61,  13,   4, -30,   0,  69, -76, -21, -69, -95, -72,  74,  78,\\n         -53,  69, -60,  19, -19, -29,  22,  48, -15,  89, -64,  20,  38,\\n         -15,  66,  56, -87,  71,  68,  30, -47, -91, -23,  -3,  51, -32,\\n          61,  39,  98,  32,  60,  19,  92, -31,   0, -75,  58, -40,  71,\\n         -61,  73,  67,  39, -64, -59,  50, -49, -53, -18, -64,  67,  49,\\n          62, -33,  14,  75,  32,  68, 100, -44,  98, -29, -88, -42, -50,\\n         -44,  -2, -41, -27,  44,  -1,  98,  62, -75, -79, -43,  67,  82,\\n         -32, -92,  89, -71, -47,  81,  84, -79, -47, -54,  36, 100, -31,\\n         -91, -26, -61]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_76/tests58_76_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 74,   3, -19, -92,  -6,  69,  89,  35, -28, -52,  72, -44, -17,\\n          82, -22,  93,  34, -35,  61,  75,  73, -68,  95, -46,  36,  65,\\n         -53, -63,  69, -13, -16, -11,  19, -94, -34,  32,  88, -58, -70,\\n         -98,  53,  17, -92,  40,  24,  39,  76,  47, -95,  55,  96,  55,\\n         -61,  13,   4, -30,   0,  69, -76, -21, -69, -95, -72,  74,  78,\\n         -53,  69, -60,  19, -19, -29,  22,  48, -15,  89, -64,  20,  38,\\n         -15,  66,  56, -87,  71,  68,  30, -47, -91, -23,  -3,  51, -32,\\n          61,  39,  98,  32,  60,  19,  92, -31,   0, -75,  58, -40,  71,\\n         -61,  73,  67,  39, -64, -59,  50, -49, -53, -18, -64,  67,  49,\\n          62, -33,  14,  75,  32,  68, 100, -44,  98, -29, -88, -42, -50,\\n         -44,  -2, -41, -27,  44,  -1,  98,  62, -75, -79, -43,  67,  82,\\n         -32, -92,  89, -71, -47,  81,  84, -79, -47, -54,  36, 100, -31,\\n         -91, -26, -61]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_76/tests58_76_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_4/Folder_76/tests58_76_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,   3, -19, -92,  -6,  69,  89,  35, -28, -52,  72, -44, -17,\\n          82, -22,  93,  34, -35,  61,  75,  73, -68,  95, -46,  36,  65,\\n         -53, -63,  69, -13, -16, -11,  19, -94, -34,  32,  88, -58, -70,\\n         -98,  53,  17, -92,  40,  24,  39,  76,  47, -95,  55,  96,  55,\\n         -61,  13,   4, -30,   0,  69, -76, -21, -69, -95, -72,  74,  78,\\n         -53,  69, -60,  19, -19, -29,  22,  48, -15,  89, -64,  20,  38,\\n         -15,  66,  56, -87,  71,  68,  30, -47, -91, -23,  -3,  51, -32,\\n          61,  39,  98,  32,  60,  19,  92, -31,   0, -75,  58, -40,  71,\\n         -61,  73,  67,  39, -64, -59,  50, -49, -53, -18, -64,  67,  49,\\n          62, -33,  14,  75,  32,  68, 100, -44,  98, -29, -88, -42, -50,\\n         -44,  -2, -41, -27,  44,  -1,  98,  62, -75, -79, -43,  67,  82,\\n         -32, -92,  89, -71, -47,  81,  84, -79, -47, -54,  36, 100, -31,\\n         -91, -26, -61]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007161134853959084, "start": 1738453937.8791885, "stop": 1738453937.879905, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d875de1dc0df4877b1980b59071278fe", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_4.py::test_matrix_of_having_159_integers", "location": ["tests58_76_4.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_4.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010446086525917053, "start": 1738453937.9117703, "stop": 1738453937.9118752, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d875de1dc0df4877b1980b59071278fe", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
