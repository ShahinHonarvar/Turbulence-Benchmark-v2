{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00043
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  3,  -5],\\n        [ 91, -29],\\n        [-46,  -8],\\n        [-56, -82],\\n        [ 48, -81],\\n        [-39, -60],\\n        [ 73, -77],\\n        [ 47,  28],\\n        [-37, -69],\\n        [ 67,  -6],\\n        [-71,  36],\\n        [ 38,  98],\\n        [ 89, -98],\\n        [-83,   6],\\n        [-39, -43],\\n        [-90,  14],\\n        [ 23,  76],\\n        [ 25,  94],\\n        [-17, -71],\\n        [-26, -35],\\n        [-61,  58],\\n        [ 88, -61],\\n        [-95,  93],\\n        [ 40, -84],\\n        [  9,  79],\\n        [ 59,  68],\\n        [ 47,  45],\\n        [-32, -84],\\n        [ -3, -44],\\n        [-12,  37],\\n        [-51,  43],\\n        [-95, -70],\\n        [-50, -19],\\n        [-83, -93],\\n        [-84,  75],\\n        [ 87,  78],\\n        [ -9, -52],\\n        [-69,  31],\\n        [-34,  14],\\n        [-86, -18],\\n        [-39,  10],\\n        [ 58, -33],\\n        [ 39,  23],\\n        [-53,  -6],\\n        [-92,  48],\\n        [-82, -40],\\n        [ -3, -81],\\n        [-83, -15]]))",
    0.00079
  ]
}