{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_84_4.py::test_matrix_of_one_integer", "location": ["tests58_84_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_4.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011051632463932037, "start": 1738453943.4393616, "stop": 1738453943.4394727, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8365755e89f44ccab67095e476f638d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_4.py::test_matrix_of_one_integer", "location": ["tests58_84_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_4.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014186371117830276, "start": 1738453943.4396281, "stop": 1738453943.4397705, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8365755e89f44ccab67095e476f638d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_4.py::test_matrix_of_one_integer", "location": ["tests58_84_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_4.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.846245378255844e-05, "start": 1738453943.4400492, "stop": 1738453943.4401178, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8365755e89f44ccab67095e476f638d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_4.py::test_matrix_of_having_127_integers", "location": ["tests58_84_4.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_4.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.605048060417175e-05, "start": 1738453943.4415903, "stop": 1738453943.4416769, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8365755e89f44ccab67095e476f638d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_4.py::test_matrix_of_having_127_integers", "location": ["tests58_84_4.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_4.py": 1, "Folder_84": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_4/Folder_84/tests58_84_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,   43,   56,  -54,   55,  -18,   62,  -79,    2,  -15,\\n           11,   45,  -82,   69,   -3,   14,  -43,  -38,   81,   67,\\n           22,   90,    0,    8,  -19,  -35,   -4,   45,   26,    7,\\n          -80,    7,  -96,  -37,   38,   90,   19,   84,  -13,    0,\\n           43,  -12,  -25,   63,   60,  -66,   24,  -46,   18,    2,\\n          -28,   -4,  -14,   75,  -37,   -8,   28,  -48,  -34,    4,\\n          -49,  -56,  -35,   -3,  -72, -100,  -50,  -27,  -94,   46,\\n          -97,   64,   -1,  -80,  -46,  100,   -7,   -7,  -17,   50,\\n          -42,   85,   97,  -72,  -87,   -1,   13,    1,  -11,  -95,\\n          -67,   14,  -71,  -82,  -53,   23,   80,   44,    2,    6,\\n           57,  -35,  -34,   66,  -43,   70,  -56,   13,  -22,   21,\\n           12,   98,  -95,   14,   98,  -60,  -80,  -76,   88,  -75,\\n          -67,   82,  -80,   51,  -59,  -56,  100]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  87,   43,   56,  -54,   55,  -18,   62,  -79,    2,  -15,\\n           11,   45,  -82,   69,   -3,   14,  -43,  -38,   81,   67,\\n           22,   90,    0,    8,  -19,  -35,   -4,   45,   26,    7,\\n          -80,    7,  -96,  -37,   38,   90,   19,   84,  -13,    0,\\n           43,  -12,  -25,   63,   60,  -66,   24,  -46,   18,    2,\\n          -28,   -4,  -14,   75,  -37,   -8,   28,  -48,  -34,    4,\\n          -49,  -56,  -35,   -3,  -72, -100,  -50,  -27,  -94,   46,\\n          -97,   64,   -1,  -80,  -46,  100,   -7,   -7,  -17,   50,\\n          -42,   85,   97,  -72,  -87,   -1,   13,    1,  -11,  -95,\\n          -67,   14,  -71,  -82,  -53,   23,   80,   44,    2,    6,\\n           57,  -35,  -34,   66,  -43,   70,  -56,   13,  -22,   21,\\n           12,   98,  -95,   14,   98,  -60,  -80,  -76,   88,  -75,\\n          -67,   82,  -80,   51,  -59,  -56,  100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_84/tests58_84_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  87,   43,   56,  -54,   55,  -18,   62,  -79,    2,  -15,\\n           11,   45,  -82,   69,   -3,   14,  -43,  -38,   81,   67,\\n           22,   90,    0,    8,  -19,  -35,   -4,   45,   26,    7,\\n          -80,    7,  -96,  -37,   38,   90,   19,   84,  -13,    0,\\n           43,  -12,  -25,   63,   60,  -66,   24,  -46,   18,    2,\\n          -28,   -4,  -14,   75,  -37,   -8,   28,  -48,  -34,    4,\\n          -49,  -56,  -35,   -3,  -72, -100,  -50,  -27,  -94,   46,\\n          -97,   64,   -1,  -80,  -46,  100,   -7,   -7,  -17,   50,\\n          -42,   85,   97,  -72,  -87,   -1,   13,    1,  -11,  -95,\\n          -67,   14,  -71,  -82,  -53,   23,   80,   44,    2,    6,\\n           57,  -35,  -34,   66,  -43,   70,  -56,   13,  -22,   21,\\n           12,   98,  -95,   14,   98,  -60,  -80,  -76,   88,  -75,\\n          -67,   82,  -80,   51,  -59,  -56,  100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_84/tests58_84_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_4/Folder_84/tests58_84_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,   43,   56,  -54,   55,  -18,   62,  -79,    2,  -15,\\n           11,   45,  -82,   69,   -3,   14,  -43,  -38,   81,   67,\\n           22,   90,    0,    8,  -19,  -35,   -4,   45,   26,    7,\\n          -80,    7,  -96,  -37,   38,   90,   19,   84,  -13,    0,\\n           43,  -12,  -25,   63,   60,  -66,   24,  -46,   18,    2,\\n          -28,   -4,  -14,   75,  -37,   -8,   28,  -48,  -34,    4,\\n          -49,  -56,  -35,   -3,  -72, -100,  -50,  -27,  -94,   46,\\n          -97,   64,   -1,  -80,  -46,  100,   -7,   -7,  -17,   50,\\n          -42,   85,   97,  -72,  -87,   -1,   13,    1,  -11,  -95,\\n          -67,   14,  -71,  -82,  -53,   23,   80,   44,    2,    6,\\n           57,  -35,  -34,   66,  -43,   70,  -56,   13,  -22,   21,\\n           12,   98,  -95,   14,   98,  -60,  -80,  -76,   88,  -75,\\n          -67,   82,  -80,   51,  -59,  -56,  100]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006022648885846138, "start": 1738453943.441777, "stop": 1738453943.4423795, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8365755e89f44ccab67095e476f638d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_4.py::test_matrix_of_having_127_integers", "location": ["tests58_84_4.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_4.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014419667422771454, "start": 1738453943.4608757, "stop": 1738453943.461021, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8365755e89f44ccab67095e476f638d9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
