{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004070485010743141, "start": 1738453905.5985277, "stop": 1738453905.5989354, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7494b19d16c94c6699f5289e955fc4b5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017206091433763504, "start": 1738453905.5994375, "stop": 1738453905.59961, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7494b19d16c94c6699f5289e955fc4b5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_one_integer", "location": ["tests58_33_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016787275671958923, "start": 1738453905.5999181, "stop": 1738453905.6000862, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7494b19d16c94c6699f5289e955fc4b5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003276839852333069, "start": 1738453905.6010842, "stop": 1738453905.6014123, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7494b19d16c94c6699f5289e955fc4b5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  37,   73],\\n        [ -28,  -29],\\n        [ -99,  -41],\\n        [ -47,   31],\\n        [  45,  -21],\\n        [ -29,  -58],\\n        [ -83,    3],\\n        [  24,   46],\\n        [  39,   -8],\\n        [  26,  -66],\\n        [ -51,  -52],\\n        [ -23,   84],\\n        [  15,   70],\\n        [ -60,  -40],\\n        [ -53,  -88],\\n        [ -63,   53],\\n        [  25,   57],\\n        [ -30,  -64],\\n        [ -21, -100],\\n        [ -84,  -38],\\n        [ -99,   98],\\n        [  -1,   89],\\n        [ 100,   34],\\n        [  79,  -24],\\n        [  33,   25],\\n        [   7,  -49],\\n        [ -97,   57],\\n        [ -38,  -71],\\n        [  87,  -13],\\n        [ -53,  -59],\\n        [  17,   -6],\\n        [  29,  -10],\\n        [ -77,   70],\\n        [ -89,   75],\\n        [   9,  -69],\\n        [  24,   36],\\n        [  59,  -62],\\n        [ -14,   24],\\n        [  -3,   94],\\n        [ -95,   37],\\n        [ -14,  -33],\\n        [ -49,   16],\\n        [ -90,   85],\\n        [  81,  -32],\\n        [ -15,  -81],\\n        [  72,  -87],\\n        [ -57,  -52],\\n        [ -53,   56],\\n        [ -39,   59],\\n        [ -46,  -88],\\n        [  66,   -6],\\n        [   8,   18],\\n        [  42,   40],\\n        [  42,   66],\\n        [ -68,  -83],\\n        [ -90,  -85],\\n        [  67,   83],\\n        [  46,  -30],\\n        [ -32,   -6]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  37,   73],\\n        [ -28,  -29],\\n        [ -99,  -41],\\n        [ -47,   31],\\n        [  45,  -21],\\n        [ -29,  -58],\\n        [ -83,    3],\\n        [  24,   46],\\n        [  39,   -8],\\n        [  26,  -66],\\n        [ -51,  -52],\\n        [ -23,   84],\\n        [  15,   70],\\n        [ -60,  -40],\\n        [ -53,  -88],\\n        [ -63,   53],\\n        [  25,   57],\\n        [ -30,  -64],\\n        [ -21, -100],\\n        [ -84,  -38],\\n        [ -99,   98],\\n        [  -1,   89],\\n        [ 100,   34],\\n        [  79,  -24],\\n        [  33,   25],\\n        [   7,  -49],\\n        [ -97,   57],\\n        [ -38,  -71],\\n        [  87,  -13],\\n        [ -53,  -59],\\n        [  17,   -6],\\n        [  29,  -10],\\n        [ -77,   70],\\n        [ -89,   75],\\n        [   9,  -69],\\n        [  24,   36],\\n        [  59,  -62],\\n        [ -14,   24],\\n        [  -3,   94],\\n        [ -95,   37],\\n        [ -14,  -33],\\n        [ -49,   16],\\n        [ -90,   85],\\n        [  81,  -32],\\n        [ -15,  -81],\\n        [  72,  -87],\\n        [ -57,  -52],\\n        [ -53,   56],\\n        [ -39,   59],\\n        [ -46,  -88],\\n        [  66,   -6],\\n        [   8,   18],\\n        [  42,   40],\\n        [  42,   66],\\n        [ -68,  -83],\\n        [ -90,  -85],\\n        [  67,   83],\\n        [  46,  -30],\\n        [ -32,   -6]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  37,   73],\\n        [ -28,  -29],\\n        [ -99,  -41],\\n        [ -47,   31],\\n        [  45,  -21],\\n        [ -29,  -58],\\n        [ -83,    3],\\n        [  24,   46],\\n        [  39,   -8],\\n        [  26,  -66],\\n        [ -51,  -52],\\n        [ -23,   84],\\n        [  15,   70],\\n        [ -60,  -40],\\n        [ -53,  -88],\\n        [ -63,   53],\\n        [  25,   57],\\n        [ -30,  -64],\\n        [ -21, -100],\\n        [ -84,  -38],\\n        [ -99,   98],\\n        [  -1,   89],\\n        [ 100,   34],\\n        [  79,  -24],\\n        [  33,   25],\\n        [   7,  -49],\\n        [ -97,   57],\\n        [ -38,  -71],\\n        [  87,  -13],\\n        [ -53,  -59],\\n        [  17,   -6],\\n        [  29,  -10],\\n        [ -77,   70],\\n        [ -89,   75],\\n        [   9,  -69],\\n        [  24,   36],\\n        [  59,  -62],\\n        [ -14,   24],\\n        [  -3,   94],\\n        [ -95,   37],\\n        [ -14,  -33],\\n        [ -49,   16],\\n        [ -90,   85],\\n        [  81,  -32],\\n        [ -15,  -81],\\n        [  72,  -87],\\n        [ -57,  -52],\\n        [ -53,   56],\\n        [ -39,   59],\\n        [ -46,  -88],\\n        [  66,   -6],\\n        [   8,   18],\\n        [  42,   40],\\n        [  42,   66],\\n        [ -68,  -83],\\n        [ -90,  -85],\\n        [  67,   83],\\n        [  46,  -30],\\n        [ -32,   -6]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_4/Folder_33/tests58_33_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  37,   73],\\n        [ -28,  -29],\\n        [ -99,  -41],\\n        [ -47,   31],\\n        [  45,  -21],\\n        [ -29,  -58],\\n        [ -83,    3],\\n        [  24,   46],\\n        [  39,   -8],\\n        [  26,  -66],\\n        [ -51,  -52],\\n        [ -23,   84],\\n        [  15,   70],\\n        [ -60,  -40],\\n        [ -53,  -88],\\n        [ -63,   53],\\n        [  25,   57],\\n        [ -30,  -64],\\n        [ -21, -100],\\n        [ -84,  -38],\\n        [ -99,   98],\\n        [  -1,   89],\\n        [ 100,   34],\\n        [  79,  -24],\\n        [  33,   25],\\n        [   7,  -49],\\n        [ -97,   57],\\n        [ -38,  -71],\\n        [  87,  -13],\\n        [ -53,  -59],\\n        [  17,   -6],\\n        [  29,  -10],\\n        [ -77,   70],\\n        [ -89,   75],\\n        [   9,  -69],\\n        [  24,   36],\\n        [  59,  -62],\\n        [ -14,   24],\\n        [  -3,   94],\\n        [ -95,   37],\\n        [ -14,  -33],\\n        [ -49,   16],\\n        [ -90,   85],\\n        [  81,  -32],\\n        [ -15,  -81],\\n        [  72,  -87],\\n        [ -57,  -52],\\n        [ -53,   56],\\n        [ -39,   59],\\n        [ -46,  -88],\\n        [  66,   -6],\\n        [   8,   18],\\n        [  42,   40],\\n        [  42,   66],\\n        [ -68,  -83],\\n        [ -90,  -85],\\n        [  67,   83],\\n        [  46,  -30],\\n        [ -32,   -6]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000683947466313839, "start": 1738453905.601713, "stop": 1738453905.6023974, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7494b19d16c94c6699f5289e955fc4b5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_4.py::test_matrix_of_having_118_integers", "location": ["tests58_33_4.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_4.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0003682272508740425, "start": 1738453905.6196644, "stop": 1738453905.6200333, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7494b19d16c94c6699f5289e955fc4b5", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
