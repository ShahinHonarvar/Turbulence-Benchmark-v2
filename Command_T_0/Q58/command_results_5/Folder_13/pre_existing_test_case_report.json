{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-10,  38,  32, -93,  90, -16,  95, -87,  59, -82,  17,  58,  90,\\n          66,  66,  42,  80, -99,  35,  99,  91,  64, -28,  17,  92, -86,\\n         -88, -52,  35,  76,  -6,  16,  46,  46, -80,  93, -34,  70,  42,\\n          98, -41, -56,  16,  69, -48,  95,  44, -93, -93,  91,  64,  28,\\n          67, -51,  -9, -18, -44,  36, -98, -87,  41, -53,  -3, -59,   2,\\n          54, -27, -94,  68,  47,  24, -63,  79, -10,  41,  16, -13,   4,\\n           7, -37, -90,  91, -31, -18, -48, -52, -53,  51,  42,  27,  24,\\n         -99,   4,  77, 100,  72, -26, -51,  90,  65,   9, -55,  85,  -4,\\n         -68,  47, -18,  -4,   4,   9,  89,  42,  16,  85,  86,  30, -50,\\n         -89, -80, -13,  44, -87,  38, -19, -76, -28, -22,  83, -90, -32,\\n          80,  80,  -6, -66,  29,  25, -18, -55,  14, -32, -41,  68,  30,\\n           8, -19, -63,  81,  45, -14, -69,  83,  64, -59,  16,  76,  67,\\n          88,  91,  95,  94, -56, 100,  52,  23, -65,  -4, -44,  -1, -44,\\n          95, -90,  64,   1, -64, -59]]))",
    0.00069
  ]
}