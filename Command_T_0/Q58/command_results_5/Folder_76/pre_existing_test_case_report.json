{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  73,   -2,   70,  -58,  -57,   20,   82,   47,  -26,   17,\\n           66,  -96,   44,   36,  -69,  -91,   -5,  -65,   84,   43,\\n          -74,   24,   -3,   29,   66,  -39,  -18,   30,   90,  -30,\\n          -81,  -12,  -87,  -55,   67,   61,   66,   77,  -70,   81,\\n           60,   70, -100,    6,  -52,  -51,   96,   94,  -71,  -71,\\n          -93,  -58,  -40,   21,   50,   65,  -38,   71,   92,  -97,\\n          -31,  -86,   36,   14,   48,   17,  -58,   83,   93,   78,\\n            9,   20,  -63,  -80,  -50,   62,  -31,  -34,  -18,  -43,\\n           29,  -49,   39,   29,   89,   41,   86,   22,  -82,   -3,\\n          -42,  -10,  -80,   58,   18,  -90,  -67,  -14,  -98,   79,\\n           58,  -91,   83,  -55,  -36,   71,  -10,   43,  -51,  -74,\\n           47,   21, -100,  -39,  -22,   39,  -31,  -64,  -80,  -22,\\n           33,   23,  -22,  -24,  -94,    0,  -58,   20,  -21,  -58,\\n           76,  -40,  -67,    4,  -17,   55,  -54,   85,   79,  -96,\\n          -45,  -97,  -89,   59,    2,  -57,  -28,  -95,  -87,    9,\\n          -37,  -56,   -6,  -42,   -8,  -13,  -83,    8,  -75]]))",
    0.00084
  ]
}