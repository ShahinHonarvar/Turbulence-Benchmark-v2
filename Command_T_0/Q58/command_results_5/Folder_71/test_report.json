{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_71_5.py::test_matrix_of_one_integer", "location": ["tests58_71_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003991825506091118, "start": 1738454011.1635394, "stop": 1738454011.1639392, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "164b8d7d25374b108c6ca2231560e3cc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_one_integer", "location": ["tests58_71_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040547270327806473, "start": 1738454011.164235, "stop": 1738454011.1646411, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "164b8d7d25374b108c6ca2231560e3cc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_one_integer", "location": ["tests58_71_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.986145257949829e-05, "start": 1738454011.1650486, "stop": 1738454011.165139, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "164b8d7d25374b108c6ca2231560e3cc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_having_78_integers", "location": ["tests58_71_5.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.086448699235916e-05, "start": 1738454011.1663885, "stop": 1738454011.1664796, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "164b8d7d25374b108c6ca2231560e3cc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_having_78_integers", "location": ["tests58_71_5.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   8,   34],\\n        [  81,  -93],\\n        [ -34,  -68],\\n        [  29,  -27],\\n        [  77,  -62],\\n        [  52,   74],\\n        [ -15,   84],\\n        [  42,  -28],\\n        [ -58,  -39],\\n        [  72,   41],\\n        [  14,  -85],\\n        [ -97,  -61],\\n        [ -20,  -22],\\n        [ -47,  -11],\\n        [  98,   73],\\n        [  58,   64],\\n        [  74,  -90],\\n        [  73,   -2],\\n        [ -20,  -21],\\n        [ -13,  -50],\\n        [ -18,  -22],\\n        [ -19,  -26],\\n        [ -74,   44],\\n        [  -6,  -40],\\n        [ -10,   53],\\n        [ -44,    4],\\n        [  81,   29],\\n        [  18,   68],\\n        [  66,   80],\\n        [ -16,  -32],\\n        [  40,   48],\\n        [ -58,   24],\\n        [   6,   31],\\n        [-100,  -39],\\n        [ -76,  -90],\\n        [ -25,  -72],\\n        [ -48,   15],\\n        [  11,   43],\\n        [ -28,  -32]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   8,   34],\\n        [  81,  -93],\\n        [ -34,  -68],\\n        [  29,  -27],\\n        [  77,  -62],\\n        [  52,   74],\\n        [ -15,   84],\\n        [  42,  -28],\\n        [ -58,  -39],\\n        [  72,   41],\\n        [  14,  -85],\\n        [ -97,  -61],\\n        [ -20,  -22],\\n        [ -47,  -11],\\n        [  98,   73],\\n        [  58,   64],\\n        [  74,  -90],\\n        [  73,   -2],\\n        [ -20,  -21],\\n        [ -13,  -50],\\n        [ -18,  -22],\\n        [ -19,  -26],\\n        [ -74,   44],\\n        [  -6,  -40],\\n        [ -10,   53],\\n        [ -44,    4],\\n        [  81,   29],\\n        [  18,   68],\\n        [  66,   80],\\n        [ -16,  -32],\\n        [  40,   48],\\n        [ -58,   24],\\n        [   6,   31],\\n        [-100,  -39],\\n        [ -76,  -90],\\n        [ -25,  -72],\\n        [ -48,   15],\\n        [  11,   43],\\n        [ -28,  -32]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   8,   34],\\n        [  81,  -93],\\n        [ -34,  -68],\\n        [  29,  -27],\\n        [  77,  -62],\\n        [  52,   74],\\n        [ -15,   84],\\n        [  42,  -28],\\n        [ -58,  -39],\\n        [  72,   41],\\n        [  14,  -85],\\n        [ -97,  -61],\\n        [ -20,  -22],\\n        [ -47,  -11],\\n        [  98,   73],\\n        [  58,   64],\\n        [  74,  -90],\\n        [  73,   -2],\\n        [ -20,  -21],\\n        [ -13,  -50],\\n        [ -18,  -22],\\n        [ -19,  -26],\\n        [ -74,   44],\\n        [  -6,  -40],\\n        [ -10,   53],\\n        [ -44,    4],\\n        [  81,   29],\\n        [  18,   68],\\n        [  66,   80],\\n        [ -16,  -32],\\n        [  40,   48],\\n        [ -58,   24],\\n        [   6,   31],\\n        [-100,  -39],\\n        [ -76,  -90],\\n        [ -25,  -72],\\n        [ -48,   15],\\n        [  11,   43],\\n        [ -28,  -32]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   8,   34],\\n        [  81,  -93],\\n        [ -34,  -68],\\n        [  29,  -27],\\n        [  77,  -62],\\n        [  52,   74],\\n        [ -15,   84],\\n        [  42,  -28],\\n        [ -58,  -39],\\n        [  72,   41],\\n        [  14,  -85],\\n        [ -97,  -61],\\n        [ -20,  -22],\\n        [ -47,  -11],\\n        [  98,   73],\\n        [  58,   64],\\n        [  74,  -90],\\n        [  73,   -2],\\n        [ -20,  -21],\\n        [ -13,  -50],\\n        [ -18,  -22],\\n        [ -19,  -26],\\n        [ -74,   44],\\n        [  -6,  -40],\\n        [ -10,   53],\\n        [ -44,    4],\\n        [  81,   29],\\n        [  18,   68],\\n        [  66,   80],\\n        [ -16,  -32],\\n        [  40,   48],\\n        [ -58,   24],\\n        [   6,   31],\\n        [-100,  -39],\\n        [ -76,  -90],\\n        [ -25,  -72],\\n        [ -48,   15],\\n        [  11,   43],\\n        [ -28,  -32]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000622839666903019, "start": 1738454011.1668155, "stop": 1738454011.1674387, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "164b8d7d25374b108c6ca2231560e3cc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_having_78_integers", "location": ["tests58_71_5.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013320241123437881, "start": 1738454011.1855445, "stop": 1738454011.1856782, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "164b8d7d25374b108c6ca2231560e3cc", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
