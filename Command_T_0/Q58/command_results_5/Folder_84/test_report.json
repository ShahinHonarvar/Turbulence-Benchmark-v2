{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_84_5.py::test_matrix_of_one_integer", "location": ["tests58_84_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_5.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020333193242549896, "start": 1738454020.4791396, "stop": 1738454020.4793432, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d50064ca70b548188f8bf740040ebfea", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_5.py::test_matrix_of_one_integer", "location": ["tests58_84_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_5.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015766173601150513, "start": 1738454020.479514, "stop": 1738454020.4796717, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d50064ca70b548188f8bf740040ebfea", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_5.py::test_matrix_of_one_integer", "location": ["tests58_84_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_5.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.95548951625824e-05, "start": 1738454020.4799616, "stop": 1738454020.4800315, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d50064ca70b548188f8bf740040ebfea", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_5.py::test_matrix_of_having_127_integers", "location": ["tests58_84_5.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_5.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010742247104644775, "start": 1738454020.485359, "stop": 1738454020.4854667, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d50064ca70b548188f8bf740040ebfea", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_5.py::test_matrix_of_having_127_integers", "location": ["tests58_84_5.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_5.py": 1, "Folder_84": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_84/tests58_84_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  57,  -65,  -80,  -32,  -11,   -5,  -72,  -62,  -80,  -35,\\n           87,  -89,    1,   77,  -74,   94,  -51,  -70,   -5,   50,\\n          -33,  -21,   -5,   21,   26,    1,    6,  -76,  -38,  -47,\\n           93,   75,   -5,   73,   11,  -43,   60,   42,   43,   40,\\n          -56,  -36,  -23,  -46,  -48,  -46,  -38,  -71, -100,  -41,\\n           18,  -65,  -29,   62,   94,   60,  -60,   20,  -81,  -13,\\n          -53,   63,  -54,  -25,   40,   28,  -98,  -17,  -43,  -63,\\n           82,   92,  -12,  -47,  -99,  -52,   58,   15,   69,   40,\\n            8,  -81,   57,   80,   54,   82,  -98,   82,  -33,  -52,\\n           -4,  -97,  -50,  -29,   13,  -68,  -76,    7,   55,  -22,\\n           13,  -58,   14,   67,  -29,  -89,  -62,  -28,   68,   92,\\n          -34,   41,   95,  -78,   83,  -67,   85,   28,  -84,  -10,\\n           26,   40,  -44,   82,   19,  -51,   12]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  57,  -65,  -80,  -32,  -11,   -5,  -72,  -62,  -80,  -35,\\n           87,  -89,    1,   77,  -74,   94,  -51,  -70,   -5,   50,\\n          -33,  -21,   -5,   21,   26,    1,    6,  -76,  -38,  -47,\\n           93,   75,   -5,   73,   11,  -43,   60,   42,   43,   40,\\n          -56,  -36,  -23,  -46,  -48,  -46,  -38,  -71, -100,  -41,\\n           18,  -65,  -29,   62,   94,   60,  -60,   20,  -81,  -13,\\n          -53,   63,  -54,  -25,   40,   28,  -98,  -17,  -43,  -63,\\n           82,   92,  -12,  -47,  -99,  -52,   58,   15,   69,   40,\\n            8,  -81,   57,   80,   54,   82,  -98,   82,  -33,  -52,\\n           -4,  -97,  -50,  -29,   13,  -68,  -76,    7,   55,  -22,\\n           13,  -58,   14,   67,  -29,  -89,  -62,  -28,   68,   92,\\n          -34,   41,   95,  -78,   83,  -67,   85,   28,  -84,  -10,\\n           26,   40,  -44,   82,   19,  -51,   12]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_84/tests58_84_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  57,  -65,  -80,  -32,  -11,   -5,  -72,  -62,  -80,  -35,\\n           87,  -89,    1,   77,  -74,   94,  -51,  -70,   -5,   50,\\n          -33,  -21,   -5,   21,   26,    1,    6,  -76,  -38,  -47,\\n           93,   75,   -5,   73,   11,  -43,   60,   42,   43,   40,\\n          -56,  -36,  -23,  -46,  -48,  -46,  -38,  -71, -100,  -41,\\n           18,  -65,  -29,   62,   94,   60,  -60,   20,  -81,  -13,\\n          -53,   63,  -54,  -25,   40,   28,  -98,  -17,  -43,  -63,\\n           82,   92,  -12,  -47,  -99,  -52,   58,   15,   69,   40,\\n            8,  -81,   57,   80,   54,   82,  -98,   82,  -33,  -52,\\n           -4,  -97,  -50,  -29,   13,  -68,  -76,    7,   55,  -22,\\n           13,  -58,   14,   67,  -29,  -89,  -62,  -28,   68,   92,\\n          -34,   41,   95,  -78,   83,  -67,   85,   28,  -84,  -10,\\n           26,   40,  -44,   82,   19,  -51,   12]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_84/tests58_84_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_84/tests58_84_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  57,  -65,  -80,  -32,  -11,   -5,  -72,  -62,  -80,  -35,\\n           87,  -89,    1,   77,  -74,   94,  -51,  -70,   -5,   50,\\n          -33,  -21,   -5,   21,   26,    1,    6,  -76,  -38,  -47,\\n           93,   75,   -5,   73,   11,  -43,   60,   42,   43,   40,\\n          -56,  -36,  -23,  -46,  -48,  -46,  -38,  -71, -100,  -41,\\n           18,  -65,  -29,   62,   94,   60,  -60,   20,  -81,  -13,\\n          -53,   63,  -54,  -25,   40,   28,  -98,  -17,  -43,  -63,\\n           82,   92,  -12,  -47,  -99,  -52,   58,   15,   69,   40,\\n            8,  -81,   57,   80,   54,   82,  -98,   82,  -33,  -52,\\n           -4,  -97,  -50,  -29,   13,  -68,  -76,    7,   55,  -22,\\n           13,  -58,   14,   67,  -29,  -89,  -62,  -28,   68,   92,\\n          -34,   41,   95,  -78,   83,  -67,   85,   28,  -84,  -10,\\n           26,   40,  -44,   82,   19,  -51,   12]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006829192861914635, "start": 1738454020.4857843, "stop": 1738454020.4864678, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d50064ca70b548188f8bf740040ebfea", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_5.py::test_matrix_of_having_127_integers", "location": ["tests58_84_5.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_5.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001358790323138237, "start": 1738454020.5056827, "stop": 1738454020.505819, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d50064ca70b548188f8bf740040ebfea", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
