{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004512062296271324, "start": 1738454029.8108063, "stop": 1738454029.811258, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c47baaffa0284601a789f7f04d84ebb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006890557706356049, "start": 1738454029.8114567, "stop": 1738454029.8121462, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c47baaffa0284601a789f7f04d84ebb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0003581307828426361, "start": 1738454029.8126478, "stop": 1738454029.8130066, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c47baaffa0284601a789f7f04d84ebb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032581761479377747, "start": 1738454029.8139544, "stop": 1738454029.8142805, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c47baaffa0284601a789f7f04d84ebb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -80],\\n        [ -37,    3],\\n        [  40,   75],\\n        [   2,  -62],\\n        [  70,   -6],\\n        [  47,   73],\\n        [ -25,   -7],\\n        [  83,  -74],\\n        [  90,  -78],\\n        [  19,   88],\\n        [  69,   49],\\n        [ -40,  -51],\\n        [-100,   -7],\\n        [ -18,   14],\\n        [  87,  -95],\\n        [  75,  -12],\\n        [   3,   92],\\n        [ -97,   49],\\n        [ -80,  -36],\\n        [  27,  -89],\\n        [ 100,   -4],\\n        [ -49,    5],\\n        [  10,   66],\\n        [ -33,   74],\\n        [  45,  -33],\\n        [ -65,  -54],\\n        [  99,   -7],\\n        [ -72,   29],\\n        [  98, -100],\\n        [  -7,   78],\\n        [  11,  -33],\\n        [ -12,   70],\\n        [  55,   32],\\n        [  51,  -50],\\n        [  21,    9],\\n        [  -1,   11],\\n        [ -61,   36],\\n        [ -70,  -31],\\n        [  93,  -89],\\n        [ -94,  -22],\\n        [  -7,   45],\\n        [ -51, -100],\\n        [  73,  -52],\\n        [ -60,  -28],\\n        [  97,  -25],\\n        [ -91,  -89],\\n        [  50,   83],\\n        [  42,  -17],\\n        [  92,  -31],\\n        [  54,   70],\\n        [ -57,   60],\\n        [  10,   13],\\n        [ -87,   64],\\n        [   4,  -53],\\n        [ -92, -100],\\n        [ -74,  -48],\\n        [ -54,   46],\\n        [  55,   23],\\n        [  54,  -60],\\n        [ -82,  -85]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -80],\\n        [ -37,    3],\\n        [  40,   75],\\n        [   2,  -62],\\n        [  70,   -6],\\n        [  47,   73],\\n        [ -25,   -7],\\n        [  83,  -74],\\n        [  90,  -78],\\n        [  19,   88],\\n        [  69,   49],\\n        [ -40,  -51],\\n        [-100,   -7],\\n        [ -18,   14],\\n        [  87,  -95],\\n        [  75,  -12],\\n        [   3,   92],\\n        [ -97,   49],\\n        [ -80,  -36],\\n        [  27,  -89],\\n        [ 100,   -4],\\n        [ -49,    5],\\n        [  10,   66],\\n        [ -33,   74],\\n        [  45,  -33],\\n        [ -65,  -54],\\n        [  99,   -7],\\n        [ -72,   29],\\n        [  98, -100],\\n        [  -7,   78],\\n        [  11,  -33],\\n        [ -12,   70],\\n        [  55,   32],\\n        [  51,  -50],\\n        [  21,    9],\\n        [  -1,   11],\\n        [ -61,   36],\\n        [ -70,  -31],\\n        [  93,  -89],\\n        [ -94,  -22],\\n        [  -7,   45],\\n        [ -51, -100],\\n        [  73,  -52],\\n        [ -60,  -28],\\n        [  97,  -25],\\n        [ -91,  -89],\\n        [  50,   83],\\n        [  42,  -17],\\n        [  92,  -31],\\n        [  54,   70],\\n        [ -57,   60],\\n        [  10,   13],\\n        [ -87,   64],\\n        [   4,  -53],\\n        [ -92, -100],\\n        [ -74,  -48],\\n        [ -54,   46],\\n        [  55,   23],\\n        [  54,  -60],\\n        [ -82,  -85]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -80],\\n        [ -37,    3],\\n        [  40,   75],\\n        [   2,  -62],\\n        [  70,   -6],\\n        [  47,   73],\\n        [ -25,   -7],\\n        [  83,  -74],\\n        [  90,  -78],\\n        [  19,   88],\\n        [  69,   49],\\n        [ -40,  -51],\\n        [-100,   -7],\\n        [ -18,   14],\\n        [  87,  -95],\\n        [  75,  -12],\\n        [   3,   92],\\n        [ -97,   49],\\n        [ -80,  -36],\\n        [  27,  -89],\\n        [ 100,   -4],\\n        [ -49,    5],\\n        [  10,   66],\\n        [ -33,   74],\\n        [  45,  -33],\\n        [ -65,  -54],\\n        [  99,   -7],\\n        [ -72,   29],\\n        [  98, -100],\\n        [  -7,   78],\\n        [  11,  -33],\\n        [ -12,   70],\\n        [  55,   32],\\n        [  51,  -50],\\n        [  21,    9],\\n        [  -1,   11],\\n        [ -61,   36],\\n        [ -70,  -31],\\n        [  93,  -89],\\n        [ -94,  -22],\\n        [  -7,   45],\\n        [ -51, -100],\\n        [  73,  -52],\\n        [ -60,  -28],\\n        [  97,  -25],\\n        [ -91,  -89],\\n        [  50,   83],\\n        [  42,  -17],\\n        [  92,  -31],\\n        [  54,   70],\\n        [ -57,   60],\\n        [  10,   13],\\n        [ -87,   64],\\n        [   4,  -53],\\n        [ -92, -100],\\n        [ -74,  -48],\\n        [ -54,   46],\\n        [  55,   23],\\n        [  54,  -60],\\n        [ -82,  -85]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -80],\\n        [ -37,    3],\\n        [  40,   75],\\n        [   2,  -62],\\n        [  70,   -6],\\n        [  47,   73],\\n        [ -25,   -7],\\n        [  83,  -74],\\n        [  90,  -78],\\n        [  19,   88],\\n        [  69,   49],\\n        [ -40,  -51],\\n        [-100,   -7],\\n        [ -18,   14],\\n        [  87,  -95],\\n        [  75,  -12],\\n        [   3,   92],\\n        [ -97,   49],\\n        [ -80,  -36],\\n        [  27,  -89],\\n        [ 100,   -4],\\n        [ -49,    5],\\n        [  10,   66],\\n        [ -33,   74],\\n        [  45,  -33],\\n        [ -65,  -54],\\n        [  99,   -7],\\n        [ -72,   29],\\n        [  98, -100],\\n        [  -7,   78],\\n        [  11,  -33],\\n        [ -12,   70],\\n        [  55,   32],\\n        [  51,  -50],\\n        [  21,    9],\\n        [  -1,   11],\\n        [ -61,   36],\\n        [ -70,  -31],\\n        [  93,  -89],\\n        [ -94,  -22],\\n        [  -7,   45],\\n        [ -51, -100],\\n        [  73,  -52],\\n        [ -60,  -28],\\n        [  97,  -25],\\n        [ -91,  -89],\\n        [  50,   83],\\n        [  42,  -17],\\n        [  92,  -31],\\n        [  54,   70],\\n        [ -57,   60],\\n        [  10,   13],\\n        [ -87,   64],\\n        [   4,  -53],\\n        [ -92, -100],\\n        [ -74,  -48],\\n        [ -54,   46],\\n        [  55,   23],\\n        [  54,  -60],\\n        [ -82,  -85]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001161949709057808, "start": 1738454029.8143888, "stop": 1738454029.815551, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c47baaffa0284601a789f7f04d84ebb2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012560933828353882, "start": 1738454029.8361738, "stop": 1738454029.8362997, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c47baaffa0284601a789f7f04d84ebb2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
