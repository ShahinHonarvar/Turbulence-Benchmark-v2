{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_5.py::test_matrix_of_one_integer", "location": ["tests58_59_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015181303024291992, "start": 1738454002.1624873, "stop": 1738454002.1626399, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "53d45114b9094a33a092107a50aaea93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_one_integer", "location": ["tests58_59_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019428692758083344, "start": 1738454002.1631362, "stop": 1738454002.1633308, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "53d45114b9094a33a092107a50aaea93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_one_integer", "location": ["tests58_59_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.728168904781342e-05, "start": 1738454002.1640306, "stop": 1738454002.1641183, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "53d45114b9094a33a092107a50aaea93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_having_76_integers", "location": ["tests58_59_5.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002858368679881096, "start": 1738454002.1648836, "stop": 1738454002.16517, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "53d45114b9094a33a092107a50aaea93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_having_76_integers", "location": ["tests58_59_5.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   20],\\n        [  79,   37],\\n        [ -54,   75],\\n        [  53,  -91],\\n        [  -9,  -52],\\n        [   5,   36],\\n        [ -25,    8],\\n        [   6,  -83],\\n        [ -40,  -57],\\n        [  67,   28],\\n        [ -86,  -45],\\n        [ -85,  -32],\\n        [   6,   15],\\n        [ -97,  -60],\\n        [  13,   19],\\n        [ -37,    8],\\n        [  14,   23],\\n        [  57,  -70],\\n        [ -84,   60],\\n        [ -57,    2],\\n        [ -20,   55],\\n        [  69,   62],\\n        [ -52,  -55],\\n        [ -66,   69],\\n        [  -7,  -33],\\n        [ -81,  -88],\\n        [  19,  -28],\\n        [  57,   53],\\n        [  11,  -70],\\n        [  78,  -43],\\n        [ -89,   55],\\n        [ -96,   44],\\n        [  88,  -25],\\n        [ -48,  -97],\\n        [-100,   35],\\n        [ -60,   87],\\n        [  71,   76],\\n        [  10,  -90]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   20],\\n        [  79,   37],\\n        [ -54,   75],\\n        [  53,  -91],\\n        [  -9,  -52],\\n        [   5,   36],\\n        [ -25,    8],\\n        [   6,  -83],\\n        [ -40,  -57],\\n        [  67,   28],\\n        [ -86,  -45],\\n        [ -85,  -32],\\n        [   6,   15],\\n        [ -97,  -60],\\n        [  13,   19],\\n        [ -37,    8],\\n        [  14,   23],\\n        [  57,  -70],\\n        [ -84,   60],\\n        [ -57,    2],\\n        [ -20,   55],\\n        [  69,   62],\\n        [ -52,  -55],\\n        [ -66,   69],\\n        [  -7,  -33],\\n        [ -81,  -88],\\n        [  19,  -28],\\n        [  57,   53],\\n        [  11,  -70],\\n        [  78,  -43],\\n        [ -89,   55],\\n        [ -96,   44],\\n        [  88,  -25],\\n        [ -48,  -97],\\n        [-100,   35],\\n        [ -60,   87],\\n        [  71,   76],\\n        [  10,  -90]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   20],\\n        [  79,   37],\\n        [ -54,   75],\\n        [  53,  -91],\\n        [  -9,  -52],\\n        [   5,   36],\\n        [ -25,    8],\\n        [   6,  -83],\\n        [ -40,  -57],\\n        [  67,   28],\\n        [ -86,  -45],\\n        [ -85,  -32],\\n        [   6,   15],\\n        [ -97,  -60],\\n        [  13,   19],\\n        [ -37,    8],\\n        [  14,   23],\\n        [  57,  -70],\\n        [ -84,   60],\\n        [ -57,    2],\\n        [ -20,   55],\\n        [  69,   62],\\n        [ -52,  -55],\\n        [ -66,   69],\\n        [  -7,  -33],\\n        [ -81,  -88],\\n        [  19,  -28],\\n        [  57,   53],\\n        [  11,  -70],\\n        [  78,  -43],\\n        [ -89,   55],\\n        [ -96,   44],\\n        [  88,  -25],\\n        [ -48,  -97],\\n        [-100,   35],\\n        [ -60,   87],\\n        [  71,   76],\\n        [  10,  -90]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q58/command_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   20],\\n        [  79,   37],\\n        [ -54,   75],\\n        [  53,  -91],\\n        [  -9,  -52],\\n        [   5,   36],\\n        [ -25,    8],\\n        [   6,  -83],\\n        [ -40,  -57],\\n        [  67,   28],\\n        [ -86,  -45],\\n        [ -85,  -32],\\n        [   6,   15],\\n        [ -97,  -60],\\n        [  13,   19],\\n        [ -37,    8],\\n        [  14,   23],\\n        [  57,  -70],\\n        [ -84,   60],\\n        [ -57,    2],\\n        [ -20,   55],\\n        [  69,   62],\\n        [ -52,  -55],\\n        [ -66,   69],\\n        [  -7,  -33],\\n        [ -81,  -88],\\n        [  19,  -28],\\n        [  57,   53],\\n        [  11,  -70],\\n        [  78,  -43],\\n        [ -89,   55],\\n        [ -96,   44],\\n        [  88,  -25],\\n        [ -48,  -97],\\n        [-100,   35],\\n        [ -60,   87],\\n        [  71,   76],\\n        [  10,  -90]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007453691214323044, "start": 1738454002.1653361, "stop": 1738454002.166082, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "53d45114b9094a33a092107a50aaea93", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_having_76_integers", "location": ["tests58_59_5.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014336686581373215, "start": 1738454002.1866124, "stop": 1738454002.1867561, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "53d45114b9094a33a092107a50aaea93", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
