{
  "parameter(s)": [
    24,
    "descending"
  ],
  "test_strings_of_size_equal_to_24": [
    "failed",
    "AssertionError: assert ['m', 'k', 'c...'y', 'n', ...] == ['y', 't', 'n...'k', 'i', ...]\n  At index 0 diff: 'm' != 'y'\n  Right contains 16 more items, first extra item: ']'\n  Full diff:\n    [\n  -  'y',\n  -  't',\n  -  'n',...\n  \n  ...Full output truncated (26 lines hidden), use '-vv' to show",
    0.00068
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['v', 'q', 't', 'b', 'g', 'r'] == ['v', 't', 'r', 'q', 'g', 'b']\n  At index 1 diff: 'q' != 't'\n  Full diff:\n  - ['v', 't', 'r', 'q', 'g', 'b']\n  ?             ^  -----       ^\n  + ['v', 'q', 't', 'b', 'g', 'r']\n  ?       +++++      ^         ^",
    0.00069
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 7 == 24\n +  where 7 = len(['f', 'o', 'h', 'm', 'q', 'd', ...])\n +    where ['f', 'o', 'h', 'm', 'q', 'd', ...] = return_n_smallest_chars('foh:JH#$&V.2]mT%0Oq@K+dPc')",
    0.00037
  ]
}