{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_100_1.py::test_compare_length_of_strings", "location": ["tests32_100_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.037705603986979e-05, "start": 1731100402.2919397, "stop": 1731100402.2920306, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_100_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_100_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012198509648442268, "start": 1731100402.2920609, "stop": 1731100402.292183, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_100_1.py::test_string_of_length_one", "location": ["tests32_100_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012248894199728966, "start": 1731100402.2920027, "stop": 1731100402.2921257, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_100_1.py::test_compare_length_of_strings", "location": ["tests32_100_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014836492482572794, "start": 1731100402.2921815, "stop": 1731100402.29233, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_100_1.py::test_compare_length_of_strings", "location": ["tests32_100_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.7018944062292576e-05, "start": 1731100402.292536, "stop": 1731100402.2925935, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_100_1.py::test_length_of_result", "location": ["tests32_100_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.342803291976452e-05, "start": 1731100402.294671, "stop": 1731100402.2947447, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_100_1.py::test_string_of_length_one", "location": ["tests32_100_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 8, "message": "AssertionError: assert '\\x00 \\x00' == '0 '\n  - 0 \n  + \u0000 \u0000"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = '0'", ">       assert insert_after_character(s) == '0' + ' '", "E       AssertionError: assert '\\x00 \\x00' == '0 '", "E         - 0 ", "E         + \u0000 \u0000"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = '0'", ">       assert insert_after_character(s) == '0' + ' '", "E       AssertionError: assert '\\x00 \\x00' == '0 '", "E         - 0 ", "E         + \u0000 \u0000"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 8, "message": "AssertionError: assert '\\x00 \\x00' == '0 '\n  - 0 \n  + \u0000 \u0000"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00031107792165130377, "start": 1731100402.2923193, "stop": 1731100402.2926307, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_100_1.py::test_string_of_length_one", "location": ["tests32_100_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.154202416539192e-05, "start": 1731100402.3011367, "stop": 1731100402.3012285, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_100_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_100_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00')\n +    where '\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00' = insert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = '0' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = len('\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00')", "E        +    where '\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00' = insert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = '0' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = len('\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00')", "E        +    where '\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00' = insert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00')\n +    where '\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00...0\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00\\x00 \\x00' = insert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003182860091328621, "start": 1731100402.2923675, "stop": 1731100402.2926857, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_100_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_100_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.196705650538206e-05, "start": 1731100402.3011584, "stop": 1731100402.301251, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_100_1.py::test_length_of_result", "location": ["tests32_100_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('2k3wE6De4rtVzXc8FqKo\\x00 \\x00')\n +  and   21 = len('2k3wE6De4rtVzXc8FqKo0')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + '0'", "        returned_string = insert_after_character(s)", "        count = s.count('0')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('2k3wE6De4rtVzXc8FqKo\\x00 \\x00')", "E        +  and   21 = len('2k3wE6De4rtVzXc8FqKo0')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + '0'", "        returned_string = insert_after_character(s)", "        count = s.count('0')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('2k3wE6De4rtVzXc8FqKo\\x00 \\x00')", "E        +  and   21 = len('2k3wE6De4rtVzXc8FqKo0')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_1/Folder_100/tests32_100_1.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('2k3wE6De4rtVzXc8FqKo\\x00 \\x00')\n +  and   21 = len('2k3wE6De4rtVzXc8FqKo0')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018250895664095879, "start": 1731100402.2948236, "stop": 1731100402.2950065, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_100_1.py::test_length_of_result", "location": ["tests32_100_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_100_1.py": 1, "Folder_100": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.830606773495674e-05, "start": 1731100402.3032894, "stop": 1731100402.3033679, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "86e15812ccba4394b71ff8887cf81f46", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
