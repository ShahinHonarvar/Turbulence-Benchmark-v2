{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_89_4.py::test_compare_length_of_strings", "location": ["tests32_89_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.98200848698616e-05, "start": 1731102664.2177136, "stop": 1731102664.2178137, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_89_4.py::test_string_of_length_one", "location": ["tests32_89_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012233492452651262, "start": 1731102664.2178502, "stop": 1731102664.217973, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_89_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_89_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001206470187753439, "start": 1731102664.218012, "stop": 1731102664.218133, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_89_4.py::test_string_of_length_one", "location": ["tests32_89_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 8, "message": "AssertionError: assert ' ' == ' W'\n  Strings contain only whitespace, escaping them using repr()\n  - ' W'\n  ?   -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + 'W'", "E       AssertionError: assert ' ' == ' W'", "E         Strings contain only whitespace, escaping them using repr()", "E         - ' W'", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + 'W'", "E       AssertionError: assert ' ' == ' W'", "E         Strings contain only whitespace, escaping them using repr()", "E         - ' W'", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 8, "message": "AssertionError: assert ' ' == ' W'\n  Strings contain only whitespace, escaping them using repr()\n  - ' W'\n  ?   -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003305119462311268, "start": 1731102664.2181537, "stop": 1731102664.2184846, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_89_4.py::test_compare_length_of_strings", "location": ["tests32_89_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('aKtnRY2c3DisXJPU4fdq ')\n +  and   21 = len('aKtnRY2c3DisXJPU4fdq ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('aKtnRY2c3DisXJPU4fdq ')", "E        +  and   21 = len('aKtnRY2c3DisXJPU4fdq ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('aKtnRY2c3DisXJPU4fdq ')", "E        +  and   21 = len('aKtnRY2c3DisXJPU4fdq ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('aKtnRY2c3DisXJPU4fdq ')\n +  and   21 = len('aKtnRY2c3DisXJPU4fdq ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023658701684325933, "start": 1731102664.2179718, "stop": 1731102664.2182086, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_89_4.py::test_compare_length_of_strings", "location": ["tests32_89_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010022404603660107, "start": 1731102664.2270274, "stop": 1731102664.2271283, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_89_4.py::test_string_of_length_one", "location": ["tests32_89_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010506401304155588, "start": 1731102664.2270095, "stop": 1731102664.2271152, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_89_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_89_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhere '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ' = insert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_4/Folder_89/tests32_89_4.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00041761400643736124, "start": 1731102664.2183118, "stop": 1731102664.2187295, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_89_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_89_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_89_4.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.848806075751781e-05, "start": 1731102664.2273443, "stop": 1731102664.2274435, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d7ad7272da474184b44a680ec4943aaa", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
