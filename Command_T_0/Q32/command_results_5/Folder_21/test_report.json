{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_21_5.py::test_compare_length_of_strings", "location": ["tests32_21_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001145040150731802, "start": 1731102926.5737221, "stop": 1731102926.5738368, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_21_5.py::test_string_of_length_one", "location": ["tests32_21_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015993602573871613, "start": 1731102926.573898, "stop": 1731102926.5740588, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_21_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_21_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020962092094123363, "start": 1731102926.5740995, "stop": 1731102926.5743096, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_21_5.py::test_compare_length_of_strings", "location": ["tests32_21_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('D8mOnyzA9ebdurQaN3vB ')\n +  and   21 = len('D8mOnyzA9ebdurQaN3vB ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('D8mOnyzA9ebdurQaN3vB ')", "E        +  and   21 = len('D8mOnyzA9ebdurQaN3vB ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('D8mOnyzA9ebdurQaN3vB ')", "E        +  and   21 = len('D8mOnyzA9ebdurQaN3vB ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('D8mOnyzA9ebdurQaN3vB ')\n +  and   21 = len('D8mOnyzA9ebdurQaN3vB ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002654870040714741, "start": 1731102926.5740101, "stop": 1731102926.5742757, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_21_5.py::test_compare_length_of_strings", "location": ["tests32_21_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011236791033297777, "start": 1731102926.5830953, "stop": 1731102926.583208, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_21_5.py::test_string_of_length_one", "location": ["tests32_21_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 8, "message": "AssertionError: assert ' ' == ' K'\n  Strings contain only whitespace, escaping them using repr()\n  - ' K'\n  ?   -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + 'K'", "E       AssertionError: assert ' ' == ' K'", "E         Strings contain only whitespace, escaping them using repr()", "E         - ' K'", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + 'K'", "E       AssertionError: assert ' ' == ' K'", "E         Strings contain only whitespace, escaping them using repr()", "E         - ' K'", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 8, "message": "AssertionError: assert ' ' == ' K'\n  Strings contain only whitespace, escaping them using repr()\n  - ' K'\n  ?   -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004081319784745574, "start": 1731102926.5742877, "stop": 1731102926.5746963, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_21_5.py::test_string_of_length_one", "location": ["tests32_21_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010981806553900242, "start": 1731102926.5836575, "stop": 1731102926.5837681, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_21_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_21_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_character('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')", "E        +  and   1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_21/tests32_21_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')\n +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005204539047554135, "start": 1731102926.5746248, "stop": 1731102926.575146, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_21_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_21_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010610301978886127, "start": 1731102926.5900352, "stop": 1731102926.5901423, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3df8a70d8d2a4a2aa7bf7353c35905ad", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
