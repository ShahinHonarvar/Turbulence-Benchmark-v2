{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_89_5.py::test_compare_length_of_strings", "location": ["tests32_89_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010231591295450926, "start": 1731103457.5830145, "stop": 1731103457.5831168, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_89_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_89_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001537479693070054, "start": 1731103457.5832043, "stop": 1731103457.5833588, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_89_5.py::test_string_of_length_one", "location": ["tests32_89_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018726708367466927, "start": 1731103457.5833087, "stop": 1731103457.5834968, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_89_5.py::test_compare_length_of_strings", "location": ["tests32_89_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('bW13MC0dFkDI2ioHxAaB ')\n +  and   21 = len('bW13MC0dFkDI2ioHxAaB ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('bW13MC0dFkDI2ioHxAaB ')", "E        +  and   21 = len('bW13MC0dFkDI2ioHxAaB ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('bW13MC0dFkDI2ioHxAaB ')", "E        +  and   21 = len('bW13MC0dFkDI2ioHxAaB ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('bW13MC0dFkDI2ioHxAaB ')\n +  and   21 = len('bW13MC0dFkDI2ioHxAaB ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000257152016274631, "start": 1731103457.5832775, "stop": 1731103457.5835352, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_89_5.py::test_compare_length_of_strings", "location": ["tests32_89_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010978092905133963, "start": 1731103457.5922613, "stop": 1731103457.5923717, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_89_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_89_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_character('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')", "E        +  and   1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')\n +    whereinsert_after_charactern +  and   1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035980704706162214, "start": 1731103457.583586, "stop": 1731103457.5839462, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_89_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_89_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.750807657837868e-05, "start": 1731103457.5924048, "stop": 1731103457.5925026, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_89_5.py::test_string_of_length_one", "location": ["tests32_89_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 8, "message": "AssertionError: assert ' ' == ' W'\n  Strings contain only whitespace, escaping them using repr()\n  - ' W'\n  ?   -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + 'W'", "E       AssertionError: assert ' ' == ' W'", "E         Strings contain only whitespace, escaping them using repr()", "E         - ' W'", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + 'W'", "E       AssertionError: assert ' ' == ' W'", "E         Strings contain only whitespace, escaping them using repr()", "E         - ' W'", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_0/Q32/command_results_5/Folder_89/tests32_89_5.py", "lineno": 8, "message": "AssertionError: assert ' ' == ' W'\n  Strings contain only whitespace, escaping them using repr()\n  - ' W'\n  ?   -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005316470051184297, "start": 1731103457.5837874, "stop": 1731103457.58432, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_89_5.py::test_string_of_length_one", "location": ["tests32_89_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_89_5.py": 1, "Folder_89": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010027096141129732, "start": 1731103457.5956614, "stop": 1731103457.595762, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "028d007ccf9a4b1da0aa3e6e40d4ec41", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
