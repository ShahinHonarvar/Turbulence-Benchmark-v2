{
  "parameter(s)": [
    11,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    5e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [24, 26, 28, 30, 32, 34, ...] == [26, 28, 30, 32, 34, 36, ...]\n  \n  At index 0 diff: 24 != 26\n  Left contains one more item: 152\n  \n  Full diff:\n    [\n  +     24,...\n  \n  ...Full output truncated (65 lines hidden), use '-vv' to show",
    0.00068
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [12, 13, 14, 15, 16, 17, ...] == [13, 14, 15, 16, 17, 18, ...]\n  \n  At index 0 diff: 12 != 13\n  Left contains one more item: 76\n  \n  Full diff:\n    [\n  +     12,...\n  \n  ...Full output truncated (65 lines hidden), use '-vv' to show",
    0.00068
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 65 == ((76 - 11) - 1)\n +  where 65 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00023
  ]
}