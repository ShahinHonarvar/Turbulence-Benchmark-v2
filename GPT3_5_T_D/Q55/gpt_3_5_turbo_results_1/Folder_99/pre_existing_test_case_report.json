{
  "parameter(s)": [
    415
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.0001
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00019
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    8e-05
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[415, 415, 4...15, ...], ...] == [[415], [415]...], [415], ...]\n  At index 0 diff: [415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415, 415] != [415]\n  Full diff:\n    [\n  -  [415],\n  ?      -\n  +  [415,\n  +   415,...\n  \n  ...Full output truncated (480 lines hidden), use '-vv' to show",
    0.03268
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7ea69e0da200>([415])\n +    where <built-in method count of list object at 0x7ea69e0da200> = [[1, 415, 1, 415, 1, 415], [1, 415, 1, 415, 1, 415], [415, 1, 415, 1, 415, 1], [415, 1, 415, 1, 415, 1], [1, 415, 1, 415, 1, 415], [1, 415, 1, 415, 1, 415], ...].count",
    0.00039
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 29661450625 == 415\n +  where 29661450625 = <built-in function prod>([1, 5, 83, 415, 1, 5, ...])\n +    where <built-in function prod> = math.prod",
    0.0002
  ]
}