{
  "parameter(s)": [
    32
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.0001
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00021
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00015
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[32, 32, 32,...32, ...], ...] == [[32], [32], ...2], [32], ...]\n  At index 0 diff: [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32] != [32]\n  Full diff:\n    [\n  -  [32],\n  ?     -\n  +  [32,\n  +   32,...\n  \n  ...Full output truncated (5472 lines hidden), use '-vv' to show",
    2.26671
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7228afb6d840>([32])\n +    where <built-in method count of list object at 0x7228afb6d840> = [[1, 32, 1, 32, 1, 32], [1, 32, 1, 32, 1, 32], [32, 1, 32, 1, 32, 1], [32, 1, 32, 1, 32, 1], [1, 32, 1, 32, 1, 32], [1, 32, 1, 32, 1, 32], ...].count",
    0.00025
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 1073741824 == 32\n +  where 1073741824 = <built-in function prod>([4, 8, 16, 32, 1, 2, ...])\n +    where <built-in function prod> = math.prod",
    0.00033
  ]
}