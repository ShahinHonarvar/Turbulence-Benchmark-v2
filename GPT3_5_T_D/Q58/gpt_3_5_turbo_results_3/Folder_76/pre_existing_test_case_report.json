{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00034
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-67, -90, -57, -71, -21, -16,  -9,  57, -69, -81,  37, -63,  95,\\n          42, -50,  55,   6, -28,  47, -77, -41,  99,  -9, -83,  -8,  87,\\n         -54,  86, -90,  61, -38, -93,  -6,  91,  29, -82, -69, -68, -67,\\n         -28,  10,  -4, -12,  42,  87,  42, -40, -70,  48, -52,  78, -26,\\n          36, -11, -91, -53, -19, -39, -10,  52, -21, -39, -63, -49,  79,\\n         -13, -34, -33, -79,  15, -83,  25, -65,  82,  57, -21, -11,  75,\\n          31,  76,  -2, -93,  36,  -9,  48,  23, -97,  89,  20, -14,  92,\\n         -97, -23,  75, -25,  27,  -1, -14,  71, -75, -83, -69, -22, -18,\\n          64,  95,  78, -52,  60,  41,  70,  76, -62, -58, -43,  -4,  85,\\n          51,  -8, -11,  62, -94,  76, -12, -38, -27, -90, -81,  90, -42,\\n         -88, -90,  53, -68, -76, -98,  39, -79,  86, -77, -31, -88, 100,\\n         -73,  32,  18, -46,   7,  60,  -7, -60,  11,  13,   0, -30,  98,\\n         -60, -45, -41]]))",
    0.00092
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00152
  ]
}