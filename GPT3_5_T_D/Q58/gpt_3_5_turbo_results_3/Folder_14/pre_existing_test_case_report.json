{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[84]]))",
    0.00029
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-73, -49],\\n        [  1,  34],\\n        [-56,  19],\\n        [-44, -34],\\n        [-35,  85],\\n        [ 44,  39],\\n        [ 47, -65],\\n        [ 29, -70],\\n        [ 69, -10],\\n        [ 24,  98],\\n        [ 95, 100],\\n        [ -2,  20],\\n        [-36, -21],\\n        [ 83, -30],\\n        [-84, -45],\\n        [ 59,  28],\\n        [ -8, -74],\\n        [-76, -47],\\n        [-89,  33],\\n        [-12,  42],\\n        [-92,  62],\\n        [ 89,  11],\\n        [ 51,  39],\\n        [ 97,  78],\\n        [-30,  95],\\n        [ 54, -20],\\n        [ 36, -77],\\n        [-30, -47],\\n        [ 10,  32],\\n        [ 51, -48],\\n        [ 18, -98],\\n        [-93,  54],\\n        [-57, -66],\\n        [-61,  67],\\n        [-25,  18],\\n        [-71,  44],\\n        [-93, -11],\\n        [ -6,  19],\\n        [-53,  52],\\n        [-15, -30],\\n        [-38, -57],\\n        [  8, -76]]))",
    0.00051
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00047
  ]
}