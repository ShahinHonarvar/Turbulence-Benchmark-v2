{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00038
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 86, -92],\\n        [ 27, -66],\\n        [ 43,  93],\\n        [ 90,  83],\\n        [-42,  70],\\n        [ 13, -28],\\n        [ 51,  -3],\\n        [-54, -15],\\n        [-10,  -5],\\n        [ 33, -14],\\n        [-22, -66],\\n        [-36, -90],\\n        [-73, -40],\\n        [ 25,  24],\\n        [-11,  47],\\n        [-50,  50],\\n        [  6,  83],\\n        [-20, -91],\\n        [ 54,  22],\\n        [ 74,  59],\\n        [-13, -54],\\n        [-31,  14],\\n        [ 72, -56],\\n        [ 26,  69],\\n        [ 72, -92],\\n        [ 84, -65],\\n        [ 33, -57],\\n        [ 76,  39],\\n        [-90, -42],\\n        [-90, -91],\\n        [ 93, -77],\\n        [ 50,   1],\\n        [  0,  81],\\n        [ 12, -83],\\n        [-12,  -8],\\n        [-46, -25],\\n        [-73,  95],\\n        [ 58,  12],\\n        [-88,  90],\\n        [-12, -49]]))",
    0.00159
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00068
  ]
}