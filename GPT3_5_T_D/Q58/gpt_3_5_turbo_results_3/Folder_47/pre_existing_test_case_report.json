{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00033
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -7,  -93],\\n        [  16,  -52],\\n        [   1,   46],\\n        [  46,  -85],\\n        [  88,   95],\\n        [ -40,  -59],\\n        [ -41,   64],\\n        [   8, -100],\\n        [  12,  -13],\\n        [ -97,  -96],\\n        [  65,  -91],\\n        [  54,   41],\\n        [   3,  -39],\\n        [ -95,   -5],\\n        [ -10,   59],\\n        [ -16,   12],\\n        [  93,   62],\\n        [  35,  -26],\\n        [ -34,  -17],\\n        [ -79,   49],\\n        [ -27,   47],\\n        [  11,   76],\\n        [ -90,  -76],\\n        [   0,  -81],\\n        [ -71,    0],\\n        [  27,  -15],\\n        [  52,   31],\\n        [  80,  -93],\\n        [ -19,   28],\\n        [  -8,   74],\\n        [  59,   24],\\n        [ -84,   51],\\n        [ -27,  -74],\\n        [ -98,  -11],\\n        [ -13,   21],\\n        [ -98,   85],\\n        [  49,   87],\\n        [  65,   49],\\n        [ -18,   -4],\\n        [  84,    7],\\n        [  74,  -24],\\n        [   0,   44],\\n        [  42,   -2],\\n        [  99,   84],\\n        [ -68,   -5]]))",
    0.00069
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.0008
  ]
}