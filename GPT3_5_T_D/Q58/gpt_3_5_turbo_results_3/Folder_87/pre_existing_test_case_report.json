{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  5, -43],\\n        [-50, -88],\\n        [-88, -86],\\n        [-20,  -3],\\n        [ 66,   0],\\n        [-53,  86],\\n        [ 17,   1],\\n        [ 81, -68],\\n        [-30,  -8],\\n        [ 86, -75],\\n        [-33,  33],\\n        [ -8,  62],\\n        [ 46,  94],\\n        [ 40,  41],\\n        [ 66,  31],\\n        [-53,  76],\\n        [-70,  -4],\\n        [  4, -44],\\n        [ 39, -22],\\n        [-54, -31],\\n        [ 87,  18],\\n        [-98, -32],\\n        [-15,  24],\\n        [ -9,  31],\\n        [-13,  -9],\\n        [ 31,   3],\\n        [ 53, -99],\\n        [ 97, -89],\\n        [-82,   8],\\n        [ 32,  21],\\n        [-80, -89],\\n        [ 98,  73],\\n        [-20, -72],\\n        [ 74,  99],\\n        [-94,  86],\\n        [-27,  52],\\n        [-32,  44],\\n        [  6, -50],\\n        [-32, -27],\\n        [ 92, -32],\\n        [-99, -75],\\n        [-58, -43],\\n        [ 41, -84],\\n        [ 41,  89],\\n        [-12,  34],\\n        [ 59, -53],\\n        [ 26, -74],\\n        [ 58,   8]]))",
    0.00082
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00042
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00081
  ]
}