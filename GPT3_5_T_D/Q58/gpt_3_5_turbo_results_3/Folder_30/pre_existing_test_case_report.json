{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00039
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 19,  63],\\n        [ 83,  75],\\n        [-11,   1],\\n        [ 96,  16],\\n        [-68, -48],\\n        [-35,  38],\\n        [ 31, -51],\\n        [ 23, -60],\\n        [-84,  29],\\n        [ 64, -47],\\n        [-37,  91],\\n        [-61, -57],\\n        [ 72,  54],\\n        [ 60, -31],\\n        [ 42,  -7],\\n        [-78, -97],\\n        [ 90, -92],\\n        [ 20,  48],\\n        [-98, -58],\\n        [-42,  38],\\n        [-62,  55],\\n        [-68,  31],\\n        [-49, -92],\\n        [ 12,  99],\\n        [-76, -24],\\n        [-20,  35],\\n        [ 71,  29],\\n        [  0,  -7],\\n        [-76,  25],\\n        [ 51,  81],\\n        [  4, -44],\\n        [ 90,   8],\\n        [ 52,  80],\\n        [ 89, -77],\\n        [-14, -14],\\n        [ 49,  98],\\n        [-53, -51],\\n        [-79,  84],\\n        [ 51,  71],\\n        [-93, -19],\\n        [ -2, -44],\\n        [ 73, -53],\\n        [-61, -64],\\n        [-14,  56],\\n        [ 80, -50],\\n        [ 69,  23],\\n        [ 49, -79]]))",
    0.00078
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00078
  ]
}