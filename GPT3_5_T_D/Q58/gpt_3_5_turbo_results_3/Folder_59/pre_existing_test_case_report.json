{
  "parameter(s)": [
    76
  ],
  "test_matrix_of_having_76_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-58,   2],\\n        [-98, -98],\\n        [ 99,  58],\\n        [ 37, -90],\\n        [ 50,  90],\\n        [ 24, -74],\\n        [-67, -97],\\n        [ 39,  79],\\n        [-30,  36],\\n        [ 49,   4],\\n        [-74,  31],\\n        [ -7, -57],\\n        [-83,  24],\\n        [  0, -55],\\n        [ -9,  44],\\n        [ 81, -21],\\n        [ -1, -29],\\n        [ 41, -45],\\n        [-98, -17],\\n        [ 29, -51],\\n        [ -8,  85],\\n        [ 65, -78],\\n        [-61,   4],\\n        [ 57,  42],\\n        [ 51,  14],\\n        [-21,  18],\\n        [  7, -94],\\n        [-32,  24],\\n        [ 87, -78],\\n        [-15, -97],\\n        [100,  50],\\n        [ 80, -58],\\n        [-12, -56],\\n        [ 93,  32],\\n        [-14,  75],\\n        [-37,  94],\\n        [-59, -42],\\n        [-41,  29]]))",
    0.00073
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 153",
    0.00046
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[76]]))",
    0.00043
  ]
}