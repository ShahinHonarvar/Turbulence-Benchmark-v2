{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[127]]))",
    0.00206
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,    9,   30,   45,  -46,    3,   41,  -51,  -85,  -74,\\n          -98,   -8,  -16,   19,   26,  -95,   32,   60,    5,   48,\\n           66,   95,   70,   72,   60,    1,   75,   48,   93,  -16,\\n           25,  -88, -100,   -1,   -7,  -59,  -45,   70,   47,   24,\\n           60,  -86,  -43,   98,  -22,   91,    6,   64,   39,  -73,\\n           27,  -80,   38,   23,   87,   59,   72,  -41,   27,  -38,\\n          -63,  -64,   38,   14,   61,   -4,  -63,  -87,  -52,   17,\\n           95,   18,   15,  -86,   94,  -88,  -64,   20,  -20,  -62,\\n            3,  -42,   50,   24,  -67,  -62,    1,  -65,   -4,  -23,\\n           61,  -26,   86,  -82,  -84,  -36,  -54,   90,  -41,   18,\\n          -60,   52,  -50,   24,   51,  -18,   71,    6,  -20,  -54,\\n           -3,   15,  -61,    0,   -8,  -44,  -37,   13,  -75,   14,\\n           46,  -37,   28,  -54,  -80,   61,  -52]]))",
    0.04108
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.2571
  ]
}