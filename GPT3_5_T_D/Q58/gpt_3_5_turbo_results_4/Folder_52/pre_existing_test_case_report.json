{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00038
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00538
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  98,   26,  -76,   11,   94,    5,   47,  -74,  -58,   55,\\n           99,  -10,   81,   53,   30,   61, -100,  -63,  -19,   57,\\n           82,   78,  -23,   60,  -59,  -76,   33,  -71,  -64,  -59,\\n          -93,  -19,   78,   77,  -87,  -98,   17,  -32,   92,  -73,\\n           -2,    8,   20,  -88,   -8,  -34,  -28,   54,   85,   94,\\n          -60,   83,  -50,   90,   59,  -91,   87,   46,  -82,   -9,\\n           15,   65,   33,   52,   54,  100,   17,  -30,   -8,   50,\\n           65,   60,   55,  -38,   -5,  -67,  -58,   35,    3,   14,\\n            5,  -44,   83,   55,  -15,  -16,   89,    2,  -79,  -62,\\n          -64,  -10,   93,   69,   48,   39,  -42,   88,   55,  -82,\\n          -81,  -64,  -60,  -33,   35,  -90, -100,  -69,  -13,  -86,\\n          -12,   -2,  -57,  -19,   19,   29,  -62,   -8,  -78,  -61,\\n          -50,   93,  -85,   82,  -95,  -38,   83,   43,  -98,  -19,\\n          -92,  -44,   46,  -74,   59,   88,  -41,   42,   65,   58,\\n           20,   77,  -31,   -6,  -53,   77,  -70]]))",
    0.00072
  ]
}