{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  4,  16],\\n        [-65,  -2],\\n        [-89,  80],\\n        [ 70, -88],\\n        [-97,  59],\\n        [ 56, -48],\\n        [ 38,  48],\\n        [-56,  38],\\n        [-95, -60],\\n        [-41,  75],\\n        [  4, -13],\\n        [-66, -96],\\n        [ 13, -30],\\n        [-59,  92],\\n        [ 36, -76],\\n        [-20, -49],\\n        [-92, -46],\\n        [-71, -55],\\n        [  2, -30],\\n        [ 24, -73],\\n        [ 41,  56],\\n        [ 28,   1],\\n        [ 57,  99],\\n        [ 13,  62],\\n        [-42,  -9],\\n        [-75,   2],\\n        [-28,  49],\\n        [ 63,  64],\\n        [ 32, -81],\\n        [ 43,  64],\\n        [  1,  86],\\n        [ 69,  34],\\n        [-23,   0],\\n        [ 66, -48],\\n        [-32,   6],\\n        [ 86,  -8],\\n        [  4, -74],\\n        [-31, -38],\\n        [-72, -46],\\n        [-84, -58],\\n        [-12,  82],\\n        [ 93,  63]]))",
    0.02508
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.15716
  ]
}