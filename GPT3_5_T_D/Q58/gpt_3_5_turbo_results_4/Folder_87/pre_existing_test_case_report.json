{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00107
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00039
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -2,  98],\\n        [ 74, -33],\\n        [ 84, -26],\\n        [-73, -19],\\n        [ 76,  44],\\n        [-67, -41],\\n        [ 57,  43],\\n        [ -5, -93],\\n        [ -1, -84],\\n        [ 91,  77],\\n        [  8, -68],\\n        [-75,  24],\\n        [  4, -35],\\n        [ 51,  26],\\n        [-22, -19],\\n        [-94,  -1],\\n        [ 39, -42],\\n        [  6, -22],\\n        [ 86, -84],\\n        [-23,  61],\\n        [ 59,  60],\\n        [-54,  25],\\n        [ 81, -56],\\n        [ 54,  75],\\n        [-12,  58],\\n        [ 46, -34],\\n        [  8,  12],\\n        [-36, -89],\\n        [ 13, -51],\\n        [ 84,  95],\\n        [ 57,  15],\\n        [ 74, -95],\\n        [ 23, -59],\\n        [-77,   7],\\n        [ -8, -32],\\n        [-80,  42],\\n        [-84,   0],\\n        [-42,  76],\\n        [-54,  34],\\n        [-57, -89],\\n        [-52, -33],\\n        [ 61,  41],\\n        [ 15,  99],\\n        [ 39, -60],\\n        [ 85,   0],\\n        [ 27,  49],\\n        [-71, -73],\\n        [-66, -76]]))",
    0.00195
  ]
}