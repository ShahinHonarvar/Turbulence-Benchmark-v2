{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00155
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  13,   60],\\n        [ -27,  -71],\\n        [   2,   61],\\n        [ -15,   18],\\n        [  69,   82],\\n        [ -33,    3],\\n        [  22, -100],\\n        [   9,   45],\\n        [ -97,  -95],\\n        [   5,   47],\\n        [  15,  -40],\\n        [ -93, -100],\\n        [ 100,   23],\\n        [ -13,   36],\\n        [ -41,  -14],\\n        [ -82,  -86],\\n        [ -66,   -9],\\n        [ -64,   27],\\n        [ -22,   27],\\n        [  86,   81],\\n        [ -44,   69],\\n        [  76,  -25],\\n        [ -24,   18],\\n        [  18,   58],\\n        [  77,  -49],\\n        [ -12,  -24],\\n        [  47,   59],\\n        [ -71,   29],\\n        [  -3,   75],\\n        [  93,  -60],\\n        [ -69,   71],\\n        [ -78,  -10],\\n        [ -46,    8],\\n        [  47,   63],\\n        [  57,   51],\\n        [  79,  -45],\\n        [ -91,  -36],\\n        [  80,   61],\\n        [ -50,   12],\\n        [  52,  -27],\\n        [ -67,  -86],\\n        [ -33,  -58],\\n        [ -64,    0],\\n        [  95,   48],\\n        [  25,    9],\\n        [  18,  -83],\\n        [  29,   11]]))",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00734
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00051
  ]
}