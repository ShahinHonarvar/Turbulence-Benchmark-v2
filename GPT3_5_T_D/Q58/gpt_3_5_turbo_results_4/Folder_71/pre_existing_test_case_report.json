{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.05052
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-48,  13],\\n        [-98, -19],\\n        [-65,  22],\\n        [ 89, -87],\\n        [-26,  73],\\n        [ -4, -96],\\n        [ 43, -14],\\n        [-37, -71],\\n        [ 39,  95],\\n        [-29,  10],\\n        [ 82, -89],\\n        [ 74,  51],\\n        [-19,  64],\\n        [ 96, -80],\\n        [ 28, -92],\\n        [ -1,  34],\\n        [-90,  59],\\n        [ 32,  58],\\n        [ 37, -28],\\n        [-84, -21],\\n        [-34,  26],\\n        [ 44,   3],\\n        [ 22, -94],\\n        [ 46,  85],\\n        [ -1, -24],\\n        [-50, -50],\\n        [-46, -11],\\n        [ -9,  -8],\\n        [-44, -20],\\n        [-66, -83],\\n        [-36, -82],\\n        [-18, -68],\\n        [ 40,  -2],\\n        [ 39, -19],\\n        [ 31, -59],\\n        [ 36,  81],\\n        [ 10, -37],\\n        [-52,  45],\\n        [ 88,  53]]))",
    0.01684
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.05266
  ]
}