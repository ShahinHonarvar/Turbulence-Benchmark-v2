{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 35,  58, -80, -72, -16,  18,  -7,  41,  75,  69, -77,  82, -71,\\n         -77,  38, -82,  96,  79,  90, -88, -11, -73,   2, -45, -50, -65,\\n         -74,  73, -72, -61,  80, -62,  86,  32,   7, -97, -94, -84, -98,\\n         -55,  49,  11, -74,  -7,  27,   3,  23,  23,  19, -75,  12, -34,\\n          -4,  -2, -27, -56,  83,  58,  16,  75, -12,   7,  67, -46,  15,\\n          80,  -1, -47,  -6, -95,  39,  71, -71, -10, -82,  56, -58,  96,\\n          15,  61, -66,  33,  68, -64, -95, -13,   4, -60,  83,  -4,   6,\\n           6, -74,  45,  41, -28, -60, -98, -16, -78,  62, -98, -89, -33,\\n          39,  20,  55, -80, -30, -43, -71,  31, -20, -77,  81, -35,  -3,\\n         -52,  91, -67, -80,  10, -86, -77,  34,   0, -43, -83, -77,  42,\\n          90,  85,  88,  97,  21,  37,  42, -57, -67, -94,  94,  25, -68,\\n         -80,  60,  39,   5, -55,  30, -76,  52,  64,  75, -85,  64, -98,\\n          90, -52,   8]]))",
    0.02281
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[159]]))",
    0.00036
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.26254
  ]
}