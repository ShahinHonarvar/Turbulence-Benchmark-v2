{
  "parameter(s)": [
    191
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_191_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  30,   42,   78,  -93,  -69,  -49,  -59,  -31,   -3,  -94,\\n          -38,   73,   -3,    5,  -48,  -25,   29,   94,   64,  -58,\\n          -30,   54,  -11,   36,  -20,  -99,  -86,   31,   54,   95,\\n           69,  -70,   11,   19,   93,  -65,   25,    0,   20,    1,\\n          -79,   70,   24,  -38,  -96,   41,   75,  -74,  -36,  -59,\\n           -6,   62,  -94,  100,  -80,  -89,   43,   -9,  -35,   94,\\n           15,   61,   65,  -91,   72,  -86,  -98,   88,  -87,   90,\\n          -73,  -79,  -73,   69,  -55,    6,  -10,   53,  -52,    7,\\n          -79,   41,   -6,    3,   -1,   82,  -68,   56,   17,   46,\\n           80,    7,   24,  -62,  -57,  -95,  -94,   17,   73,  -43,\\n          -85,   75,   65,   98,   74,    3,   43,  -59,   85,  -46,\\n            2,  -95,  -46,   99,  -88,   90,   -6,  -22,  -70,  -95,\\n           51,  -67,  -19,   64,  -10,   97,   59,   15,   72,   37,\\n          -85,   47,   71,  -89,    2,  -94,  -97, -100,  -93,  -93,\\n          -72,   33,  -61,  -88,   72,   64,  -65,   53,   25,  -39,\\n           -8,  -14,    9,   40,  -40,  -16,   95,   39,  -33,   56,\\n          100,  -82,   13,  -87,  -20,   71,   91,   -4,   28,   -2,\\n          -96,  -46,   15,  -48,   67,  -97,  -79,  -95,  -69,   48,\\n           61,   93,   39,  -59,  -73,   83,   18,   21,   17,   29,\\n           45]]))",
    0.00059
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 383",
    0.0003
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 383",
    0.00405
  ]
}