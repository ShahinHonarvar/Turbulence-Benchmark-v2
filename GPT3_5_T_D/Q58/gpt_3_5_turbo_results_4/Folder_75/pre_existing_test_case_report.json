{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00025
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  76,  -14],\\n        [ -49,   71],\\n        [ -16,   97],\\n        [ -34,  -88],\\n        [ -54,  -62],\\n        [  70,  -34],\\n        [  45,   47],\\n        [  23,  -26],\\n        [   0,   92],\\n        [  59,   85],\\n        [ -46,  -57],\\n        [ -14,  -92],\\n        [  94,   -8],\\n        [ -96,   -7],\\n        [ -67,  -98],\\n        [  32,   -5],\\n        [ -20,  -96],\\n        [ -11,   30],\\n        [  39,  -46],\\n        [  -3,   64],\\n        [ -85,   -5],\\n        [ -94,  -34],\\n        [ -62,   -1],\\n        [ -29,    7],\\n        [ -49,  -21],\\n        [ -42,   76],\\n        [ -69,  -76],\\n        [  41,   35],\\n        [  -6,   49],\\n        [ -10,  -22],\\n        [ -85,  -56],\\n        [  17,   90],\\n        [   0,   67],\\n        [  30,   96],\\n        [ -65,  -89],\\n        [ -32,  -73],\\n        [ -17,   18],\\n        [ -19,    5],\\n        [  62,  -76],\\n        [ -18, -100]]))",
    0.00064
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00076
  ]
}