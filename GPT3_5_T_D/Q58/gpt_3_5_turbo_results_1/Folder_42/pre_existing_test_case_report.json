{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 387",
    0.00064
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 17,  88,  78,  29, -90,  41, -36,  66, -14,  75, -76, -18,  -9,\\n         -99,  90,  86,  -2, -30,  57, -50,  -7, -25,  -5, -24,  20,  46,\\n         -28,  37, -48, -21, -74,   8,  73, -88,  55,  -8,  -8, -11, -26,\\n          31,  36,   5, -99,  -9, -96,  18,  65,  18, -97,  58,  98, -63,\\n          78, -13, -60, -39,  14, -29,  48, -61,  44,  88,  17,  31,  28,\\n         -27, -12, -71, -28, -78,  99,  31, -99,  29,  61,  22, -49,  21,\\n         -67, -86, -45,  17,  44, -14, -77, -48,  -9,  54,  67,  75, -53,\\n          -3,  77, -84,  61,  29, -33,  36, -55,  70,  51,  55, -51, -12,\\n         -73, -72, -40, -44,  19,  28, -81, -23, 100, -35, -92,   0, -49,\\n          34, -32,  80, -77,  92,  12,  37, -36, -78,  84, -43,  83, -75,\\n         -97, -16,  58,  23, -48, -56,  47,   2,  40, -78,  78,  62,  94,\\n          -3, -30, -15, -26,   5, -55,  74, -94,  23,  48,  23,  22,  35,\\n          37,   9,  63, -36, -70,  19,  91,  19, -94, -91,  -4, -70,  19,\\n         -71,  63, -62,  30,  44,  62,  86,  52, -69,  38,  19,  36,  26,\\n          85,  27, -25,  20,  90,  19,  83, -53,  55, -74, -36]]))",
    0.00081
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 387",
    0.00193
  ]
}