{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 58, -33],\\n        [-65,  78],\\n        [ 34, -84],\\n        [ 25, -72],\\n        [ 13,  88],\\n        [ 79,  40],\\n        [-66,  80],\\n        [ 19,  -9],\\n        [  4, -34],\\n        [ -2,  17],\\n        [-61,  68],\\n        [-69,  70],\\n        [ 39,  90],\\n        [ 37,  -5],\\n        [-18, -59],\\n        [ 51, -70],\\n        [  6, -98],\\n        [ 26,  66],\\n        [  6, -76],\\n        [-66,  57],\\n        [-44,  84],\\n        [ 39,  54],\\n        [  4, -52],\\n        [-15, -41],\\n        [ 21, -81],\\n        [-67, -51],\\n        [ 19, -37],\\n        [ 44, -18],\\n        [-75,  42],\\n        [ -8, -37],\\n        [  1,  59],\\n        [ 79,  16],\\n        [ 22,  64]]))",
    0.00455
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.00046
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[66]]))",
    0.00046
  ]
}