{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00054
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -48,   12],\\n        [  12,  -66],\\n        [   1,  -95],\\n        [-100,   27],\\n        [  66,  -48],\\n        [  66,   22],\\n        [  28,  -33],\\n        [ -66,    8],\\n        [ -86,   10],\\n        [ -36,   22],\\n        [   8,   -6],\\n        [  10,  -55],\\n        [  59,  -28],\\n        [ -62,   28],\\n        [ -71,   31],\\n        [  19,   60],\\n        [ -70,  -79],\\n        [ -34,  -29],\\n        [  22,   72],\\n        [  68,  -77],\\n        [  65,  -41],\\n        [  47,   31],\\n        [ -81,  -34],\\n        [ -81,   36],\\n        [ -57,  -84],\\n        [ -50,   19],\\n        [ -20,   78],\\n        [  57,  -95],\\n        [ -93,  -97],\\n        [ -40,   58],\\n        [   5,   25],\\n        [  45,   49],\\n        [  95,  -58],\\n        [  85,  -75],\\n        [ -64,  -98],\\n        [ -65,  -34],\\n        [ -69,  -17],\\n        [ -21,  -94],\\n        [ -52,  -85],\\n        [ -80,  -64],\\n        [ -75,   50],\\n        [ -66,  -33],\\n        [ -55,   19],\\n        [ -91,  -69],\\n        [ -82,  -32],\\n        [ -99,  -98]]))",
    0.01279
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.06902
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.05482
  ]
}