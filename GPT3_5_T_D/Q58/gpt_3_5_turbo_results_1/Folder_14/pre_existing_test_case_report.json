{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00382
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00257
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -76,   25],\\n        [  22,   85],\\n        [ -40,  -52],\\n        [  88,  -17],\\n        [  48,    4],\\n        [ -50,   52],\\n        [   4,   31],\\n        [ -38,    1],\\n        [ -43,   43],\\n        [  68,  -85],\\n        [ -34,   -3],\\n        [  41,  -58],\\n        [  57,  -42],\\n        [  79, -100],\\n        [  86,   58],\\n        [  13,  -11],\\n        [ -93,  -71],\\n        [ -19,   72],\\n        [ -65,  -21],\\n        [ -69,   88],\\n        [  -6,   65],\\n        [ -81,  -43],\\n        [  17,  -98],\\n        [ -54,   92],\\n        [ -80,  -57],\\n        [  72,  -66],\\n        [  27,  -46],\\n        [ -77,  -23],\\n        [  29,   41],\\n        [ -72, -100],\\n        [  51,   -9],\\n        [ -72,  -56],\\n        [  13,   90],\\n        [ -23,  -48],\\n        [  85,  -25],\\n        [ -25,  -96],\\n        [  38,   49],\\n        [  50,   92],\\n        [  61,  -94],\\n        [  -9,  -28],\\n        [  26,   99],\\n        [  86,   84]]))",
    0.00363
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00084
  ]
}