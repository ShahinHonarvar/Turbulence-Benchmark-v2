{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00043
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   8,  -67],\\n        [  -9,  -80],\\n        [  53,   93],\\n        [  52, -100],\\n        [  22,  -45],\\n        [  28,  -84],\\n        [  13,   -3],\\n        [  27,   27],\\n        [ -29,   75],\\n        [  32,   75],\\n        [  47,   61],\\n        [  55,   43],\\n        [ -22,  -51],\\n        [  29,   36],\\n        [  20,  100],\\n        [   1,   48],\\n        [ -89,   44],\\n        [  22,   13],\\n        [ -99,  -51],\\n        [  32,   -7],\\n        [  65,  -28],\\n        [  65,  -46],\\n        [ -26,  -40],\\n        [ -80,   43],\\n        [ -98,    8],\\n        [  86,   75],\\n        [  16,   56],\\n        [  39,   31],\\n        [  64,  -45],\\n        [  94,  -27],\\n        [ -52,  -82],\\n        [  -9,  -68],\\n        [  86,  -88],\\n        [ -23,  -58],\\n        [ -81,   81],\\n        [  89,   44],\\n        [  26,  -72],\\n        [  44,   87],\\n        [  30,    2],\\n        [ -21,  -97],\\n        [ -44,  -14],\\n        [ -87,   79],\\n        [  38,   65],\\n        [  44,   39]]))",
    0.00072
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00077
  ]
}