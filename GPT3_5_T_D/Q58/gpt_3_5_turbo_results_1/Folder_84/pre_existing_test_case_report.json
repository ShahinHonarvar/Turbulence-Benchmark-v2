{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 10,  81, -23, -65,  57,  13,  11,   3,  66, -17, -86, 100,  16,\\n         -40, -94,  58,  -6,  40, -76,  75,  30, -20, -34,   6, -45,  62,\\n          54,  96,  47,  87,  27, -12, -31,  54,  84, -45,  75,  34,   7,\\n          25,  73, -63, -94,  69,  -7,  71, -12, -21, -69, -51,  94,  54,\\n          23,  46, -87, -71,  65,   1, -92, -99,  30, -44,  58,  46, -96,\\n         -72,  43,  80, -71,  91, -88,  30, -62, -94,  18, -32,  91, -74,\\n          46,  58, -86,   8, -82,  21, -13,  98,  96,  93, -65,  78, -63,\\n         -79, -50, -37,   0, -47,  32,  91, -70, -21,  30, -94,  10,  40,\\n           2, -23,  86,   2,  63, -79,  72,  61,  92,  61, -52,  78,  19,\\n         -12,  62, -74, -50,  65,  75,  58, -39, -91, -54]]))",
    0.00056
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.00041
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[127]]))",
    0.00048
  ]
}