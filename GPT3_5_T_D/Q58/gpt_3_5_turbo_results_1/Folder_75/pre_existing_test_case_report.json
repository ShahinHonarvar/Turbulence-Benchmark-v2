{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00223
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00031
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  6, -15],\\n        [ 19, -49],\\n        [ 71, -45],\\n        [-23,  38],\\n        [-18,  93],\\n        [ 58,  76],\\n        [ 96, -58],\\n        [ 17,  79],\\n        [-22,  39],\\n        [ 40,  49],\\n        [-70,  17],\\n        [  5,   1],\\n        [-89, -24],\\n        [ 38,  94],\\n        [ 42, 100],\\n        [ 41,  70],\\n        [ 47,  69],\\n        [ 55, -22],\\n        [ 56,  73],\\n        [ 93,  38],\\n        [ 71,  96],\\n        [100, -37],\\n        [ 44,  62],\\n        [-31, -64],\\n        [ 45,  17],\\n        [-89,  48],\\n        [-56, -19],\\n        [-59,  -6],\\n        [-60,  16],\\n        [-72, -50],\\n        [-21,  22],\\n        [ 68,  -6],\\n        [ 68,   4],\\n        [ 80, -93],\\n        [ 74,  15],\\n        [-26, -83],\\n        [-88,  13],\\n        [ 95,  65],\\n        [-41, -38],\\n        [-87, -27]]))",
    0.00073
  ]
}