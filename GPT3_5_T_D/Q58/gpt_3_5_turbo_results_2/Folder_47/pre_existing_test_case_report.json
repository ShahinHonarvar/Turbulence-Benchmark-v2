{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00117
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 44 == 1\n +  where 44 = submatrix_with_n_numbers(matrix([[ -85,  -99],\\n        [ -63,   35],\\n        [ -26,   42],\\n        [ -73,   11],\\n        [ -60,  -23],\\n        [  21,   74],\\n        [ -93,    9],\\n        [  -9,  -69],\\n        [ -28,   84],\\n        [ -39,  -15],\\n        [  40,   22],\\n        [  34,   12],\\n        [  82,  -91],\\n        [ -94, -100],\\n        [  15,  -69],\\n        [ -22,   80],\\n        [ -38,  -14],\\n        [  58,  -23],\\n        [  21,   30],\\n        [ -51,   36],\\n        [ -97,  -68],\\n        [ -19,   -3],\\n        [  45,   89],\\n        [ -81,   -5],\\n        [  10,   98],\\n        [ -87,  -60],\\n        [  25,   44],\\n        [  89,   36],\\n        [ -31,   61],\\n        [ -59,  -45],\\n        [  25,  -34],\\n        [  51,    0],\\n        [  28,  -14],\\n        [  29,  -39],\\n        [ -66,  -27],\\n        [ -30,  -43],\\n        [  -3,  -40],\\n        [ -53,   13],\\n        [ -97,    9],\\n        [ -57,   94],\\n        [   5,   72],\\n        [   5,  -99],\\n        [  21,   45],\\n        [  86,   35],\\n        [ -88,  -87]]))",
    0.00069
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00039
  ]
}