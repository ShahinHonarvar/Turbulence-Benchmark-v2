{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00058
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -64,   18,   74,   22,  -49,    9,   71,  -36,   89,  -39,\\n          -16,   24,   13,   54,  -16,   81,   14,  -69,   57,   56,\\n           85,   55,   62,  -27,   56,  -80,  -84,   52,   56,   18,\\n           27,   82,  -19,   14,   16,   76,  -74,  -46,   40,   92,\\n            2,  -30,   95,  -28,   -6,  -53,   18,   66,  -38,  -56,\\n           80,   39,  -45,  -22,   74,  -20,   42,   25,  -62,  -53,\\n           -7,  -46,  -27,   37,   -4,   51,  -46,   10,   33,   59,\\n          -59,   25,   50,  -13,   42,   44, -100,  -83,  -52,   48,\\n           45,   54,   93,   98,   45,  -56,   94,   -8,  -81,   50,\\n          -49,   44,  -41,   94,   -5,  -91,   15,   62,  -67,  -88,\\n           22,  -22,   61,   43,    1,   89,   -2,  -74,   57,   80,\\n          -60,   93,   65,   32,   94,   -1,   20,  -44,   16,   91,\\n           83,  -77,    4,   -6,  -65,   34,  -88,  -34,   -6,   70,\\n          -81,  -60,   92,  -73,   17,   78,  -61,  -11,   24]]))",
    0.00073
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.21402
  ]
}