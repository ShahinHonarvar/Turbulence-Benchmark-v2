{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00026
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-38, -17],\\n        [ -4,  13],\\n        [ 41, -67],\\n        [-77, -56],\\n        [-22, -74],\\n        [ 70, -89],\\n        [-98, -73],\\n        [100,  34],\\n        [-17,   1],\\n        [ 59, -54],\\n        [-17,  31],\\n        [ 53, -72],\\n        [-91, -49],\\n        [-73,  90],\\n        [  5, -26],\\n        [-84, -67],\\n        [ 96, -44],\\n        [ 11,  66],\\n        [-15, -14],\\n        [-47, -28],\\n        [ 72,  -1],\\n        [-20, -66],\\n        [-34,  63],\\n        [ -6,  23],\\n        [-92,   7],\\n        [-64, -56],\\n        [ -1, -84],\\n        [-49,  47],\\n        [ 17,   6],\\n        [ 13,  49],\\n        [-38, -21],\\n        [-79,  61],\\n        [-59, -27],\\n        [-83,  71],\\n        [ -4,  49],\\n        [-41, -86],\\n        [-43,  84],\\n        [-46, -21],\\n        [-80, -74],\\n        [ 47, -27],\\n        [ 51,  81],\\n        [ 34,   9]]))",
    0.00061
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00055
  ]
}