{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00072
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00031
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 97, -89],\\n        [ -6,  28],\\n        [ 47, -70],\\n        [-90,  66],\\n        [-79, -71],\\n        [ 88,  99],\\n        [ 78,  11],\\n        [  8, -78],\\n        [ 52,  11],\\n        [ 94,  55],\\n        [ 13, -46],\\n        [ 89, -25],\\n        [ 65,  88],\\n        [ 10,  47],\\n        [-30, -10],\\n        [-14, -57],\\n        [ -4,  19],\\n        [-67, -25],\\n        [-57, -71],\\n        [-83, -79],\\n        [ 92, -79],\\n        [-66,  -3],\\n        [-22, -21],\\n        [ 82, -16],\\n        [ 20,  32],\\n        [-49, -11],\\n        [-81,  33],\\n        [ 96,  34],\\n        [ 53, -89],\\n        [ 94, -43],\\n        [  4,  20],\\n        [  0, -59],\\n        [ 59,  58],\\n        [-28,  -2],\\n        [-37,  69],\\n        [-77,   4],\\n        [ 35, -36],\\n        [ 66,  49],\\n        [  4,  37],\\n        [-86,   7],\\n        [ 61,  50],\\n        [-35, -53],\\n        [-39,  96],\\n        [ -6, -60]]))",
    0.00069
  ]
}