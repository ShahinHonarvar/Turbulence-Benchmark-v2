{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00046
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-39,  91],\\n        [ -6,  37],\\n        [ 15,  40],\\n        [-71,  15],\\n        [ 35,  88],\\n        [-52, -42],\\n        [-68, -86],\\n        [ 75,  66],\\n        [-43, -23],\\n        [ 19,  54],\\n        [-85,  31],\\n        [-77, -17],\\n        [  3, 100],\\n        [-88, -33],\\n        [-25, -44],\\n        [-35,  -6],\\n        [ 81,  84],\\n        [ 40,  85],\\n        [ 98,  72],\\n        [-50, -35],\\n        [  9, -15],\\n        [  3, -25],\\n        [ 44,  71],\\n        [-76,  31],\\n        [ 57,  43],\\n        [-64, -73],\\n        [ 25,  12],\\n        [-39,  62],\\n        [  2,  60],\\n        [ 10, -60],\\n        [ 54,  91],\\n        [-89, -48],\\n        [  8,  40],\\n        [-73,  99],\\n        [ 36,  86],\\n        [  2,   5],\\n        [ 58, -73],\\n        [ 25,  33],\\n        [  1,   6],\\n        [-67,  64],\\n        [ 10, 100],\\n        [-92,  87],\\n        [ -7, -69],\\n        [ -5,  97],\\n        [-82,   0],\\n        [ 26,  62],\\n        [ 55, -40],\\n        [ 53, -96],\\n        [  0,  82],\\n        [-21,  72],\\n        [ 87, -61],\\n        [  7,  63]]))",
    0.00508
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00081
  ]
}