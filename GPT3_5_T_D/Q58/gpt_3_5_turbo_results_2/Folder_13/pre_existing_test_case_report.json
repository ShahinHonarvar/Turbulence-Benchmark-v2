{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -6,   9,  23, -38,  20, -76,  -6,  -7,  99,  14, -54, -77,  17,\\n          69,  68,  74, -72,  79, -62, -65,  50, -22,  52,  21,  57,   7,\\n         -60, -43, -99, -42,  48, -84,  91, -14, -29,  10,  25, -12, -30,\\n         -94, -43,  13,  93, -17,  97, -89,  39, -41, -47,  93,  -6, -45,\\n          82, -52, -81, -49,  13, -26,  -9,   3,  42, -34,  56, -56,  97,\\n          59, -70, -55,  68,  73, -70,  -7, -20,  70, 100, -14,  37,  73,\\n          98, -97,  99,   5, -53, -73, -93,  25,  98,  33,   9, -40,  20,\\n          21,  77, -38,  41,  54, -37, -87,  35,  24, -44,  60,  25,  42,\\n          47, -93, -95, -29, -31, -68, -59,  76, -41, -14, -42, -91, -84,\\n         -98,  54,   8,   8, -67,  63,  67, -12,  54,  42,  91, -64,  42,\\n          14,  62, -17,  87,  -1,  85,  11, -94, -42, -51,  84, -51, -94,\\n          77,  50, -61, -14, -64,  63, -67, -55,   3,  78,  86, -66, -52,\\n         -67,  48,  44, -25, -87,  60,   4,  70,  48,  73,   3,  -2,  49,\\n          59,  52, 100, -53,  56, -65]]))",
    0.00085
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00104
  ]
}