{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -14,   51],\\n        [ -77, -100],\\n        [ -31,   49],\\n        [ -90,  -64],\\n        [ -34,  -51],\\n        [  18,   49],\\n        [ -39,  -83],\\n        [ -98,  -16],\\n        [  94,  -76],\\n        [  21,   90],\\n        [ -11,  -96],\\n        [ -75,   79],\\n        [   6,   47],\\n        [  94,    1],\\n        [   8,   29],\\n        [   5,   96],\\n        [ -78,  -27],\\n        [ -58,  -77],\\n        [  93,   38],\\n        [  17,  -54],\\n        [  23,    0],\\n        [   6,  -21],\\n        [ -37,  -12],\\n        [  55,   73],\\n        [ -66,  -81],\\n        [  65,  -91],\\n        [ -10,  -37],\\n        [  -6,   20],\\n        [  85,  -15],\\n        [  57,   34],\\n        [  24,  -65],\\n        [  86,    1],\\n        [  -3,  -86],\\n        [ -41,  -27],\\n        [  62,  -43],\\n        [  18, -100],\\n        [ -27,   49],\\n        [ -20,   98],\\n        [  37,   73],\\n        [ -18,  -65],\\n        [  50,  -47],\\n        [  11,    4],\\n        [  25,   89],\\n        [ -52,  -20],\\n        [  -1,  -36],\\n        [  50,  -96],\\n        [ -96,   15],\\n        [  -9,   95]]))",
    0.00088
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00028
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00061
  ]
}