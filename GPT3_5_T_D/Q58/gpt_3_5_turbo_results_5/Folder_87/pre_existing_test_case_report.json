{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 65, -65],\\n        [-64, -82],\\n        [ 54, -14],\\n        [ 77, -81],\\n        [-32,  19],\\n        [-49,   8],\\n        [ 29, -60],\\n        [-43,  30],\\n        [-80,  63],\\n        [-99, -78],\\n        [ 22,  19],\\n        [-45, -31],\\n        [  8,  89],\\n        [ 90,  25],\\n        [-89, -98],\\n        [-92, -30],\\n        [-85,  59],\\n        [ 85,  47],\\n        [-76,  81],\\n        [-96, -80],\\n        [ 84,  47],\\n        [  6, -25],\\n        [-38,   2],\\n        [ 24, -53],\\n        [ 96,  30],\\n        [-51, -15],\\n        [ 84, -71],\\n        [ 88,  11],\\n        [ -7,  40],\\n        [ 53,  90],\\n        [ 30,  39],\\n        [-63, -36],\\n        [-37, -22],\\n        [  3,  42],\\n        [ 23,  20],\\n        [ 70,  86],\\n        [-55, -67],\\n        [ 76,  77],\\n        [  3,  94],\\n        [  3,  12],\\n        [ 70,  26],\\n        [  3,  53],\\n        [-48,   3],\\n        [ 68, -61],\\n        [ 69, -77],\\n        [-11,   5],\\n        [ 46,  89],\\n        [ 17,  67]]))",
    0.00201
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00055
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00139
  ]
}