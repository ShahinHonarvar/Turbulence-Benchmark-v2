{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    8e-05
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-26,  38],\\n        [-17,  39],\\n        [-93,  10],\\n        [ 89,  60],\\n        [-16, -63],\\n        [  2,  -1],\\n        [-18,  13],\\n        [-80, -86],\\n        [-61,  75],\\n        [-63, -69],\\n        [-74,  81],\\n        [-37,  86],\\n        [ 91, -30],\\n        [ 67, -51],\\n        [ 93,  91],\\n        [ 74, -33],\\n        [ -8,  -7],\\n        [ 89, -11],\\n        [-91,  47],\\n        [ 60,   6],\\n        [ -3, -41],\\n        [ 92, -27],\\n        [ 71,  13],\\n        [ 62,   1],\\n        [ 75, -17],\\n        [ 20, -71],\\n        [-32, -19],\\n        [ 32, -56],\\n        [ 78,  -8],\\n        [ 63, -30],\\n        [-87,  81],\\n        [-95, -80],\\n        [-76,  27],\\n        [ -3,   8],\\n        [-45,  84],\\n        [  4,  -1],\\n        [ 70,   3],\\n        [-59, -27],\\n        [-88,  62],\\n        [ 25,   0],\\n        [ 82,  82],\\n        [ 68,   4],\\n        [-71, 100],\\n        [ 94, -79],\\n        [ 95,  -7],\\n        [ 58,  78],\\n        [ 86, -57]]))",
    0.00133
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00035
  ]
}