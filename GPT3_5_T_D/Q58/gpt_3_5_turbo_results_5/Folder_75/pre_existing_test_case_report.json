{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-52, -46],\\n        [-39, -73],\\n        [ 73,  53],\\n        [ 25,  62],\\n        [-82, -51],\\n        [ 15,  94],\\n        [  4, -90],\\n        [-96, -12],\\n        [ 47,  30],\\n        [-47,  26],\\n        [ 58,  67],\\n        [ 35,  24],\\n        [-17, -59],\\n        [ 64, -69],\\n        [-42, -22],\\n        [-70, -51],\\n        [-18,  80],\\n        [-85, -67],\\n        [-64, -48],\\n        [-15, -77],\\n        [ 54,  -2],\\n        [-16, -60],\\n        [-46,  92],\\n        [  8, -65],\\n        [ 37,  69],\\n        [  7,  70],\\n        [-90, -39],\\n        [-57,  79],\\n        [ -1,   0],\\n        [ 34, -78],\\n        [-70,  28],\\n        [ 88,  66],\\n        [ 67,  11],\\n        [-39,  65],\\n        [ -4, -55],\\n        [-43,  50],\\n        [100,  30],\\n        [  1, -60],\\n        [ 22, -21],\\n        [ 89,  62]]))",
    0.00053
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00041
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00054
  ]
}