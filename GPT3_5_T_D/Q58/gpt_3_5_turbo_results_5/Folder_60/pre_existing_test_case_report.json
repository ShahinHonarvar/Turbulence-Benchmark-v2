{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -9,  90],\\n        [ 14,  63],\\n        [ 11,  42],\\n        [ 99,  85],\\n        [-21,  26],\\n        [ 38,  56],\\n        [-83, -76],\\n        [-13,   6],\\n        [ 67,  76],\\n        [ 22, -63],\\n        [ 21, -43],\\n        [ 12,  49],\\n        [-27, -28],\\n        [-67, -94],\\n        [ 42, -71],\\n        [-91, -47],\\n        [ 59, -34],\\n        [-42,   3],\\n        [-98, -48],\\n        [ 76, -57],\\n        [-33, -40],\\n        [-81, -26],\\n        [-10, -50],\\n        [ 50,   6],\\n        [-93,  75],\\n        [ 17,  21],\\n        [-54,  99],\\n        [ 32,  47],\\n        [ 92,  47],\\n        [ 39,  75],\\n        [ 45,   8],\\n        [ 78,  38],\\n        [ 97,  41],\\n        [-90, -56],\\n        [  1,   7],\\n        [-46,  11],\\n        [-77, -46],\\n        [-14, -44],\\n        [-53, -91],\\n        [ 68, -90],\\n        [ 14,  63],\\n        [-16,   4],\\n        [ 83, -22],\\n        [ 96, -71]]))",
    0.0007
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00077
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00034
  ]
}