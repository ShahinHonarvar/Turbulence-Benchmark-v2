{
  "parameter(s)": [
    48
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 97",
    0.00095
  ],
  "test_matrix_of_having_48_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 16, -53],\\n        [ 49,  30],\\n        [ 45,   1],\\n        [-87, -17],\\n        [ 79,  49],\\n        [ 41,  42],\\n        [-79,  47],\\n        [-57, -17],\\n        [ 83,  90],\\n        [ 33,  69],\\n        [ 66,  76],\\n        [ 65,  42],\\n        [ 76,  52],\\n        [-43,  38],\\n        [ 51,  74],\\n        [ 57,  60],\\n        [ 52,  62],\\n        [ -5,  -5],\\n        [-40,  45],\\n        [  0,  20],\\n        [ 82,  10],\\n        [-56, -36],\\n        [ 18,  87],\\n        [ 82,  38]]))",
    0.00067
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 97",
    0.004
  ]
}