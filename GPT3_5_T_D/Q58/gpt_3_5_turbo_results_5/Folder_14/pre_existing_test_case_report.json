{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 67,  36],\\n        [ 61,  66],\\n        [ 56,  78],\\n        [ 15, -18],\\n        [ 47,  -7],\\n        [-96,   8],\\n        [-64, -71],\\n        [ 64,  85],\\n        [-25,  85],\\n        [ -3,  95],\\n        [ 48,  47],\\n        [-90,  85],\\n        [-20,  83],\\n        [ 76,  17],\\n        [ 81, -85],\\n        [ 71,  97],\\n        [-49,  27],\\n        [100, -57],\\n        [-34, -10],\\n        [ 81, -73],\\n        [ 95, -96],\\n        [ 98, -73],\\n        [-40,  64],\\n        [ 72,  75],\\n        [-51,   9],\\n        [ 58,  77],\\n        [-34,  26],\\n        [ 97, -86],\\n        [-74, -14],\\n        [ 12,  97],\\n        [ 48,  75],\\n        [-21,   0],\\n        [ -7,  86],\\n        [ 74,  18],\\n        [ 33,  95],\\n        [ 76, -24],\\n        [-85,  -3],\\n        [ 23,  55],\\n        [ 43,  28],\\n        [ 89, -50],\\n        [  1,  -6],\\n        [ 66, -80]]))",
    0.00467
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00121
  ]
}