{
  "parameter(s)": [
    10
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00023
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00013
  ],
  "test_length_less_than_10": [
    "passed",
    "",
    0.00014
  ],
  "test_length_equal_to_10": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_identical_punctuations": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_punctuations_and_nums": [
    "passed",
    "",
    0.00077
  ],
  "test_string_of_spaces_and_punctuations": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaa'}\n +  where {'aaaaaaaaaa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00087
  ],
  "test_string_of_numbers_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaa'}\n +  where {'aaaaaaaaaa'} = palindrome_of_length_n('a1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1a')",
    0.00023
  ],
  "test_string_of_spaces_and_punctuations_nums_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaa'}\n +  where {'aaaaaaaaaa'} = palindrome_of_length_n('0 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 0')",
    0.00024
  ]
}