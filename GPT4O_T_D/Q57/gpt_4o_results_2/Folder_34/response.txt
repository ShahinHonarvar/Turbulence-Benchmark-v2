ChatCompletion(id='chatcmpl-9za2as94qkDHCOBksJ56eGejQ7mwt', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def get_submatrix_sum(top_left, bottom_right, prefix_sum):\n        x1, y1 = top_left\n        x2, y2 = bottom_right\n        total = prefix_sum[x2+1][y2+1]\n        if x1 > 0:\n            total -= prefix_sum[x1][y2+1]\n        if y1 > 0:\n            total -= prefix_sum[x2+1][y1]\n        if x1 > 0 and y1 > 0:\n            total += prefix_sum[x1][y1]\n        return total\n\n    rows, cols = matrix.shape\n    prefix_sum = np.zeros((rows+1, cols+1), dtype=int)\n    \n    for i in range(rows):\n        for j in range(cols):\n            prefix_sum[i+1][j+1] = matrix[i][j] + prefix_sum[i][j+1] + prefix_sum[i+1][j] - prefix_sum[i][j]\n\n    submatrices = []\n\n    for x1 in range(rows):\n        for y1 in range(cols):\n            for x2 in range(x1, rows):\n                for y2 in range(y1, cols):\n                    if get_submatrix_sum((x1, y1), (x2, y2), prefix_sum) == -13:\n                        submatrices.append(matrix[x1:x2+1, y1:y2+1].copy())\n\n    return submatrices\n```', refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1724463576, model='gpt-4o-2024-08-06', object='chat.completion', service_tier=None, system_fingerprint='fp_2a322c9ffc', usage=CompletionUsage(completion_tokens=320, prompt_tokens=129, total_tokens=449))