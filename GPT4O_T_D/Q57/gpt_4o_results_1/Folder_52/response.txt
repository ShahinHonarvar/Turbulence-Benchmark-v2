ChatCompletion(id='chatcmpl-9zZzmZkXUarKr0OOsv2XqU1ydiVdd', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices_with_sum(prefix_sum, target_sum):\n        submatrices = []\n        rows, cols = len(prefix_sum) - 1, len(prefix_sum[0]) - 1\n        for r1 in range(1, rows + 1):\n            for r2 in range(r1, rows + 1):\n                for c1 in range(1, cols + 1):\n                    for c2 in range(c1, cols + 1):\n                        total = (\n                            prefix_sum[r2][c2]\n                            - prefix_sum[r1 - 1][c2]\n                            - prefix_sum[r2][c1 - 1]\n                            + prefix_sum[r1 - 1][c1 - 1]\n                        )\n                        if total == target_sum:\n                            submatrix = [\n                                matrix[i-1][c1-1:c2] for i in range(r1, r2 + 1)\n                            ]\n                            submatrices.append(submatrix)\n        return submatrices\n\n    rows, cols = matrix.shape\n    prefix_sum = np.zeros((rows + 1, cols + 1), dtype=int)\n    for i in range(1, rows + 1):\n        for j in range(1, cols + 1):\n            prefix_sum[i][j] = (\n                matrix[i-1][j-1]\n                + prefix_sum[i-1][j]\n                + prefix_sum[i][j-1]\n                - prefix_sum[i-1][j-1]\n            )\n    \n    return find_submatrices_with_sum(prefix_sum, 100)\n```', refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1724463402, model='gpt-4o-2024-08-06', object='chat.completion', service_tier=None, system_fingerprint='fp_f33df85d26', usage=CompletionUsage(completion_tokens=349, prompt_tokens=129, total_tokens=478))