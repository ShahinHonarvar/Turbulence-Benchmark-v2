{
  "parameter(s)": [
    78
  ],
  "test_list_of_many_strings_with_different_lengths": [
    "passed",
    "",
    0.00019
  ],
  "test_list_of_strings_of_length_two": [
    "passed",
    "",
    0.00029
  ],
  "test_list_of_two_strings_of_different_lengths": [
    "passed",
    "",
    0.00038
  ],
  "test_list_of_strings_including_one_same_lowercase_char_2": [
    "passed",
    "",
    0.00019
  ],
  "test_list_of_strings_including_one_same_uppercase_char_1": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])",
    0.00042
  ],
  "test_list_of_anagrams_of_size_n": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])",
    0.00033
  ],
  "test_list_of_strings_including_one_distinct_sequence_1": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['testAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])",
    0.00099
  ]
}