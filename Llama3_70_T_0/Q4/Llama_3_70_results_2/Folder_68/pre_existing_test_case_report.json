{
  "parameter(s)": [
    0,
    8
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00016
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_even_range": [
    "failed",
    "assert [2, 4, 6, 8, 10, 12, ...] == [4, 6, 8, 10, 12, 14, ...]\n  At index 0 diff: 2 != 4\n  Left contains one more item: 16\n  Full diff:\n  - [4, 6, 8, 10, 12, 14, 16]\n  + [2, 4, 6, 8, 10, 12, 14, 16]\n  ?  +++",
    0.00066
  ],
  "test_large_range": [
    "failed",
    "assert [1, 2, 3, 4, 5, 6, ...] == [2, 3, 4, 5, 6, 7, ...]\n  At index 0 diff: 1 != 2\n  Left contains one more item: 8\n  Full diff:\n  - [2, 3, 4, 5, 6, 7, 8]\n  + [1, 2, 3, 4, 5, 6, 7, 8]\n  ?  +++",
    0.00125
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 8 == ((8 - 0) - 1)\n +  where 8 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00031
  ]
}