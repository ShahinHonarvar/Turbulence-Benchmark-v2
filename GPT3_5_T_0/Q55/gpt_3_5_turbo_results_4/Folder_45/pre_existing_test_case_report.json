{
  "parameter(s)": [
    -5
  ],
  "test_list_of_several_same_number": [
    "passed",
    "",
    0.00013
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00015
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00018
  ],
  "test_list_of_not_containing_number": [
    "passed",
    "",
    0.00012
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00018
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x75c81c463080>([-5])\n +    where <built-in method count of list object at 0x75c81c463080> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x75c81c463080>([1, -5])\n +    where <built-in method count of list object at 0x75c81c463080> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count\n +  and   2 = <built-in method count of list object at 0x75c81c463080>([-5, 1])\n +    where <built-in method count of list object at 0x75c81c463080> = [[1, -5], [1, -5, 1], [-5], [-5, 1], [1, -5], [1, -5, 1], ...].count",
    0.00062
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 1 == -5\n +  where 1 = <built-in function prod>([])\n +    where <built-in function prod> = math.prod",
    0.00034
  ]
}