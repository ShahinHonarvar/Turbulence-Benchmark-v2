{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00053
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -9,  24],\\n        [-62,  64],\\n        [-21, -77],\\n        [-66, -42],\\n        [-36,  -8],\\n        [-84,   4],\\n        [ 55, -10],\\n        [-79, -36],\\n        [-14,  95],\\n        [ 39, -90],\\n        [-17,  91],\\n        [-93,  65],\\n        [ 11, -24],\\n        [  9,  56],\\n        [ 36, -56],\\n        [ 94,  34],\\n        [ 61, -87],\\n        [-31,  41],\\n        [ 13, -40],\\n        [ 32, -11],\\n        [ 53, -51],\\n        [-79, -60],\\n        [-34, -18],\\n        [-95, -61],\\n        [ 91, -85],\\n        [  4,  -8],\\n        [-35, -75],\\n        [-92,  10],\\n        [ -7,  42],\\n        [ 52, -90],\\n        [ -1, -68],\\n        [ -5,  48],\\n        [-60, -73],\\n        [ 59,  44],\\n        [-84, -89],\\n        [ 31, -39],\\n        [-15,  58],\\n        [ 82,  80],\\n        [ -2,  89],\\n        [-68,  33],\\n        [ 60, -87],\\n        [-62, -29],\\n        [-48, -13],\\n        [-54,  -8],\\n        [ 28, -90],\\n        [ 70, -90],\\n        [ 84, -45]]))",
    0.00092
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00069
  ]
}