{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0009
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0005
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  55],\\n        [ 84, -69],\\n        [ 28, -33],\\n        [ 44, -20],\\n        [ -4, -90],\\n        [-80, -43],\\n        [ 92, -62],\\n        [-30, -69],\\n        [ 62, -53],\\n        [-23, -72],\\n        [-28,  93],\\n        [-77, -33],\\n        [-19, -71],\\n        [  9,  35],\\n        [-24, -60],\\n        [  6, -23],\\n        [ 67, -85],\\n        [-96,  70],\\n        [-87, -59],\\n        [-58, -98],\\n        [-35,  37],\\n        [ 21,  56],\\n        [ -2,  16],\\n        [-46,  11],\\n        [-78,  40],\\n        [-38, -35],\\n        [-41,  30],\\n        [-64,  36],\\n        [ 78, -14],\\n        [-88, -74],\\n        [ 81, -57],\\n        [ -4, -29],\\n        [-44, -17],\\n        [ 63, -28],\\n        [  3,  40],\\n        [-32,  19],\\n        [ 20,  21],\\n        [ 20,  21],\\n        [ 72,  68],\\n        [ 29,  58],\\n        [ 42,  84],\\n        [ 54,  76],\\n        [-73, -53],\\n        [ 55,  52]]))",
    0.00072
  ]
}