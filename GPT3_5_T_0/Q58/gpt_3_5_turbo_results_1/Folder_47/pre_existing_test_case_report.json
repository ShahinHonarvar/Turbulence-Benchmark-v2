{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00078
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00036
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  59,   54],\\n        [  -1,  -71],\\n        [  90,  -95],\\n        [ -13,  -81],\\n        [ -39,   49],\\n        [  94,   65],\\n        [ -13,  -59],\\n        [  -1,   73],\\n        [ -97,  -88],\\n        [  99,   78],\\n        [  78,  -91],\\n        [  47,    0],\\n        [  -3,   93],\\n        [  33,  -84],\\n        [  70,   72],\\n        [  96,   57],\\n        [ -64,   97],\\n        [ -13,  -35],\\n        [-100,  -60],\\n        [ -61,  -34],\\n        [ -21,  -77],\\n        [  -5,  -28],\\n        [ -54,   10],\\n        [ -90,   95],\\n        [  37,   51],\\n        [  85,  -28],\\n        [ -13,   50],\\n        [ -40,    1],\\n        [ -43,   79],\\n        [  81,   89],\\n        [  42,  -16],\\n        [ -71,   66],\\n        [ -29,  -78],\\n        [  -4,  -31],\\n        [   2,   -3],\\n        [ -70,   38],\\n        [ -33,   71],\\n        [  33,  -68],\\n        [  -2,   32],\\n        [   4,  -28],\\n        [  44,   31],\\n        [ -78,   57],\\n        [ -18,   97],\\n        [ -90,  -29],\\n        [  37,  -17]]))",
    0.00065
  ]
}