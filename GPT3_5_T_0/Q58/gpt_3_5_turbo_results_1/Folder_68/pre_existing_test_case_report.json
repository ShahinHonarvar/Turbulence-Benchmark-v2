{
  "parameter(s)": [
    74
  ],
  "test_matrix_of_having_74_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-35, -93],\\n        [ -9, -65],\\n        [ 63, -21],\\n        [  3, -90],\\n        [-95, -25],\\n        [ -9,  31],\\n        [ 88,  82],\\n        [-43,  14],\\n        [-64,  12],\\n        [ 69, -42],\\n        [-24, -48],\\n        [-35, -65],\\n        [ -6, -92],\\n        [ 58, -27],\\n        [-53,  20],\\n        [-50,  81],\\n        [-89, -10],\\n        [-70,  35],\\n        [ 80, -37],\\n        [-40, 100],\\n        [-51, -99],\\n        [ 27,  98],\\n        [-63,  66],\\n        [ 58,  71],\\n        [ 26, -40],\\n        [-99, -40],\\n        [  9, 100],\\n        [-90,  44],\\n        [-22,  -1],\\n        [ 83, -66],\\n        [ 15,  93],\\n        [-19, -16],\\n        [ 28, -29],\\n        [-29,  45],\\n        [ 12,  91],\\n        [-83, -75],\\n        [ 32,  -7]]))",
    0.00054
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 149",
    0.00033
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[74]]))",
    0.00033
  ]
}