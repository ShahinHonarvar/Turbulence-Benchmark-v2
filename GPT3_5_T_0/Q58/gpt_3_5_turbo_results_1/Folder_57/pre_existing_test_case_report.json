{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00078
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-31, -46],\\n        [ 87,  63],\\n        [ 66, -85],\\n        [ 43, -49],\\n        [-43, -63],\\n        [-11,  61],\\n        [-91, -56],\\n        [ 96,  84],\\n        [-76, -26],\\n        [ 28, -43],\\n        [ 97, -68],\\n        [  6,  45],\\n        [-62, -33],\\n        [ 63, -74],\\n        [ 22, -74],\\n        [ 19,  29],\\n        [ 98, -25],\\n        [-56, -51],\\n        [-42,  14],\\n        [ 33, -41],\\n        [-10,  10],\\n        [-95,  43],\\n        [-55, -36],\\n        [ 33, -67],\\n        [ 22,  74],\\n        [ 55, -79],\\n        [ 61,  19],\\n        [-71,  72],\\n        [ 44,  86],\\n        [  2, -60],\\n        [ 34,   5],\\n        [ -5,   6],\\n        [ 87,  51],\\n        [-39,  45],\\n        [ 68, -94],\\n        [ 97, -54],\\n        [ 65, -55],\\n        [-49, -27],\\n        [ 35,  67],\\n        [-53,  40],\\n        [ 76,   4],\\n        [  9,  63],\\n        [ 60,  68],\\n        [  3,  17],\\n        [-58,  83],\\n        [-90,  81]]))",
    0.00245
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00055
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00504
  ]
}