{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-77, -92],\\n        [-33,  39],\\n        [-74, -17],\\n        [-96,  -7],\\n        [ 94, -53],\\n        [ 38, -30],\\n        [-11, -40],\\n        [ 77,  61],\\n        [ 87, -73],\\n        [ -6, -87],\\n        [ 15, -59],\\n        [ -2, -15],\\n        [-15, -67],\\n        [-83,  75],\\n        [ 10,  -1],\\n        [ 16,  87],\\n        [-75,  29],\\n        [-39, -86],\\n        [-96, -34],\\n        [ 96, -23],\\n        [-40,  41],\\n        [-54,  95],\\n        [-15,  78],\\n        [ 86,  59],\\n        [-52,  48],\\n        [-92, -18],\\n        [ 67, -88],\\n        [-15,  61],\\n        [-42,  16],\\n        [ 36,  45],\\n        [ 99, -64],\\n        [-59,  61],\\n        [-56, -20],\\n        [ 10, -58],\\n        [-40,  70],\\n        [-43,  23],\\n        [-67, -91],\\n        [ 77,  52],\\n        [ 41, -98],\\n        [  9, -19],\\n        [ 36,  83],\\n        [ 95,  99]]))",
    0.00051
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00053
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.0012
  ]
}