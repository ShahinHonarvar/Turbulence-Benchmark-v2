{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -11,   -4],\\n        [  26,  -83],\\n        [ -11,   46],\\n        [ -29,   98],\\n        [ -75,  -61],\\n        [  94,  -11],\\n        [ -40,  -46],\\n        [   9,   71],\\n        [ -37,  -13],\\n        [ -74,   29],\\n        [ -55,   23],\\n        [ -36,   65],\\n        [ -56,  -13],\\n        [ -78,    0],\\n        [  43,   83],\\n        [   8,  -48],\\n        [  27,   51],\\n        [ -85,   88],\\n        [  17,  -89],\\n        [ -86,  -44],\\n        [  58,  -96],\\n        [ -75,  -85],\\n        [  47,   32],\\n        [ -69,  -40],\\n        [ -74,  -73],\\n        [  92,   72],\\n        [ -91,  -44],\\n        [ -99,  -81],\\n        [ -13,  -24],\\n        [  31, -100],\\n        [ -78,   50],\\n        [ -76,   16],\\n        [  75,  -54],\\n        [   1,   24],\\n        [ -78,  -55],\\n        [ -34,  -21],\\n        [  69,  -37],\\n        [ -91,  -23],\\n        [ -96,   12]]))",
    0.00221
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00198
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[78]]))",
    0.00039
  ]
}