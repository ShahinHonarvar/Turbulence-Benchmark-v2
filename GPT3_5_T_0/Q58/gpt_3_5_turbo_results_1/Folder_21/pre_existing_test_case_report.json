{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  59,  -70,   -8,  -56,  -90,  -78,  -86,   46,  -76,  -58,\\n          -19,   38,   46,  -14,   41,  -38,  100,  -98,  -36,   79,\\n           16,  -32,  -54,  -86,  -51,  -29,   70,  -14,   29,   84,\\n          -76,  -51,  -22,  -15,  100,  -14,   67,   86,   52,   56,\\n          -99,  -74,  -25,   78,  -79,  -23,  -83,  -16,   54,  -63,\\n          -56,   18, -100,  -46,  -49,   83,   95,  -22,   11,  -63,\\n          -63,   93,  -33,  -80,   92,  -49,   28,   19,   55,   82,\\n          -58,  -89,   78,  -80,  -41,  -70,  -89,   10,  -85,   12,\\n           42,  -12,  -73,   43,   68,   47,    0,   23,   43,   80,\\n          -37,   13,  -56,  -13,  -41,   36,   37,   44,   57,  -78,\\n          -16,  -95,    0,   20,   22,   10,  -44,  -62,   40,    8,\\n           35,    2,  -15,  -52,   67,   -1,  -15,   89,  -52,   90,\\n           80,  -30, -100,   78,   46,  -39,   95,  -15,    3,  -38,\\n            9,   81,  -81,   72,   44,  -28,   55,   72,   71]]))",
    0.02759
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[139]]))",
    0.00046
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.26859
  ]
}