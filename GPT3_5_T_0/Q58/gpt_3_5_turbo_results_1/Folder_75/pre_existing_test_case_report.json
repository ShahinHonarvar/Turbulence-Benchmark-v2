{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00043
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 33, -53],\\n        [-45,  29],\\n        [-73, -66],\\n        [  9, -86],\\n        [ 94, -12],\\n        [ 68, -96],\\n        [ 13, -33],\\n        [ 13,  48],\\n        [100,  14],\\n        [-28, -35],\\n        [ 44, -74],\\n        [ 82, -71],\\n        [ 55,  11],\\n        [-73, -32],\\n        [ 14,  50],\\n        [ 44, -68],\\n        [-75, -94],\\n        [ 80,  36],\\n        [-71,  96],\\n        [-49, -36],\\n        [-31, -12],\\n        [-34,  26],\\n        [-32,  84],\\n        [ 46, -21],\\n        [-56,   3],\\n        [-85, -86],\\n        [ 59, -63],\\n        [ 50,  32],\\n        [ 26,   3],\\n        [ 93,   2],\\n        [ 32,  50],\\n        [  3,  70],\\n        [-77,  23],\\n        [ 77, -33],\\n        [  7,  70],\\n        [ 29, -61],\\n        [ -8, -54],\\n        [ 80, -41],\\n        [ 72, -41],\\n        [-19, -39]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00056
  ]
}