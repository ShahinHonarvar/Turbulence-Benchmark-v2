{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 72, -95],\\n        [ 49, -28],\\n        [ 89, -82],\\n        [ 95, -15],\\n        [-29, -47],\\n        [-54, -97],\\n        [-40,  37],\\n        [ 73,  41],\\n        [-59, -87],\\n        [-58,  -8],\\n        [ 19,  -2],\\n        [ 62,  57],\\n        [ 65,  -4],\\n        [-94,   3],\\n        [-29,  -4],\\n        [-14, -36],\\n        [  3,   7],\\n        [ 63, -73],\\n        [ 25,  23],\\n        [ 54, -85],\\n        [-93, -81],\\n        [ 72, -80],\\n        [ 75,  39],\\n        [ 43,  16],\\n        [ 98,  47],\\n        [ 85, -20],\\n        [ 46, -98],\\n        [ 85,   1],\\n        [-48,  82],\\n        [ 39, -16],\\n        [ 77,  17],\\n        [ 41, -43],\\n        [ 50,  -9]]))",
    0.00063
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[66]]))",
    0.00045
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.00042
  ]
}