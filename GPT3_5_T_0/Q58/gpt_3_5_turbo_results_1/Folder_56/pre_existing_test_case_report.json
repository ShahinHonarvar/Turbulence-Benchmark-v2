{
  "parameter(s)": [
    68
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_68_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-28,  79],\\n        [ -2, -14],\\n        [ 60,  70],\\n        [-10, -11],\\n        [ 97,  52],\\n        [ 48, -24],\\n        [-83, -76],\\n        [-89,  39],\\n        [-32, -41],\\n        [-15,  97],\\n        [ 88, -26],\\n        [ 89, -94],\\n        [-49,  98],\\n        [ 95,   5],\\n        [ 80,  24],\\n        [ 29,  23],\\n        [ 87, -23],\\n        [-59, -87],\\n        [ 72,  11],\\n        [-72,  63],\\n        [-89, -32],\\n        [ 36, -39],\\n        [ 28, -26],\\n        [-91, -81],\\n        [-55, -28],\\n        [-68, -32],\\n        [-88,  20],\\n        [ 68,  95],\\n        [-11,  50],\\n        [ 71, -64],\\n        [-61,  13],\\n        [-50, -81],\\n        [ 16, -96],\\n        [ 64,  63]]))",
    0.00485
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 137",
    0.00043
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 137",
    0.00076
  ]
}