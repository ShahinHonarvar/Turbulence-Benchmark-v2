{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -9,   32,   11,   86,   93,   -3,  -33,  -39,  -63,  -44,\\n          -18,   77,  -31,  -85,  -18,   87,  -25,  -61,   27,   66,\\n           89,  -67,  -30,   91,   48,  -29,  -79,   64,  -79,   96,\\n           91,  -92,   42,    5,   95,   74,   54,  -80,   38,  -43,\\n          -42,  -68,  -36,    6,  -25,   17,  -37,   52,   88,   70,\\n          -86,  -16,  -61,  -20,   43,  -64,  -88,  -57,   94,  -92,\\n           43,    0,   79,  -25,   -8,    2,   42,  -69,    7,   80,\\n          -90,   61,   67,   86,   10,   92,    9,   50,  -48,  -19,\\n           67,  -91,   66,   96,   61,  -10,  -10,  -13,  -70,   89,\\n          -20,  -99,   -1,   74,   32,  -17,   88,   60,   21,  -49,\\n           69,  -94,  -17,   -3,   37,   93,  -67,   30,   39,   -7,\\n          -61,   36,   85,  -78,   60,  -60,    2,   46,   63,   29,\\n           72, -100,  -52,  -77,   23,  -15,  -42,  -65,    2,  -38,\\n           70]]))",
    0.00059
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[131]]))",
    0.00041
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00067
  ]
}