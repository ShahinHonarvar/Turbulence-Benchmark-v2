{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00043
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  29,   66],\\n        [   5,   75],\\n        [ -25,    6],\\n        [ -52,  -34],\\n        [  43,  -40],\\n        [ -41,   98],\\n        [  50,  -64],\\n        [ -35,  -78],\\n        [  87,   10],\\n        [ -93,   37],\\n        [  41,   62],\\n        [ -88,   35],\\n        [ -78,   44],\\n        [ -70,   55],\\n        [  60,   62],\\n        [  82,  -59],\\n        [ -69,   54],\\n        [ -76,   99],\\n        [  26,   51],\\n        [ -58,   73],\\n        [ -77,   98],\\n        [ -34,   92],\\n        [ -60,    9],\\n        [ -58,   17],\\n        [ -82,   40],\\n        [ -29,  -70],\\n        [  90,   84],\\n        [ -75,   23],\\n        [  74,   49],\\n        [   8,   36],\\n        [ -38,   30],\\n        [  15,   47],\\n        [ -49,  -17],\\n        [  75,  -65],\\n        [ -20,   22],\\n        [  55,  -37],\\n        [  70,  -14],\\n        [ -46,   71],\\n        [ -47,  -53],\\n        [ -56,   -2],\\n        [ -39,   95],\\n        [ -64,  -89],\\n        [  44,  -52],\\n        [ -31,  -16],\\n        [ -79, -100],\\n        [  43,  -44],\\n        [  39,  -87],\\n        [ -74,  -83],\\n        [ -11,  -97],\\n        [  82,  -89],\\n        [  76,  -27],\\n        [  89,  -17]]))",
    0.00056
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00098
  ]
}