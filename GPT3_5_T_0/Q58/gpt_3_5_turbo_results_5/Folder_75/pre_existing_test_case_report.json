{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00055
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00034
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   9,    5],\\n        [ -98,   50],\\n        [  87, -100],\\n        [  67,   86],\\n        [  -7,   23],\\n        [ -78,   78],\\n        [ -49,  -75],\\n        [ -76,  -11],\\n        [ -12,  -60],\\n        [ -79,  -14],\\n        [  41,  -72],\\n        [  78,   33],\\n        [  16,   41],\\n        [ -61,  -66],\\n        [  51,   53],\\n        [ -18,  -39],\\n        [  56,  -28],\\n        [ -15,   68],\\n        [  70,   50],\\n        [  10,  -93],\\n        [  -3,  -83],\\n        [  67,   56],\\n        [ -78,  -11],\\n        [  86,  -47],\\n        [ -91,  -13],\\n        [  90,  100],\\n        [ -51,   28],\\n        [  86,  -91],\\n        [  97,   31],\\n        [  71,  -87],\\n        [ -65,   28],\\n        [ -48,   30],\\n        [ -45,   29],\\n        [  28,   24],\\n        [ -12,   98],\\n        [  97,  -33],\\n        [   3,   96],\\n        [  62,   85],\\n        [ -79,  -51],\\n        [   0,  -70]]))",
    0.00082
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00383
  ]
}