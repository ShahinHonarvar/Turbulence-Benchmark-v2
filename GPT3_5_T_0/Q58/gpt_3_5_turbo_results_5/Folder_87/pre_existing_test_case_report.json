{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-81, -17],\\n        [ 84,  28],\\n        [ 53, -22],\\n        [ 77, -53],\\n        [-49,  61],\\n        [-31,  31],\\n        [-89,  87],\\n        [-36, -97],\\n        [-68,  71],\\n        [-41, -91],\\n        [-93, -79],\\n        [ 30, -17],\\n        [-20,  71],\\n        [ -4, -19],\\n        [-10,  50],\\n        [ 61, 100],\\n        [-57,  59],\\n        [ 16, 100],\\n        [ 54, 100],\\n        [ 16,  -2],\\n        [-99,  97],\\n        [-52,  44],\\n        [-45, -85],\\n        [ 91,  31],\\n        [  9,  -5],\\n        [ 44, -83],\\n        [ 54,  37],\\n        [100, -21],\\n        [ 48, -64],\\n        [ -2,  98],\\n        [ 20, -58],\\n        [ 75,  88],\\n        [ 37, -66],\\n        [ 28, -60],\\n        [ 52, -40],\\n        [ 44, -59],\\n        [-69,  97],\\n        [-47, -81],\\n        [-80, -65],\\n        [-64, -72],\\n        [-18, -40],\\n        [-70,  27],\\n        [-95, -98],\\n        [ 33,   2],\\n        [ 85, -30],\\n        [ -5,  58],\\n        [ 26,  61],\\n        [ 15,   4]]))",
    0.00059
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00029
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00122
  ]
}