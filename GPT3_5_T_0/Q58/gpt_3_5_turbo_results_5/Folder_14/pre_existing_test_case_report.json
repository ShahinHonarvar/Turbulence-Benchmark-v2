{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00217
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-34, -41],\\n        [-75,  99],\\n        [ 35,  76],\\n        [ 41, -23],\\n        [-89, -82],\\n        [ 94,   8],\\n        [-66,  20],\\n        [  5,  80],\\n        [-27,  27],\\n        [-76,  50],\\n        [-93,  26],\\n        [  4,  20],\\n        [-24,   1],\\n        [-24,  59],\\n        [-78, -18],\\n        [-13,  17],\\n        [-51, -95],\\n        [  1,  26],\\n        [-88,  45],\\n        [ 22, -91],\\n        [-15,  48],\\n        [ 66,  -8],\\n        [ 26, -97],\\n        [-79, -67],\\n        [ 60,  22],\\n        [ 85, -89],\\n        [-17, -51],\\n        [-79,  26],\\n        [-12,  83],\\n        [ 78, -63],\\n        [-99, -66],\\n        [ 26,  50],\\n        [  6,  40],\\n        [ 43,  51],\\n        [-88, -76],\\n        [-95, -78],\\n        [-44,  33],\\n        [  5,  98],\\n        [ 92, -19],\\n        [-83, -33],\\n        [-31,  91],\\n        [-11,  92]]))",
    0.00338
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00283
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00987
  ]
}