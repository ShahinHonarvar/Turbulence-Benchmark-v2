{
  "parameter(s)": [
    76
  ],
  "test_matrix_of_having_76_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -45,   92],\\n        [  -6,  -11],\\n        [  20,   34],\\n        [   7,   54],\\n        [ -29,   13],\\n        [  10,  -13],\\n        [ -85,  -98],\\n        [  13,  -80],\\n        [  30,  -39],\\n        [ -25,  -32],\\n        [   2,  -78],\\n        [ -50,   13],\\n        [  69,   45],\\n        [ -93,   84],\\n        [  66,   85],\\n        [ -26,  -82],\\n        [  -2,   53],\\n        [  45,   56],\\n        [  87,  -72],\\n        [  98,   30],\\n        [  43,   42],\\n        [ -22,  -94],\\n        [  85,    8],\\n        [  98,   16],\\n        [ -59,  -38],\\n        [  19,   -4],\\n        [ -97,   34],\\n        [  34,  -23],\\n        [  13,  -84],\\n        [ -31, -100],\\n        [  69,   26],\\n        [ -76,  -39],\\n        [  81,   77],\\n        [   5,   38],\\n        [ -90,   75],\\n        [ -24,    2],\\n        [  86,   -5],\\n        [  11,  -40]]))",
    0.00087
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 153",
    0.00053
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[76]]))",
    0.00039
  ]
}