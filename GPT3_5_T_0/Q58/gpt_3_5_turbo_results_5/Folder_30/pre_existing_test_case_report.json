{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00135
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00226
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 99, -47],\\n        [ 45, -42],\\n        [-51,  -5],\\n        [-12, -61],\\n        [ 97,  70],\\n        [ 38,  66],\\n        [ 66, -23],\\n        [-12,  11],\\n        [  5, -14],\\n        [ 47, -10],\\n        [ 90,  63],\\n        [-84, -87],\\n        [-88, -94],\\n        [-49,  18],\\n        [-71, -78],\\n        [ 61,  27],\\n        [-11,  30],\\n        [-59,  50],\\n        [ 42,  90],\\n        [-62,  -9],\\n        [ 21,  90],\\n        [ 79, -60],\\n        [-88,  27],\\n        [ 49, -41],\\n        [-11,  74],\\n        [ 61,  67],\\n        [ 68,  -8],\\n        [-82, -68],\\n        [-27,   2],\\n        [-34,  90],\\n        [-39, -70],\\n        [-55,  31],\\n        [100, -43],\\n        [-77, -58],\\n        [  0,  18],\\n        [ 45, -26],\\n        [ 26,  50],\\n        [ 13,  96],\\n        [-35,  23],\\n        [-55, -59],\\n        [-54, -21],\\n        [-40,  54],\\n        [ 68, -36],\\n        [  9,  25],\\n        [ 44,  59],\\n        [ 13,  -5],\\n        [ 42,  35]]))",
    0.00074
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00552
  ]
}