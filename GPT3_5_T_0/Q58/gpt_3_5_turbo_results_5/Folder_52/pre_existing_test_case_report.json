{
  "parameter(s)": [
    147
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00052
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[147]]))",
    0.00048
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-35, -17,  30, -64, -93,  83, -85, -79,  34, -23, -32,  84,  97,\\n          99, -75,  86,  48, -65,  16, -11,  40,  47,  53, -72,  22, -83,\\n         -75, -68, -40, -94,  75, -96,  79,  82, -11,  55, -55, -52,  11,\\n         -37, -55,  63, -57,  88,  65,  41,  60,  56,  -8,  65,   5,  75,\\n          37,  46, -96,  47,  81, -78,  68,  67,  25,  26, -59,  55, -24,\\n          24,  11, -40, -17,  89, -48, -82, -43,  -4, -86, -54, -83, -16,\\n          89, -58,  40, -46,   7, -17, -70,  40,   2,  -8,  11, -53,  42,\\n         -91, -55, -13, -46, -93,  66, -52,  91,  62,  -2,  49,   0,  20,\\n          96, -48, -80, -75,  23, -31,  -8, 100,  95, -10, -68,  21, -27,\\n          74,  74,  56,  44, -39, -19, -43,  54,  76, -62, -22,  64, -57,\\n          11,  88, -15,  -4, -13,  87,  -3, -17, -91, -79,  90, -68,  53,\\n         -75,  12,   2, -40]]))",
    0.0006
  ]
}