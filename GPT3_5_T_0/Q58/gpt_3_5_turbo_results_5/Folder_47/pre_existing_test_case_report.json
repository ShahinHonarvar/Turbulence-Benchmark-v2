{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.0003
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  52,   11],\\n        [ -91,  -55],\\n        [  85,   83],\\n        [ -95,  -74],\\n        [ -37,  -66],\\n        [  36,   43],\\n        [ -19,  -60],\\n        [  46,  -26],\\n        [ -63,  -50],\\n        [ -77,  -99],\\n        [  93,  -63],\\n        [ -89,   94],\\n        [  61,  -22],\\n        [  57,  -84],\\n        [ -40,  -16],\\n        [  82,   58],\\n        [ -99,  -64],\\n        [  37,  -22],\\n        [ -72,  -44],\\n        [ -61,   -1],\\n        [ -57,  -20],\\n        [ -23,  -21],\\n        [  38,  -52],\\n        [  36,    4],\\n        [  62,   79],\\n        [  11,   80],\\n        [  80,  -84],\\n        [ -71,   -8],\\n        [  84,   -6],\\n        [  82,  -74],\\n        [  98,  -34],\\n        [  49,    1],\\n        [ -91,  -86],\\n        [  42,   73],\\n        [ -33,   89],\\n        [   7,  -70],\\n        [  11,   12],\\n        [  53,   -2],\\n        [   5,    9],\\n        [ -84,  -30],\\n        [ -34,  -65],\\n        [   6,   36],\\n        [  50,  -22],\\n        [ -52,   80],\\n        [  17, -100]]))",
    0.00082
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00072
  ]
}