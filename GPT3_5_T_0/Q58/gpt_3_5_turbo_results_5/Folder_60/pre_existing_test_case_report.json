{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-62,  34],\\n        [ 95, -51],\\n        [-29, -41],\\n        [ 73,  81],\\n        [ 62,  37],\\n        [ 13,  89],\\n        [-22, -74],\\n        [  5, -49],\\n        [ 70,  47],\\n        [-50, -17],\\n        [-13, -62],\\n        [ 38, -63],\\n        [-57,  80],\\n        [ 43,  62],\\n        [-41,  18],\\n        [-68, -56],\\n        [ 84,  14],\\n        [-65,  -6],\\n        [ 75,  61],\\n        [ 32,   1],\\n        [ 78,  25],\\n        [ 54, -82],\\n        [ 18,  76],\\n        [100, -50],\\n        [-93,  54],\\n        [ 67, -75],\\n        [ 77, -33],\\n        [ 19,  50],\\n        [ 22,  69],\\n        [ 14,  35],\\n        [ 13,  32],\\n        [-19, -37],\\n        [-35, -34],\\n        [ 46, -61],\\n        [-51, -99],\\n        [ 52, -74],\\n        [ 72,  92],\\n        [ 60,  44],\\n        [  6, -60],\\n        [ 52, -33],\\n        [-31,  89],\\n        [ 94, -76],\\n        [-66, -64],\\n        [ 79, -70]]))",
    0.00087
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00088
  ]
}