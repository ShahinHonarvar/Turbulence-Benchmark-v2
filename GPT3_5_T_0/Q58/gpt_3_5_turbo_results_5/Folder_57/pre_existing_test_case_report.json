{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00053
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00449
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -88,   28],\\n        [  36,  -68],\\n        [  90,   98],\\n        [ -50, -100],\\n        [  84,   63],\\n        [ -80,   -6],\\n        [ -44,  -43],\\n        [ -26,  -22],\\n        [  43,  100],\\n        [ -21,  -74],\\n        [ -99,   -1],\\n        [ -77,  -99],\\n        [  -1,   29],\\n        [  38,   38],\\n        [ -29,  -75],\\n        [  -8,   -6],\\n        [  91,  -33],\\n        [   5,  -52],\\n        [  -8,  -21],\\n        [ -35,   36],\\n        [ -29,   94],\\n        [  11,   56],\\n        [ -59,  -95],\\n        [ -62,   42],\\n        [  47,  -26],\\n        [  94,  -14],\\n        [   1,   16],\\n        [  78,   -2],\\n        [ -37,    4],\\n        [  15,  100],\\n        [  38,  -85],\\n        [ -82,  -28],\\n        [ -95,  -78],\\n        [  61,  -33],\\n        [  82,    4],\\n        [ -12,  -83],\\n        [   3,   -4],\\n        [  48,   62],\\n        [  56,   39],\\n        [  49,   -3],\\n        [ -87,  -89],\\n        [ -73,   14],\\n        [ -82,  100],\\n        [ -14,  -86],\\n        [ -42,  -73],\\n        [ -20,  -91]]))",
    0.00092
  ]
}