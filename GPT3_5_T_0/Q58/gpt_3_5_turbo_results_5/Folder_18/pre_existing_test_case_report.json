{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -8,  98],\\n        [ 71, -12],\\n        [-84, -57],\\n        [ -5, -97],\\n        [ 40,  69],\\n        [-22,  74],\\n        [ 23,  49],\\n        [-37,  42],\\n        [ 75,  76],\\n        [  0, -87],\\n        [-98,  73],\\n        [-20, -84],\\n        [-65, -22],\\n        [-97, -91],\\n        [-61,  91],\\n        [-17,  81],\\n        [ 54, -78],\\n        [-16,  52],\\n        [ 68,  96],\\n        [-84,  33],\\n        [-42,  73],\\n        [ 87,  14],\\n        [-27, -49],\\n        [-47, -26],\\n        [  8,   5],\\n        [-89,  73],\\n        [-51,  98],\\n        [-25, -94],\\n        [-87, -66],\\n        [ 88,  12],\\n        [-86,  15],\\n        [ 20,   4],\\n        [ 54,  87],\\n        [-57,  18],\\n        [-81,  35],\\n        [-36, -69],\\n        [ 48,  16],\\n        [ 35,  50],\\n        [-95,  96],\\n        [-56, -90],\\n        [ 99, -19],\\n        [-69,  56],\\n        [-30,  21],\\n        [-18,  78],\\n        [-78,  78],\\n        [ 35, -12],\\n        [  0, -29],\\n        [ 26,  32],\\n        [ -6,  76],\\n        [ 71,  65],\\n        [ 90,  37],\\n        [ 10, -51]]))",
    0.00057
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00081
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00053
  ]
}