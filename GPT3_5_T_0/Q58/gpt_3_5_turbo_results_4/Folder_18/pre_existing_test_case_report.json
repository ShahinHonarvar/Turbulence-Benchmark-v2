{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00051
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87, -100],\\n        [  -4,  -59],\\n        [ -82,   33],\\n        [  21,  -43],\\n        [  -2,  -67],\\n        [  87,  -47],\\n        [  51,  -89],\\n        [ -18,  -48],\\n        [  57,  -35],\\n        [  63,  -33],\\n        [  72,  -93],\\n        [  64,  -29],\\n        [-100,  -59],\\n        [  16,   73],\\n        [  63,   18],\\n        [ -39,  -28],\\n        [  -1,   17],\\n        [   8,   46],\\n        [ -52,  -48],\\n        [ -42,   75],\\n        [  34,   28],\\n        [   2,  -57],\\n        [ -43,  -40],\\n        [  80,   93],\\n        [  24,   29],\\n        [  68,   83],\\n        [  99,    8],\\n        [ -48,  -34],\\n        [  74,   85],\\n        [ -27,  -80],\\n        [  85,    9],\\n        [ -74,   92],\\n        [ -67,   17],\\n        [  34,   93],\\n        [ -14,  -35],\\n        [ -40,   85],\\n        [  31,  -18],\\n        [  11,  -55],\\n        [  18,   86],\\n        [ -54,   28],\\n        [ -35,  -88],\\n        [ -26,   45],\\n        [ -61,  100],\\n        [  -1,   16],\\n        [ -39,   15],\\n        [  13,   84],\\n        [  18,  -41],\\n        [  70,  -12],\\n        [   4,  -13],\\n        [  81,  -62],\\n        [ -61,   82],\\n        [  87,   88]]))",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00112
  ]
}