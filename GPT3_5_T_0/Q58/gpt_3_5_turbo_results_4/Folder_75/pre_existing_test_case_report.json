{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00026
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -4, -24],\\n        [-47, -10],\\n        [-25, -66],\\n        [ 87,  35],\\n        [-10,  92],\\n        [ 20, -18],\\n        [ 30,  -2],\\n        [ 41,  96],\\n        [-68, -29],\\n        [ 26,  -7],\\n        [ 44, -23],\\n        [ 88,  81],\\n        [-10,  80],\\n        [-55, -25],\\n        [ 44,  44],\\n        [  1,  89],\\n        [-51,  93],\\n        [-44,  17],\\n        [-75, -27],\\n        [ 18, -52],\\n        [ 19,  97],\\n        [-60, -57],\\n        [ 10, -23],\\n        [ 97,   4],\\n        [-85,   8],\\n        [ 74, -25],\\n        [-31, -19],\\n        [-54, -52],\\n        [-26,  30],\\n        [ 20,  98],\\n        [  1, -98],\\n        [ 22,  84],\\n        [ 76, -42],\\n        [-91, -30],\\n        [ 75,  42],\\n        [  3,  45],\\n        [-47,  32],\\n        [-97, -13],\\n        [ 97, -32],\\n        [-44, -61]]))",
    0.00082
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00052
  ]
}