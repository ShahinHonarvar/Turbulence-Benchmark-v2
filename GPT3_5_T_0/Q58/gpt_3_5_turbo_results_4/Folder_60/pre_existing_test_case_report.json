{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00032
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -90,   18],\\n        [  52,   85],\\n        [   1,   75],\\n        [  15,   42],\\n        [ -56,   17],\\n        [  -9,   87],\\n        [  83,  -13],\\n        [  56,  -66],\\n        [ -48,   13],\\n        [ -71,   32],\\n        [ -30,  -52],\\n        [   0,   -5],\\n        [ -94,   87],\\n        [-100,  -60],\\n        [ -40,  -21],\\n        [  47,    0],\\n        [  72,  -77],\\n        [  17,  -53],\\n        [  74,    0],\\n        [ -82,   55],\\n        [ -52,   60],\\n        [ -85,  -33],\\n        [ -82,  -54],\\n        [  -5,    0],\\n        [ -22,  -78],\\n        [  26,  -84],\\n        [ -71,  -81],\\n        [ -67,  -92],\\n        [ -21,   61],\\n        [ -40,   -9],\\n        [  73,  -43],\\n        [   3,  -10],\\n        [  89,   33],\\n        [ -35,   90],\\n        [   9,  -71],\\n        [  91,  -18],\\n        [  31,   69],\\n        [ -90,  -24],\\n        [  18,  -43],\\n        [  14,   84],\\n        [ -15,   18],\\n        [ -60,  -45],\\n        [ -73,  -38],\\n        [   8,  -25]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00072
  ]
}