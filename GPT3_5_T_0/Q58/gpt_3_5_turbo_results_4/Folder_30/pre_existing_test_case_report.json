{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00046
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   26],\\n        [ -57,  -70],\\n        [  -7,  -98],\\n        [ -88,  -69],\\n        [ -89,  -90],\\n        [  32,   60],\\n        [   5,   13],\\n        [  77,   40],\\n        [  83,  -40],\\n        [ -67,   30],\\n        [  17,   85],\\n        [-100,  -10],\\n        [ -38,    2],\\n        [  98,  -79],\\n        [ -76,  -91],\\n        [  66,   85],\\n        [  -8,   30],\\n        [  30,  -28],\\n        [ -29,  -18],\\n        [  82,   39],\\n        [ -12,   79],\\n        [ -17,  -24],\\n        [ -28,   91],\\n        [ -47,  -37],\\n        [ -94,  -17],\\n        [ -30,  -60],\\n        [  55,   26],\\n        [ -71,   15],\\n        [  88,   53],\\n        [  13,   53],\\n        [  97,  -95],\\n        [  72,  -85],\\n        [  61,   76],\\n        [  75,   80],\\n        [   3,  -16],\\n        [ -52,  -57],\\n        [   6,  -76],\\n        [  38,  -52],\\n        [ -99,   20],\\n        [  37,  -84],\\n        [  82,  -48],\\n        [  18,    5],\\n        [  14,   16],\\n        [ -38,  -71],\\n        [  -5,  -45],\\n        [  42,   84],\\n        [ -23,   56]]))",
    0.00071
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00098
  ]
}