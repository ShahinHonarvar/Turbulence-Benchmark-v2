{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  84,   42,  -29,   -7,   80,  -31,  -88,  -76,  -79,   66,\\n          -98,   -8,  -36,   93,  -79,   89,   66,  -36,  -82,  -22,\\n           -2,   99,  -43,  -83,   82,  -68,   89,  -22,  -35,   28,\\n          -14,  -44,  -83,   43,  -22,   71,   91,   68,   61,  -88,\\n           94, -100,  -12,   34,  -80,  -74,   32,   21,  -62,   85,\\n          -61,   49,  -96,  -89,   50,   51,  -36,  -58,   56,    6,\\n           15,  -54,   30,  -30,   18,   87,  -11,   92,  100,  -72,\\n          -50,   70,   30,  -10,   -9,  -49,  100,   -4,   61,   64,\\n           92,   17,   72,   84,   -8,   44,   54,   -7,  -51,   32,\\n           66,  -84,  -76,  -88,   14,  -40,  -39,   46,  -13,    7,\\n           59,    9,  -87,  -93,   87,   -7,   70,   11,   47,  -53,\\n          -45,  -29,   13,    8,   87,    5,   45,   36,   60,   20,\\n          -85,  -61,   25,   10,   23,  -44,  -39,  -69,  -87,   14,\\n          -96,   47,   -2,  -80,   52,  -82,  -68,   54,  -63,   76,\\n          -54,  -17,   13,   42,   -3,   84,   78,   54,  -75,  -68,\\n           80,  -84, -100,   29,   24,   15,   77,   61,  -22,   73,\\n          -47,   36,   16,   61,  -74,   29,   29,   79,   35,  -74,\\n           59,   88,   54,   33,   86]]))",
    0.00107
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00179
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[175]]))",
    0.00038
  ]
}