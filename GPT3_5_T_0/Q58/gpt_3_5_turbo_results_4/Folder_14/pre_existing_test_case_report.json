{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00104
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00086
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  14,   67],\\n        [  92,  -85],\\n        [  28,  -14],\\n        [ -72,   86],\\n        [  69,  -15],\\n        [  69,   41],\\n        [  50,   21],\\n        [  34,   62],\\n        [ -98,   12],\\n        [   5,    3],\\n        [ -12,  -70],\\n        [ -41,  -75],\\n        [  80,  -71],\\n        [ -38,  -89],\\n        [   3,    5],\\n        [  85,   65],\\n        [  75,  -42],\\n        [ -52,   60],\\n        [ -61,   76],\\n        [  10,  -61],\\n        [  36,   52],\\n        [ -75,  -35],\\n        [  70,  -64],\\n        [  30,   12],\\n        [ -76, -100],\\n        [  12,   -1],\\n        [ -90,   77],\\n        [ -37,  -52],\\n        [  79,  -74],\\n        [   8,  -88],\\n        [ -75,  -62],\\n        [ -12,   80],\\n        [  28,  -82],\\n        [  18,   -5],\\n        [ -40,   71],\\n        [  16,   38],\\n        [ -84,  -21],\\n        [ -97,  -58],\\n        [  87,  -77],\\n        [  34,   34],\\n        [ -84,  -52],\\n        [  29,  -16]]))",
    0.00088
  ]
}