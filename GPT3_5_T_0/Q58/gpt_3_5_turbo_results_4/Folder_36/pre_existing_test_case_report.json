{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 62, -73, -61, -48, -34,  49, -50, -25,  69, -37,  -9, -76, -25,\\n          56,  74,  23,  36,  14,  51,  -1, -66,  18,  94, -98,  46,  51,\\n         -65,  35, -15,  81,  16, -84,  88,  44,  50,  51,  39,  78,  52,\\n         -59,  60, -50, -46, -57,  63,  67,  35, -11,  19,  37,  71,  69,\\n          78,  53, -29, -21, -29,   4,  43, -41,   0, -28,  45, -24,  71,\\n         -78,  25, -18, -15, -86,  75, -85, -28, -62, -74,  67, -30,  12,\\n         -47,  31, -75, -17,  72, -19,  17, -45, -57, -68,  56,  91,  -4,\\n          28,  95,  -4,  17,  38, -39, -86, -90,  32,  96,  96,  48, -29,\\n         -72, -87,  -9, -74,  46,  82, -61, -55,   8,  47, -79, -46,  46,\\n          59, -31,  31,  97,   2,  82, -13, -98,  31, -25, -47,  86,  89,\\n          90]]))",
    0.0007
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[131]]))",
    0.00286
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00058
  ]
}