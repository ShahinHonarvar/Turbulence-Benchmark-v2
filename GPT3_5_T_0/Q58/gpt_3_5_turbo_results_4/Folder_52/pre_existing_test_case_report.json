{
  "parameter(s)": [
    147
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00043
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[147]]))",
    0.00041
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 32,   8, -93, -84,  98, -64, -50,  29, -96,  96,  -1, -17,  17,\\n         -59, -30,  53, -44,  53, -25,   7,  33,  97,  32, -57,  53,  -8,\\n         -51,  72,  11, -18, -18, -86,  47,  48, -32,  84,  95,  59,  45,\\n         -74, -92, -33, -32,  75,  74, -25,  36, -22,  54,  62, -12,   0,\\n          66, -39,  -6, -75,   7,  -6, -53,  -7, -35,  94,  20, -66, -29,\\n         -48,  76, -93, -11, -17,   6, -70,  39, -13, -34,  13,  19,  28,\\n          -8,  44,  33, -92, -15, -79,  19,  -4,  33, -76,  52, -19,  71,\\n         -77,  63, -62, -32, -21,  62,   5,  66, -73, -97, -11,  75, -59,\\n         -42, -45, -87,  95,  -4,  -2, -18,  31,  20,  35,   2,  45, -55,\\n         -47,  68, -19,  95,  67, -31,  31, -79, -59,  28,   2, -64, -39,\\n         -47,  27, -62, -80,  94,  38,  54,  59,  10,  17, -19, -80, -71,\\n         -54,  80, -22, -80]]))",
    0.00099
  ]
}