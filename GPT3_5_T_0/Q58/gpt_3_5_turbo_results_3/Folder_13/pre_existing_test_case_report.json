{
  "parameter(s)": [
    175
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.0005
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 60, -42,  25, -32,   4, -55,  98,  83,  28,  45, -18,  90, -30,\\n         -49, -43, -97, -51,  74, -36,  75, -35,   6,  15,  82, -90, -71,\\n         -19, -60, -55,  81, -78,  72, -52,  29,  87,   6,  39,  88, -87,\\n          22, -99, -22, -77,  72,   7,  97,  80, -97,  15,   6,  89,  -6,\\n         -25, -58, -38, -28, -97, -32, -66,   8,  36, -98,  18, -53, -78,\\n         -68, -48,  42,  91,  98, -70,  27,  16, -79, -53, -13,  -6, -49,\\n          65,  45,   1, -36,  70, -61,  28,  85, -83,  76,  37, -43,  11,\\n         -79, -91, -22, -98,  11, -17, -34, -24,   9, -71,  52,  82,  42,\\n          96,  26,  99,  80, -49, -29,  16, -67, -62,  77,  21, -88, -28,\\n          -9,   1,  72,  90,  90, -63,  90,   8,   5, -36,   3, -34,  60,\\n         -57,  15,  48,  56, -49,  66, -25, -70,  87, -49,  86, -40,  28,\\n          33, -79,  41, -82,  10,  80, -74, -67,  -7,  31,  87,  18,  66,\\n         -55,  -4,  68,  81, -80,  64,   4, -59, -24, -89, -58, -44, -65,\\n          55,  33,  50, -66, -33,  73]]))",
    0.0008
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[175]]))",
    0.00038
  ]
}