{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  8,  95, -12,  33,  43, -55,  27,  54,  67, -34,  23,  30, -80,\\n          91, -46, -99, -63,  69, -76, -97,  70, -19,   7,  95,  35,  33,\\n          36, -22,  60,   4, -51,  66,  44,  29,  77,   3,  86, -23, -36,\\n          54, 100,  86,  51, -31,  71, -94,  76,  34, -67,   6, -61,  88,\\n          59,  -7, -34,  75, -46, -24,  10,  32, -65, -40, -92,  67, -89,\\n         -43, -61,  65,  81,  -2,  51, -47,  14, -99,  64,  51,  67, -67,\\n         -91,   7, -22,  94, -14,  90, -87, -46, -95, -19,  92,  32,  58,\\n         -52,  39,  63, -11,  90,  84,  47,  64,  30, -82,  58, -53,  10,\\n         -67, -28, -22, -49,  58,  15,   0, -38, -74, -76, -60,  21, -68,\\n          62,  80, -57, -38,   6,  42,  61,   8,  70, -16, -36,  47,  71,\\n          36]]))",
    0.00106
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00352
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[131]]))",
    0.00041
  ]
}