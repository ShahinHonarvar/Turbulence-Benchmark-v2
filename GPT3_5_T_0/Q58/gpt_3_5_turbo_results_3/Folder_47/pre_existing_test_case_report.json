{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00133
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00153
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00205
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89,  90],\\n        [  0,  -1],\\n        [-50, -51],\\n        [ 54, -31],\\n        [-82, -57],\\n        [-52, -40],\\n        [ 14,  82],\\n        [-88,  47],\\n        [-78, -26],\\n        [  3,  44],\\n        [-35, -30],\\n        [-32,  87],\\n        [-12, -46],\\n        [ 81, -46],\\n        [-78,  89],\\n        [ -7,  89],\\n        [ 30,  57],\\n        [ 85,  -5],\\n        [-57,  35],\\n        [ 86, -21],\\n        [ 14,  90],\\n        [-66,  46],\\n        [ 73, -22],\\n        [  6, -32],\\n        [ 10,  64],\\n        [ 77,   8],\\n        [-19, -80],\\n        [ 97,  51],\\n        [-18, -18],\\n        [  7, -76],\\n        [ 87,  -8],\\n        [ 96, -32],\\n        [ 59, -16],\\n        [-13,  44],\\n        [-30, -72],\\n        [-98,  19],\\n        [-90,  56],\\n        [ 21, -83],\\n        [-84,  26],\\n        [ 64,  16],\\n        [-10,  68],\\n        [-44, -54],\\n        [ 15,  93],\\n        [-36, -19],\\n        [ 56, -31]]))",
    0.00085
  ]
}