{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00298
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 41, -78],\\n        [ 11, -54],\\n        [ 32,  -2],\\n        [-64, -30],\\n        [ 44,  77],\\n        [-82,  25],\\n        [ 37, -12],\\n        [-46, -67],\\n        [-56,  -1],\\n        [ 25,   2],\\n        [ 50,  35],\\n        [ 99,  69],\\n        [ 21, -21],\\n        [-50,  23],\\n        [ 67,  56],\\n        [-58, -70],\\n        [-83,   6],\\n        [ 62,  43],\\n        [ 10,  25],\\n        [ 99,  85],\\n        [-32,  26],\\n        [-16,  62],\\n        [ 23,  64],\\n        [-33,  -6],\\n        [ 19,  63],\\n        [ 17,  38],\\n        [-21,   0],\\n        [ 71,  23],\\n        [ 73,  88],\\n        [ 85,  49],\\n        [-87, -60],\\n        [ 85,  23],\\n        [ -6, -57],\\n        [-46, -81],\\n        [-14,  76],\\n        [  1, -49],\\n        [ 35, -14],\\n        [ 66,  41],\\n        [100, -54],\\n        [-42,  67],\\n        [ 87,  60],\\n        [-22, -93],\\n        [-28,  59],\\n        [ 70, 100],\\n        [ 33,  67],\\n        [-18, -74],\\n        [ -2, -25],\\n        [-38,  42]]))",
    0.00099
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00081
  ]
}