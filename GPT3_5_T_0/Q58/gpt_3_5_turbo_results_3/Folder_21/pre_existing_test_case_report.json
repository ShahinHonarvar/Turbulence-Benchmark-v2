{
  "parameter(s)": [
    139
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.36322
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  27,   37,   53,  -79,   59,  -67,   19,   63,  -43,   29,\\n           26,  -21,  -10,  -66,  -38,   -7,  -50,   73,  -84,  -20,\\n          -54,   31,   25,  -38,  -28,   78,  -65,   70,  -16,  -49,\\n           28,  -66,   16,  -73,  -14,   28,  -55,   12,  -40,  -17,\\n          -29,  -94,   29,  -31,  -64,   72,  -46,  -22,  -96,  -73,\\n          -44,   88,   11,  -49,   71,  -82,  -22,   77,    2,   12,\\n           31,  -50,  -97,  -16,  -59,   34,  -96,   33,  -86,   35,\\n          -58,   14,   51,   -3,   55,   71,   36,  -32,   24,  -19,\\n          -10,  -48,  -19,  -38,    2,   32,  -86,   28,   71,  -74,\\n          -49,   53,  100,   43,   54,   16,   93,   36,   76,  -44,\\n          -60,   80,  -94,  -51,  -36,   13,    9,   16,   61,  -86,\\n           -5,   -9,   -1,    7,   -6,  -23,  -50,   29,   58,  -68,\\n           11,  -38, -100,  -24,   91,   28,   -1,   61,  -62,  -35,\\n           12,   66,   87,   50,   -9,  -54,   50, -100,   35]]))",
    0.12261
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[139]]))",
    0.0004
  ]
}