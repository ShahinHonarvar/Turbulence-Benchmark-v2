{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00052
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-76,   6],\\n        [  6, -95],\\n        [  6,  91],\\n        [-11,  32],\\n        [ 44,  45],\\n        [ 49,  49],\\n        [-22, -23],\\n        [-77, -74],\\n        [-40, -59],\\n        [ -9,  14],\\n        [ 39, -90],\\n        [ 71,   5],\\n        [ 32,  65],\\n        [-60,  15],\\n        [-27, -19],\\n        [ 92, -58],\\n        [ 49,  96],\\n        [-41,  92],\\n        [ 77,  54],\\n        [ 46,  17],\\n        [-33,  88],\\n        [ 94,  38],\\n        [ 60, -17],\\n        [-53,  -8],\\n        [-39,  34],\\n        [-66,  36],\\n        [-55, -26],\\n        [ 71, -85],\\n        [-15, -18],\\n        [ 13, -22],\\n        [-74, -97],\\n        [ 41, -54],\\n        [ 84,  39],\\n        [ 10,   0],\\n        [-99, -79],\\n        [-72,  59],\\n        [-95,  66],\\n        [  8, -23],\\n        [ 74,  95],\\n        [-71,  45],\\n        [-43, -41],\\n        [ 15,  64],\\n        [-95,  55],\\n        [-53,  58]]))",
    0.00097
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00086
  ]
}