{
  "parameter(s)": [
    74
  ],
  "test_matrix_of_having_74_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 23,  -3],\\n        [-51, -39],\\n        [-76, -17],\\n        [ 69, -48],\\n        [-79,  88],\\n        [ -1,  23],\\n        [-52, -60],\\n        [-81,  49],\\n        [ 73, -66],\\n        [ 50,   8],\\n        [-29, -94],\\n        [ 24,  55],\\n        [-63, -36],\\n        [-55,  -1],\\n        [-75, -11],\\n        [ 76, -81],\\n        [ 29,  31],\\n        [ 79, -98],\\n        [ 94, -66],\\n        [-49, -35],\\n        [-11, -38],\\n        [-89,  75],\\n        [-10,  60],\\n        [ 86,  73],\\n        [-17, -52],\\n        [-92,  33],\\n        [ 33, -36],\\n        [ 87, -54],\\n        [ 26, -48],\\n        [-57, -37],\\n        [-95,  17],\\n        [-96,  73],\\n        [-38, -11],\\n        [-83, -78],\\n        [ 69,  43],\\n        [ 82,  65],\\n        [ 13, -74]]))",
    0.00066
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 149",
    0.00045
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[74]]))",
    0.00048
  ]
}