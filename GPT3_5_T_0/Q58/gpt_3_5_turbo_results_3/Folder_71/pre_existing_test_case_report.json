{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -29],\\n        [  43,  -28],\\n        [ -29,   53],\\n        [ -41,   14],\\n        [  83,  -10],\\n        [ -41,   -8],\\n        [  14,   55],\\n        [ -34,  -15],\\n        [  55,  -79],\\n        [  62,  -70],\\n        [   3,  -60],\\n        [ -47,  -46],\\n        [ -62,   35],\\n        [  75,  -20],\\n        [ -10,   25],\\n        [  77,   57],\\n        [  22,   -7],\\n        [ -35,  -78],\\n        [  -4,   75],\\n        [   9,   13],\\n        [ -80,   61],\\n        [  91,  100],\\n        [  84,  -67],\\n        [  72,  -47],\\n        [ -49,   36],\\n        [  77, -100],\\n        [  86,  -89],\\n        [ -28,  -84],\\n        [ -31,   76],\\n        [  11,   39],\\n        [  93,  -16],\\n        [ -57,   55],\\n        [  24,   -7],\\n        [  23,   53],\\n        [ -45,   98],\\n        [ -67,  -63],\\n        [  51,  -31],\\n        [ -34,   -7],\\n        [ -42,  -83]]))",
    0.00196
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00044
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[78]]))",
    0.00047
  ]
}