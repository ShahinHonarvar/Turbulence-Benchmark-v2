{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00034
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 82,  52],\\n        [ 60,  44],\\n        [-54,  92],\\n        [ 77, -43],\\n        [ 48, -33],\\n        [  1,  79],\\n        [ -5, -32],\\n        [ 33, -78],\\n        [-25,  90],\\n        [-30,  68],\\n        [-46,  63],\\n        [-31, -94],\\n        [-57,  83],\\n        [ 41, -79],\\n        [-18,  15],\\n        [ 46,  29],\\n        [-89, -18],\\n        [-67,  51],\\n        [-44, -78],\\n        [ 22, -62],\\n        [ 12,  -5],\\n        [-11,  64],\\n        [ 13,  59],\\n        [ 97,  58],\\n        [-97,  62],\\n        [-36,  13],\\n        [-81,  16],\\n        [-36,  80],\\n        [-35, -56],\\n        [-39,  45],\\n        [ 38, -60],\\n        [ 32,  52],\\n        [ 44, -43],\\n        [-50, -38],\\n        [100, -72],\\n        [ 45,   8],\\n        [ 58,  11],\\n        [ 85,  89],\\n        [-15,  98],\\n        [-58, -91],\\n        [-68,  50],\\n        [-66,  74]]))",
    0.00086
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00064
  ]
}