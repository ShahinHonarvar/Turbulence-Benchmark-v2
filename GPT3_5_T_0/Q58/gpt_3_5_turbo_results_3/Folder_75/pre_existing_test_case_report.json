{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00045
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00071
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 56,  74],\\n        [-44,  97],\\n        [ 94,   7],\\n        [ 57,  11],\\n        [-27, -32],\\n        [-94,  27],\\n        [ 38,  64],\\n        [ 59, -81],\\n        [ 45,  46],\\n        [-36, -49],\\n        [ 70,  71],\\n        [ 74,  -4],\\n        [-19,  93],\\n        [ 17,  25],\\n        [ 30,  26],\\n        [ 73,  54],\\n        [ 49, -33],\\n        [ 30,  91],\\n        [-67,  29],\\n        [-44,  87],\\n        [-72,  88],\\n        [  6, -15],\\n        [-22,  87],\\n        [ 84,  10],\\n        [-31,  34],\\n        [-46,  61],\\n        [ 31, -88],\\n        [ 92,  64],\\n        [ 44,  10],\\n        [-95,  87],\\n        [-14,  68],\\n        [-82, -22],\\n        [-43,  12],\\n        [ 24, -88],\\n        [-41, -68],\\n        [-97,  62],\\n        [ 75, -65],\\n        [ -4,  24],\\n        [ 29,  35],\\n        [  2, -63]]))",
    0.00066
  ]
}