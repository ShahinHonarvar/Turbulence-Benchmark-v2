{
  "parameter(s)": [
    76
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 153",
    0.00047
  ],
  "test_matrix_of_having_76_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  31,  -47],\\n        [   8,   47],\\n        [ -67,  -44],\\n        [ -20,  -55],\\n        [  91,  -57],\\n        [  -3,   98],\\n        [ -80,  -17],\\n        [ -65,  -63],\\n        [ -49,  -64],\\n        [ -96,   46],\\n        [  13,  -59],\\n        [ -96,  -54],\\n        [ -65,  -16],\\n        [  99,   83],\\n        [  35,   85],\\n        [ -80,   52],\\n        [  65,  -96],\\n        [ -52,   24],\\n        [  42,   64],\\n        [  -4,   48],\\n        [  72,   57],\\n        [  94,   89],\\n        [   1,   37],\\n        [   4,   48],\\n        [  -7,    0],\\n        [ -98,  -89],\\n        [  66,   19],\\n        [  -3, -100],\\n        [  72,  -48],\\n        [  62,  -15],\\n        [  93,  -99],\\n        [  45,  -21],\\n        [  47,  -65],\\n        [ -72,  -45],\\n        [ -96,   -6],\\n        [ -41,   45],\\n        [ -56,  -37],\\n        [  57,   34]]))",
    0.0007
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[76]]))",
    0.00043
  ]
}