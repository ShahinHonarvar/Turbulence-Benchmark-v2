{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00121
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00189
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00088
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  75,   98],\\n        [   9,   23],\\n        [  -9,  -21],\\n        [ -72,   77],\\n        [  72,  -87],\\n        [ -80,   85],\\n        [   0,   11],\\n        [ -69,   36],\\n        [ -73,   34],\\n        [  -3,   93],\\n        [ -54,   -6],\\n        [  62,  -40],\\n        [  17,   28],\\n        [ -28,   61],\\n        [  72,  -15],\\n        [ -78,   40],\\n        [ -78,  -35],\\n        [   4,  -85],\\n        [  15,  -67],\\n        [ -92,  -52],\\n        [  54,   24],\\n        [  79,  -11],\\n        [-100,   19],\\n        [  -8,  -67],\\n        [  -9,   52],\\n        [ -84,  -45],\\n        [ -63,   68],\\n        [  80,  -62],\\n        [  74,  -43],\\n        [  76,   14],\\n        [ -83,   39],\\n        [  25,  -47],\\n        [ -81,   55],\\n        [ -39,  -45],\\n        [ -82,  -79],\\n        [  -9,   96],\\n        [  36,    5],\\n        [   0,   63],\\n        [ -29,   36],\\n        [   0,  -67]]))",
    0.0041
  ]
}