{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[131]]))",
    0.00039
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00054
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 43,   3,  51, -46, -30,  67,  97,  40,  21, -59, -78, -91,  16,\\n          53,  79, -18,   0, -33,  13, -63,  -4,  47, -79, -32, -84,  42,\\n         -96,   4,  59,  55,   7, -50,  75,  31,  44, -30, -95, -91, -33,\\n          62, -78,  56, -96,  68,  59, -94, -76,   8,  85,  46, -30, -25,\\n         -47,  63,  48,  90,  65, -11, -43, -50,  59,  33, -81,  94,  83,\\n         100,  49, -63, -25, -54,  20,  58,  46, -29, -14,  92, -78, -78,\\n           8,  87, -44, -28, -49, -19,  -9, -94,  22, -17, -61,  84,  55,\\n         -82,   1,  88, -14, -58, -93,  18,  55,  41,  -2, -15, -70,  56,\\n         100,  59, -24, -40,  12, -65, -18, -57, -88, -44, -50, -81, -50,\\n          61,  30, -93, -78, -32,  -1, -66, -67, -15, -40, -47,  52, -85,\\n         -93]]))",
    0.00086
  ]
}