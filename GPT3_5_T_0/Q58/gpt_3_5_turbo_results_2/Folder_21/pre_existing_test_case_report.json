{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 83, -78,  48, -39,  32,  58, -24, -66,  21, -26, -10, -69,  74,\\n          -7,  58, -12,  28,  64,  53, -26,  -4, -85, -55,  68,   5, -78,\\n          26, -61, -78,  54, -89,  -9, -55, -90,  89,  90, -54,  -5,  67,\\n          -7,  19,  66,  75,  39, -58,  92,  16, -96,  19, -45,  -5, -55,\\n         -19, -84, -45,   2,  28,  22,   3, -15, -96,  -2, -14,  52, -31,\\n          65,  61, -95, -84,  60, -86, -22, -80,  98,   1,  -5,  -4, -93,\\n          81, -77,  52,  68,  49, -33, -40,  15,  11, -55, -40,  76,   7,\\n          19, -80,  31, -89,  95, -78, -39,  -7, -24,  41, -56, -78,  80,\\n         -48,  76, -63, -58,   6,  91,  42, -32, -79,  44,  46,  56,  12,\\n          86,  70, -32, -91,  57, -89,  35,  39,  64, -84, -88, -95, -84,\\n          15, -45, -80,  23, -99,  90, -64,  92, -94]]))",
    0.02991
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[139]]))",
    0.00035
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.25224
  ]
}