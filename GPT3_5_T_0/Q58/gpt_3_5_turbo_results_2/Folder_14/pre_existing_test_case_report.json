{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00032
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 34, -38],\\n        [ 90,  30],\\n        [ 12,  42],\\n        [-30, -94],\\n        [-46,  23],\\n        [ 33,  80],\\n        [-74,  96],\\n        [100,  66],\\n        [-66, -55],\\n        [ 90, -31],\\n        [100,   7],\\n        [ 27, -24],\\n        [  5, -49],\\n        [-68, -50],\\n        [ 30,  56],\\n        [-96, -76],\\n        [-40, -54],\\n        [ 36, -67],\\n        [  3, -32],\\n        [-16, -89],\\n        [  5, -70],\\n        [-36, -28],\\n        [-36,  75],\\n        [ 66,  94],\\n        [ 95,  85],\\n        [ 59, -76],\\n        [ 62,  -6],\\n        [ 65, -20],\\n        [-18,  75],\\n        [-53,  38],\\n        [-71,  92],\\n        [-77, -83],\\n        [ 41, -91],\\n        [-71,  79],\\n        [-70,   4],\\n        [ 65,  85],\\n        [ 23,  85],\\n        [ 97,  23],\\n        [ 53, -92],\\n        [-59, -10],\\n        [ 28, -21],\\n        [ 48,  56]]))",
    0.00053
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00108
  ]
}