{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00121
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 100,   56],\\n        [   4,  -42],\\n        [  36,   21],\\n        [  82,  -12],\\n        [  -2,   10],\\n        [ -69,  -90],\\n        [ -40,  -41],\\n        [  79,  -10],\\n        [ -72,  -13],\\n        [  85,    5],\\n        [ -55,  -91],\\n        [ -21,  -67],\\n        [  36,   37],\\n        [  71,   74],\\n        [  74,   42],\\n        [ -29,   85],\\n        [  62,   37],\\n        [ -76,  -73],\\n        [  71, -100],\\n        [ -22,  -19],\\n        [  52,   29],\\n        [ -75,  -93],\\n        [ -98,  -31],\\n        [  58,  -93],\\n        [ -22,   89],\\n        [ -46,   11],\\n        [  92,  -46],\\n        [ -57,  -73],\\n        [  11,   17],\\n        [ -44,   42],\\n        [   4,   98],\\n        [  28,   78],\\n        [ -79,   42],\\n        [  41,   92],\\n        [  89,  -90],\\n        [ -51,   12],\\n        [   3,  -79],\\n        [ -84,  -76],\\n        [  -5,   35],\\n        [  53,   41],\\n        [   7,  -57],\\n        [ 100,   96],\\n        [ -44,  -72],\\n        [  95,   -6],\\n        [  52,  -64]]))",
    0.00149
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00077
  ]
}