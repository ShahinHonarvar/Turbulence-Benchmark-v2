{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[78]]))",
    0.00122
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 98,  64],\\n        [-97,  13],\\n        [ 55, -82],\\n        [-70, -20],\\n        [-36, -22],\\n        [-55,  69],\\n        [ -6,  58],\\n        [ 65,  -6],\\n        [-67,  58],\\n        [ 51, -33],\\n        [ 35, -75],\\n        [-83,  51],\\n        [-59, -67],\\n        [-38,  50],\\n        [ 33, -27],\\n        [ 95, -90],\\n        [-35,  16],\\n        [-46, -52],\\n        [-77, -61],\\n        [ 83,  13],\\n        [-49,  21],\\n        [-96, -12],\\n        [-48,  29],\\n        [-26, -84],\\n        [-89,  33],\\n        [ 92, -51],\\n        [-65, -47],\\n        [ 32,  47],\\n        [-96,  81],\\n        [ 10,   2],\\n        [-52,  24],\\n        [-16,  58],\\n        [-55,  45],\\n        [ 19,  -2],\\n        [  3, -35],\\n        [  7, -55],\\n        [-16, -67],\\n        [ 15, -94],\\n        [ 90, -38]]))",
    0.00064
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00055
  ]
}