{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00052
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -85,  -97],\\n        [  77, -100],\\n        [ -92,   64],\\n        [  10,  -34],\\n        [  37,   93],\\n        [  23,   43],\\n        [   4,   23],\\n        [  63,   56],\\n        [ -47,   52],\\n        [  20,  -63],\\n        [  78,   29],\\n        [  70,   59],\\n        [  42,  -13],\\n        [ -35,   73],\\n        [ -50,   10],\\n        [ -19,   99],\\n        [ -34,   88],\\n        [ -48,  -83],\\n        [ -60,   90],\\n        [ -40,  -67],\\n        [  41,   68],\\n        [   2,   -7],\\n        [  34,  -65],\\n        [ -25,  -42],\\n        [ -74,   48],\\n        [  -2,   33],\\n        [ -49,  -92],\\n        [ -12,  -98],\\n        [ 100,   77],\\n        [  58,  -35],\\n        [  86,   82],\\n        [ -72,  -93],\\n        [ -11,  -45],\\n        [  -6,  -69],\\n        [ -33,  -77],\\n        [  71,   47],\\n        [ -66,  -46],\\n        [  59,   97],\\n        [ -53,  -67],\\n        [  33,  -99],\\n        [  75,   -1],\\n        [ -21,   37],\\n        [  37,   70],\\n        [  41,  -32],\\n        [  -3,  -95],\\n        [  83,   -2],\\n        [  20,  -42]]))",
    0.00262
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.0021
  ]
}