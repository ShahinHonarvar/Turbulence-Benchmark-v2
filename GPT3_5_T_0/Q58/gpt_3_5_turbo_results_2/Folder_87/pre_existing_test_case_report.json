{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00039
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-54,  46],\\n        [ 39, -50],\\n        [-87,  96],\\n        [-78,  86],\\n        [-89,  42],\\n        [ 78, -43],\\n        [-73, -70],\\n        [ 52, -32],\\n        [-20,  73],\\n        [ 37, -53],\\n        [-71, -74],\\n        [-84,  87],\\n        [  7,  72],\\n        [ -6,  27],\\n        [ 50, -50],\\n        [ 49,  62],\\n        [-21, -66],\\n        [ 16, -33],\\n        [-75, -92],\\n        [-83,  43],\\n        [ 18, -49],\\n        [-87,  58],\\n        [-13,  46],\\n        [-32, -36],\\n        [ 28,  59],\\n        [-52, -37],\\n        [-11, -25],\\n        [-24,  20],\\n        [ 25, -68],\\n        [-30, -41],\\n        [-22, -41],\\n        [ 83,  59],\\n        [ 63,  43],\\n        [ 72,  89],\\n        [-32,  51],\\n        [ 86, -27],\\n        [ 19, -20],\\n        [ 92,  77],\\n        [ 36,   8],\\n        [ 49,  77],\\n        [-78, -65],\\n        [ -5,  85],\\n        [ 34,  59],\\n        [-62, -47],\\n        [ 14, -36],\\n        [ 36,  34],\\n        [ 97, -68],\\n        [ 51, -53]]))",
    0.00085
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00057
  ]
}