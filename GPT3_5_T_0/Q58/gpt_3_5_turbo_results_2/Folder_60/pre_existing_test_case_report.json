{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00032
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  -1],\\n        [ 19, -67],\\n        [ 10, -24],\\n        [-43, -74],\\n        [ 34, -52],\\n        [ 63, -52],\\n        [-92, -34],\\n        [ 36, -92],\\n        [ 58, -74],\\n        [-77,  94],\\n        [-33, -16],\\n        [ -6,   0],\\n        [ 43,  66],\\n        [-88, -97],\\n        [ 19,  77],\\n        [-97, -38],\\n        [-45,  90],\\n        [-85,  66],\\n        [ 63, -41],\\n        [ 87,  87],\\n        [ 44, -37],\\n        [-19, -44],\\n        [-17,  71],\\n        [ 54,  66],\\n        [ 93, -80],\\n        [ 44,  56],\\n        [ 74, -10],\\n        [ -8, -78],\\n        [-84, -78],\\n        [ 31,  22],\\n        [ 78, -86],\\n        [-96, -74],\\n        [ 10, -57],\\n        [-79,  67],\\n        [ 76,  39],\\n        [-27,   0],\\n        [  1,  42],\\n        [ 31,  68],\\n        [ 19, -48],\\n        [-91,  94],\\n        [-59,  89],\\n        [ 64, -16],\\n        [-86,  27],\\n        [-60,  51]]))",
    0.00093
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00063
  ]
}