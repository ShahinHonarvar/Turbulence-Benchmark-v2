{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[147]]))",
    0.00047
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00056
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   1,  -97,   12,   44,   73,  -43,   97,   28,  -55,   19,\\n           27,   33,   92,  -56,  -70,   11,   73,   50,   28,  -26,\\n           52,  -58,   16,   33,   86,   -7,   81,   53,   74,   61,\\n          -61,  -91,   41,   83,   34,   -9,  -58,  -78,   54,  -53,\\n          -16,   99,   88,   53,  -89,  -74,   49,   91,   22,  -39,\\n          -85,  -15,   89,  -98,  -65,  -25,  -11,   31,  -31,   36,\\n           42,  -83,  -78,   58,  -11,   43,  -65,   30,  -57,  -15,\\n          -79,  -81,   59,  -62,   36,   53,    0,   38,   19,  -63,\\n           89, -100,  -61,   22,   78,  -74,   83,  -42,   32,  -69,\\n          -48,   46,  100,   68,  -28,  -89,    6,  -31,  -79,  -55,\\n           91,   20,  -58,   63,   34,  -15,  -70,  -92,  -54,   51,\\n           45,   64,  -38,   35, -100,  -28,   15,  -23,  -29,   74,\\n          -93,    3,   19,   46,   35,   -2,   46,   -3,   40,  -94,\\n          -21,   10,   32,   25,   83,  -65,   85,   28,   63,   65,\\n           35,  -55,  -52,  -82,  -17,   81,   16]]))",
    0.00107
  ]
}