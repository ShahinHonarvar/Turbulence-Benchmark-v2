{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00038
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,   36],\\n        [-100,  -77],\\n        [ -60,  -16],\\n        [ -45,  -82],\\n        [  93,  -96],\\n        [  64,   11],\\n        [ -53,  -68],\\n        [ -23,  -24],\\n        [  73,   62],\\n        [ -18,   29],\\n        [   9,  -72],\\n        [  71,  -98],\\n        [  65,   39],\\n        [  88,  -21],\\n        [ -88,   57],\\n        [ -51,  -38],\\n        [  90,  -65],\\n        [ -42,  -78],\\n        [  34,    2],\\n        [   1,   43],\\n        [   2,  -85],\\n        [  63,   50],\\n        [ -85,  -45],\\n        [  57,   11],\\n        [ -51,    6],\\n        [ -59,  -70],\\n        [ -15,  -20],\\n        [   5,    3],\\n        [ -85,   48],\\n        [  84,  -81],\\n        [ -22,  -51],\\n        [   6,  -19],\\n        [  16,  -67],\\n        [  98,  -51],\\n        [ -46,  100],\\n        [ -74,   16],\\n        [ -74,  -75],\\n        [  73,   87],\\n        [  78,  -16],\\n        [ -77,  -83],\\n        [  45,  -85],\\n        [ -25,   42],\\n        [ -13,    0],\\n        [ -55,  -41],\\n        [  83,  -27],\\n        [  64,   23],\\n        [ -72,   83],\\n        [  51,  -27]]))",
    0.0006
  ]
}