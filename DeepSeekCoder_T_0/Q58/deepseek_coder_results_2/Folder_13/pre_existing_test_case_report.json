{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00039
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -33,   27,  -45,   84,   32,   59,  -12,  -64,   -5,   98,\\n           61,  -82,  -12,   31,   84,   60,  -35,   63,  -65,   -3,\\n           74,  -73,  -62,   15,  -79,   36,   95,  -88,  -38, -100,\\n           -5,   91,   40,   -5,  -79,  -10,    6,    8,   49,   31,\\n          -49,   56,  -13,  -97,  -26,   95,   47,   77,   30,  -49,\\n           24,   82,   -5,   -5,   70,  -62,   36,   49,   83,   19,\\n            0,   76,  -37,   38,   15,   79,    3,   91,   25,  -97,\\n          -26,  -46,  -53,  -53,  -44,   -8,   60,   50,   -9,  -84,\\n           55,  -20,   49,  -39,  -76,   95,   -4,   21,   32,  -40,\\n           82,  -98,    7,    0,   64,   -3,  -55,  -20,  -56,    9,\\n          -59,  -32,  -62,  -94,   76,   97,  -15,   -5,   48,   78,\\n          -71,  -10,   90,  -79,  -14,    0,   38,  -57,  -47,  -51,\\n          -47,   96,  -61,  -23,  -23,    2,  -66,    6,    4,  -35,\\n          -53,  -32,  -74,   69,  -16,   15,    4,  -61,   50,   42,\\n            8, -100,   51,  -42,  -68,  -56,  -95,   83,  -88,   84,\\n          -83,   22,   41,   56,   97,   41,  -70,  -14,  -47,  -38,\\n           41,  -99,  -63,  -18,  -86,  -51, -100,   38,  -50,   51,\\n          -36,  -30,   93,   21,   -3]]))",
    0.00067
  ]
}