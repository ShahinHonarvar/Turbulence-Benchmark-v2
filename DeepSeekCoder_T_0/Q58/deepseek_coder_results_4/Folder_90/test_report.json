{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011283066123723984, "start": 1738523177.7530248, "stop": 1738523177.753138, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "504468d033e5427f90f3ce84d2f6bd4f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013849418610334396, "start": 1738523177.7532928, "stop": 1738523177.7534316, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "504468d033e5427f90f3ce84d2f6bd4f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.879656136035919e-05, "start": 1738523177.757763, "stop": 1738523177.757862, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "504468d033e5427f90f3ce84d2f6bd4f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.168591350317001e-05, "start": 1738523177.7591348, "stop": 1738523177.7592268, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "504468d033e5427f90f3ce84d2f6bd4f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/DeepSeekCoder_T_0/Q58/deepseek_coder_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  66],\\n        [-83,  43],\\n        [ 35,  50],\\n        [-25, -13],\\n        [100, -42],\\n        [-87,  22],\\n        [ 22, -21],\\n        [-29, -71],\\n        [ 86,  87],\\n        [ 15, -89],\\n        [-95,  32],\\n        [ -6,  -4],\\n        [ -4, -18],\\n        [ 20, -25],\\n        [ 23,   7],\\n        [  4,  51],\\n        [ 75, -85],\\n        [  7,  41],\\n        [ 55,  -7],\\n        [ 76,  73],\\n        [-41,  46],\\n        [ 13, 100],\\n        [ 66, -70],\\n        [-69,  40],\\n        [ 33,  67],\\n        [ -3,  59],\\n        [ 52,  34],\\n        [ -3, -59],\\n        [ 43,  91],\\n        [-22,  43],\\n        [ 22,  10],\\n        [ 18,  19],\\n        [100,  80],\\n        [ 14,  69],\\n        [ 65,  60],\\n        [-99,  64],\\n        [ 23,   0],\\n        [ 87,  -1],\\n        [-80,  39],\\n        [-63,  49],\\n        [ 34, -71],\\n        [-86, -29],\\n        [ 59,  -7],\\n        [-99,  92],\\n        [  8,  88],\\n        [ 51,  13],\\n        [ 49, -24],\\n        [-35, -83],\\n        [ 34,  94],\\n        [ 80,  66],\\n        [-75,  41],\\n        [  7,  62],\\n        [ 70,  13],\\n        [ 32, -31],\\n        [ 22, -80],\\n        [-12,  62],\\n        [-17,  45],\\n        [ -4, -69],\\n        [-10,  12],\\n        [ 94, -32],\\n        [-85,  -4],\\n        [-87,  48],\\n        [-46,  53],\\n        [-54,  98],\\n        [ 35,  50],\\n        [ 18, -58],\\n        [ 28,  49],\\n        [ 47,   1],\\n        [ 43,  83],\\n        [ 93, -72],\\n        [-56, -63],\\n        [-52,  46],\\n        [ 46,  22],\\n        [-59,  94],\\n        [-56,   8],\\n        [-74, -23],\\n        [-53,  76],\\n        [ 58, -42],\\n        [ 52,  53],\\n        [-11,  73],\\n        [ 50,  99],\\n        [ 41, -91],\\n        [ 13,  96],\\n        [-54,  70],\\n        [  7,   2],\\n        [ 35, -55],\\n        [ 45,   8],\\n        [-30, -99]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  66],\\n        [-83,  43],\\n        [ 35,  50],\\n        [-25, -13],\\n        [100, -42],\\n        [-87,  22],\\n        [ 22, -21],\\n        [-29, -71],\\n        [ 86,  87],\\n        [ 15, -89],\\n        [-95,  32],\\n        [ -6,  -4],\\n        [ -4, -18],\\n        [ 20, -25],\\n        [ 23,   7],\\n        [  4,  51],\\n        [ 75, -85],\\n        [  7,  41],\\n        [ 55,  -7],\\n        [ 76,  73],\\n        [-41,  46],\\n        [ 13, 100],\\n        [ 66, -70],\\n        [-69,  40],\\n        [ 33,  67],\\n        [ -3,  59],\\n        [ 52,  34],\\n        [ -3, -59],\\n        [ 43,  91],\\n        [-22,  43],\\n        [ 22,  10],\\n        [ 18,  19],\\n        [100,  80],\\n        [ 14,  69],\\n        [ 65,  60],\\n        [-99,  64],\\n        [ 23,   0],\\n        [ 87,  -1],\\n        [-80,  39],\\n        [-63,  49],\\n        [ 34, -71],\\n        [-86, -29],\\n        [ 59,  -7],\\n        [-99,  92],\\n        [  8,  88],\\n        [ 51,  13],\\n        [ 49, -24],\\n        [-35, -83],\\n        [ 34,  94],\\n        [ 80,  66],\\n        [-75,  41],\\n        [  7,  62],\\n        [ 70,  13],\\n        [ 32, -31],\\n        [ 22, -80],\\n        [-12,  62],\\n        [-17,  45],\\n        [ -4, -69],\\n        [-10,  12],\\n        [ 94, -32],\\n        [-85,  -4],\\n        [-87,  48],\\n        [-46,  53],\\n        [-54,  98],\\n        [ 35,  50],\\n        [ 18, -58],\\n        [ 28,  49],\\n        [ 47,   1],\\n        [ 43,  83],\\n        [ 93, -72],\\n        [-56, -63],\\n        [-52,  46],\\n        [ 46,  22],\\n        [-59,  94],\\n        [-56,   8],\\n        [-74, -23],\\n        [-53,  76],\\n        [ 58, -42],\\n        [ 52,  53],\\n        [-11,  73],\\n        [ 50,  99],\\n        [ 41, -91],\\n        [ 13,  96],\\n        [-54,  70],\\n        [  7,   2],\\n        [ 35, -55],\\n        [ 45,   8],\\n        [-30, -99]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/deepseek_coder_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  66],\\n        [-83,  43],\\n        [ 35,  50],\\n        [-25, -13],\\n        [100, -42],\\n        [-87,  22],\\n        [ 22, -21],\\n        [-29, -71],\\n        [ 86,  87],\\n        [ 15, -89],\\n        [-95,  32],\\n        [ -6,  -4],\\n        [ -4, -18],\\n        [ 20, -25],\\n        [ 23,   7],\\n        [  4,  51],\\n        [ 75, -85],\\n        [  7,  41],\\n        [ 55,  -7],\\n        [ 76,  73],\\n        [-41,  46],\\n        [ 13, 100],\\n        [ 66, -70],\\n        [-69,  40],\\n        [ 33,  67],\\n        [ -3,  59],\\n        [ 52,  34],\\n        [ -3, -59],\\n        [ 43,  91],\\n        [-22,  43],\\n        [ 22,  10],\\n        [ 18,  19],\\n        [100,  80],\\n        [ 14,  69],\\n        [ 65,  60],\\n        [-99,  64],\\n        [ 23,   0],\\n        [ 87,  -1],\\n        [-80,  39],\\n        [-63,  49],\\n        [ 34, -71],\\n        [-86, -29],\\n        [ 59,  -7],\\n        [-99,  92],\\n        [  8,  88],\\n        [ 51,  13],\\n        [ 49, -24],\\n        [-35, -83],\\n        [ 34,  94],\\n        [ 80,  66],\\n        [-75,  41],\\n        [  7,  62],\\n        [ 70,  13],\\n        [ 32, -31],\\n        [ 22, -80],\\n        [-12,  62],\\n        [-17,  45],\\n        [ -4, -69],\\n        [-10,  12],\\n        [ 94, -32],\\n        [-85,  -4],\\n        [-87,  48],\\n        [-46,  53],\\n        [-54,  98],\\n        [ 35,  50],\\n        [ 18, -58],\\n        [ 28,  49],\\n        [ 47,   1],\\n        [ 43,  83],\\n        [ 93, -72],\\n        [-56, -63],\\n        [-52,  46],\\n        [ 46,  22],\\n        [-59,  94],\\n        [-56,   8],\\n        [-74, -23],\\n        [-53,  76],\\n        [ 58, -42],\\n        [ 52,  53],\\n        [-11,  73],\\n        [ 50,  99],\\n        [ 41, -91],\\n        [ 13,  96],\\n        [-54,  70],\\n        [  7,   2],\\n        [ 35, -55],\\n        [ 45,   8],\\n        [-30, -99]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/deepseek_coder_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/DeepSeekCoder_T_0/Q58/deepseek_coder_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 59,  66],\\n        [-83,  43],\\n        [ 35,  50],\\n        [-25, -13],\\n        [100, -42],\\n        [-87,  22],\\n        [ 22, -21],\\n        [-29, -71],\\n        [ 86,  87],\\n        [ 15, -89],\\n        [-95,  32],\\n        [ -6,  -4],\\n        [ -4, -18],\\n        [ 20, -25],\\n        [ 23,   7],\\n        [  4,  51],\\n        [ 75, -85],\\n        [  7,  41],\\n        [ 55,  -7],\\n        [ 76,  73],\\n        [-41,  46],\\n        [ 13, 100],\\n        [ 66, -70],\\n        [-69,  40],\\n        [ 33,  67],\\n        [ -3,  59],\\n        [ 52,  34],\\n        [ -3, -59],\\n        [ 43,  91],\\n        [-22,  43],\\n        [ 22,  10],\\n        [ 18,  19],\\n        [100,  80],\\n        [ 14,  69],\\n        [ 65,  60],\\n        [-99,  64],\\n        [ 23,   0],\\n        [ 87,  -1],\\n        [-80,  39],\\n        [-63,  49],\\n        [ 34, -71],\\n        [-86, -29],\\n        [ 59,  -7],\\n        [-99,  92],\\n        [  8,  88],\\n        [ 51,  13],\\n        [ 49, -24],\\n        [-35, -83],\\n        [ 34,  94],\\n        [ 80,  66],\\n        [-75,  41],\\n        [  7,  62],\\n        [ 70,  13],\\n        [ 32, -31],\\n        [ 22, -80],\\n        [-12,  62],\\n        [-17,  45],\\n        [ -4, -69],\\n        [-10,  12],\\n        [ 94, -32],\\n        [-85,  -4],\\n        [-87,  48],\\n        [-46,  53],\\n        [-54,  98],\\n        [ 35,  50],\\n        [ 18, -58],\\n        [ 28,  49],\\n        [ 47,   1],\\n        [ 43,  83],\\n        [ 93, -72],\\n        [-56, -63],\\n        [-52,  46],\\n        [ 46,  22],\\n        [-59,  94],\\n        [-56,   8],\\n        [-74, -23],\\n        [-53,  76],\\n        [ 58, -42],\\n        [ 52,  53],\\n        [-11,  73],\\n        [ 50,  99],\\n        [ 41, -91],\\n        [ 13,  96],\\n        [-54,  70],\\n        [  7,   2],\\n        [ 35, -55],\\n        [ 45,   8],\\n        [-30, -99]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00083150714635849, "start": 1738523177.7626395, "stop": 1738523177.7634718, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "504468d033e5427f90f3ce84d2f6bd4f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012875162065029144, "start": 1738523177.7952106, "stop": 1738523177.79534, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "504468d033e5427f90f3ce84d2f6bd4f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
