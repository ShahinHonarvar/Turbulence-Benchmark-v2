{
  "parameter(s)": [
    48
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00021
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00018
  ],
  "test_length_less_than_48": [
    "passed",
    "",
    0.00038
  ],
  "test_length_equal_to_48": [
    "passed",
    "",
    0.0006
  ],
  "test_string_of_identical_punctuations": [
    "passed",
    "",
    0.00067
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00142
  ],
  "test_string_of_numbers_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'} = palindrome_of_length_n('a1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1a')",
    0.00025
  ]
}