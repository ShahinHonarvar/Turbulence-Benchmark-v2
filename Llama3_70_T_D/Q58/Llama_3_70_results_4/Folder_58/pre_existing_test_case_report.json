{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 42, -13,  12,  57,  39,  36,  30, -72,  76,  38,  64,  28,  69,\\n          -6, -28,  58,  74,  -1,  -6,  98,  37,  60,  74,  10, -62, -14,\\n          36,  15, -12,  16, -24,  25, -74,  88, -31, -30, -29, -79, -70,\\n           2,   5,  82,  -7, -52, -76,  53,  -1,  93, -10,  89, -67,  56,\\n          37, -32,  87, -78, -70,  19,  -2,  54,  16,  84, -13,  78, -73,\\n         -61,  96, -39,  43, -87,  71,  88,  20,  20, -84,  67, -54,  14,\\n         -36, -73, -94,  32,  36,  97,  12,  35,  51, -11, -24,  56,  81,\\n          38,  54, -57,  51, -22, -76,  67, -19, -44, -94,  37,  -6,  76,\\n          42,  -7, -87,  69,   9,   8, -91, -18, -49, -60,  88,  69, -47,\\n         -32,  -1,  -1, 100, -59,  88, -53,  24,  88,  55,  30,  84, -35,\\n         -31,  32, -46, -54, -97,  21, -68, -26,  84,  65,  12,  71,  74,\\n         -58, -56, -70, 100,  87, -66, -53, -54,  33,  49,  34, -43, -67,\\n          32,  14,  45,  57,   2,  41, -17, -39, -70, -83, -98,  57,  55,\\n           1,  21,  -8,  32,  24,  96, -91, -37, -22,  82,  69, -90, -32,\\n         -13, -67,   7]]))",
    0.00095
  ]
}