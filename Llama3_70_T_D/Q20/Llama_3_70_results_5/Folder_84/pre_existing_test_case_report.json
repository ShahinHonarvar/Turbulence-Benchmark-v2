{
  "parameter(s)": [
    7,
    61,
    88
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00018
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.00018
  ],
  "test_float_numbers": [
    "failed",
    "assert 8.18535277187245 == 8.246211251235321\n +  where 8.18535277187245 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00035
  ],
  "test_reversed_range": [
    "failed",
    "assert -34 == -33\n +  where -34 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.0003
  ],
  "test_large_range": [
    "failed",
    "assert 66 == 67\n +  where 66 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00375
  ]
}