{
  "parameter(s)": [
    27,
    34
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00015
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.0001
  ],
  "test_even_range": [
    "failed",
    "assert [56, 58, 60, 62, 64, 66, ...] == [58, 60, 62, 64, 66, 68]\n  At index 0 diff: 56 != 58\n  Left contains 2 more items, first extra item: 68\n  Full diff:\n  - [58, 60, 62, 64, 66, 68]\n  + [56, 58, 60, 62, 64, 66, 68, 70]\n  ?  ++++                      ++++",
    0.00755
  ],
  "test_large_range": [
    "failed",
    "assert [28, 29, 30, 31, 32, 33, ...] == [29, 30, 31, 32, 33, 34]\n  At index 0 diff: 28 != 29\n  Left contains 2 more items, first extra item: 34\n  Full diff:\n  - [29, 30, 31, 32, 33, 34]\n  + [28, 29, 30, 31, 32, 33, 34, 35]\n  ?  ++++                      ++++",
    0.00055
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 8 == ((34 - 27) - 1)\n +  where 8 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00034
  ]
}