{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_38_3.py::test_compare_length_of_strings", "location": ["tests32_38_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011424603872001171, "start": 1730950517.2228336, "stop": 1730950517.2229483, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_string_of_length_one", "location": ["tests32_38_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012881506700068712, "start": 1730950517.222866, "stop": 1730950517.2229955, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_38_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_38_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012735207565128803, "start": 1730950517.222943, "stop": 1730950517.2230706, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_38_3.py::test_compare_length_of_strings", "location": ["tests32_38_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012587103992700577, "start": 1730950517.2231247, "stop": 1730950517.2232509, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_compare_length_of_strings", "location": ["tests32_38_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.271398160606623e-05, "start": 1730950517.2234797, "stop": 1730950517.223543, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_length_of_result", "location": ["tests32_38_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.761498611420393e-05, "start": 1730950517.225608, "stop": 1730950517.225696, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_length_of_result", "location": ["tests32_38_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010160601232200861, "start": 1730950517.2257771, "stop": 1730950517.225879, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_length_of_result", "location": ["tests32_38_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.301693454384804e-05, "start": 1730950517.2260652, "stop": 1730950517.2261183, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_first_index_of_insert_char_in_result", "location": ["tests32_38_3.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.127101369202137e-05, "start": 1730950517.2271087, "stop": 1730950517.22717, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_string_of_length_one", "location": ["tests32_38_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 8, "message": "AssertionError: assert '66' == 'X6'\n  - X6\n  + 66"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'X'", ">       assert insert_after_character(s) == 'X' + '6'", "E       AssertionError: assert '66' == 'X6'", "E         - X6", "E         + 66"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'X'", ">       assert insert_after_character(s) == 'X' + '6'", "E       AssertionError: assert '66' == 'X6'", "E         - X6", "E         + 66"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 8, "message": "AssertionError: assert '66' == 'X6'\n  - X6\n  + 66"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002423180267214775, "start": 1730950517.2231767, "stop": 1730950517.2234194, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_38_3.py::test_string_of_length_one", "location": ["tests32_38_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001390600809827447, "start": 1730950517.2323556, "stop": 1730950517.2324953, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_38_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_38_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 18, "message": "AssertionError: assert 1001 == (2 * 1000)\n +  where 1001 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'X' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1001 == (2 * 1000)", "E        +  where 1001 = lenwhereinsert_after_character('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')", "E        +  and   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'X' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1001 == (2 * 1000)", "E        +  where 1001 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 18, "message": "AssertionError: assert 1001 == (2 * 1000)\n +  where 1001 = len('66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666')\n +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002490319311618805, "start": 1730950517.2232554, "stop": 1730950517.2235045, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_38_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_38_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016531895380467176, "start": 1730950517.2327917, "stop": 1730950517.2329576, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_38_3.py::test_first_index_of_insert_char_in_result", "location": ["tests32_38_3.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 53, "message": "AssertionError: assert 0 == 1\n +  where 0 = <built-in method find of str object at 0x761cde1d1eb0>('6')\n +    where <built-in method find of str object at 0x761cde1d1eb0> = '6IxvZL9stlqyKwhM1mGVp'.find"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_first_index_of_insert_char_in_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s.replace('6', '')", "        s = s.replace('X', '')", "        s = 'X' + s", "        returned_string = insert_after_character(s)", "        if '6' == 'X':", "            assert returned_string.find('6') == 0", "            assert returned_string.rfind('6') == 1", "        else:", ">           assert returned_string.find('6') == 1", "E           AssertionError: assert 0 == 1", "E            +  where 0 = <built-in method find of str object at 0x761cde1d1eb0>('6')", "E            +    where <built-in method find of str object at 0x761cde1d1eb0> = '6IxvZL9stlqyKwhM1mGVp'.find"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_first_index_of_insert_char_in_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s.replace('6', '')", "        s = s.replace('X', '')", "        s = 'X' + s", "        returned_string = insert_after_character(s)", "        if '6' == 'X':", "            assert returned_string.find('6') == 0", "            assert returned_string.rfind('6') == 1", "        else:", ">           assert returned_string.find('6') == 1", "E           AssertionError: assert 0 == 1", "E            +  where 0 = <built-in method find of str object at 0x761cde1d1eb0>('6')", "E            +    where <built-in method find of str object at 0x761cde1d1eb0> = '6IxvZL9stlqyKwhM1mGVp'.find"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_38/tests32_38_3.py", "lineno": 53, "message": "AssertionError: assert 0 == 1\n +  where 0 = <built-in method find of str object at 0x761cde1d1eb0>('6')\n +    where <built-in method find of str object at 0x761cde1d1eb0> = '6IxvZL9stlqyKwhM1mGVp'.find"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019024405628442764, "start": 1730950517.2272341, "stop": 1730950517.2274246, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_3.py::test_first_index_of_insert_char_in_result", "location": ["tests32_38_3.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests32_38_3.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001009330153465271, "start": 1730950517.236153, "stop": 1730950517.2362542, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "0261abc7d3ec4f759dc95a955892853a", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
