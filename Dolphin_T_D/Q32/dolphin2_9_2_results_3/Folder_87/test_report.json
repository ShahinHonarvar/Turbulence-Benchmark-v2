{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_87_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_87_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013191904872655869, "start": 1730950836.9698012, "stop": 1730950836.9699337, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_87_3.py::test_string_of_length_one", "location": ["tests32_87_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001403869828209281, "start": 1730950836.9697657, "stop": 1730950836.9699063, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_87_3.py::test_string_of_length_one", "location": ["tests32_87_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010485597886145115, "start": 1730950836.970091, "stop": 1730950836.9701962, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_87_3.py::test_compare_length_of_strings", "location": ["tests32_87_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011419493239372969, "start": 1730950836.9700305, "stop": 1730950836.970145, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_87_3.py::test_string_of_length_one", "location": ["tests32_87_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.878903903067112e-05, "start": 1730950836.9704304, "stop": 1730950836.9704895, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_87_3.py::test_compare_length_of_strings", "location": ["tests32_87_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001098789507523179, "start": 1730950836.9703178, "stop": 1730950836.9704282, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_87_3.py::test_compare_length_of_strings", "location": ["tests32_87_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.171001587063074e-05, "start": 1730950836.9706514, "stop": 1730950836.9707136, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_87_3.py::test_large_string_of_only_specified_character", "location": ["tests32_87_3.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.04920743778348e-05, "start": 1730950836.9731097, "stop": 1730950836.9732006, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_87_3.py::test_length_of_result", "location": ["tests32_87_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.47930384427309e-05, "start": 1730950836.973809, "stop": 1730950836.973904, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_87_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_87_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = len('mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN')\n +    where 'mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN' = insert_after_character('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')\n +  and   1000 = len('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'm' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = len('mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN')", "E        +    where 'mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN' = insert_after_character('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')", "E        +  and   1000 = len('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'm' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = len('mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN')", "E        +    where 'mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN' = insert_after_character('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')", "E        +  and   1000 = len('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = len('mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN')\n +    where 'mNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNN...NNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmNNmN' = insert_after_character('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')\n +  and   1000 = len('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032241398002952337, "start": 1730950836.9701314, "stop": 1730950836.9704542, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_87_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_87_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011346896644681692, "start": 1730950836.979371, "stop": 1730950836.9794853, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_87_3.py::test_large_string_of_only_specified_character", "location": ["tests32_87_3.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 13, "message": "AssertionError: assert 'mNNmNNmNNmNN...NNmNNmNNmNNmN' == 'mNmNmNmNmNmN...NmNmNmNmNmNmN'\n  - mNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmN...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = 'm' * 1000", ">       assert insert_after_character(s) == ('m' + 'N') * 1000", "E       AssertionError: assert 'mNNmNNmNNmNN...NNmNNmNNmNNmN' == 'mNmNmNmNmNmN...NmNmNmNmNmNmN'", "E         - mNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmN...", "E         ", "E         ...Full output truncated (2 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = 'm' * 1000", ">       assert insert_after_character(s) == ('m' + 'N') * 1000", "E       AssertionError: assert 'mNNmNNmNNmNN...NNmNNmNNmNNmN' == 'mNmNmNmNmNmN...NmNmNmNmNmNmN'", "E         - mNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmN...", "E         ", "E         ...Full output truncated (2 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 13, "message": "AssertionError: assert 'mNNmNNmNNmNN...NNmNNmNNmNNmN' == 'mNmNmNmNmNmN...NmNmNmNmNmNmN'\n  - mNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmNmN...\n  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009220610372722149, "start": 1730950836.9732828, "stop": 1730950836.974205, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_87_3.py::test_large_string_of_only_specified_character", "location": ["tests32_87_3.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010451499838382006, "start": 1730950836.9833062, "stop": 1730950836.9834116, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_87_3.py::test_length_of_result", "location": ["tests32_87_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 40, "message": "AssertionError: assert 43 == (21 + 2)\n +  where 43 = len('kNMNpNGNnNqNtNYN8NDNENBNTNKNxNwNaN6NmNN7NmN')\n +  and   21 = len('kMpGnqtY8DEBTKxwa6m7m')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + 'm'", "        returned_string = insert_after_character(s)", "        count = s.count('m')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 43 == (21 + 2)", "E        +  where 43 = len('kNMNpNGNnNqNtNYN8NDNENBNTNKNxNwNaN6NmNN7NmN')", "E        +  and   21 = len('kMpGnqtY8DEBTKxwa6m7m')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + 'm'", "        returned_string = insert_after_character(s)", "        count = s.count('m')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 43 == (21 + 2)", "E        +  where 43 = len('kNMNpNGNnNqNtNYN8NDNENBNTNKNxNwNaN6NmNN7NmN')", "E        +  and   21 = len('kMpGnqtY8DEBTKxwa6m7m')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_87/tests32_87_3.py", "lineno": 40, "message": "AssertionError: assert 43 == (21 + 2)\n +  where 43 = len('kNMNpNGNnNqNtNYN8NDNENBNTNKNxNwNaN6NmNN7NmN')\n +  and   21 = len('kMpGnqtY8DEBTKxwa6m7m')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022849394008517265, "start": 1730950836.973987, "stop": 1730950836.974216, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_87_3.py::test_length_of_result", "location": ["tests32_87_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_87_3.py": 1, "Folder_87": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.988900274038315e-05, "start": 1730950836.9835436, "stop": 1730950836.983644, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "9d3d328aee104a789c169c11e0c9c1e1", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
