{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_14_3.py::test_compare_length_of_strings", "location": ["tests32_14_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.432598017156124e-05, "start": 1730950429.9259872, "stop": 1730950429.9260821, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012118206359446049, "start": 1730950429.9260893, "stop": 1730950429.9262106, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_3.py::test_compare_length_of_strings", "location": ["tests32_14_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010016805026680231, "start": 1730950429.9262433, "stop": 1730950429.9263437, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_3.py::test_compare_length_of_strings", "location": ["tests32_14_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.494698416441679e-05, "start": 1730950429.9265487, "stop": 1730950429.926604, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_3.py::test_string_of_length_one", "location": ["tests32_14_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018301396630704403, "start": 1730950429.9262598, "stop": 1730950429.9264433, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_3.py::test_string_of_length_one", "location": ["tests32_14_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015522108878940344, "start": 1730950429.926716, "stop": 1730950429.926872, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_3.py::test_string_of_length_one", "location": ["tests32_14_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010671792551875114, "start": 1730950429.9272385, "stop": 1730950429.9273458, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_3.py::test_length_of_result", "location": ["tests32_14_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.540697697550058e-05, "start": 1730950429.928768, "stop": 1730950429.9288437, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_3.py::test_large_string_of_only_specified_character", "location": ["tests32_14_3.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013175304047763348, "start": 1730950429.9296386, "stop": 1730950429.929771, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = lenn +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003114680293947458, "start": 1730950429.9263918, "stop": 1730950429.9267037, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010244105942547321, "start": 1730950429.935116, "stop": 1730950429.9352193, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_3.py::test_length_of_result", "location": ["tests32_14_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 40, "message": "AssertionError: assert 42 == (21 + 1)\n +  where 42 = len('L O d 5 m r C D 6 b h f e n 1 V 4 a o A   ')\n +  and   21 = len('LOd5mrCD6bhfen1V4aoA ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 42 == (21 + 1)", "E        +  where 42 = len('L O d 5 m r C D 6 b h f e n 1 V 4 a o A   ')", "E        +  and   21 = len('LOd5mrCD6bhfen1V4aoA ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 42 == (21 + 1)", "E        +  where 42 = len('L O d 5 m r C D 6 b h f e n 1 V 4 a o A   ')", "E        +  and   21 = len('LOd5mrCD6bhfen1V4aoA ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 40, "message": "AssertionError: assert 42 == (21 + 1)\n +  where 42 = len('L O d 5 m r C D 6 b h f e n 1 V 4 a o A   ')\n +  and   21 = len('LOd5mrCD6bhfen1V4aoA ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001997819636017084, "start": 1730950429.9289238, "stop": 1730950429.9291239, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_3.py::test_length_of_result", "location": ["tests32_14_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001504069659858942, "start": 1730950429.9374375, "stop": 1730950429.937588, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_3.py::test_large_string_of_only_specified_character", "location": ["tests32_14_3.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 13, "message": "AssertionError: assert '            ...             ' == '            ...             '\n  Strings contain only whitespace, escaping them using repr()\nn  \n  ...Full output truncated (3 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_after_character(s) == (' ' + ' ') * 1000", "E       AssertionError: assert '            ...             ' == '            ...             '", "E         Strings contain only whitespace, escaping them using reprull output truncated (3 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_after_character(s) == (' ' + ' ') * 1000", "E       AssertionError: assert '            ...             ' == '            ...             '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ...", "E         ", "E         ...Full output truncated (3 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_3/Folder_14/tests32_14_3.py", "lineno": 13, "message": "AssertionError: assert '            ...             ' == '            ...             '\n  Strings contain only whitespace, escaping them using repr()\nn  \n  ...Full output truncated (3 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001993836951442063, "start": 1730950429.9299128, "stop": 1730950429.9319074, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_3.py::test_large_string_of_only_specified_character", "location": ["tests32_14_3.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_14_3.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010504398960620165, "start": 1730950429.9472048, "stop": 1730950429.9473107, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b89c7ee1145941d5b0a8abf3bf5ba1dd", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
