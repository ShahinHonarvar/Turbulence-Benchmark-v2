{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_14_1.py::test_compare_length_of_strings", "location": ["tests32_14_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.460397996008396e-05, "start": 1730949377.2370462, "stop": 1730949377.2371411, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_1.py::test_string_of_length_one", "location": ["tests32_14_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012560689356178045, "start": 1730949377.2371492, "stop": 1730949377.2372751, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_1.py::test_compare_length_of_strings", "location": ["tests32_14_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010311603546142578, "start": 1730949377.2373004, "stop": 1730949377.2374039, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_1.py::test_compare_length_of_strings", "location": ["tests32_14_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.7375989854335785e-05, "start": 1730949377.237618, "stop": 1730949377.2376757, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001808609813451767, "start": 1730949377.2374213, "stop": 1730949377.2376027, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_1.py::test_length_of_result", "location": ["tests32_14_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.231002043932676e-05, "start": 1730949377.2388315, "stop": 1730949377.2388942, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_1.py::test_string_of_length_one", "location": ["tests32_14_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 8, "message": "AssertionError: assert ' ' == '  '\n  Strings contain only whitespace, escaping them using repr()\n  - '  '\n  ?   -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + ' '", "E       AssertionError: assert ' ' == '  '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '  '", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + ' '", "E       AssertionError: assert ' ' == '  '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '  '", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 8, "message": "AssertionError: assert ' ' == '  '\n  Strings contain only whitespace, escaping them using repr()\n  - '  '\n  ?   -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002742930082604289, "start": 1730949377.237458, "stop": 1730949377.2377326, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_1.py::test_string_of_length_one", "location": ["tests32_14_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010601500980556011, "start": 1730949377.2463846, "stop": 1730949377.2464914, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_1.py::test_length_of_result", "location": ["tests32_14_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 40, "message": "AssertionError: assert 41 == (21 + 1)\n +  where 41 = len('r A Z H W K L P 2 d y i 4 p g z Q 7 1 O  ')\n +  and   21 = len('rAZHWKLP2dyi4pgzQ71O ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 41 == (21 + 1)", "E        +  where 41 = len('r A Z H W K L P 2 d y i 4 p g z Q 7 1 O  ')", "E        +  and   21 = len('rAZHWKLP2dyi4pgzQ71O ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 41 == (21 + 1)", "E        +  where 41 = len('r A Z H W K L P 2 d y i 4 p g z Q 7 1 O  ')", "E        +  and   21 = len('rAZHWKLP2dyi4pgzQ71O ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 40, "message": "AssertionError: assert 41 == (21 + 1)\n +  where 41 = len('r A Z H W K L P 2 d y i 4 p g z Q 7 1 O  ')\n +  and   21 = len('rAZHWKLP2dyi4pgzQ71O ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018516206182539463, "start": 1730949377.2389643, "stop": 1730949377.2391496, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_1.py::test_length_of_result", "location": ["tests32_14_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.423599112778902e-05, "start": 1730949377.247828, "stop": 1730949377.2479224, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 18, "message": "AssertionError: assert 1999 == (2 * 1000)\n +  where 1999 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1999 == (2 * 1000)", "E        +  where 1999 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1999 == (2 * 1000)", "E        +  where 1999 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_14/tests32_14_1.py", "lineno": 18, "message": "AssertionError: assert 1999 == (2 * 1000)\n +  where 1999 = lenn +    whereinsert_after_character('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')\n +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004072641022503376, "start": 1730949377.23789, "stop": 1730949377.238298, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.80959739536047e-05, "start": 1730949377.2494996, "stop": 1730949377.2495983, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7158b73658c44e399fdcaed11a922795", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
