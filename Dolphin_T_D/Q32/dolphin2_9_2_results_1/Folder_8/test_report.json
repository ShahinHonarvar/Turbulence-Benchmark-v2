{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_8_1.py::test_string_of_length_one", "location": ["tests32_8_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013983901590108871, "start": 1730949340.371938, "stop": 1730949340.3720784, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_8_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_8_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012314494233578444, "start": 1730949340.3720357, "stop": 1730949340.3721592, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_8_1.py::test_compare_length_of_strings", "location": ["tests32_8_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001848780084401369, "start": 1730949340.3720584, "stop": 1730949340.3722436, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_compare_length_of_strings", "location": ["tests32_8_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020227697677910328, "start": 1730949340.3725452, "stop": 1730949340.3727484, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_compare_length_of_strings", "location": ["tests32_8_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012072105892002583, "start": 1730949340.37316, "stop": 1730949340.3732812, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_length_of_result", "location": ["tests32_8_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001607709564268589, "start": 1730949340.37482, "stop": 1730949340.3749816, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_length_of_result", "location": ["tests32_8_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018429302144795656, "start": 1730949340.3751366, "stop": 1730949340.3753214, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_length_of_result", "location": ["tests32_8_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001245469320565462, "start": 1730949340.3756714, "stop": 1730949340.3757966, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_first_index_of_insert_char_in_result", "location": ["tests32_8_1.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000138445058837533, "start": 1730949340.376999, "stop": 1730949340.3771381, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_string_of_length_one", "location": ["tests32_8_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 8, "message": "AssertionError: assert 'TT' == 'ET'\n  - ET\n  + TT"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'E'", ">       assert insert_after_character(s) == 'E' + 'T'", "E       AssertionError: assert 'TT' == 'ET'", "E         - ET", "E         + TT"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'E'", ">       assert insert_after_character(s) == 'E' + 'T'", "E       AssertionError: assert 'TT' == 'ET'", "E         - ET", "E         + TT"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 8, "message": "AssertionError: assert 'TT' == 'ET'\n  - ET\n  + TT"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024322094395756721, "start": 1730949340.3722699, "stop": 1730949340.3725133, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_8_1.py::test_string_of_length_one", "location": ["tests32_8_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010344304610043764, "start": 1730949340.3814905, "stop": 1730949340.3815944, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_8_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_8_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 18, "message": "AssertionError: assert 1001 == (2 * 1000)\n +  where 1001 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'E' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1001 == (2 * 1000)", "E        +  where 1001 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'E' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1001 == (2 * 1000)", "E        +  where 1001 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 18, "message": "AssertionError: assert 1001 == (2 * 1000)\n +  where 1001 = lenn +    whereinsert_after_character('EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE')\n +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00025817693676799536, "start": 1730949340.372354, "stop": 1730949340.3726127, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_8_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_8_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010648602619767189, "start": 1730949340.381488, "stop": 1730949340.3815951, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_8_1.py::test_first_index_of_insert_char_in_result", "location": ["tests32_8_1.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 53, "message": "AssertionError: assert 0 == 1\n +  where 0 = <built-in method find of str object at 0x7d950ec76470>('T')\n +    where <built-in method find of str object at 0x7d950ec76470> = 'TUWxXM8AIJ641DvSrgVFKT'.find"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_first_index_of_insert_char_in_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s.replace('T', '')", "        s = s.replace('E', '')", "        s = 'E' + s", "        returned_string = insert_after_character(s)", "        if 'T' == 'E':", "            assert returned_string.find('T') == 0", "            assert returned_string.rfind('T') == 1", "        else:", ">           assert returned_string.find('T') == 1", "E           AssertionError: assert 0 == 1", "E            +  where 0 = <built-in method find of str object at 0x7d950ec76470>('T')", "E            +    where <built-in method find of str object at 0x7d950ec76470> = 'TUWxXM8AIJ641DvSrgVFKT'.find"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_first_index_of_insert_char_in_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s.replace('T', '')", "        s = s.replace('E', '')", "        s = 'E' + s", "        returned_string = insert_after_character(s)", "        if 'T' == 'E':", "            assert returned_string.find('T') == 0", "            assert returned_string.rfind('T') == 1", "        else:", ">           assert returned_string.find('T') == 1", "E           AssertionError: assert 0 == 1", "E            +  where 0 = <built-in method find of str object at 0x7d950ec76470>('T')", "E            +    where <built-in method find of str object at 0x7d950ec76470> = 'TUWxXM8AIJ641DvSrgVFKT'.find"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q32/dolphin2_9_2_results_1/Folder_8/tests32_8_1.py", "lineno": 53, "message": "AssertionError: assert 0 == 1\n +  where 0 = <built-in method find of str object at 0x7d950ec76470>('T')\n +    where <built-in method find of str object at 0x7d950ec76470> = 'TUWxXM8AIJ641DvSrgVFKT'.find"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00034605502150952816, "start": 1730949340.377278, "stop": 1730949340.3776248, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_8_1.py::test_first_index_of_insert_char_in_result", "location": ["tests32_8_1.py", 42, "test_first_index_of_insert_char_in_result"], "keywords": {"test_first_index_of_insert_char_in_result": 1, "tests32_8_1.py": 1, "Folder_8": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.743100963532925e-05, "start": 1730949340.3864214, "stop": 1730949340.3865192, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "336037f5247e4426b373c50869804cf4", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
