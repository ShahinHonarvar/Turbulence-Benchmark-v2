Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        └── If
            ├── Compare
            │   ├── Call
            │   │   ├── Name
            │   │   │   └── Load
            │   │   └── Call
            │   │       ├── Name
            │   │       │   └── Load
            │   │       └── Name
            │   │           └── Load
            │   ├── NotEq
            │   └── Call
            │       ├── Name
            │       │   └── Load
            │       └── Name
            │           └── Load
            ├── Return
            │   └── List
            │       └── Load
            └── Return
                └── ListComp
                    ├── Subscript
                    │   ├── Name
                    │   │   └── Load
                    │   ├── Slice
                    │   │   ├── Name
                    │   │   │   └── Load
                    │   │   └── BinOp
                    │   │       ├── Name
                    │   │       │   └── Load
                    │   │       ├── Add
                    │   │       └── Constant
                    │   └── Load
                    └── comprehension
                        ├── Name
                        │   └── Store
                        └── Call
                            ├── Name
                            │   └── Load
                            └── BinOp
                                ├── BinOp
                                │   ├── Call
                                │   │   ├── Name
                                │   │   │   └── Load
                                │   │   └── Name
                                │   │       └── Load
                                │   ├── Sub
                                │   └── Constant
                                ├── Add
                                └── Constant
