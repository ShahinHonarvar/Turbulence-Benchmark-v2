Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        ├── If
        │   ├── Compare
        │   │   ├── Call
        │   │   │   ├── Name
        │   │   │   │   └── Load
        │   │   │   └── Call
        │   │   │       ├── Name
        │   │   │       │   └── Load
        │   │   │       └── Name
        │   │   │           └── Load
        │   │   ├── Eq
        │   │   └── Call
        │   │       ├── Name
        │   │       │   └── Load
        │   │       └── Name
        │   │           └── Load
        │   └── Return
        │       └── ListComp
        │           ├── Subscript
        │           │   ├── Name
        │           │   │   └── Load
        │           │   ├── Slice
        │           │   │   ├── Name
        │           │   │   │   └── Load
        │           │   │   └── BinOp
        │           │   │       ├── Name
        │           │   │       │   └── Load
        │           │   │       ├── Add
        │           │   │       └── Constant
        │           │   └── Load
        │           └── comprehension
        │               ├── Name
        │               │   └── Store
        │               └── Call
        │                   ├── Name
        │                   │   └── Load
        │                   └── BinOp
        │                       ├── Call
        │                       │   ├── Name
        │                       │   │   └── Load
        │                       │   └── Name
        │                       │       └── Load
        │                       ├── Sub
        │                       └── Constant
        └── Return
            └── List
                └── Load
