{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests34_13_4.py::test_one_element_similar_sets", "location": ["tests34_13_4.py", 3, "test_one_element_similar_sets"], "keywords": {"test_one_element_similar_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012423598673194647, "start": 1730957561.7095196, "stop": 1730957561.7096443, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests34_13_4.py::test_distinct_one_element_sets", "location": ["tests34_13_4.py", 10, "test_distinct_one_element_sets"], "keywords": {"test_distinct_one_element_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012060499284416437, "start": 1730957561.7094865, "stop": 1730957561.7096076, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests34_13_4.py::test_similar_sets", "location": ["tests34_13_4.py", 17, "test_similar_sets"], "keywords": {"test_similar_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001849060645326972, "start": 1730957561.7097168, "stop": 1730957561.7099023, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw2>"}
{"nodeid": "tests34_13_4.py::test_one_element_similar_sets", "location": ["tests34_13_4.py", 3, "test_one_element_similar_sets"], "keywords": {"test_one_element_similar_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006826816941611469, "start": 1730957561.7098246, "stop": 1730957561.7166517, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests34_13_4.py::test_one_element_similar_sets", "location": ["tests34_13_4.py", 3, "test_one_element_similar_sets"], "keywords": {"test_one_element_similar_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.221797179430723e-05, "start": 1730957561.7169752, "stop": 1730957561.7170575, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests34_13_4.py::test_distinct_sets", "location": ["tests34_13_4.py", 24, "test_distinct_sets"], "keywords": {"test_distinct_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.767106242477894e-05, "start": 1730957561.717387, "stop": 1730957561.717455, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests34_13_4.py::test_distinct_one_element_sets", "location": ["tests34_13_4.py", 10, "test_distinct_one_element_sets"], "keywords": {"test_distinct_one_element_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 15, "message": "AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}\n +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0}, {1}, {2}, {3}, {4}, {5}, ...])\n +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 845))\n +    where range(0, 845) = range(845)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_distinct_one_element_sets():", "        l = []", "        for i in range(845):", "            l.append({i})", ">       assert find_original_set(*l) == set(range(845))", "E       AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}", "E        +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0}, {1}, {2}, {3}, {4}, {5}, ...])", "E        +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 845))", "E        +    where range(0, 845) = range(845)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 15, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_distinct_one_element_sets():", "        l = []", "        for i in range(845):", "            l.append({i})", ">       assert find_original_set(*l) == set(range(845))", "E       AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}", "E        +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0}, {1}, {2}, {3}, {4}, {5}, ...])", "E        +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 845))", "E        +    where range(0, 845) = range(845)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 15, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 15, "message": "AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}\n +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0}, {1}, {2}, {3}, {4}, {5}, ...])\n +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 845))\n +    where range(0, 845) = range(845)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003835270181298256, "start": 1730957561.7098782, "stop": 1730957561.7102623, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests34_13_4.py::test_distinct_one_element_sets", "location": ["tests34_13_4.py", 10, "test_distinct_one_element_sets"], "keywords": {"test_distinct_one_element_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.964196942746639e-05, "start": 1730957561.718539, "stop": 1730957561.7186394, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests34_13_4.py::test_similar_sets", "location": ["tests34_13_4.py", 17, "test_similar_sets"], "keywords": {"test_similar_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 22, "message": "AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}\n +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, ...])\n +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 10))\n +    where range(0, 10) = range(10)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_similar_sets():", "        l = []", "        for i in range(845):", "            l.append(set(range(10)))", ">       assert find_original_set(*l) == set(range(10))", "E       AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}", "E        +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, ...])", "E        +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 10))", "E        +    where range(0, 10) = range(10)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 22, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_similar_sets():", "        l = []", "        for i in range(845):", "            l.append(set(range(10)))", ">       assert find_original_set(*l) == set(range(10))", "E       AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}", "E        +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, ...])", "E        +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 10))", "E        +    where range(0, 10) = range(10)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 22, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 22, "message": "AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}\n +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, {0, 1, 2, 3, 4, 5, ...}, ...])\n +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 10))\n +    where range(0, 10) = range(10)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000990564003586769, "start": 1730957561.7102926, "stop": 1730957561.7112837, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw2>"}
{"nodeid": "tests34_13_4.py::test_similar_sets", "location": ["tests34_13_4.py", 17, "test_similar_sets"], "keywords": {"test_similar_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001026130048558116, "start": 1730957561.7211585, "stop": 1730957561.7212615, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw2>"}
{"nodeid": "tests34_13_4.py::test_distinct_sets", "location": ["tests34_13_4.py", 24, "test_distinct_sets"], "keywords": {"test_distinct_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 29, "message": "AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}\n +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {845, 846, 847, 848, 849, 850, ...}, {1690, 1691, 1692, 1693, 1694, 1695, ...}, {2535, 2536, 2537, 2538, 2539, 2540, ...}, {3380, 3381, 3382, 3383, 3384, 3385, ...}, {4225, 4226, 4227, 4228, 4229, 4230, ...}, ...])\n +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 714025))\n +    where range(0, 714025) = range((845 * 845))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_distinct_sets():", "        l = []", "        for i in range(0, 845*845, 845):", "            l.append(set(range(i, i + 845)))", ">       assert find_original_set(*l) == set(range(845*845))", "E       AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}", "E        +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {845, 846, 847, 848, 849, 850, ...}, {1690, 1691, 1692, 1693, 1694, 1695, ...}, {2535, 2536, 2537, 2538, 2539, 2540, ...}, {3380, 3381, 3382, 3383, 3384, 3385, ...}, {4225, 4226, 4227, 4228, 4229, 4230, ...}, ...])", "E        +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 714025))", "E        +    where range(0, 714025) = range((845 * 845))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_distinct_sets():", "        l = []", "        for i in range(0, 845*845, 845):", "            l.append(set(range(i, i + 845)))", ">       assert find_original_set(*l) == set(range(845*845))", "E       AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}", "E        +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {845, 846, 847, 848, 849, 850, ...}, {1690, 1691, 1692, 1693, 1694, 1695, ...}, {2535, 2536, 2537, 2538, 2539, 2540, ...}, {3380, 3381, 3382, 3383, 3384, 3385, ...}, {4225, 4226, 4227, 4228, 4229, 4230, ...}, ...])", "E        +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 714025))", "E        +    where range(0, 714025) = range((845 * 845))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q34/dolphin2_9_2_results_4/Folder_13/tests34_13_4.py", "lineno": 29, "message": "AssertionError: assert 'Invalid subset. Please provide a set with at most 845 unique integers.' == {0, 1, 2, 3, 4, 5, ...}\n +  where 'Invalid subset. Please provide a set with at most 845 unique integers.' = find_original_set(*[{0, 1, 2, 3, 4, 5, ...}, {845, 846, 847, 848, 849, 850, ...}, {1690, 1691, 1692, 1693, 1694, 1695, ...}, {2535, 2536, 2537, 2538, 2539, 2540, ...}, {3380, 3381, 3382, 3383, 3384, 3385, ...}, {4225, 4226, 4227, 4228, 4229, 4230, ...}, ...])\n +  and   {0, 1, 2, 3, 4, 5, ...} = set(range(0, 714025))\n +    where range(0, 714025) = range((845 * 845))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.07655125495512038, "start": 1730957561.7175252, "stop": 1730957561.7940776, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests34_13_4.py::test_distinct_sets", "location": ["tests34_13_4.py", 24, "test_distinct_sets"], "keywords": {"test_distinct_sets": 1, "tests34_13_4.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011231598909944296, "start": 1730957561.8099554, "stop": 1730957561.8100684, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "b4e8c4a4f603490c8a52176e17cd1342", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
