{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  67,  -46,  -51,   49,   79,  -90,  -38,   98,  -97,   44,\\n          -98,  -78,  -79,   45,   50,   20,  -36,   64,   -9,   92,\\n           82,  -21,   70,  -27,   25, -100,   81,   23,   69,   67,\\n           84,   -4,   34,   42,  -73,    6,   32,  -36,   71,  -82,\\n           83,   50,   -4,   61,   66,  -86,   63,  -53,    2,   32,\\n           83,   22,   65,   -3,   75,  -70,   39,   31,   47,   52,\\n           76,  -64,  -48,  -31,  -14,   -6,    1,   -7,  -34,  -48,\\n            4,  -31,   73,   33,   90,  -68,  -29,    0,   67,   19,\\n           -2,   97,  -68,   30,    6,    4,   68,  -47,  -23,   88,\\n           89,   73,  -98,  -40,   48,   83,   51,   70,   27,   49,\\n           51,   -4,   77,   82,  -62,   28,   95,   84,  -24,  -70,\\n          -14,  -70,   -7,  -25,  -41,   45,  -88,   48,   49,   25,\\n           82,   63,  -75,  -17,   80,  -29,  -88,   41,  -78,  -78,\\n          -17,   94,   61,   23,   48,  -36,   65,   69,  -69,  -22,\\n           84,  -69,   25,   12,    6,   61,   29,   71,   80,  -48,\\n          -19,   44,   55,  -45,   10,   -7,  -57,  -11,    4]]))",
    0.02919
  ]
}