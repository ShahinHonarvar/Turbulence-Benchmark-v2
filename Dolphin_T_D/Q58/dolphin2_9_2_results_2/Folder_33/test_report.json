{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.003497801000776235, "start": 1738560611.05036, "stop": 1738560611.0538585, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cb16b39f67404bcea52bdf5c46c8e099", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016618999870843254, "start": 1738560611.0540617, "stop": 1738560611.0542283, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cb16b39f67404bcea52bdf5c46c8e099", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_one_integer", "location": ["tests58_33_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.73129977460485e-05, "start": 1738560611.0545197, "stop": 1738560611.0545971, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cb16b39f67404bcea52bdf5c46c8e099", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.162300193565898e-05, "start": 1738560611.0590804, "stop": 1738560611.0591724, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cb16b39f67404bcea52bdf5c46c8e099", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  73,  -36],\\n        [ -18,  -32],\\n        [ -72,  -89],\\n        [ -11,   -4],\\n        [ -58,  -56],\\n        [ -20,   14],\\n        [  21,   79],\\n        [  46,   92],\\n        [ -85,  -30],\\n        [ -88,  -79],\\n        [  48,   54],\\n        [  27,  -20],\\n        [-100,   88],\\n        [ -36,  -43],\\n        [  49,  -16],\\n        [ -23,   26],\\n        [  93,   92],\\n        [  43,  -55],\\n        [ -11,   12],\\n        [ -72,   73],\\n        [ -65,  -77],\\n        [ -18,   36],\\n        [ -14,  -66],\\n        [  85,   29],\\n        [  86,   47],\\n        [ -77,  -48],\\n        [  40,   98],\\n        [  -2,  -31],\\n        [ -87,   -4],\\n        [ -11,   61],\\n        [ -73,  -83],\\n        [ -83,   57],\\n        [ -45,  -16],\\n        [  57,   33],\\n        [  69,   44],\\n        [ -48,  -25],\\n        [   2,   16],\\n        [  86,  -33],\\n        [ -17,   59],\\n        [ -48,  -54],\\n        [  63,  -32],\\n        [  61,  -19],\\n        [  34,  -20],\\n        [   0,  -32],\\n        [ -34,   29],\\n        [  99,   12],\\n        [ -90,   34],\\n        [  -4,   76],\\n        [   5,   46],\\n        [  67,  -21],\\n        [ -91,   35],\\n        [  -5,   31],\\n        [  74,  -35],\\n        [  24,  -38],\\n        [ -76,   36],\\n        [  75,  -52],\\n        [ -35,   10],\\n        [  66,  -30],\\n        [  94,  -30]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  73,  -36],\\n        [ -18,  -32],\\n        [ -72,  -89],\\n        [ -11,   -4],\\n        [ -58,  -56],\\n        [ -20,   14],\\n        [  21,   79],\\n        [  46,   92],\\n        [ -85,  -30],\\n        [ -88,  -79],\\n        [  48,   54],\\n        [  27,  -20],\\n        [-100,   88],\\n        [ -36,  -43],\\n        [  49,  -16],\\n        [ -23,   26],\\n        [  93,   92],\\n        [  43,  -55],\\n        [ -11,   12],\\n        [ -72,   73],\\n        [ -65,  -77],\\n        [ -18,   36],\\n        [ -14,  -66],\\n        [  85,   29],\\n        [  86,   47],\\n        [ -77,  -48],\\n        [  40,   98],\\n        [  -2,  -31],\\n        [ -87,   -4],\\n        [ -11,   61],\\n        [ -73,  -83],\\n        [ -83,   57],\\n        [ -45,  -16],\\n        [  57,   33],\\n        [  69,   44],\\n        [ -48,  -25],\\n        [   2,   16],\\n        [  86,  -33],\\n        [ -17,   59],\\n        [ -48,  -54],\\n        [  63,  -32],\\n        [  61,  -19],\\n        [  34,  -20],\\n        [   0,  -32],\\n        [ -34,   29],\\n        [  99,   12],\\n        [ -90,   34],\\n        [  -4,   76],\\n        [   5,   46],\\n        [  67,  -21],\\n        [ -91,   35],\\n        [  -5,   31],\\n        [  74,  -35],\\n        [  24,  -38],\\n        [ -76,   36],\\n        [  75,  -52],\\n        [ -35,   10],\\n        [  66,  -30],\\n        [  94,  -30]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  73,  -36],\\n        [ -18,  -32],\\n        [ -72,  -89],\\n        [ -11,   -4],\\n        [ -58,  -56],\\n        [ -20,   14],\\n        [  21,   79],\\n        [  46,   92],\\n        [ -85,  -30],\\n        [ -88,  -79],\\n        [  48,   54],\\n        [  27,  -20],\\n        [-100,   88],\\n        [ -36,  -43],\\n        [  49,  -16],\\n        [ -23,   26],\\n        [  93,   92],\\n        [  43,  -55],\\n        [ -11,   12],\\n        [ -72,   73],\\n        [ -65,  -77],\\n        [ -18,   36],\\n        [ -14,  -66],\\n        [  85,   29],\\n        [  86,   47],\\n        [ -77,  -48],\\n        [  40,   98],\\n        [  -2,  -31],\\n        [ -87,   -4],\\n        [ -11,   61],\\n        [ -73,  -83],\\n        [ -83,   57],\\n        [ -45,  -16],\\n        [  57,   33],\\n        [  69,   44],\\n        [ -48,  -25],\\n        [   2,   16],\\n        [  86,  -33],\\n        [ -17,   59],\\n        [ -48,  -54],\\n        [  63,  -32],\\n        [  61,  -19],\\n        [  34,  -20],\\n        [   0,  -32],\\n        [ -34,   29],\\n        [  99,   12],\\n        [ -90,   34],\\n        [  -4,   76],\\n        [   5,   46],\\n        [  67,  -21],\\n        [ -91,   35],\\n        [  -5,   31],\\n        [  74,  -35],\\n        [  24,  -38],\\n        [ -76,   36],\\n        [  75,  -52],\\n        [ -35,   10],\\n        [  66,  -30],\\n        [  94,  -30]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_2/Folder_33/tests58_33_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  73,  -36],\\n        [ -18,  -32],\\n        [ -72,  -89],\\n        [ -11,   -4],\\n        [ -58,  -56],\\n        [ -20,   14],\\n        [  21,   79],\\n        [  46,   92],\\n        [ -85,  -30],\\n        [ -88,  -79],\\n        [  48,   54],\\n        [  27,  -20],\\n        [-100,   88],\\n        [ -36,  -43],\\n        [  49,  -16],\\n        [ -23,   26],\\n        [  93,   92],\\n        [  43,  -55],\\n        [ -11,   12],\\n        [ -72,   73],\\n        [ -65,  -77],\\n        [ -18,   36],\\n        [ -14,  -66],\\n        [  85,   29],\\n        [  86,   47],\\n        [ -77,  -48],\\n        [  40,   98],\\n        [  -2,  -31],\\n        [ -87,   -4],\\n        [ -11,   61],\\n        [ -73,  -83],\\n        [ -83,   57],\\n        [ -45,  -16],\\n        [  57,   33],\\n        [  69,   44],\\n        [ -48,  -25],\\n        [   2,   16],\\n        [  86,  -33],\\n        [ -17,   59],\\n        [ -48,  -54],\\n        [  63,  -32],\\n        [  61,  -19],\\n        [  34,  -20],\\n        [   0,  -32],\\n        [ -34,   29],\\n        [  99,   12],\\n        [ -90,   34],\\n        [  -4,   76],\\n        [   5,   46],\\n        [  67,  -21],\\n        [ -91,   35],\\n        [  -5,   31],\\n        [  74,  -35],\\n        [  24,  -38],\\n        [ -76,   36],\\n        [  75,  -52],\\n        [ -35,   10],\\n        [  66,  -30],\\n        [  94,  -30]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007952300002216361, "start": 1738560611.0592794, "stop": 1738560611.060075, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cb16b39f67404bcea52bdf5c46c8e099", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_2.py::test_matrix_of_having_118_integers", "location": ["tests58_33_2.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014100199769018218, "start": 1738560611.0978224, "stop": 1738560611.0979643, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cb16b39f67404bcea52bdf5c46c8e099", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
