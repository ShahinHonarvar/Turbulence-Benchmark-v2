{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_5.py::test_matrix_of_one_integer", "location": ["tests58_59_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000512809998326702, "start": 1738560873.7957475, "stop": 1738560873.796261, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "22d105e3a1904a1990bf2d7c09f281e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_one_integer", "location": ["tests58_59_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000598908998654224, "start": 1738560873.796615, "stop": 1738560873.7972145, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "22d105e3a1904a1990bf2d7c09f281e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_one_integer", "location": ["tests58_59_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013465699885273352, "start": 1738560873.7977278, "stop": 1738560873.7978632, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "22d105e3a1904a1990bf2d7c09f281e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_having_76_integers", "location": ["tests58_59_5.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013427799785858952, "start": 1738560873.7994847, "stop": 1738560873.7996197, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "22d105e3a1904a1990bf2d7c09f281e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_having_76_integers", "location": ["tests58_59_5.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  29,  -31],\\n        [  -1,  -85],\\n        [  26,  -70],\\n        [  46,   40],\\n        [  51,  -31],\\n        [  39,  -79],\\n        [ -89,  -80],\\n        [  67,  -80],\\n        [  19,   22],\\n        [ -67,    9],\\n        [ -23,   38],\\n        [ -82,  -24],\\n        [ -65,  -15],\\n        [  32,  -29],\\n        [  56,   29],\\n        [  39,   22],\\n        [  93,   40],\\n        [  68,   71],\\n        [  31,  -96],\\n        [   5,  -10],\\n        [  17,   97],\\n        [  36,  -72],\\n        [ -13,   37],\\n        [-100,   33],\\n        [  -2,   10],\\n        [  54,   77],\\n        [  64,  -78],\\n        [ -70,   26],\\n        [ -94,  -96],\\n        [  -9,  100],\\n        [ -54,   23],\\n        [  37,   -7],\\n        [  87,   34],\\n        [ -99,   55],\\n        [ -95,   21],\\n        [  57,  -76],\\n        [  67,  -74],\\n        [  -3,   86]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  29,  -31],\\n        [  -1,  -85],\\n        [  26,  -70],\\n        [  46,   40],\\n        [  51,  -31],\\n        [  39,  -79],\\n        [ -89,  -80],\\n        [  67,  -80],\\n        [  19,   22],\\n        [ -67,    9],\\n        [ -23,   38],\\n        [ -82,  -24],\\n        [ -65,  -15],\\n        [  32,  -29],\\n        [  56,   29],\\n        [  39,   22],\\n        [  93,   40],\\n        [  68,   71],\\n        [  31,  -96],\\n        [   5,  -10],\\n        [  17,   97],\\n        [  36,  -72],\\n        [ -13,   37],\\n        [-100,   33],\\n        [  -2,   10],\\n        [  54,   77],\\n        [  64,  -78],\\n        [ -70,   26],\\n        [ -94,  -96],\\n        [  -9,  100],\\n        [ -54,   23],\\n        [  37,   -7],\\n        [  87,   34],\\n        [ -99,   55],\\n        [ -95,   21],\\n        [  57,  -76],\\n        [  67,  -74],\\n        [  -3,   86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  29,  -31],\\n        [  -1,  -85],\\n        [  26,  -70],\\n        [  46,   40],\\n        [  51,  -31],\\n        [  39,  -79],\\n        [ -89,  -80],\\n        [  67,  -80],\\n        [  19,   22],\\n        [ -67,    9],\\n        [ -23,   38],\\n        [ -82,  -24],\\n        [ -65,  -15],\\n        [  32,  -29],\\n        [  56,   29],\\n        [  39,   22],\\n        [  93,   40],\\n        [  68,   71],\\n        [  31,  -96],\\n        [   5,  -10],\\n        [  17,   97],\\n        [  36,  -72],\\n        [ -13,   37],\\n        [-100,   33],\\n        [  -2,   10],\\n        [  54,   77],\\n        [  64,  -78],\\n        [ -70,   26],\\n        [ -94,  -96],\\n        [  -9,  100],\\n        [ -54,   23],\\n        [  37,   -7],\\n        [  87,   34],\\n        [ -99,   55],\\n        [ -95,   21],\\n        [  57,  -76],\\n        [  67,  -74],\\n        [  -3,   86]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_5/Folder_59/tests58_59_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  29,  -31],\\n        [  -1,  -85],\\n        [  26,  -70],\\n        [  46,   40],\\n        [  51,  -31],\\n        [  39,  -79],\\n        [ -89,  -80],\\n        [  67,  -80],\\n        [  19,   22],\\n        [ -67,    9],\\n        [ -23,   38],\\n        [ -82,  -24],\\n        [ -65,  -15],\\n        [  32,  -29],\\n        [  56,   29],\\n        [  39,   22],\\n        [  93,   40],\\n        [  68,   71],\\n        [  31,  -96],\\n        [   5,  -10],\\n        [  17,   97],\\n        [  36,  -72],\\n        [ -13,   37],\\n        [-100,   33],\\n        [  -2,   10],\\n        [  54,   77],\\n        [  64,  -78],\\n        [ -70,   26],\\n        [ -94,  -96],\\n        [  -9,  100],\\n        [ -54,   23],\\n        [  37,   -7],\\n        [  87,   34],\\n        [ -99,   55],\\n        [ -95,   21],\\n        [  57,  -76],\\n        [  67,  -74],\\n        [  -3,   86]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0059970420006720815, "start": 1738560873.8001878, "stop": 1738560873.806186, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "22d105e3a1904a1990bf2d7c09f281e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_5.py::test_matrix_of_having_76_integers", "location": ["tests58_59_5.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_5.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004945930013491306, "start": 1738560873.833199, "stop": 1738560873.8336947, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "22d105e3a1904a1990bf2d7c09f281e4", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
