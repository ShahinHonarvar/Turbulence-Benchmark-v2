{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-41, -31],\\n        [ 52,  90],\\n        [-77,  75],\\n        [ 89,  13],\\n        [-89, -25],\\n        [ 29, -93],\\n        [ 53, -35],\\n        [ 40,  51],\\n        [ 53, -43],\\n        [-34,  28],\\n        [-54, -57],\\n        [-50,  68],\\n        [ 62,  38],\\n        [ 61,  84],\\n        [ 77,  81],\\n        [ 57,  51],\\n        [-52,  19],\\n        [ 33, -79],\\n        [-69,   1],\\n        [  5, -11],\\n        [-80,  45],\\n        [ 68,  -2],\\n        [-24,   5],\\n        [ -4, -89],\\n        [-74,  62],\\n        [-35,  31],\\n        [-44,  -5],\\n        [ 22,  61],\\n        [-25, -64],\\n        [-11, -67],\\n        [ 75, -10],\\n        [-94,  27],\\n        [-56, -28],\\n        [-31, -98],\\n        [ 86, -52],\\n        [-66, -72],\\n        [ 45,  -2],\\n        [ 65,  94],\\n        [ 57, -23],\\n        [-78,   2],\\n        [-21,  76],\\n        [-66,  -9],\\n        [-62, -66],\\n        [-14, -30],\\n        [-86,  28],\\n        [-68, -48],\\n        [ 53, -43],\\n        [ 67,  91]]))",
    0.00069
  ]
}