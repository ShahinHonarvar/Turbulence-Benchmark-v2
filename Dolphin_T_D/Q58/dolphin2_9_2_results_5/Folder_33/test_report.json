{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_5.py::test_matrix_of_one_integer", "location": ["tests58_33_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_5.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012129199967603199, "start": 1738560851.7754428, "stop": 1738560851.775565, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82573e73b7e6498a9784d1689ed1c8a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_5.py::test_matrix_of_one_integer", "location": ["tests58_33_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_5.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015549599993391894, "start": 1738560851.7757218, "stop": 1738560851.7758777, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82573e73b7e6498a9784d1689ed1c8a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_5.py::test_matrix_of_one_integer", "location": ["tests58_33_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_5.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.982100239838473e-05, "start": 1738560851.7761493, "stop": 1738560851.7762194, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "82573e73b7e6498a9784d1689ed1c8a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_5.py::test_matrix_of_having_118_integers", "location": ["tests58_33_5.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_5.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011858500147354789, "start": 1738560851.7867742, "stop": 1738560851.7868934, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "82573e73b7e6498a9784d1689ed1c8a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_5.py::test_matrix_of_having_118_integers", "location": ["tests58_33_5.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_5.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_5/Folder_33/tests58_33_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  82,   30],\\n        [  68,  -19],\\n        [  54,   -9],\\n        [  10,   44],\\n        [  43,  -62],\\n        [  90,   63],\\n        [  79,   16],\\n        [ -42,  -52],\\n        [  56,   86],\\n        [  44,   89],\\n        [  -9,  -61],\\n        [ -87,   70],\\n        [ -77,  -53],\\n        [ -71,  -86],\\n        [-100,   96],\\n        [  14,   90],\\n        [  59,   44],\\n        [  92,   82],\\n        [ -94,   61],\\n        [ -61,   32],\\n        [  80,   91],\\n        [ -29,  -61],\\n        [  39,  -51],\\n        [  49,   26],\\n        [  35,   -4],\\n        [  87,  -88],\\n        [ -65,  -17],\\n        [  81,   46],\\n        [  10,   83],\\n        [ -44,   11],\\n        [  37,  -34],\\n        [   4,   76],\\n        [  78,   30],\\n        [  -7,   -1],\\n        [ -92,   77],\\n        [  66,  -71],\\n        [  32,   38],\\n        [  64,  -33],\\n        [ -52,  -90],\\n        [ -99,  -99],\\n        [  89,  -98],\\n        [ -69,   -8],\\n        [ -64,   90],\\n        [  97,   47],\\n        [ -95,    8],\\n        [  -3,   38],\\n        [ -12,  -44],\\n        [ -85,  -77],\\n        [  68,   48],\\n        [  18,   65],\\n        [ -39,  -80],\\n        [  27,    0],\\n        [  62,   24],\\n        [  33,   10],\\n        [ -43,   61],\\n        [ -12,  -87],\\n        [  23,   97],\\n        [  62,    9],\\n        [  92,  -81]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  82,   30],\\n        [  68,  -19],\\n        [  54,   -9],\\n        [  10,   44],\\n        [  43,  -62],\\n        [  90,   63],\\n        [  79,   16],\\n        [ -42,  -52],\\n        [  56,   86],\\n        [  44,   89],\\n        [  -9,  -61],\\n        [ -87,   70],\\n        [ -77,  -53],\\n        [ -71,  -86],\\n        [-100,   96],\\n        [  14,   90],\\n        [  59,   44],\\n        [  92,   82],\\n        [ -94,   61],\\n        [ -61,   32],\\n        [  80,   91],\\n        [ -29,  -61],\\n        [  39,  -51],\\n        [  49,   26],\\n        [  35,   -4],\\n        [  87,  -88],\\n        [ -65,  -17],\\n        [  81,   46],\\n        [  10,   83],\\n        [ -44,   11],\\n        [  37,  -34],\\n        [   4,   76],\\n        [  78,   30],\\n        [  -7,   -1],\\n        [ -92,   77],\\n        [  66,  -71],\\n        [  32,   38],\\n        [  64,  -33],\\n        [ -52,  -90],\\n        [ -99,  -99],\\n        [  89,  -98],\\n        [ -69,   -8],\\n        [ -64,   90],\\n        [  97,   47],\\n        [ -95,    8],\\n        [  -3,   38],\\n        [ -12,  -44],\\n        [ -85,  -77],\\n        [  68,   48],\\n        [  18,   65],\\n        [ -39,  -80],\\n        [  27,    0],\\n        [  62,   24],\\n        [  33,   10],\\n        [ -43,   61],\\n        [ -12,  -87],\\n        [  23,   97],\\n        [  62,    9],\\n        [  92,  -81]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_5/Folder_33/tests58_33_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  82,   30],\\n        [  68,  -19],\\n        [  54,   -9],\\n        [  10,   44],\\n        [  43,  -62],\\n        [  90,   63],\\n        [  79,   16],\\n        [ -42,  -52],\\n        [  56,   86],\\n        [  44,   89],\\n        [  -9,  -61],\\n        [ -87,   70],\\n        [ -77,  -53],\\n        [ -71,  -86],\\n        [-100,   96],\\n        [  14,   90],\\n        [  59,   44],\\n        [  92,   82],\\n        [ -94,   61],\\n        [ -61,   32],\\n        [  80,   91],\\n        [ -29,  -61],\\n        [  39,  -51],\\n        [  49,   26],\\n        [  35,   -4],\\n        [  87,  -88],\\n        [ -65,  -17],\\n        [  81,   46],\\n        [  10,   83],\\n        [ -44,   11],\\n        [  37,  -34],\\n        [   4,   76],\\n        [  78,   30],\\n        [  -7,   -1],\\n        [ -92,   77],\\n        [  66,  -71],\\n        [  32,   38],\\n        [  64,  -33],\\n        [ -52,  -90],\\n        [ -99,  -99],\\n        [  89,  -98],\\n        [ -69,   -8],\\n        [ -64,   90],\\n        [  97,   47],\\n        [ -95,    8],\\n        [  -3,   38],\\n        [ -12,  -44],\\n        [ -85,  -77],\\n        [  68,   48],\\n        [  18,   65],\\n        [ -39,  -80],\\n        [  27,    0],\\n        [  62,   24],\\n        [  33,   10],\\n        [ -43,   61],\\n        [ -12,  -87],\\n        [  23,   97],\\n        [  62,    9],\\n        [  92,  -81]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_5/Folder_33/tests58_33_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_5/Folder_33/tests58_33_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  82,   30],\\n        [  68,  -19],\\n        [  54,   -9],\\n        [  10,   44],\\n        [  43,  -62],\\n        [  90,   63],\\n        [  79,   16],\\n        [ -42,  -52],\\n        [  56,   86],\\n        [  44,   89],\\n        [  -9,  -61],\\n        [ -87,   70],\\n        [ -77,  -53],\\n        [ -71,  -86],\\n        [-100,   96],\\n        [  14,   90],\\n        [  59,   44],\\n        [  92,   82],\\n        [ -94,   61],\\n        [ -61,   32],\\n        [  80,   91],\\n        [ -29,  -61],\\n        [  39,  -51],\\n        [  49,   26],\\n        [  35,   -4],\\n        [  87,  -88],\\n        [ -65,  -17],\\n        [  81,   46],\\n        [  10,   83],\\n        [ -44,   11],\\n        [  37,  -34],\\n        [   4,   76],\\n        [  78,   30],\\n        [  -7,   -1],\\n        [ -92,   77],\\n        [  66,  -71],\\n        [  32,   38],\\n        [  64,  -33],\\n        [ -52,  -90],\\n        [ -99,  -99],\\n        [  89,  -98],\\n        [ -69,   -8],\\n        [ -64,   90],\\n        [  97,   47],\\n        [ -95,    8],\\n        [  -3,   38],\\n        [ -12,  -44],\\n        [ -85,  -77],\\n        [  68,   48],\\n        [  18,   65],\\n        [ -39,  -80],\\n        [  27,    0],\\n        [  62,   24],\\n        [  33,   10],\\n        [ -43,   61],\\n        [ -12,  -87],\\n        [  23,   97],\\n        [  62,    9],\\n        [  92,  -81]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000873554999998305, "start": 1738560851.7870157, "stop": 1738560851.7878897, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "82573e73b7e6498a9784d1689ed1c8a8", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_5.py::test_matrix_of_having_118_integers", "location": ["tests58_33_5.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_5.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013625200153910555, "start": 1738560851.8216894, "stop": 1738560851.821826, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "82573e73b7e6498a9784d1689ed1c8a8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
