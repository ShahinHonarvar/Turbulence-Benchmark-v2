{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005344670025806408, "start": 1738560756.9997103, "stop": 1738560757.0002456, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0f098608cdc4d589652c572ebf943a1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018776499928208068, "start": 1738560757.0008104, "stop": 1738560757.0009987, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0f098608cdc4d589652c572ebf943a1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_one_integer", "location": ["tests58_6_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017972200294025242, "start": 1738560757.0013125, "stop": 1738560757.0014927, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0f098608cdc4d589652c572ebf943a1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00036165300116408616, "start": 1738560757.0025344, "stop": 1738560757.0028963, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e0f098608cdc4d589652c572ebf943a1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  51,  -93],\\n        [  -8,  -37],\\n        [ -75,   70],\\n        [ -74,   -3],\\n        [  -2,   58],\\n        [ -88,   37],\\n        [ -99,  -62],\\n        [  52,   82],\\n        [ -75,   35],\\n        [ -81,  -17],\\n        [  94,   -2],\\n        [ -26,  -54],\\n        [ -92,   12],\\n        [  68,   33],\\n        [ -57, -100],\\n        [  87,  -32],\\n        [  79,   38],\\n        [ -15,   40],\\n        [ -52,   27],\\n        [  84,   98],\\n        [  99,   72],\\n        [ -59,  -54],\\n        [ -54,  -85],\\n        [ -90,   87],\\n        [ -12,   91],\\n        [  -6,   23],\\n        [  67,   36],\\n        [ -58,  -69],\\n        [   9,  -59],\\n        [ -36,  -51],\\n        [  97,  -44],\\n        [  22,   79],\\n        [ -93,   -6],\\n        [  43,   -2],\\n        [ -79,  -88],\\n        [ -20,  -41],\\n        [  40,   -9],\\n        [ -20,  -61],\\n        [  20,  -35],\\n        [  79,   85],\\n        [  30,   71],\\n        [ -34,   44],\\n        [  19,  -69],\\n        [   7,  -97],\\n        [  29,   48],\\n        [ -74,   69],\\n        [  -7,   48],\\n        [  19,  -85],\\n        [ -11,   22],\\n        [  27,   98],\\n        [ -55,  -10],\\n        [ -59,   40],\\n        [  52,   39],\\n        [  59,    1],\\n        [ -56,   31],\\n        [  86,   51],\\n        [  46,   58],\\n        [ -47,  -26],\\n        [ -15,  -87],\\n        [ -52,   -2],\\n        [  24,  -48]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  51,  -93],\\n        [  -8,  -37],\\n        [ -75,   70],\\n        [ -74,   -3],\\n        [  -2,   58],\\n        [ -88,   37],\\n        [ -99,  -62],\\n        [  52,   82],\\n        [ -75,   35],\\n        [ -81,  -17],\\n        [  94,   -2],\\n        [ -26,  -54],\\n        [ -92,   12],\\n        [  68,   33],\\n        [ -57, -100],\\n        [  87,  -32],\\n        [  79,   38],\\n        [ -15,   40],\\n        [ -52,   27],\\n        [  84,   98],\\n        [  99,   72],\\n        [ -59,  -54],\\n        [ -54,  -85],\\n        [ -90,   87],\\n        [ -12,   91],\\n        [  -6,   23],\\n        [  67,   36],\\n        [ -58,  -69],\\n        [   9,  -59],\\n        [ -36,  -51],\\n        [  97,  -44],\\n        [  22,   79],\\n        [ -93,   -6],\\n        [  43,   -2],\\n        [ -79,  -88],\\n        [ -20,  -41],\\n        [  40,   -9],\\n        [ -20,  -61],\\n        [  20,  -35],\\n        [  79,   85],\\n        [  30,   71],\\n        [ -34,   44],\\n        [  19,  -69],\\n        [   7,  -97],\\n        [  29,   48],\\n        [ -74,   69],\\n        [  -7,   48],\\n        [  19,  -85],\\n        [ -11,   22],\\n        [  27,   98],\\n        [ -55,  -10],\\n        [ -59,   40],\\n        [  52,   39],\\n        [  59,    1],\\n        [ -56,   31],\\n        [  86,   51],\\n        [  46,   58],\\n        [ -47,  -26],\\n        [ -15,  -87],\\n        [ -52,   -2],\\n        [  24,  -48]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  51,  -93],\\n        [  -8,  -37],\\n        [ -75,   70],\\n        [ -74,   -3],\\n        [  -2,   58],\\n        [ -88,   37],\\n        [ -99,  -62],\\n        [  52,   82],\\n        [ -75,   35],\\n        [ -81,  -17],\\n        [  94,   -2],\\n        [ -26,  -54],\\n        [ -92,   12],\\n        [  68,   33],\\n        [ -57, -100],\\n        [  87,  -32],\\n        [  79,   38],\\n        [ -15,   40],\\n        [ -52,   27],\\n        [  84,   98],\\n        [  99,   72],\\n        [ -59,  -54],\\n        [ -54,  -85],\\n        [ -90,   87],\\n        [ -12,   91],\\n        [  -6,   23],\\n        [  67,   36],\\n        [ -58,  -69],\\n        [   9,  -59],\\n        [ -36,  -51],\\n        [  97,  -44],\\n        [  22,   79],\\n        [ -93,   -6],\\n        [  43,   -2],\\n        [ -79,  -88],\\n        [ -20,  -41],\\n        [  40,   -9],\\n        [ -20,  -61],\\n        [  20,  -35],\\n        [  79,   85],\\n        [  30,   71],\\n        [ -34,   44],\\n        [  19,  -69],\\n        [   7,  -97],\\n        [  29,   48],\\n        [ -74,   69],\\n        [  -7,   48],\\n        [  19,  -85],\\n        [ -11,   22],\\n        [  27,   98],\\n        [ -55,  -10],\\n        [ -59,   40],\\n        [  52,   39],\\n        [  59,    1],\\n        [ -56,   31],\\n        [  86,   51],\\n        [  46,   58],\\n        [ -47,  -26],\\n        [ -15,  -87],\\n        [ -52,   -2],\\n        [  24,  -48]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q58/dolphin2_9_2_results_4/Folder_6/tests58_6_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  51,  -93],\\n        [  -8,  -37],\\n        [ -75,   70],\\n        [ -74,   -3],\\n        [  -2,   58],\\n        [ -88,   37],\\n        [ -99,  -62],\\n        [  52,   82],\\n        [ -75,   35],\\n        [ -81,  -17],\\n        [  94,   -2],\\n        [ -26,  -54],\\n        [ -92,   12],\\n        [  68,   33],\\n        [ -57, -100],\\n        [  87,  -32],\\n        [  79,   38],\\n        [ -15,   40],\\n        [ -52,   27],\\n        [  84,   98],\\n        [  99,   72],\\n        [ -59,  -54],\\n        [ -54,  -85],\\n        [ -90,   87],\\n        [ -12,   91],\\n        [  -6,   23],\\n        [  67,   36],\\n        [ -58,  -69],\\n        [   9,  -59],\\n        [ -36,  -51],\\n        [  97,  -44],\\n        [  22,   79],\\n        [ -93,   -6],\\n        [  43,   -2],\\n        [ -79,  -88],\\n        [ -20,  -41],\\n        [  40,   -9],\\n        [ -20,  -61],\\n        [  20,  -35],\\n        [  79,   85],\\n        [  30,   71],\\n        [ -34,   44],\\n        [  19,  -69],\\n        [   7,  -97],\\n        [  29,   48],\\n        [ -74,   69],\\n        [  -7,   48],\\n        [  19,  -85],\\n        [ -11,   22],\\n        [  27,   98],\\n        [ -55,  -10],\\n        [ -59,   40],\\n        [  52,   39],\\n        [  59,    1],\\n        [ -56,   31],\\n        [  86,   51],\\n        [  46,   58],\\n        [ -47,  -26],\\n        [ -15,  -87],\\n        [ -52,   -2],\\n        [  24,  -48]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008484730024065357, "start": 1738560757.00324, "stop": 1738560757.0040894, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e0f098608cdc4d589652c572ebf943a1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_4.py::test_matrix_of_having_122_integers", "location": ["tests58_6_4.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_4.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015115199857973494, "start": 1738560757.0228255, "stop": 1738560757.0229774, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e0f098608cdc4d589652c572ebf943a1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
