{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0001
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -33,  -22,   38,  -28,   15,  -34,   49,  -45,  -77,  -69,\\n           93,  -64,   32,  -17,   42,  -96,   83,   -4,   71,   28,\\n           81,   15,  -39,   34,   -7,  -51,  -96,  -95,   23,  -67,\\n           48,   72,   51,   -8,  -60,  -83,  -38,   75,   51,    2,\\n          -37,  -46,  -13,  -16,   -1,  -24,   41,   39,  -40,   41,\\n           45, -100,   61,   24,   34,    9,   78,   -2,  -20,    0,\\n          -72,   54,   31,  -88,   70,  -52,    2,    9,  -34,   12,\\n          -34, -100,  -81,   95,  -43,  -42,   89,   71,   51,   25,\\n           74,  -91,   -8,  -85,  -74,   80,   20,  -64,    0,   97,\\n          -69,   95,   68,   56,   -9,  -89,  -70,  -94,  -26,  -49,\\n          -77,  -14,   56,    2,   13,  -89,  -51,   97,   98,  -27,\\n           19,   69,   29,   -3,  -35,  -27,  -73,    4,   52,  -85,\\n          -39,  -47,   94,   64,  -73,  -59,  -96,  -19,   53,  -50,\\n           43,   63,  -83,  -41,   92,  -39,  -17,  -81,   53,   63,\\n          -77,   40,   50,   94,   69, -100,  -81,   16,  -38,   97,\\n          -26,   -4,   76,   92,  -97,  -99,   23,  -86,   57]]))",
    0.00052
  ]
}