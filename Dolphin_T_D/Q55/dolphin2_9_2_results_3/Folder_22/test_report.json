{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_22_3.py::test_list_of_single_number", "location": ["tests55_22_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_22_3.py": 1, "Folder_22": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013852900156052783, "start": 1738556748.870377, "stop": 1738556748.870516, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c7d6be79ccda4377b48276eafea43201", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_22_3.py::test_list_of_single_number", "location": ["tests55_22_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_22_3.py": 1, "Folder_22": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013510599819710478, "start": 1738556748.8708022, "stop": 1738556748.8709378, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c7d6be79ccda4377b48276eafea43201", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_22_3.py::test_list_of_single_number", "location": ["tests55_22_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_22_3.py": 1, "Folder_22": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.473200068692677e-05, "start": 1738556748.871327, "stop": 1738556748.871412, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c7d6be79ccda4377b48276eafea43201", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_22_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_22_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_22_3.py": 1, "Folder_22": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010327200288884342, "start": 1738556748.8739862, "stop": 1738556748.87409, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c7d6be79ccda4377b48276eafea43201", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_22_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_22_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_22_3.py": 1, "Folder_22": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q55/dolphin2_9_2_results_3/Folder_22/tests55_22_3.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7b451cc1ad80>([4])\n +    where <built-in method count of list object at 0x7b451cc1ad80> = [[1, 4], [1, 4, 1], [1, 4], [1, 4, 1], [1, 4]].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 4, 1, 4, 1, 4]", "        result = lists_with_product_equal_n(input_list)", "        if 4 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 4 == 1:", "            assert result.count([4]) == 6 and result.count([1, 4]) == 6 and result.count([4, 1]) == 6 and result.count([1, 4, 1]) == 6", "        else:", ">           assert result.count([4]) == 3 and result.count([1, 4]) == 3 and result.count([4, 1]) == 3 and result.count([1, 4, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x7b451cc1ad80>([4])", "E            +    where <built-in method count of list object at 0x7b451cc1ad80> = [[1, 4], [1, 4, 1], [1, 4], [1, 4, 1], [1, 4]].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/dolphin2_9_2_results_3/Folder_22/tests55_22_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 4, 1, 4, 1, 4]", "        result = lists_with_product_equal_n(input_list)", "        if 4 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 4 == 1:", "            assert result.count([4]) == 6 and result.count([1, 4]) == 6 and result.count([4, 1]) == 6 and result.count([1, 4, 1]) == 6", "        else:", ">           assert result.count([4]) == 3 and result.count([1, 4]) == 3 and result.count([4, 1]) == 3 and result.count([1, 4, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x7b451cc1ad80>([4])", "E            +    where <built-in method count of list object at 0x7b451cc1ad80> = [[1, 4], [1, 4, 1], [1, 4], [1, 4, 1], [1, 4]].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/dolphin2_9_2_results_3/Folder_22/tests55_22_3.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q55/dolphin2_9_2_results_3/Folder_22/tests55_22_3.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7b451cc1ad80>([4])\n +    where <built-in method count of list object at 0x7b451cc1ad80> = [[1, 4], [1, 4, 1], [1, 4], [1, 4, 1], [1, 4]].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002988440028275363, "start": 1738556748.8741934, "stop": 1738556748.8744924, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c7d6be79ccda4377b48276eafea43201", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_22_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_22_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_22_3.py": 1, "Folder_22": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010772799942060374, "start": 1738556748.8841298, "stop": 1738556748.884238, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c7d6be79ccda4377b48276eafea43201", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
