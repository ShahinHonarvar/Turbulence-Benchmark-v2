{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests43_91_5.py::test_prime_nums_are_odd", "location": ["tests43_91_5.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010392710100859404, "start": 1730983153.9017746, "stop": 1730983153.9018788, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_91_5.py::test_list_of_primes", "location": ["tests43_91_5.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012066704221069813, "start": 1730983153.9019496, "stop": 1730983153.9020708, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_91_5.py::test_prime_nums_are_odd", "location": ["tests43_91_5.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.571101352572441e-05, "start": 1730983153.9020393, "stop": 1730983153.9021251, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_91_5.py::test_list_of_non_prime_nums", "location": ["tests43_91_5.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012393295764923096, "start": 1730983153.9018824, "stop": 1730983153.9020066, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_91_5.py::test_list_of_non_prime_nums", "location": ["tests43_91_5.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011105590965598822, "start": 1730983153.902187, "stop": 1730983153.9022985, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_91_5.py::test_list_of_non_prime_nums", "location": ["tests43_91_5.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.8131059631705284e-05, "start": 1730983153.9025307, "stop": 1730983153.902589, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_91_5.py::test_prime_nums_are_odd", "location": ["tests43_91_5.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.63629437237978e-05, "start": 1730983153.9023373, "stop": 1730983153.902394, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_91_5.py::test_result_order", "location": ["tests43_91_5.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.8041070587933064e-05, "start": 1730983153.902664, "stop": 1730983153.9027224, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_91_5.py::test_list_of_negative_nums", "location": ["tests43_91_5.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.17029145359993e-05, "start": 1730983153.9028738, "stop": 1730983153.9029357, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_91_5.py::test_list_of_negative_nums", "location": ["tests43_91_5.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 6.704300176352262e-05, "start": 1730983153.9030058, "stop": 1730983153.9030733, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_91_5.py::test_list_of_negative_nums", "location": ["tests43_91_5.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.260901525616646e-05, "start": 1730983153.9032528, "stop": 1730983153.9033055, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_91_5.py::test_list_of_primes", "location": ["tests43_91_5.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2]\n  Left contains 6 more items, first extra item: 2\n  Full diff:\n  - [2, 2]\n  + [2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(1 * 10)]", "            expected_result = list_of_primes[0:1 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2]", "E             Left contains 6 more items, first extra item: 2", "E             Full diff:", "E             - [2, 2]", "E             + [2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(1 * 10)]", "            expected_result = list_of_primes[0:1 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2]", "E             Left contains 6 more items, first extra item: 2", "E             Full diff:", "E             - [2, 2]", "E             + [2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2]\n  Left contains 6 more items, first extra item: 2\n  Full diff:\n  - [2, 2]\n  + [2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030280090868473053, "start": 1730983153.902247, "stop": 1730983153.9025497, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_91_5.py::test_list_of_primes", "location": ["tests43_91_5.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010901899076998234, "start": 1730983153.911065, "stop": 1730983153.9111748, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_91_5.py::test_result_order", "location": ["tests43_91_5.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 53, "message": "assert [23, 457] == [2, 3]\n  At index 0 diff: 23 != 2\n  Full diff:\n  - [2, 3]\n  + [23, 457]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 0 == 1:", "            initial_list = [i for i in range(1, (1 + 1) * 10)]", "            initial_list[0] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 1 - 0 + 1", "            prefix = random.choices(range(1, 1000), k=0)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [23, 457] == [2, 3]", "E                 At index 0 diff: 23 != 2", "E                 Full diff:", "E                 - [2, 3]", "E                 + [23, 457]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 0 == 1:", "            initial_list = [i for i in range(1, (1 + 1) * 10)]", "            initial_list[0] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 1 - 0 + 1", "            prefix = random.choices(range(1, 1000), k=0)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [23, 457] == [2, 3]", "E                 At index 0 diff: 23 != 2", "E                 Full diff:", "E                 - [2, 3]", "E                 + [23, 457]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q43/dolphin2_9_2_results_5/Folder_91/tests43_91_5.py", "lineno": 53, "message": "assert [23, 457] == [2, 3]\n  At index 0 diff: 23 != 2\n  Full diff:\n  - [2, 3]\n  + [23, 457]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003028339706361294, "start": 1730983153.9027925, "stop": 1730983153.9030955, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_91_5.py::test_result_order", "location": ["tests43_91_5.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_91_5.py": 1, "Folder_91": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.408395271748304e-05, "start": 1730983153.9115267, "stop": 1730983153.9116213, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "34adc6dea34b448cbd9a056a613f71eb", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
