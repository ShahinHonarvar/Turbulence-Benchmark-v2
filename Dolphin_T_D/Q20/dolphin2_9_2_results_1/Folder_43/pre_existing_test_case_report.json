{
  "parameter(s)": [
    16,
    28,
    64
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00017
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.0002
  ],
  "test_float_numbers": [
    "failed",
    "assert 6.557438524302 == 6.6332495807108\n +  where 6.557438524302 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.0003
  ],
  "test_reversed_range": [
    "failed",
    "assert -58 == -57\n +  where -58 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00019
  ],
  "test_large_range": [
    "failed",
    "assert 42 == 43\n +  where 42 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00104
  ]
}