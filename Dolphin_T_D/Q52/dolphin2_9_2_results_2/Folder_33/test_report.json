{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests52_33_2.py::test_string_of_many_chars", "location": ["tests52_33_2.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.979999958886765e-05, "start": 1738555999.2816124, "stop": 1738555999.2817123, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "919af30f398846c4ac1dfb1f489e0078", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_33_2.py::test_string_of_many_chars", "location": ["tests52_33_2.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.300799865741283e-05, "start": 1738555999.2818508, "stop": 1738555999.281944, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "919af30f398846c4ac1dfb1f489e0078", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_33_2.py::test_string_of_many_chars", "location": ["tests52_33_2.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.426799907581881e-05, "start": 1738555999.2821543, "stop": 1738555999.2822087, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "919af30f398846c4ac1dfb1f489e0078", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_33_2.py::test_string_of_spaces", "location": ["tests52_33_2.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.574399983743206e-05, "start": 1738555999.2824776, "stop": 1738555999.2825334, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "919af30f398846c4ac1dfb1f489e0078", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_33_2.py::test_string_of_spaces", "location": ["tests52_33_2.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q52/dolphin2_9_2_results_2/Folder_33/tests52_33_2.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (475 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ', '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ', '                                                                                                                                                                                                                                             ...                                                                                                                                                                                                                                 ', '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ', '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ', ...} = palindrome_of_length_nreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/dolphin2_9_2_results_2/Folder_33/tests52_33_2.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (475 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_nreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/dolphin2_9_2_results_2/Folder_33/tests52_33_2.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_D/Q52/dolphin2_9_2_results_2/Folder_33/tests52_33_2.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ', '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ', '                                                                                                                                                                                                                                             ...                                                                                                                                                                                                                                 ', '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ', '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ', ...} = palindrome_of_length_n}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.06707620399902225, "start": 1738555999.2826, "stop": 1738555999.3496768, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "919af30f398846c4ac1dfb1f489e0078", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_33_2.py::test_string_of_spaces", "location": ["tests52_33_2.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_33_2.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.934600166161545e-05, "start": 1738555999.3583605, "stop": 1738555999.3584607, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "919af30f398846c4ac1dfb1f489e0078", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
