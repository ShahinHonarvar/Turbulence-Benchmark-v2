{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  1,  34, -16,  -7,   9,  -5, -14, -43, -30,  44,  40,  46, -61,\\n           9, -28, -12, -41,  42,  10,  79,  66,  77, -17,  55, -13,  62,\\n         -95,  60,  30,  61,  15,  42, -80, -81, -37, -85,  26,  55, -34,\\n          93, -15,  88,  39, -19, -53,  38,  46,  -5, -79,  54, -95,  98,\\n           8, -34,  80,  20, -50,  40,  18,  73,  46, -97, -88,  -2, -58,\\n          85, -47, -31, -57, -42,  20, -63,  10, -20, -33, -62, -23, -40,\\n          72, 100,  28, -84,  -8, -54,  -4,  64,  92,  62, -82, -71,  48,\\n          65, -50,  14,  64, -77,  81, -57, -85,  -4, -70, -89,   2, -98,\\n         -50,  54,  27, -41,  20,  44, -50,  32,  -8,  94,  88,  77, -85,\\n          23,  97,  56,  54,  29,  32,  81,  46,  88,  43,  43,  97,  43,\\n         -69, -32,  85,  22,  11, -49,  41,  40,  55,  61,  90,   6, -72,\\n          18,  91,  -2,  65]]))",
    0.00536
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00561
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00136
  ]
}