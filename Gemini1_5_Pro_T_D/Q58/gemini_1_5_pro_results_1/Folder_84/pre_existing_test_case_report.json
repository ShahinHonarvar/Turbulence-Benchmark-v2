{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00056
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.00334
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-30,  99,   8, -54,  70,  -7,  28, -58, -31, -53, -63,  81, -92,\\n          75, -62,  21,  16, -36, -28,  93,   5, -16,  87,  -5,  91, -47,\\n          67,  30,  97, -89,  58,  61,  27, -97, -70,  55,  80, -26,   7,\\n          26, -20,   7,  85, -27,  77,  45,  70, -98, -60, -86, -93, -88,\\n         -59, -40, -42,   5, -36,  25,  83,  -1, -33,  56, -48,  23, -98,\\n          69,  11,  92,  77, -87,  97, -23,  25,  86,  56, -99,  43, -61,\\n         -44,  68,  82, -97, -74, -76, -80,  47, -41,  20, -53, -60, -83,\\n         -25,  66,  31, -35,  23, -23,  78, -96,  49, 100,  68,  41, -19,\\n          60,  59,  45,  35,  52, -95,  10,  60,  71, -53,  98, -17,  16,\\n         -97,  46,  15, -30,  93,  11,  -6, -10,  15,  -3]]))",
    0.00163
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 255",
    0.00625
  ]
}