{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.01023
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  53,   -9],\\n        [ -64,   26],\\n        [  96,  -81],\\n        [  96,   74],\\n        [ -81,  -13],\\n        [ -47,  -49],\\n        [ -59,   14],\\n        [  72,   22],\\n        [  85,  -88],\\n        [  72,  -71],\\n        [   9,  -42],\\n        [ -75,  -73],\\n        [  -3,   22],\\n        [ -15,   17],\\n        [  36,   -2],\\n        [  -4,   33],\\n        [  23,    6],\\n        [ -70,  -62],\\n        [ -59,   32],\\n        [ -62,  -79],\\n        [ -30,   -4],\\n        [  49,   76],\\n        [  40,   27],\\n        [ -59,  -94],\\n        [ -40,    2],\\n        [  76,   -3],\\n        [ -28, -100],\\n        [   2,  -98],\\n        [  41,   32],\\n        [ -64,   55],\\n        [ -83,   83],\\n        [ -86,  -23],\\n        [ -58,  -41],\\n        [  77,  -87],\\n        [   0,   26],\\n        [ -56,   22],\\n        [ -98,   -6],\\n        [ -93,  -72],\\n        [ -12,  -12],\\n        [ -27,  -91],\\n        [  78,   45],\\n        [  23,  -56],\\n        [ -21,  -40],\\n        [ -78,   35],\\n        [  -5,  -28],\\n        [ -46,  -31],\\n        [  -1,  -42],\\n        [ -96,  -14]]))",
    0.00085
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.0004
  ]
}