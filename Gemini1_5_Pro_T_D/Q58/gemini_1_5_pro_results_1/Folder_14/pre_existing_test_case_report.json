{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00757
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.0005
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -94,  -98],\\n        [   7,   56],\\n        [  67,   89],\\n        [   8,   58],\\n        [  67,  -81],\\n        [ -13,  -50],\\n        [  31,  -98],\\n        [ -73,   70],\\n        [  47,   44],\\n        [  16,   77],\\n        [  90,   15],\\n        [ -19,  -46],\\n        [ -27,   16],\\n        [   7,  -56],\\n        [  21,  -96],\\n        [ -57,   67],\\n        [ -30,   64],\\n        [  92,   -7],\\n        [  78,  -62],\\n        [  79,  -97],\\n        [ -86,    0],\\n        [ -62,  -13],\\n        [ -33,   91],\\n        [ -79,   87],\\n        [  22,   35],\\n        [ -76,   37],\\n        [ -25,    6],\\n        [  26,   11],\\n        [ -97,   98],\\n        [  89,   93],\\n        [ -53, -100],\\n        [ -33,  -40],\\n        [  83,  -34],\\n        [  58,   -9],\\n        [  65,   24],\\n        [ -81,   -5],\\n        [ -12,  -54],\\n        [ -60,  -81],\\n        [   9,  -64],\\n        [ -70,  -91],\\n        [  55,    4],\\n        [  38,    9]]))",
    0.00764
  ]
}