{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00047
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00039
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.002
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 81,  97,  42,  68,  92, -32, -62, -22,  84,  15, -92,  15, -42,\\n           3, -91,  65,  97,  61, -89,  13,   6,  57,   6, -52, -65,  88,\\n         -70, -27, -76,  39,  31,  -4,  54, -56, -71, -97, -80,  45, -11,\\n         -78,  13, -83, -86,  80, -59, -88,  67,  36,  52, 100, -30,   2,\\n           9,  68,  37,  88,  -1, -57, -45,  88, -28,  38,  25,  73,  68,\\n         -85,  45,  77, -24,  52,  30, -85, -92,  45,  71,  36, -82,  64,\\n          10, -43, -87, -46,  12,  93, -75,   5,  50,  48,  35, -93, -16,\\n          55, -35, -75, -19, -46,  83,  92,  10, -59, -30,  45,  24, -77,\\n         -52, -76,  60, -19,  -6,  16,  53,  79,  84, -26, -28,  34, -73,\\n          -9, -45, -95, -46,  50,  99,  59, -13, -64,  75,  43, -32,  89,\\n          28, -91,  26,  57,  38, -88,   2, -61,  43]]))",
    0.00167
  ]
}