{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00057
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 93, -99],\\n        [-77,   6],\\n        [ 29, -99],\\n        [  8, -47],\\n        [-39, -96],\\n        [-84, -91],\\n        [ 89, -58],\\n        [ 25, -41],\\n        [-15,  75],\\n        [  8, -47],\\n        [ 38, -84],\\n        [-25, -15],\\n        [ 83, -56],\\n        [-78, -60],\\n        [ 39,  18],\\n        [ 75, -32],\\n        [ 65,  -5],\\n        [ 85, -59],\\n        [-87, -71],\\n        [100,  19],\\n        [ 33,  35],\\n        [-96, -57],\\n        [-26,  35],\\n        [-82, -30],\\n        [ 46, -11],\\n        [-26, -46],\\n        [ 44, -39],\\n        [-40,  56],\\n        [-63, -31],\\n        [  8, -26],\\n        [-98, -25],\\n        [ 14,  13],\\n        [ 44, -70],\\n        [-65,  46],\\n        [ 21, -55],\\n        [ 10,  29],\\n        [ -6,  79],\\n        [-33, -50],\\n        [ 28, -50],\\n        [-40,  51]]))",
    0.00505
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00055
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00314
  ]
}