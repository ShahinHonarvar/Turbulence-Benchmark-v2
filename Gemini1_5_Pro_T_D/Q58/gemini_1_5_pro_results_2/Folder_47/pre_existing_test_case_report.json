{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00048
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -46,   86],\\n        [ -93,   78],\\n        [  93,  -70],\\n        [ -48,  -29],\\n        [ -48,   77],\\n        [  -9,   72],\\n        [  56,   95],\\n        [ -60,   19],\\n        [   8,  -30],\\n        [  62,   81],\\n        [ -90,   43],\\n        [  46,   58],\\n        [ -42,  -45],\\n        [  29,  -34],\\n        [ -62,  -66],\\n        [  28,  -99],\\n        [ -47,  -66],\\n        [  18,   29],\\n        [ -36,  -36],\\n        [  54,  -33],\\n        [  -9,   92],\\n        [ -36,  -92],\\n        [  72,   23],\\n        [ -98,   -6],\\n        [ -33,  -47],\\n        [  75,   93],\\n        [  74,   21],\\n        [ -50,  -79],\\n        [  31,   69],\\n        [ -36,   -6],\\n        [  -4,  -26],\\n        [  45,   46],\\n        [ -96,  -99],\\n        [  -2,  -86],\\n        [-100,  -59],\\n        [ -44,   29],\\n        [ -43,   19],\\n        [   3,  -88],\\n        [ -52,  -57],\\n        [  -5,  -96],\\n        [ -15,  -22],\\n        [ -60,  -69],\\n        [  24,   -8],\\n        [  57,  -69],\\n        [ -69,  -37]]))",
    0.00089
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.0021
  ]
}