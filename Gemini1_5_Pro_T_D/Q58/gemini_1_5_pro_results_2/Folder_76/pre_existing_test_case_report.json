{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -27,  -39,   76,   72,  -80,   65,   58,   61,   79,  -24,\\n          -80,  -66,  -78,  -83,  -29,   92,  -40,   70,  -28,   97,\\n          -73,   80,  -88,  -78,  -11,   74, -100,  -61,  -37,   -4,\\n          -30,   71,   85,   92,  -60,  -74,   23,   45,   12,  -64,\\n          -91,  -32,  -30,   15,   97,  -77,  -49,    5,   56,   36,\\n          -42,   -6,  -36,  -35,   58,   80,   55,  -42,  -77,   40,\\n          -22,   63,   28,  -52,  -62,   21,  -91,   44,    6,   17,\\n           16,   -3,  -42,  -81,   -3,  -42,  -17,   38,   42,  -51,\\n          -36,   36,   86,   31,   88,   17,   35,   36,  -63,   -9,\\n            0,  -85,  -31,  -94,  -50,   80,   74,  -30,  -27,   26,\\n          -82,  -15,   57,  -34,   47,   31,  -46,   82,   -2,  -48,\\n          -28,  -32,   47,   52,   38,  -78,  -60,  -28,  -69,  -81,\\n          -37,   46,   83,  -30,  -78,  -89,   94,  -32,    8,  -27,\\n           33,   -3,  -33,   91,   93,   64,   43,   73,  -54,   57,\\n          -41,  -42,  -88,  -91,  -59,   50,   44,    2,   88,   56,\\n           75,  -11,  -17,   61,  -80,   67,   18,  -92,   48]]))",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00104
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00043
  ]
}