{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00058
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 80, -23, -12,  19,  34, -59, -49,  -2, -40,  80,  15,  97,  63,\\n         -29, -67,  22,  30,  69,  -4, -73,  96, -60, -60,  71,  -9, -25,\\n         -90,  -9,  99,  61, -51,  84, 100,  98, -81, -30,  -8, -49,  62,\\n          -7, -13, -76, -78,  76, -99, -18,  10,  23, -93,  -4,  19, -11,\\n         -15,  50,  81, -94, -46,  91, -44,  -1, -49,  75,  54,  65,  81,\\n          25, -92, -56, -17, -90, -18, -90, -20,  99,  74, -20,  71,   3,\\n         -69,  49,  80,  44, -61,  -2,  88, -31,  59, -71, -79,  74,  18,\\n         -36, -10, -42, -51, -74,  44,  55,  59, -46, -84, -21, -93,  75,\\n          38,  63, -85, -95,  69, -56, -18,  62, -69, -99,  99, -66, -89,\\n          91,  -6, -19,  84, -22, -18, -43, -37,  40,  42, -60,  87,  18,\\n          34,  80,  15, -30,  36,  35,  98, -25,  -7]]))",
    0.00459
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00451
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00528
  ]
}