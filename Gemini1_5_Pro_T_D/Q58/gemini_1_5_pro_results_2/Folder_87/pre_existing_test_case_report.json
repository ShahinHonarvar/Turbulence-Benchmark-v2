{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00463
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -19,   23],\\n        [  42,  -70],\\n        [  22,   -8],\\n        [  -4,  -97],\\n        [ -33,   -1],\\n        [  79,  -77],\\n        [  85,   40],\\n        [  32,  -84],\\n        [  14,   55],\\n        [  36,   84],\\n        [  -5,  -60],\\n        [ -16,  -58],\\n        [  49,   60],\\n        [  81,   35],\\n        [  94,  -49],\\n        [ -22,   45],\\n        [  83,  -44],\\n        [  68,    5],\\n        [ -19,    4],\\n        [ -77,  -48],\\n        [  33,   14],\\n        [  81,    8],\\n        [ -82,   69],\\n        [  64,  -89],\\n        [   2,   62],\\n        [   6,   28],\\n        [  62,  -85],\\n        [  -6,  -13],\\n        [ -15,  -56],\\n        [ -42,    8],\\n        [ -83,  -72],\\n        [ -14,   11],\\n        [  -2,   12],\\n        [  42,   85],\\n        [ -37, -100],\\n        [  78,   66],\\n        [  -3,   61],\\n        [ -48,   53],\\n        [ -51,   74],\\n        [ -73,  -12],\\n        [  18,   69],\\n        [ -59,  -63],\\n        [ -93,   33],\\n        [  55,   41],\\n        [ -38,   64],\\n        [  39,  -89],\\n        [ -27,  -59],\\n        [ -78,    5]]))",
    0.00523
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.01029
  ]
}