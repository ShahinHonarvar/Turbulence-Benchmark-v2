{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00102
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.01166
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 46,  53],\\n        [ 96,   1],\\n        [ -6, -12],\\n        [ -1,  28],\\n        [ 26, -86],\\n        [ 42,  31],\\n        [-58,  31],\\n        [  4,  11],\\n        [ 75,  66],\\n        [ 17,  50],\\n        [ 23,  39],\\n        [ 19,  43],\\n        [ 42, -20],\\n        [ 56, -24],\\n        [-78,   5],\\n        [ 37,  76],\\n        [-24,  66],\\n        [-83,  98],\\n        [-23,   6],\\n        [-13, -56],\\n        [ 12, -77],\\n        [ 73,  69],\\n        [ 24,  75],\\n        [ 22, -92],\\n        [-32,   4],\\n        [  6, -11],\\n        [-42, -18],\\n        [ 37, -77],\\n        [-87,   7],\\n        [ 89, -41],\\n        [-75, -27],\\n        [ 61, -66],\\n        [ 30,  96],\\n        [-12,  78],\\n        [-20, -52],\\n        [-71,  15],\\n        [-52, -37],\\n        [ 60, -43],\\n        [-82, -80]]))",
    0.00098
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00319
  ]
}