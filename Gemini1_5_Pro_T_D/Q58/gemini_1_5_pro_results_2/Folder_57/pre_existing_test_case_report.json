{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-76,  -3],\\n        [-43,   7],\\n        [ 41, -58],\\n        [-94, -35],\\n        [  9,  32],\\n        [-49,  89],\\n        [ 78, -17],\\n        [-49, -22],\\n        [ 38,  31],\\n        [ 68, -70],\\n        [-59,  74],\\n        [-16,  79],\\n        [-30,  74],\\n        [ 49, -75],\\n        [  9, -59],\\n        [-36,  16],\\n        [ 82,  20],\\n        [ 79,  16],\\n        [-24, -99],\\n        [-23,  58],\\n        [ -6, -18],\\n        [-59, -86],\\n        [ 35, -41],\\n        [ 25, -46],\\n        [ 23,  59],\\n        [-78, -71],\\n        [-54,  66],\\n        [-17, -36],\\n        [-62,  -4],\\n        [ 21,  70],\\n        [ 83,  57],\\n        [ 47,  46],\\n        [ 55,  68],\\n        [ 52, -56],\\n        [-39, -29],\\n        [-22, -10],\\n        [-61,  17],\\n        [ 47,  18],\\n        [ 48,  84],\\n        [-18,  22],\\n        [ 25,  47],\\n        [ 74, -78],\\n        [ -4,  44],\\n        [-91,  55],\\n        [-60, -11],\\n        [ 80, -47]]))",
    0.00318
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00072
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00771
  ]
}