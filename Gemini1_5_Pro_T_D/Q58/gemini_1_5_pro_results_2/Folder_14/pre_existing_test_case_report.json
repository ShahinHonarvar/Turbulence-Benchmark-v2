{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00027
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00712
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -20,  -11],\\n        [  66,   57],\\n        [ -17,  -27],\\n        [  71,   -9],\\n        [  92,  -12],\\n        [  73,  -32],\\n        [ -69,   96],\\n        [ -19,  -36],\\n        [  26,   69],\\n        [  37,   35],\\n        [   1, -100],\\n        [ -81,  -91],\\n        [  21,   63],\\n        [  38,   39],\\n        [ -10,   29],\\n        [  -7,   35],\\n        [  70,   20],\\n        [  89,  -60],\\n        [ -76,  -64],\\n        [ -57,   18],\\n        [  64,   90],\\n        [ -41,   74],\\n        [  97,  -75],\\n        [  74,   31],\\n        [  38,  -71],\\n        [  50,   96],\\n        [  39,  -78],\\n        [ -18,   47],\\n        [  26,  -47],\\n        [  62,  -27],\\n        [ -43,    3],\\n        [ -83,   72],\\n        [ -66,  -18],\\n        [  84,  -33],\\n        [  33,  -94],\\n        [ -32,   10],\\n        [  83,  -64],\\n        [ -17,  -15],\\n        [ -62,   37],\\n        [ -88,  -23],\\n        [ -75,   80],\\n        [  30,   41]]))",
    0.01083
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.0025
  ]
}