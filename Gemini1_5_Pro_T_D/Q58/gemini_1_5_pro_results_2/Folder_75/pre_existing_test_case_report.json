{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00041
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-73, -71],\\n        [ 73,  59],\\n        [-97, -68],\\n        [ -9, -53],\\n        [-62,  42],\\n        [-20, -94],\\n        [-39,  61],\\n        [-62, -85],\\n        [  3,  18],\\n        [ -3,  63],\\n        [ 16,  17],\\n        [ 61, -18],\\n        [ 27, -29],\\n        [ 91,  57],\\n        [-15,  95],\\n        [ 33, -64],\\n        [-30,  48],\\n        [-66, -70],\\n        [ 74, -62],\\n        [ 96,  15],\\n        [-44, -29],\\n        [-63,  25],\\n        [ 20, -19],\\n        [-84,  97],\\n        [ -9, -22],\\n        [-79,  42],\\n        [-27, -10],\\n        [-95, -21],\\n        [-24,  76],\\n        [-34, -53],\\n        [ 34, -93],\\n        [ 42,  94],\\n        [-23, -35],\\n        [ 42, -40],\\n        [ 25,  99],\\n        [ 68,  12],\\n        [-73, -72],\\n        [-23, -69],\\n        [-66,  72],\\n        [  4,  64]]))",
    0.00193
  ]
}