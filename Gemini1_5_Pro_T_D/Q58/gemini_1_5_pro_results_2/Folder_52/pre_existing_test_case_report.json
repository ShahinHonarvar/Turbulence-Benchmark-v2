{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 28,  96,  60, -79, -71,  65, -96,  -8,  78,  38,  16, -74,   6,\\n          10,  75,   5,  71, -31,  -2, -16, -51,  48, -39,   8, -95,  96,\\n          23, -42, -38,  43,  78, -61,  36, -53, -38, -27, -42, -50,  64,\\n          73, -84,  39, -88, -74, -93, -15,   4,   5,  43,  29,  -7,  81,\\n          17, -75,  60, -34,  62,   4,  45, -79, -12, -12,  93, -50,  49,\\n          42,  25,   5,  33,  -6, -90, -15,  15, -41, -17,  53, -25,  39,\\n         -85,  86, -87,  58,  19, -84, -44,  17,  78,  84, -65, -20, -43,\\n         -12,  38, -12, -38, -99,  44,  91, -55,  78,  67, -28,  49, -85,\\n         -99, -61,  24,  48,  35,  85, -47,  45,  72, -92,  22, -93, -50,\\n         -80,  81, -32, -98,   5, -34,  22,  71, -10,  26,  29, -75,  83,\\n         -62, -42, -23,  21,  -9,  27,  52, -18, -36,  92,   9, -72,  72,\\n          81, -86, -88,  57]]))",
    0.00433
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00339
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.0095
  ]
}