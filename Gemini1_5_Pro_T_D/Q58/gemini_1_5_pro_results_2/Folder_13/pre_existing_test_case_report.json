{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  39,  -73,   92,   23,  -24,  -10,  -82,  -72,    8,  -37,\\n           53,   94,    7,  -81,   94,  -91,   95,   41,   34,  -71,\\n           -1,    0,   62,   57,  -62,   83,   84,   89,   23,   98,\\n          -57,   -8,   72,   47,   38,   37,   29,   43,   17,  -90,\\n            4,   33,  -29,  -49,   96,   35,  -27,  -65,   20,   93,\\n          -98,  -92,   88,   94,  -29,   57,  -68,  -80,   42,    8,\\n           47,    7,   43,  -57,  -31,   42,   63,  -67,   48,   56,\\n          -42,   42,    2,  -28,  -56,   -3,  -50,    9,   56,   83,\\n           89,   68,  -74,  -50,  -96, -100,   -1,    6,   48,  -49,\\n           -6,  -12,   40, -100,   -9,   51,   51,    6,   76,  -89,\\n           39,   59,   79,  -50,   16,   12,  -83,  -76,   78,   64,\\n           91,  -80,  -38,  -40,   46,   15,  -28,  -67,   93,   31,\\n          -48,   94,   96,   98,  -71,  -41,  -12,    4,   95,  -73,\\n            3,  -89,   56,   11,  -66,    6,   -4,    8,   86,  -74,\\n           58,   25,  -80,  -60,  -78,  -76,   98,   15,  -50,  -56,\\n           50,   13,   97,  -84,  -63,  -73,  -13,    6,   61,  -66,\\n           27,   99,  -22,  -85,   11,   91,  -80,  -28,   55,   78,\\n          -42,  -91,  -74,  -93,   67]]))",
    0.0022
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.0005
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00162
  ]
}