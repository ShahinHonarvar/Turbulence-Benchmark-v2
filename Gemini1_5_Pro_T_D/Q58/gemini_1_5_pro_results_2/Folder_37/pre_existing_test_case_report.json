{
  "parameter(s)": [
    64
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00362
  ],
  "test_matrix_of_having_64_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  65,   18],\\n        [ -30,  -65],\\n        [  83,   47],\\n        [  25,  -33],\\n        [  53,   66],\\n        [  24,   34],\\n        [  -6,   85],\\n        [ -27,  -65],\\n        [ -45,   55],\\n        [  65,   18],\\n        [  93,  -23],\\n        [  41,   36],\\n        [  -6,  -11],\\n        [ -19,   -4],\\n        [ -10,  -15],\\n        [  63,  -31],\\n        [ -71,   71],\\n        [ -29,   90],\\n        [ -10,   33],\\n        [ -55,  -22],\\n        [ -94,   24],\\n        [ -12,  -23],\\n        [  -8,  -20],\\n        [ -49,  100],\\n        [ -19,  -34],\\n        [-100,  -15],\\n        [  43,   75],\\n        [ -51,   29],\\n        [  74,  -94],\\n        [ -47,   54],\\n        [ -44,  -94],\\n        [ -77,  -38]]))",
    0.0063
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 129",
    0.00151
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 129",
    0.00329
  ]
}