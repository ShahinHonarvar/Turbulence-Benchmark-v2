{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00196
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -48,   -7],\\n        [ -68,   38],\\n        [ -31,   16],\\n        [  84,  -10],\\n        [  46,   28],\\n        [ -19,  -53],\\n        [   1,   30],\\n        [ -88,  -14],\\n        [ -99,  -44],\\n        [ -86,   14],\\n        [  32,  -28],\\n        [  67, -100],\\n        [ -25,  -65],\\n        [  24,   43],\\n        [ -38,   52],\\n        [ -31,   76],\\n        [  91,  -13],\\n        [  -3,  -20],\\n        [ -41,   24],\\n        [  53,  -28],\\n        [ -49,  -15],\\n        [ -72,   72],\\n        [ -85,   11],\\n        [ -86,   14],\\n        [ -23,  -67],\\n        [  41,  -24],\\n        [ -17,   11],\\n        [ -14,  -88],\\n        [ -17,  -10],\\n        [  70,   65],\\n        [  21,   57],\\n        [  48,   13],\\n        [   4,  -59],\\n        [  46,   93],\\n        [  84,  -19],\\n        [  86,  -56],\\n        [ -45,   65],\\n        [-100,  -74],\\n        [ -27,  -95],\\n        [ -94,   10],\\n        [  50,   47],\\n        [  94,  -14]]))",
    0.0099
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00601
  ]
}