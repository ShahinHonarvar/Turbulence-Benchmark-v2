{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00029
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  29,  100],\\n        [  72,   90],\\n        [ -95,   36],\\n        [  18,   22],\\n        [  46,  -83],\\n        [   4,  -92],\\n        [ -88,   33],\\n        [  18,  -87],\\n        [-100,  -61],\\n        [  56,  -65],\\n        [ -80,  -53],\\n        [ -85,  -99],\\n        [  83,   28],\\n        [  50,   10],\\n        [ 100,   47],\\n        [  -6,   33],\\n        [  31,   34],\\n        [ -58,   30],\\n        [ -50,   81],\\n        [-100,  -97],\\n        [ -80,   35],\\n        [   6,  -91],\\n        [ -43,    7],\\n        [ -66,   58],\\n        [  84,  -61],\\n        [ -69,   97],\\n        [ -25,  -72],\\n        [ -43,  -50],\\n        [  -6,    4],\\n        [ -26,   85],\\n        [ -94,   36],\\n        [ -41,   16],\\n        [ -20,   59],\\n        [ -27,  -18],\\n        [ -38,   57],\\n        [  41,  -29],\\n        [ -14,  -97],\\n        [  42,   61],\\n        [ -80,  -29],\\n        [  92,  -72],\\n        [ -97,  -52],\\n        [ -77,   42],\\n        [  31,   44],\\n        [ -61,  -84],\\n        [  40,   37],\\n        [  50,  -67],\\n        [ -14,   71]]))",
    0.01256
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00148
  ]
}