{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00101
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00045
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-10, -66],\\n        [-93, -43],\\n        [-92, -13],\\n        [-64,  82],\\n        [ 15, -55],\\n        [ 72,  39],\\n        [ 70,  96],\\n        [-61, -72],\\n        [-57,  72],\\n        [ 44,  71],\\n        [ 42,  98],\\n        [ 74, -29],\\n        [-16,  -3],\\n        [ -1,  17],\\n        [ 46, -55],\\n        [ 71,  36],\\n        [ 73,  35],\\n        [-23,  -8],\\n        [ 88, -17],\\n        [ 97,  -6],\\n        [-27,  95],\\n        [-92, -29],\\n        [-44, -84],\\n        [-41,  77],\\n        [-80,  74],\\n        [ 68,  72],\\n        [  6,  33],\\n        [ 92,  35],\\n        [ 14,  -8],\\n        [-96,  15],\\n        [-39,  73],\\n        [ -3,  53],\\n        [-58, -84],\\n        [-45, -80],\\n        [-41,  42],\\n        [-74,  -6],\\n        [-62,  61],\\n        [-88, -24],\\n        [ 36,  42],\\n        [-56, -77],\\n        [ -1,  90],\\n        [ 76, -50],\\n        [ 89,  -1],\\n        [-87, -45]]))",
    0.00698
  ]
}