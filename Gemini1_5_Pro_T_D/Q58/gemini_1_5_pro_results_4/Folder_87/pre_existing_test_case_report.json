{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00116
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   0,   52],\\n        [  61,  -39],\\n        [  84,  -81],\\n        [ -46,   82],\\n        [ 100,  -39],\\n        [  41,    5],\\n        [  44,  -97],\\n        [  50,   87],\\n        [ -89,    6],\\n        [ -48,  -48],\\n        [   5,   89],\\n        [ -27,  -86],\\n        [  38,   91],\\n        [ -73,    0],\\n        [ -43,   74],\\n        [  61,  -68],\\n        [ -74,  -77],\\n        [  87,  -41],\\n        [  34,  -48],\\n        [   0,  -34],\\n        [  16,  -93],\\n        [  92,  -31],\\n        [ -32,  -40],\\n        [ -90,    8],\\n        [  33,   58],\\n        [ -12,   22],\\n        [  -5,  -61],\\n        [  30, -100],\\n        [ -81,   24],\\n        [ -74,   93],\\n        [  78,   74],\\n        [   6,    5],\\n        [ -83,   76],\\n        [  25,   90],\\n        [   9,  -60],\\n        [  89,  -36],\\n        [ -71,   12],\\n        [ -24,   85],\\n        [ -59,   32],\\n        [  -2,  -78],\\n        [  24,  -49],\\n        [ -24,  -20],\\n        [ -35,  -97],\\n        [  68,  -51],\\n        [ -11,   10],\\n        [  41,    6],\\n        [  67,   11],\\n        [  12,  -90]]))",
    0.00822
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00282
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00504
  ]
}