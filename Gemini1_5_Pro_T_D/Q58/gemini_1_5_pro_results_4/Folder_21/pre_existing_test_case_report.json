{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00246
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 57, -45,  27,  15, -82, -18, -53, -99, -76,  12,  18, -34, -33,\\n         -39, -30, -53, -15,  11,  20,  27,   0, -64,  97, -79,  74,  99,\\n          -6,  -3,  75,  78, -87, -81, -83,  20, -90, -23,   7, -43, -36,\\n          84,  13, -89, -64,  88,  22, -40,  84,  73,  50,  60,  40, -32,\\n          14,  19,  38,  90, -65,  55,  36,  -2,  88, -13,  16,  23, -17,\\n         -69,   8, -33, -78,  67,  58, -63, -48,  66,  -3, -83,  56, -99,\\n          97,  60, -13, -49,  -3,  11, -29, -94,  73,  -8,  25,  20,  21,\\n         -50, -71,  60,  41,  95,  26,  97,  75,  62,  76,  84,  78,  66,\\n         -23,  89, -30, -67,  26,  87,  74,  96,  -3,  10,  27, -49,   9,\\n          42, -94,  65,  78, -17,  -9, -43,  21,  93, -12, -65, -22,  85,\\n          72, -20,  95, -50,  34,  29,  74,  64, -70]]))",
    0.00086
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00394
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00047
  ]
}