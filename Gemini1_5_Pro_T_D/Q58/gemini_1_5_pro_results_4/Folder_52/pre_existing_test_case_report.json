{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00148
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-61,  81, -28,  93,  46, -52, -22, -69, -67,  58,   8,   3,  26,\\n          -3,  95,  89, -28,  98,  94,  69,  67, -39,  47, -60, -16,   3,\\n          61, -94, -66,  65, -67,  96, -54, -51,  86, -57, -31,  34,  58,\\n         -37, -28, -63, -16, -81, -65,   0,  94,  37,   9,  22,  23, -58,\\n         -71, -30, -67,  64,  12, -12, -52,  23,  89,  59, -11, -58, -27,\\n          52,  57, -51, -15,  58,  29,  19,  74, -77, -85, -92,  94,  12,\\n         -64,  24,  95, -39, -95,  29, -44,   3, -73, -41,  -8,  64,  62,\\n         -51,  54,  88,  51,  28,  20,  31,  76, -10, -76, -43, -61,  -2,\\n          58, -77,  93, -85,  86,  20, -21, -99,  85,  61, -52,  88,  92,\\n         -36, -12,  94,  95,  -1, -26,  46, -82, -18,  90,  27,  -4,  44,\\n         -53, -30,  72, -77, -47, -11,  98,  82, -19,  84, -52, -61,  80,\\n         -67, -54, -56,  63]]))",
    0.00429
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00337
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00527
  ]
}