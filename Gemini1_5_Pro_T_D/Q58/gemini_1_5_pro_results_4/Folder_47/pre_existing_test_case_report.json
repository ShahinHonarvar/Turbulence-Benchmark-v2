{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00208
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00051
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,   -4],\\n        [ -32,  -17],\\n        [ -18,   78],\\n        [  11,   75],\\n        [  38,  -11],\\n        [ -49,  -34],\\n        [ -76,   21],\\n        [ -26,  -76],\\n        [ -61,  -13],\\n        [ -92,   62],\\n        [ -37,  -75],\\n        [  -1,   78],\\n        [ -15,  -54],\\n        [  94,   -8],\\n        [  42,   90],\\n        [ -37,  -65],\\n        [  96,  -57],\\n        [ -71,  -92],\\n        [  31,   90],\\n        [   7,   75],\\n        [   0,   36],\\n        [ -60,  -36],\\n        [ -45,   31],\\n        [ -81,  -16],\\n        [ -58,  -23],\\n        [  38,   60],\\n        [ -23,  -57],\\n        [  93,   93],\\n        [ -56,   81],\\n        [ -67,   85],\\n        [ -45,    9],\\n        [ -12,  -39],\\n        [ -54,  -17],\\n        [  14,   82],\\n        [  54,  -94],\\n        [  44,   40],\\n        [  69,   11],\\n        [ -89,  -76],\\n        [ -11,  -81],\\n        [  69,  -61],\\n        [  12,  -76],\\n        [-100,  -23],\\n        [ -27,   56],\\n        [  99,   40],\\n        [ -71,   83]]))",
    0.00083
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00802
  ]
}