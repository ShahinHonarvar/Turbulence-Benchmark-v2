{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00263
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 34,  30],\\n        [-94, -47],\\n        [-49,  27],\\n        [-16, 100],\\n        [ 43, -48],\\n        [-56,  56],\\n        [ 98, -65],\\n        [-73,  17],\\n        [-18, -68],\\n        [-23, -60],\\n        [ 71,  79],\\n        [ 79,   6],\\n        [ 32,  14],\\n        [-42, -25],\\n        [ 93,  71],\\n        [-42,  56],\\n        [ 91,  41],\\n        [ 38,  58],\\n        [ 15,  17],\\n        [-68,  25],\\n        [ 18,  69],\\n        [ 17,  66],\\n        [  3, -44],\\n        [ 85, -92],\\n        [-60,  28],\\n        [-33,  39],\\n        [ 46,   9],\\n        [ 82, -19],\\n        [ 21,   0],\\n        [ 77,  41],\\n        [-26, -95],\\n        [ 60,  48],\\n        [-96, -89],\\n        [ 92,  41],\\n        [-33, 100],\\n        [ 75,  39],\\n        [  0, -15],\\n        [  8, -15],\\n        [-40, -37],\\n        [-72,  87],\\n        [ -8, -43],\\n        [ -2,  97]]))",
    0.00598
  ]
}