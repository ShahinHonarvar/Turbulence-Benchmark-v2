{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00031
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-21, -95,  54,  82,  -7,  80, -95, -89,   2, -64,  53, -85,   7,\\n         -23, -81, -82,  37, -96, -38,  14,  -9, -68,  -6, -65,  16,  -7,\\n         -88,  44, -13,  28, -91,  20,  74,  31,  88, -76, -85, -80, 100,\\n          78,  95, -29,  75,  30,   2, -29,  -2, -56, 100, -65,  19,  48,\\n         -92,  50,  37,  34, -90,  31,  52,  22, -88,  -1,  -1, -37, -46,\\n         -95, -84,  45, -48, -20, -98, -57,  -8, -26, -34, -92,  25,  47,\\n         -63,  67, -94,   8, -94, -19, -91,  75, -85, -32,   0,  17, -29,\\n          90,  28, -55, -21, -69,  21, -54,  19,  40,  77,  23, 100,  35,\\n          -2,  36,  38, -64, -28,  22, -30,  99, -95, -34, -13, -75,  -8,\\n          16,  81, -43, -49,  67,  55,  52,   6, -48, -34,  66, -65, -17,\\n          76,  10, -23,  92, -66, -53,   2, -52, -46,  21, -28,  14, -65,\\n           2, -65,   1, -16, -38, -39,  99, -47,  33,  93, -38, -73, -76,\\n          12,  92,  53,  93,  53,  28, -41,  -4,  16, -80,  -7,  89, -83,\\n          27, -85,  85, -90]]))",
    0.02055
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00506
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.0157
  ]
}