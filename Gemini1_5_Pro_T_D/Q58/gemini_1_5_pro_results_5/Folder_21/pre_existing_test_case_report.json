{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00042
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.01182
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -91,  -65,  -43,  -33,   54,   31, -100,  -31,   19,   35,\\n          -65,   27,  -60,  -37,  -70,  -92,   43,  -65,  -61,  -67,\\n          -15,  -87,   -3, -100,   84,   84,  -52,  -96,  -28,    3,\\n           19,   23,   14,   88,  -94,   51,  -10,   39,   71,   71,\\n           13,   61,    3,   99,   20,  -58,  -16,  -89,  -76,   -3,\\n          -26,  -65,   53,   84,   87,  -18,   -8,   -8,   12,   52,\\n          -94,  -52,   28,   23,  -62,   99,  -10,   69,  -66,   80,\\n           41,  -80,  -37,   18,   49,  -74,  -39,  -13,   20,  -66,\\n           80,   76,   19,  -78,   19,   76,  -95,  -46,   25,  -35,\\n           49,  -35,  -65,    5,   73,  -74,  -54,   79,   82,   37,\\n          -95,  -72,   54,   83,   34,  -21,   40,   48,  -85,  -91,\\n          -52,  -76,   38,  -98,   90,   45,   45,   77,  -33,  -44,\\n           41,  -71,   76,   37,   29,  -16,  -68,   95,  -91,   95,\\n           40,  -26,   36,   28,  -75,   85,   85,  -10,   83]]))",
    0.00091
  ]
}