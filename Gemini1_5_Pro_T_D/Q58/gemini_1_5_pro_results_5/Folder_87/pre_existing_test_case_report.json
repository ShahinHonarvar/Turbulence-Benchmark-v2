{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00049
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -29,    0],\\n        [ -63,   46],\\n        [  54,  -97],\\n        [ -83,   -1],\\n        [  95,   51],\\n        [  46,   15],\\n        [ -72,  -15],\\n        [ -63,  -26],\\n        [   2,   67],\\n        [ -10,   47],\\n        [  30,  -56],\\n        [  74,  -50],\\n        [ -33,   69],\\n        [  19,  -44],\\n        [ -53,   46],\\n        [  71,   15],\\n        [  90,  -90],\\n        [  92,  -63],\\n        [ -84,  -33],\\n        [   3,  -69],\\n        [ -72,  -18],\\n        [ -67,   48],\\n        [ -82,  -29],\\n        [ -70,  -95],\\n        [ -66,   67],\\n        [  37,   88],\\n        [  49,  -48],\\n        [  12,  -26],\\n        [  72,  -22],\\n        [ -29,   56],\\n        [  63,  -20],\\n        [ -11,  -55],\\n        [ -15,  -19],\\n        [ -38,  -46],\\n        [  40,  -59],\\n        [ -38,   88],\\n        [ -56,   31],\\n        [ -81,  -10],\\n        [  89, -100],\\n        [  87,   53],\\n        [  40,   -3],\\n        [ -53,   72],\\n        [ -91, -100],\\n        [ -86,   69],\\n        [ -30,   16],\\n        [  22,   67],\\n        [  96,    8],\\n        [ -41,  -57]]))",
    0.00417
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00454
  ]
}