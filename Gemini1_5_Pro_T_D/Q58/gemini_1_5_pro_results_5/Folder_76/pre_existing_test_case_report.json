{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-81,  67, -63,  46, -50, -46,  59, -50,  70, -28,  14,  12, -49,\\n          28,  26,  83, -92,  99,  68,  20,  10, -68, -67,  -1, -74, -10,\\n         -74, -74, -76,  46, -21,   4, -71,  60,  24, -78,  -1, -93,  18,\\n          58,  44, -86, -21, -33,  49, -85,  65, -66,   2, -21, -73, -91,\\n           3,  20,  22,  52,  79, -16,  -8, -82,  42,   2,  39,  42,  60,\\n          90,  28, -13,  12,  32,  14,  68, -31,  -6,  28,  -7,  40, -42,\\n         -95,  49,  94, -92,  45,  76,  64,  58,  37,   8,  15, -38,  43,\\n         -43,  53,  74,  53, -81, -54,  34, -55, -82,  12, -48, -60, -13,\\n          85,  65, -54, -63, -95,  42,  29,  33, -38,  94,  -3,  66,  41,\\n          88, -13,  30, -23,  62,   6, -65,  22,  26, -14, -44,  27,  -5,\\n          35,  69,  22, -20, -92, -75, -22,  -5,  -8,   0,  25,  25,  55,\\n          66,  22, -86,  57, -63,  40,  25,  83,  -6,  70, -89,  28,  33,\\n         -68,  68,  23]]))",
    0.00504
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00518
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00835
  ]
}