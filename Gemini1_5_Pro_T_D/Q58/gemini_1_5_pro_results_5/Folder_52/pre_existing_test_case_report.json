{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 42, -31,  96,  41, -56,  97,  -6,   5,  19, -63,  82, -10, -31,\\n           3,  71, -82, -58, -27, -92,  80, -17,  17, -48,  50,  -9, -59,\\n           2, -76, -12, -86,  90,  15, -29,  91,  22,  31,  51,  51, -82,\\n          85,  33, -71, -34, -79,   4,  21,  80, -34, -68,  29,  -6, -88,\\n         -45, -81,  59,  71,   8, -26,  87,  57, -66, -75,  -7,  31,  -2,\\n         -39, -66,  69, -56,   3,   1,  63,  84,  65, 100,  68,  39, -61,\\n         -82,  43,  62,  83,  12, -15,  77,  -5, -11, -26, -43,  43,  12,\\n          59,  73, -36, -46, -21, -98, -93,  79, -56,  25, -39, -11,  -6,\\n         -65, -24, -59, -85, -94, -25,  51,  56, 100, -71, -23, -14,  88,\\n          -1,   3,  87, -58, -67, -55, -55,  44,  86,  91,  -8,   5,  54,\\n         -97,  79, -73,  26,  15, -13,  64,  24, -54, -81,  32,  60, -80,\\n          11, -15,  16,  99]]))",
    0.00257
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00045
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00323
  ]
}