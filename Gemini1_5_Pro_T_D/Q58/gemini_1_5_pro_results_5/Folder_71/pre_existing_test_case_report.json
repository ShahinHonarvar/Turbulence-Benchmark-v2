{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00558
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-40,  11],\\n        [ 76,  78],\\n        [-19,  10],\\n        [-11, -31],\\n        [-99,  10],\\n        [ 97,  14],\\n        [-52,  14],\\n        [ 95,  32],\\n        [ -6,  65],\\n        [ 33,  60],\\n        [-46, -25],\\n        [-24, -21],\\n        [ 94,  19],\\n        [ 64,  46],\\n        [ 38, -73],\\n        [-11, -70],\\n        [ 76, -17],\\n        [-68,  85],\\n        [ 57, -38],\\n        [ 90, -66],\\n        [ 47,   9],\\n        [-66,  26],\\n        [ 33, -25],\\n        [-60, -48],\\n        [ 40,  93],\\n        [ 94,  81],\\n        [ 40,  58],\\n        [ 16, -99],\\n        [ 19,  62],\\n        [ 58, -20],\\n        [ 69, -72],\\n        [ 21, -88],\\n        [-12, -45],\\n        [-28, -56],\\n        [-29,  46],\\n        [ 49, -64],\\n        [ 82, -55],\\n        [ 42,  40],\\n        [-47,   2]]))",
    0.0026
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00095
  ]
}