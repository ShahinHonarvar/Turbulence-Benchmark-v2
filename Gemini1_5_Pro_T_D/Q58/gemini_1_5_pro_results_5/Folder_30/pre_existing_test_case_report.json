{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00161
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68,  19],\\n        [ 46, -55],\\n        [  6, -60],\\n        [ 67,  61],\\n        [ 35,  27],\\n        [ 83, -75],\\n        [ 90, -69],\\n        [-98, -53],\\n        [-81, -61],\\n        [  2, -39],\\n        [ 88, -94],\\n        [-68, -99],\\n        [ 88,  58],\\n        [-64, -47],\\n        [ 53,   8],\\n        [  2,  98],\\n        [ 16,  37],\\n        [-64,  -9],\\n        [-57,  61],\\n        [ 77,  55],\\n        [-82, -88],\\n        [-41,  41],\\n        [-79, -73],\\n        [ 91, -68],\\n        [ 35, -88],\\n        [-91, -67],\\n        [-99, -82],\\n        [ 12,  37],\\n        [ 92, 100],\\n        [ -5,  83],\\n        [ 89,  90],\\n        [-73,  -7],\\n        [-10, -92],\\n        [-91,  96],\\n        [ 85, -19],\\n        [  5, -48],\\n        [ 95,   5],\\n        [ -9,  39],\\n        [-48,  15],\\n        [ 77, -98],\\n        [ 15, -76],\\n        [-21,  80],\\n        [ 85,  35],\\n        [ 45,  45],\\n        [  2,  74],\\n        [ 85,  85],\\n        [-99, -36]]))",
    0.002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00046
  ]
}