{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -5,  19],\\n        [-35, -95],\\n        [-69, -60],\\n        [-58, -92],\\n        [-55,  38],\\n        [-73, -92],\\n        [  1, -93],\\n        [-13, -40],\\n        [-44,   3],\\n        [ 10, -64],\\n        [-38,  93],\\n        [-34,  25],\\n        [-20, -86],\\n        [ 76, -39],\\n        [ 92,  85],\\n        [ 89, -45],\\n        [ 43,  34],\\n        [-34,  -9],\\n        [ 74,  58],\\n        [ 41, -89],\\n        [ 84, -77],\\n        [  3, -50],\\n        [ 98, -90],\\n        [ 77,  45],\\n        [ -3,  84],\\n        [ 68,  43],\\n        [ 50, -57],\\n        [ 83,  90],\\n        [ 29,  74],\\n        [-65,  22],\\n        [ 13,   6],\\n        [-41,  86],\\n        [  2, -31],\\n        [-10, -51],\\n        [ 50,  28],\\n        [-29,  51],\\n        [-21,   8],\\n        [-43,  19],\\n        [-33,  -3],\\n        [ 13,  50]]))",
    0.00862
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.01328
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00308
  ]
}