{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00092
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-63,  41],\\n        [  1, -51],\\n        [-98, -48],\\n        [-71, -57],\\n        [ 95, -43],\\n        [-10, -55],\\n        [-68,  68],\\n        [  4,  98],\\n        [-15,  97],\\n        [-99, -33],\\n        [ -1, -25],\\n        [ 20,  31],\\n        [-36,  48],\\n        [ 40, -38],\\n        [-63,  28],\\n        [ 40,  30],\\n        [-23, -41],\\n        [ 79, -75],\\n        [ 97, -21],\\n        [ 20,   9],\\n        [-45,  95],\\n        [ 10, -96],\\n        [-83,  39],\\n        [ 92,  48],\\n        [  0, -46],\\n        [ -7,   6],\\n        [ -1, -70],\\n        [ 35,  57],\\n        [-15, -81],\\n        [-71, -12],\\n        [-90,  82],\\n        [ 87, -20],\\n        [ 89,  69]]))",
    0.00509
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.00466
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 133",
    0.00274
  ]
}