{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00581
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00243
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-96, -92],\\n        [-61,   0],\\n        [-11,  37],\\n        [-85,   2],\\n        [ 96,  27],\\n        [ 13,  29],\\n        [ 25, -92],\\n        [-39,  72],\\n        [ -7,  69],\\n        [ 48, -88],\\n        [ -5, -16],\\n        [-43, -59],\\n        [ 36,  -5],\\n        [ 55,  63],\\n        [-78, -85],\\n        [-79, -98],\\n        [-68,  40],\\n        [ 51, -58],\\n        [-93,  67],\\n        [ 35,  70],\\n        [-74,  -3],\\n        [ 66, -31],\\n        [-56, -36],\\n        [-48, -77],\\n        [-46, -32],\\n        [ 25,  27],\\n        [  2, -64],\\n        [ -3, -73],\\n        [100, -87],\\n        [ 45,  84],\\n        [-68, -22],\\n        [ -8,  99],\\n        [ 43,  43],\\n        [ 11, -50],\\n        [ -6,  16],\\n        [ 11, -33],\\n        [ 45, -64],\\n        [ -6,  52],\\n        [ 70, -46],\\n        [-69,  88],\\n        [ 57, -93],\\n        [ 68, -18],\\n        [-92,  26],\\n        [ 18,  85],\\n        [ 65, -71],\\n        [ 62,  56]]))",
    0.00858
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00303
  ]
}