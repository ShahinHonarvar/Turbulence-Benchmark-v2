{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  62,  -93,   79,   51,   71,   20,   50,   -6,    8,   39,\\n           65,   81,  -37,  -27,  -35,  -49,  -55,  -80,  -10,   85,\\n           21,   35,    0,  -21,  -53,  -36,  -90,  -25,  -84,   44,\\n          -14,   88,   97,   84,   40,   53,  -84,  -48,  -87,  -54,\\n          -79,    0,   99,   16,   -1,   -9,  -46,   35,   49,  -10,\\n          -92,   43,   10,  -93,   -8,  -10,   83,   65,   36,   91,\\n          -81,   55,  -79,  -15,   15,  -46,   70,   52,   -5,  -83,\\n           15,  -77,   98,  -22,   50,   44,  -73,   77,   53,   44,\\n           20,   -7,  -43,   11,  -77,  -43,   30,   23,   91,   29,\\n          -43,   -7,  -98,  -25,   73,  -72,   78,   83,   94,   46,\\n           73,  -66,  -33,   44,  -80,  -45,   22,   86,  -16,   95,\\n           86,   19,   29,  -10,  -27,  -18,  -20,   24,  -84,   28,\\n          -35,  -81,   70,  -96,   71,   63,   71,   65,  -28,   86,\\n           86,   92,  -91,   85,   26, -100,  -75,   -7,   61,  -94,\\n          -22,  -41,  100,   96,   59,   13,   47,   35,  -14,  -93,\\n          -52,   65,  -92,  -65,  -33,  -35,   13,   86,  -81,   56,\\n           14,   51,   51,   64,  -41,  -61,   38,   91,  -60,  -43,\\n           75,   53,    5,  -10,   99,   33,   57,   59,  -61,   90,\\n           59,   19,  -58,   92,  -44]]))",
    0.00353
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00484
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.00645
  ]
}