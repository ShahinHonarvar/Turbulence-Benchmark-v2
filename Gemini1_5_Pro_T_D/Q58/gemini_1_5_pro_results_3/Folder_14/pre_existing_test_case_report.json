{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00103
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00367
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[100,  30],\\n        [ 94, -41],\\n        [-14,  60],\\n        [ 65,  43],\\n        [ 95, -43],\\n        [-58, -64],\\n        [ 28, -60],\\n        [-60,  58],\\n        [ -3, -60],\\n        [-30,  80],\\n        [ 53, -68],\\n        [ 16,  83],\\n        [ 72, -30],\\n        [100,  32],\\n        [ 92,  21],\\n        [ 70, -33],\\n        [-39, -68],\\n        [ 35, -28],\\n        [ 43, -49],\\n        [ 69,  10],\\n        [ 94, -89],\\n        [  7, -43],\\n        [-86, -33],\\n        [-16, -85],\\n        [ 58, -14],\\n        [ 73,  44],\\n        [ 15, -73],\\n        [ 98, -97],\\n        [ 62, -20],\\n        [ 67,  78],\\n        [ 37,  71],\\n        [-15, -31],\\n        [-90,  11],\\n        [ 80, -96],\\n        [ 90, -33],\\n        [-78, -81],\\n        [ 55,  19],\\n        [-90, -54],\\n        [-75,  66],\\n        [ 54,  70],\\n        [-14,  54],\\n        [-12,  46]]))",
    0.00089
  ]
}