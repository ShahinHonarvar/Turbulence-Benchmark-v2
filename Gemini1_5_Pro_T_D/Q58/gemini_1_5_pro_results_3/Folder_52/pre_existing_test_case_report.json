{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00088
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00255
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -3,  40,  -9,  76,  14,  29, -13,  62,  55, -70, -58,  -7, -89,\\n         -75, -80,   4, -80, -18, -21,  14,  69, -76, -25,  10, -10,  95,\\n         -11,  58,  -6,  -9,  93,  97,  64,  39, -45,  57,  55,  95,  81,\\n         -81,  78,  20,  -7, -90, -20, -84,  17,  91, -50,  90, -18, -32,\\n          15, -59,  -9, -16, -63, -91, -81, -29,  46,  94, -54,  43,  16,\\n         -10, -73,  -4,  35,  18,  85, -41,  72, -87, -14,  55,  59,  44,\\n           4, -97, -57,   6, -59, -36, -81,  -9,  20, -64,  75,  90,  33,\\n          51, -46,  38, -97, -62, -98, -97,  35, -23, -44, -84,   5,  95,\\n         -73,  53, -85, -15,  13, -37, -89, -33,  22,  52, -10,  85, -48,\\n          12,  96, -11, -64,  40, -17,  48,  83,  99, -89, -67, -97,  78,\\n          30, -74,  65,  26,  55,  -4,  27,  81,  24, -49,  31, -46,  -9,\\n          28,  84,  26, -13]]))",
    0.0009
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00324
  ]
}