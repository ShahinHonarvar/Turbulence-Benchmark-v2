{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 63, -99],\\n        [ 27,  54],\\n        [-55, -94],\\n        [ 49,  95],\\n        [ 66, -74],\\n        [ -7, -79],\\n        [ 24, -16],\\n        [ 89, -57],\\n        [-94,  11],\\n        [ 29,  28],\\n        [ -4,  72],\\n        [ 26,  83],\\n        [-33, -13],\\n        [-78,   3],\\n        [ -8, -47],\\n        [-65, -16],\\n        [ 84,  94],\\n        [-31, -29],\\n        [-11, -16],\\n        [ 33,  85],\\n        [-39,  58],\\n        [-13,  94],\\n        [-16, -68],\\n        [-95,  37],\\n        [  1, -53],\\n        [-14, -54],\\n        [ 39,  89],\\n        [-79,  63],\\n        [ 83,  71],\\n        [-62, -31],\\n        [-32,   0],\\n        [-25,  86],\\n        [-74, -56],\\n        [ 51, -32],\\n        [ 48,  27],\\n        [-82, -19],\\n        [ 90, -97],\\n        [-64,  73],\\n        [ 49,  89],\\n        [ 78, -28]]))",
    0.00194
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00432
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00122
  ]
}