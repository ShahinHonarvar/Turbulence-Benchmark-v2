{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00051
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  34,   66,   10,   41,   47,  -46,  -60,   64,  -35,   37,\\n          -68,   12,  -75,   91,    2,  -11,   -9,   60,  -56,   81,\\n           42,   -6,   42,    1,  -11,  -28,    5,   52,   35,   84,\\n          -91,  -65,  -38,  -23,  -59,   94,   37,  -42,   -9,   99,\\n           95,   -4,   -1,   25,  -30,   26,    1,  -36,   20,   21,\\n          -12,   99,   74,  -46,   45,   -8,  -89,  -13,  -62,   82,\\n          -33,   26,   88,   -4,  -33,   76,   14,  -34,  -29,  -11,\\n           -1,  -29,   25,   63,  -23,   51,   27,   46,  -57,  -18,\\n          -90,  -33,    0,   48,  -22,   24,   30,  -86,    7, -100,\\n          -56,   77,   21,   74,  -68,    0,   91,   77,  -72,   18,\\n           46,   17,  -47,    1,   83,  -19,  100,  -95,  -95,   12,\\n          -42,   42,  -14,    3,   47,  -72,   87,   63,  -25,   11,\\n          -52,   94,  -62,   47,  -64,  -46,  -29,  -83,  -58,  100,\\n           60,  -61,  -67,  -33,   73,   36,   11,   56,  -75]]))",
    0.00318
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00481
  ]
}