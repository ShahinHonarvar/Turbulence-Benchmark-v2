{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00657
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  4, -76],\\n        [-26,  -9],\\n        [-99,  26],\\n        [-59,  31],\\n        [-20,  89],\\n        [ 62,  33],\\n        [ 94, -16],\\n        [ 85, -11],\\n        [-30,  -6],\\n        [ 91, -80],\\n        [-49,  44],\\n        [ 81, -88],\\n        [ 27, -43],\\n        [-32,  75],\\n        [ 83, -28],\\n        [-66,   8],\\n        [-60,  25],\\n        [-82,   3],\\n        [-66,  80],\\n        [ 41, -11],\\n        [-37, -43],\\n        [-62,  27],\\n        [ 39,  -2],\\n        [ 70,  84],\\n        [-69,  57],\\n        [-10,  41],\\n        [-85,  81],\\n        [ 44,  68],\\n        [-57,  21],\\n        [-15,  47],\\n        [-39,  26],\\n        [ 51,  77],\\n        [ 54,  69],\\n        [ 80,  14],\\n        [-17,  95],\\n        [ 93,  81],\\n        [ 17, -65],\\n        [-41,  39],\\n        [ 48,  96],\\n        [-78, -18],\\n        [-36, -18],\\n        [ 62, -24],\\n        [ 59,  26],\\n        [ 40, -33]]))",
    0.00495
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00045
  ]
}