{
  "parameter(s)": [
    68
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_68_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -50,  -65],\\n        [  58,   48],\\n        [ -59,  -71],\\n        [-100,   96],\\n        [ -19,   64],\\n        [ -66,   48],\\n        [  35,  -25],\\n        [  36,  -12],\\n        [ -64,  -34],\\n        [  20,   26],\\n        [   1,   93],\\n        [  31,   72],\\n        [  57,   24],\\n        [   3,  -57],\\n        [ -70,   67],\\n        [ -72,  -99],\\n        [ -91,   76],\\n        [ -42,   88],\\n        [ -55,  -12],\\n        [   7,  -68],\\n        [ -64,  -97],\\n        [  80,   59],\\n        [   5,  -30],\\n        [ -24,  -24],\\n        [ -85,   82],\\n        [ -35,  -26],\\n        [ -38,  -84],\\n        [ -73,   67],\\n        [  51,  -50],\\n        [ -91,  -48],\\n        [   3,   -9],\\n        [ -41,   12],\\n        [  45,  -60],\\n        [ -40,   74]]))",
    0.00077
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 137",
    0.00077
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 137",
    0.00039
  ]
}