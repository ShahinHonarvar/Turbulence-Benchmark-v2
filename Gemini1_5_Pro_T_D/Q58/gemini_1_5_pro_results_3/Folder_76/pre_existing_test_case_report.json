{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -80,    8,   13,  -15,  -26,   15,  -17,   83,  -11,  -20,\\n           94,  -39,  -82,   88,   23,   20,  -90,  -15,   82,  -28,\\n           46,   32,   82,   93,   58,   73,  -39,  -63,   -6,  -19,\\n            8,   67,  -38,  -99,   78,   57,    3,  -51,   71,   51,\\n           20,   24,   21,  -32,   82,    7,   65,   90,   81,  -71,\\n          -31,   96,  -41,  -38,  -20,   88,  -71,   31,   54,  -47,\\n          -56,   18,   90,   69,   39,   96,  -99,   -4,   55,   67,\\n           43,  -12,   50,  -46,  -24,  -21,   25,   11,   50,  -54,\\n           29,   -3,  -76,   28,    0,   60,   69,  -57,   94,   35,\\n          -21,  -24,  -97,  -77,  -87,  -53,  -40,  -45,   12,  -84,\\n          -37,  -67,  -37,  -86,   76,  -89,   56,  -81,   84,   40,\\n          -40,   67,  -32,  -50,    1,  -86,  -75,   90,  -64,  -39,\\n          -66,  -13,   30,  -53,   22,  -80,   82,  -89,   41,  -28,\\n           86,  -74,    0,   15,   70,   31,  -60,    1,  -22, -100,\\n           69,    1,    4,  -46,    4,  -99,  -99,   -6,  -20,   24,\\n          -53,  -73,  -82,  -37,   31,   74,  -83,    6,   -4]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00364
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00185
  ]
}