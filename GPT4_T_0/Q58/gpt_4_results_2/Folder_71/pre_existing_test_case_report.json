{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00049
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 80,   0],\\n        [-36,  39],\\n        [-97, -15],\\n        [-55,  64],\\n        [-23,  95],\\n        [-75,  51],\\n        [-69,  95],\\n        [  8, -23],\\n        [ 88, -79],\\n        [-82,  98],\\n        [ -2, -68],\\n        [-60,  20],\\n        [-69, -91],\\n        [ 31,  36],\\n        [ 52,  79],\\n        [ 86, -43],\\n        [-61,  98],\\n        [-99,  95],\\n        [ 82, -58],\\n        [ 54, -94],\\n        [-35, -58],\\n        [-91, -81],\\n        [  3,  94],\\n        [-31,  89],\\n        [-11,  23],\\n        [ -7,  88],\\n        [ -7, -44],\\n        [-52,   4],\\n        [-45,  85],\\n        [ 27, -56],\\n        [-12,  66],\\n        [ 55, -69],\\n        [-25, -14],\\n        [ 11, -57],\\n        [-68, -92],\\n        [-14,  25],\\n        [-73,  67],\\n        [ 75,  61],\\n        [-53,  89]]))",
    0.00092
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00108
  ]
}