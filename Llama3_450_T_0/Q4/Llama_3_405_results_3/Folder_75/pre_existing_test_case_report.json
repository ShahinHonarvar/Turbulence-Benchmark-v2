{
  "parameter(s)": [
    20,
    36
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00015
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_large_range": [
    "failed",
    "assert [21, 22, 23, 24, 25, 26, ...] == [22, 23, 24, 25, 26, 27, ...]\n  At index 0 diff: 21 != 22\n  Left contains one more item: 36\n  Full diff:\n  - [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\n  + [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]\n  ?  ++++",
    0.00112
  ],
  "test_even_range": [
    "failed",
    "assert [42, 44, 46, 48, 50, 52, ...] == [44, 46, 48, 50, 52, 54, ...]\n  At index 0 diff: 42 != 44\n  Left contains one more item: 72\n  Full diff:\n  - [44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72]\n  + [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72]\n  ?  ++++",
    0.00092
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 16 == ((36 - 20) - 1)\n +  where 16 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00028
  ]
}