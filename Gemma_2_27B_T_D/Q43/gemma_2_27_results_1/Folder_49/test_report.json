{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests43_49_1.py::test_list_of_primes", "location": ["tests43_49_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.757412433624268e-05, "start": 1738430633.7684362, "stop": 1738430633.768524, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_primes", "location": ["tests43_49_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020112097263336182, "start": 1738430633.7686949, "stop": 1738430633.7688963, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_primes", "location": ["tests43_49_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.413048297166824e-05, "start": 1738430633.769129, "stop": 1738430633.7692034, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_zeros_and_ones", "location": ["tests43_49_1.py", 11, "test_list_of_zeros_and_ones"], "keywords": {"test_list_of_zeros_and_ones": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.634369492530823e-05, "start": 1738430633.7700782, "stop": 1738430633.7701447, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_zeros_and_ones", "location": ["tests43_49_1.py", 11, "test_list_of_zeros_and_ones"], "keywords": {"test_list_of_zeros_and_ones": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001032315194606781, "start": 1738430633.7702143, "stop": 1738430633.770318, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_zeros_and_ones", "location": ["tests43_49_1.py", 11, "test_list_of_zeros_and_ones"], "keywords": {"test_list_of_zeros_and_ones": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.90557062625885e-05, "start": 1738430633.7704978, "stop": 1738430633.7705672, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_non_prime_nums", "location": ["tests43_49_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.018020212650299e-05, "start": 1738430633.7717617, "stop": 1738430633.771822, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_non_prime_nums", "location": ["tests43_49_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019595306366682053, "start": 1738430633.77189, "stop": 1738430633.772086, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_non_prime_nums", "location": ["tests43_49_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.7987868785858154e-05, "start": 1738430633.7722635, "stop": 1738430633.7723217, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_negative_nums", "location": ["tests43_49_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.47654926776886e-05, "start": 1738430633.7731578, "stop": 1738430633.773213, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_negative_nums", "location": ["tests43_49_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_D/Q43/gemma_2_27_results_1/Folder_49/generated_answer.py", "lineno": 7, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(50 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/gemma_2_27_results_1/Folder_49/tests43_49_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for num in nums[22:51]:", "            is_prime = True", "            if num <= 1:", "                is_prime = False", ">           for i in range(2, int(num ** 0.5) + 1):", "E           TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["nums", "[-1, -2, -3, -4, -5, -6, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/gemma_2_27_results_1/Folder_49/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(50 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/gemma_2_27_results_1/Folder_49/tests43_49_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        primes = []", "        for num in nums[22:51]:", "            is_prime = True", "            if num <= 1:", "                is_prime = False", ">           for i in range(2, int(num ** 0.5) + 1):", "E           TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["nums", "[-1, -2, -3, -4, -5, -6, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/gemma_2_27_results_1/Folder_49/generated_answer.py", "lineno": 7, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_D/Q43/gemma_2_27_results_1/Folder_49/generated_answer.py", "lineno": 7, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010365992784500122, "start": 1738430633.7732923, "stop": 1738430633.7733963, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_49_1.py::test_list_of_negative_nums", "location": ["tests43_49_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_49_1.py": 1, "Folder_49": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.98018479347229e-05, "start": 1738430633.782574, "stop": 1738430633.7826645, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "763d7f38c6984650b1c7eb0b7500cd80", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
