{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -30,  -83],\\n        [ -56,   68],\\n        [  83,   42],\\n        [ -46,  -74],\\n        [  43,  -65],\\n        [ -89,  -10],\\n        [  12,  -43],\\n        [  30,  -49],\\n        [  42,   57],\\n        [ -90,   23],\\n        [  92,  -17],\\n        [  39,   40],\\n        [  19,  -89],\\n        [  34,   10],\\n        [ -55,  -80],\\n        [ -54,  -45],\\n        [  51,  -79],\\n        [  27,  -31],\\n        [  57,  -11],\\n        [ -71,   89],\\n        [  78,  -84],\\n        [  66,   16],\\n        [  -5,   -9],\\n        [ -60,  -74],\\n        [ -76,  -28],\\n        [  37,  -60],\\n        [  96,  -94],\\n        [  -4,  -49],\\n        [  -9,   89],\\n        [ -97,  -66],\\n        [  -2,   -3],\\n        [ -81,    0],\\n        [   5,   11],\\n        [ -56,   31],\\n        [ -22,  -18],\\n        [ -85,   48],\\n        [ -14,   30],\\n        [ -29,   67],\\n        [  17,  -85],\\n        [  79,   90],\\n        [  24,  -92],\\n        [  86,  -27],\\n        [  44,   73],\\n        [  44,   85],\\n        [ -56,   90],\\n        [  14,   52],\\n        [ -16,   63],\\n        [-100,  -77]]))",
    0.00061
  ]
}