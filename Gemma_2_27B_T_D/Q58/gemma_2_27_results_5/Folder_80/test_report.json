{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.995047003030777e-05, "start": 1738440742.6578426, "stop": 1738440742.657943, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f2c256c576c7488db0bdf52039a50723", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013654399663209915, "start": 1738440742.6581292, "stop": 1738440742.658266, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f2c256c576c7488db0bdf52039a50723", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.398186087608337e-05, "start": 1738440742.6585393, "stop": 1738440742.6586034, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f2c256c576c7488db0bdf52039a50723", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.457526564598083e-05, "start": 1738440742.6595628, "stop": 1738440742.6596477, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f2c256c576c7488db0bdf52039a50723", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_D/Q58/gemma_2_27_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  43,  -52],\\n        [ -88,    6],\\n        [  37,   21],\\n        [  54,  -57],\\n        [  95,   93],\\n        [ -47,   37],\\n        [ -29,  -77],\\n        [  -2,    4],\\n        [  15,  -45],\\n        [ -76,   22],\\n        [  68,   84],\\n        [ -97,  100],\\n        [   9,  -27],\\n        [ -84,  -51],\\n        [  52,  -44],\\n        [ -30,  -89],\\n        [ -88,  -91],\\n        [ -76,   58],\\n        [  45,  -53],\\n        [  20,   19],\\n        [  44,  -35],\\n        [  15,   34],\\n        [ -68,  100],\\n        [  29,  -53],\\n        [  82,   65],\\n        [  32,   84],\\n        [   2,  -35],\\n        [  71,   49],\\n        [ -39,  -23],\\n        [ -51,  -62],\\n        [ -59,  -94],\\n        [  89,   54],\\n        [  41,   50],\\n        [ -57,   90],\\n        [ -76,  -51],\\n        [  93,  -68],\\n        [ -53,   46],\\n        [  55,   47],\\n        [  89,  -11],\\n        [  90,  100],\\n        [ -52,  -76],\\n        [   6,  -99],\\n        [ -46,  -25],\\n        [  29,   13],\\n        [ -70,   46],\\n        [  80,  -81],\\n        [  90,   15],\\n        [  41,  -43],\\n        [  93,   72],\\n        [ -39,   22],\\n        [ -40,  -36],\\n        [ -19,    9],\\n        [  91,   26],\\n        [  97,  -46],\\n        [  50,   56],\\n        [ -37,   42],\\n        [   9,   69],\\n        [  40,  -83],\\n        [ -97,  -56],\\n        [ -54,   -5],\\n        [ -63,   56],\\n        [  99,  -35],\\n        [  36,   78],\\n        [ -21,  -54],\\n        [  69,   72],\\n        [ -74,   71],\\n        [ -30,  -72],\\n        [  62,  -89],\\n        [ -31,  -17],\\n        [  36,  -80],\\n        [  79,   67],\\n        [ -12,  -32],\\n        [  27,   99],\\n        [-100,   -5],\\n        [  40,   30],\\n        [  11,   44],\\n        [ -73,  -38],\\n        [ -97,   71],\\n        [ -72,   -1],\\n        [ -84,  -83],\\n        [ -91,   58],\\n        [  63,   31],\\n        [  16,   32],\\n        [  87,  -15],\\n        [  47,  -92],\\n        [  48,   10],\\n        [   3,   22],\\n        [-100,  -65],\\n        [ -55,   25],\\n        [  66,  -57]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  43,  -52],\\n        [ -88,    6],\\n        [  37,   21],\\n        [  54,  -57],\\n        [  95,   93],\\n        [ -47,   37],\\n        [ -29,  -77],\\n        [  -2,    4],\\n        [  15,  -45],\\n        [ -76,   22],\\n        [  68,   84],\\n        [ -97,  100],\\n        [   9,  -27],\\n        [ -84,  -51],\\n        [  52,  -44],\\n        [ -30,  -89],\\n        [ -88,  -91],\\n        [ -76,   58],\\n        [  45,  -53],\\n        [  20,   19],\\n        [  44,  -35],\\n        [  15,   34],\\n        [ -68,  100],\\n        [  29,  -53],\\n        [  82,   65],\\n        [  32,   84],\\n        [   2,  -35],\\n        [  71,   49],\\n        [ -39,  -23],\\n        [ -51,  -62],\\n        [ -59,  -94],\\n        [  89,   54],\\n        [  41,   50],\\n        [ -57,   90],\\n        [ -76,  -51],\\n        [  93,  -68],\\n        [ -53,   46],\\n        [  55,   47],\\n        [  89,  -11],\\n        [  90,  100],\\n        [ -52,  -76],\\n        [   6,  -99],\\n        [ -46,  -25],\\n        [  29,   13],\\n        [ -70,   46],\\n        [  80,  -81],\\n        [  90,   15],\\n        [  41,  -43],\\n        [  93,   72],\\n        [ -39,   22],\\n        [ -40,  -36],\\n        [ -19,    9],\\n        [  91,   26],\\n        [  97,  -46],\\n        [  50,   56],\\n        [ -37,   42],\\n        [   9,   69],\\n        [  40,  -83],\\n        [ -97,  -56],\\n        [ -54,   -5],\\n        [ -63,   56],\\n        [  99,  -35],\\n        [  36,   78],\\n        [ -21,  -54],\\n        [  69,   72],\\n        [ -74,   71],\\n        [ -30,  -72],\\n        [  62,  -89],\\n        [ -31,  -17],\\n        [  36,  -80],\\n        [  79,   67],\\n        [ -12,  -32],\\n        [  27,   99],\\n        [-100,   -5],\\n        [  40,   30],\\n        [  11,   44],\\n        [ -73,  -38],\\n        [ -97,   71],\\n        [ -72,   -1],\\n        [ -84,  -83],\\n        [ -91,   58],\\n        [  63,   31],\\n        [  16,   32],\\n        [  87,  -15],\\n        [  47,  -92],\\n        [  48,   10],\\n        [   3,   22],\\n        [-100,  -65],\\n        [ -55,   25],\\n        [  66,  -57]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gemma_2_27_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  43,  -52],\\n        [ -88,    6],\\n        [  37,   21],\\n        [  54,  -57],\\n        [  95,   93],\\n        [ -47,   37],\\n        [ -29,  -77],\\n        [  -2,    4],\\n        [  15,  -45],\\n        [ -76,   22],\\n        [  68,   84],\\n        [ -97,  100],\\n        [   9,  -27],\\n        [ -84,  -51],\\n        [  52,  -44],\\n        [ -30,  -89],\\n        [ -88,  -91],\\n        [ -76,   58],\\n        [  45,  -53],\\n        [  20,   19],\\n        [  44,  -35],\\n        [  15,   34],\\n        [ -68,  100],\\n        [  29,  -53],\\n        [  82,   65],\\n        [  32,   84],\\n        [   2,  -35],\\n        [  71,   49],\\n        [ -39,  -23],\\n        [ -51,  -62],\\n        [ -59,  -94],\\n        [  89,   54],\\n        [  41,   50],\\n        [ -57,   90],\\n        [ -76,  -51],\\n        [  93,  -68],\\n        [ -53,   46],\\n        [  55,   47],\\n        [  89,  -11],\\n        [  90,  100],\\n        [ -52,  -76],\\n        [   6,  -99],\\n        [ -46,  -25],\\n        [  29,   13],\\n        [ -70,   46],\\n        [  80,  -81],\\n        [  90,   15],\\n        [  41,  -43],\\n        [  93,   72],\\n        [ -39,   22],\\n        [ -40,  -36],\\n        [ -19,    9],\\n        [  91,   26],\\n        [  97,  -46],\\n        [  50,   56],\\n        [ -37,   42],\\n        [   9,   69],\\n        [  40,  -83],\\n        [ -97,  -56],\\n        [ -54,   -5],\\n        [ -63,   56],\\n        [  99,  -35],\\n        [  36,   78],\\n        [ -21,  -54],\\n        [  69,   72],\\n        [ -74,   71],\\n        [ -30,  -72],\\n        [  62,  -89],\\n        [ -31,  -17],\\n        [  36,  -80],\\n        [  79,   67],\\n        [ -12,  -32],\\n        [  27,   99],\\n        [-100,   -5],\\n        [  40,   30],\\n        [  11,   44],\\n        [ -73,  -38],\\n        [ -97,   71],\\n        [ -72,   -1],\\n        [ -84,  -83],\\n        [ -91,   58],\\n        [  63,   31],\\n        [  16,   32],\\n        [  87,  -15],\\n        [  47,  -92],\\n        [  48,   10],\\n        [   3,   22],\\n        [-100,  -65],\\n        [ -55,   25],\\n        [  66,  -57]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gemma_2_27_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_D/Q58/gemma_2_27_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  43,  -52],\\n        [ -88,    6],\\n        [  37,   21],\\n        [  54,  -57],\\n        [  95,   93],\\n        [ -47,   37],\\n        [ -29,  -77],\\n        [  -2,    4],\\n        [  15,  -45],\\n        [ -76,   22],\\n        [  68,   84],\\n        [ -97,  100],\\n        [   9,  -27],\\n        [ -84,  -51],\\n        [  52,  -44],\\n        [ -30,  -89],\\n        [ -88,  -91],\\n        [ -76,   58],\\n        [  45,  -53],\\n        [  20,   19],\\n        [  44,  -35],\\n        [  15,   34],\\n        [ -68,  100],\\n        [  29,  -53],\\n        [  82,   65],\\n        [  32,   84],\\n        [   2,  -35],\\n        [  71,   49],\\n        [ -39,  -23],\\n        [ -51,  -62],\\n        [ -59,  -94],\\n        [  89,   54],\\n        [  41,   50],\\n        [ -57,   90],\\n        [ -76,  -51],\\n        [  93,  -68],\\n        [ -53,   46],\\n        [  55,   47],\\n        [  89,  -11],\\n        [  90,  100],\\n        [ -52,  -76],\\n        [   6,  -99],\\n        [ -46,  -25],\\n        [  29,   13],\\n        [ -70,   46],\\n        [  80,  -81],\\n        [  90,   15],\\n        [  41,  -43],\\n        [  93,   72],\\n        [ -39,   22],\\n        [ -40,  -36],\\n        [ -19,    9],\\n        [  91,   26],\\n        [  97,  -46],\\n        [  50,   56],\\n        [ -37,   42],\\n        [   9,   69],\\n        [  40,  -83],\\n        [ -97,  -56],\\n        [ -54,   -5],\\n        [ -63,   56],\\n        [  99,  -35],\\n        [  36,   78],\\n        [ -21,  -54],\\n        [  69,   72],\\n        [ -74,   71],\\n        [ -30,  -72],\\n        [  62,  -89],\\n        [ -31,  -17],\\n        [  36,  -80],\\n        [  79,   67],\\n        [ -12,  -32],\\n        [  27,   99],\\n        [-100,   -5],\\n        [  40,   30],\\n        [  11,   44],\\n        [ -73,  -38],\\n        [ -97,   71],\\n        [ -72,   -1],\\n        [ -84,  -83],\\n        [ -91,   58],\\n        [  63,   31],\\n        [  16,   32],\\n        [  87,  -15],\\n        [  47,  -92],\\n        [  48,   10],\\n        [   3,   22],\\n        [-100,  -65],\\n        [ -55,   25],\\n        [  66,  -57]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000936608761548996, "start": 1738440742.6597414, "stop": 1738440742.6606784, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f2c256c576c7488db0bdf52039a50723", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011211168020963669, "start": 1738440742.6796892, "stop": 1738440742.6798022, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f2c256c576c7488db0bdf52039a50723", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
