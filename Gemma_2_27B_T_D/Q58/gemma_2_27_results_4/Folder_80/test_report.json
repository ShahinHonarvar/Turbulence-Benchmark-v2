{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_4.py::test_matrix_of_one_integer", "location": ["tests58_80_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013820547610521317, "start": 1738440441.6331148, "stop": 1738440441.6332533, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6367d54c9ec34f6eb9966d408dd8197e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_one_integer", "location": ["tests58_80_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024327076971530914, "start": 1738440441.6334283, "stop": 1738440441.633672, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6367d54c9ec34f6eb9966d408dd8197e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_one_integer", "location": ["tests58_80_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.386785000562668e-05, "start": 1738440441.6339831, "stop": 1738440441.6340575, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6367d54c9ec34f6eb9966d408dd8197e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_having_180_integers", "location": ["tests58_80_4.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.408166468143463e-05, "start": 1738440441.6348538, "stop": 1738440441.6349385, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6367d54c9ec34f6eb9966d408dd8197e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_having_180_integers", "location": ["tests58_80_4.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_D/Q58/gemma_2_27_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -84,  -32],\\n        [  10,  -90],\\n        [ -92,   52],\\n        [  45,   33],\\n        [  92,    0],\\n        [  66,   86],\\n        [   4,  -35],\\n        [  -2,  -92],\\n        [ -97,   54],\\n        [ -82,   80],\\n        [ -74,   76],\\n        [  42,  -24],\\n        [  28,   84],\\n        [ -48,   28],\\n        [ -57,  -23],\\n        [ -54,  -55],\\n        [ -38,  -77],\\n        [  91,  -40],\\n        [  74,    2],\\n        [   2,   56],\\n        [  53,  -28],\\n        [ -84,   59],\\n        [  94,   24],\\n        [ -63,  -53],\\n        [ -17,  -86],\\n        [  34,  -14],\\n        [  90,   89],\\n        [  35,  -67],\\n        [  57,  -81],\\n        [  24,   36],\\n        [   7,   24],\\n        [  72,  -31],\\n        [  22,  -52],\\n        [  66,   97],\\n        [  31,   79],\\n        [  85,  -56],\\n        [  18,   54],\\n        [  23,  -12],\\n        [  37,  -25],\\n        [  38,  -30],\\n        [  73,  -25],\\n        [  64,  100],\\n        [  63,  -61],\\n        [ -92,   50],\\n        [  88,    5],\\n        [  33,   68],\\n        [  47,  -60],\\n        [  61,   41],\\n        [   5,  -34],\\n        [ -47, -100],\\n        [  80,  -15],\\n        [ -21,  -22],\\n        [  59,  -50],\\n        [ -81,   11],\\n        [ -49,   23],\\n        [ -42,  -89],\\n        [  25,  -12],\\n        [ -39,   -5],\\n        [  40,   53],\\n        [ -47,  -37],\\n        [  87,   73],\\n        [  90,  -25],\\n        [  74,   53],\\n        [  16,   87],\\n        [ -59,   61],\\n        [  44,   50],\\n        [  57,  -76],\\n        [ -58,    7],\\n        [  22,   36],\\n        [ -71,   43],\\n        [ -31,  -71],\\n        [ -73,  -62],\\n        [  -1,   -5],\\n        [  70,   67],\\n        [  28,  -37],\\n        [  48,  -58],\\n        [  89,   76],\\n        [ -41,  -42],\\n        [ -76,   34],\\n        [  48,   58],\\n        [  63,  -52],\\n        [ -55,  -44],\\n        [ -23,  -23],\\n        [  72,   52],\\n        [ -74,  -72],\\n        [  54,  -54],\\n        [ -53,    9],\\n        [ -99,   55],\\n        [  32,   18],\\n        [ -38,   59]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -84,  -32],\\n        [  10,  -90],\\n        [ -92,   52],\\n        [  45,   33],\\n        [  92,    0],\\n        [  66,   86],\\n        [   4,  -35],\\n        [  -2,  -92],\\n        [ -97,   54],\\n        [ -82,   80],\\n        [ -74,   76],\\n        [  42,  -24],\\n        [  28,   84],\\n        [ -48,   28],\\n        [ -57,  -23],\\n        [ -54,  -55],\\n        [ -38,  -77],\\n        [  91,  -40],\\n        [  74,    2],\\n        [   2,   56],\\n        [  53,  -28],\\n        [ -84,   59],\\n        [  94,   24],\\n        [ -63,  -53],\\n        [ -17,  -86],\\n        [  34,  -14],\\n        [  90,   89],\\n        [  35,  -67],\\n        [  57,  -81],\\n        [  24,   36],\\n        [   7,   24],\\n        [  72,  -31],\\n        [  22,  -52],\\n        [  66,   97],\\n        [  31,   79],\\n        [  85,  -56],\\n        [  18,   54],\\n        [  23,  -12],\\n        [  37,  -25],\\n        [  38,  -30],\\n        [  73,  -25],\\n        [  64,  100],\\n        [  63,  -61],\\n        [ -92,   50],\\n        [  88,    5],\\n        [  33,   68],\\n        [  47,  -60],\\n        [  61,   41],\\n        [   5,  -34],\\n        [ -47, -100],\\n        [  80,  -15],\\n        [ -21,  -22],\\n        [  59,  -50],\\n        [ -81,   11],\\n        [ -49,   23],\\n        [ -42,  -89],\\n        [  25,  -12],\\n        [ -39,   -5],\\n        [  40,   53],\\n        [ -47,  -37],\\n        [  87,   73],\\n        [  90,  -25],\\n        [  74,   53],\\n        [  16,   87],\\n        [ -59,   61],\\n        [  44,   50],\\n        [  57,  -76],\\n        [ -58,    7],\\n        [  22,   36],\\n        [ -71,   43],\\n        [ -31,  -71],\\n        [ -73,  -62],\\n        [  -1,   -5],\\n        [  70,   67],\\n        [  28,  -37],\\n        [  48,  -58],\\n        [  89,   76],\\n        [ -41,  -42],\\n        [ -76,   34],\\n        [  48,   58],\\n        [  63,  -52],\\n        [ -55,  -44],\\n        [ -23,  -23],\\n        [  72,   52],\\n        [ -74,  -72],\\n        [  54,  -54],\\n        [ -53,    9],\\n        [ -99,   55],\\n        [  32,   18],\\n        [ -38,   59]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gemma_2_27_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -84,  -32],\\n        [  10,  -90],\\n        [ -92,   52],\\n        [  45,   33],\\n        [  92,    0],\\n        [  66,   86],\\n        [   4,  -35],\\n        [  -2,  -92],\\n        [ -97,   54],\\n        [ -82,   80],\\n        [ -74,   76],\\n        [  42,  -24],\\n        [  28,   84],\\n        [ -48,   28],\\n        [ -57,  -23],\\n        [ -54,  -55],\\n        [ -38,  -77],\\n        [  91,  -40],\\n        [  74,    2],\\n        [   2,   56],\\n        [  53,  -28],\\n        [ -84,   59],\\n        [  94,   24],\\n        [ -63,  -53],\\n        [ -17,  -86],\\n        [  34,  -14],\\n        [  90,   89],\\n        [  35,  -67],\\n        [  57,  -81],\\n        [  24,   36],\\n        [   7,   24],\\n        [  72,  -31],\\n        [  22,  -52],\\n        [  66,   97],\\n        [  31,   79],\\n        [  85,  -56],\\n        [  18,   54],\\n        [  23,  -12],\\n        [  37,  -25],\\n        [  38,  -30],\\n        [  73,  -25],\\n        [  64,  100],\\n        [  63,  -61],\\n        [ -92,   50],\\n        [  88,    5],\\n        [  33,   68],\\n        [  47,  -60],\\n        [  61,   41],\\n        [   5,  -34],\\n        [ -47, -100],\\n        [  80,  -15],\\n        [ -21,  -22],\\n        [  59,  -50],\\n        [ -81,   11],\\n        [ -49,   23],\\n        [ -42,  -89],\\n        [  25,  -12],\\n        [ -39,   -5],\\n        [  40,   53],\\n        [ -47,  -37],\\n        [  87,   73],\\n        [  90,  -25],\\n        [  74,   53],\\n        [  16,   87],\\n        [ -59,   61],\\n        [  44,   50],\\n        [  57,  -76],\\n        [ -58,    7],\\n        [  22,   36],\\n        [ -71,   43],\\n        [ -31,  -71],\\n        [ -73,  -62],\\n        [  -1,   -5],\\n        [  70,   67],\\n        [  28,  -37],\\n        [  48,  -58],\\n        [  89,   76],\\n        [ -41,  -42],\\n        [ -76,   34],\\n        [  48,   58],\\n        [  63,  -52],\\n        [ -55,  -44],\\n        [ -23,  -23],\\n        [  72,   52],\\n        [ -74,  -72],\\n        [  54,  -54],\\n        [ -53,    9],\\n        [ -99,   55],\\n        [  32,   18],\\n        [ -38,   59]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/gemma_2_27_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_D/Q58/gemma_2_27_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -84,  -32],\\n        [  10,  -90],\\n        [ -92,   52],\\n        [  45,   33],\\n        [  92,    0],\\n        [  66,   86],\\n        [   4,  -35],\\n        [  -2,  -92],\\n        [ -97,   54],\\n        [ -82,   80],\\n        [ -74,   76],\\n        [  42,  -24],\\n        [  28,   84],\\n        [ -48,   28],\\n        [ -57,  -23],\\n        [ -54,  -55],\\n        [ -38,  -77],\\n        [  91,  -40],\\n        [  74,    2],\\n        [   2,   56],\\n        [  53,  -28],\\n        [ -84,   59],\\n        [  94,   24],\\n        [ -63,  -53],\\n        [ -17,  -86],\\n        [  34,  -14],\\n        [  90,   89],\\n        [  35,  -67],\\n        [  57,  -81],\\n        [  24,   36],\\n        [   7,   24],\\n        [  72,  -31],\\n        [  22,  -52],\\n        [  66,   97],\\n        [  31,   79],\\n        [  85,  -56],\\n        [  18,   54],\\n        [  23,  -12],\\n        [  37,  -25],\\n        [  38,  -30],\\n        [  73,  -25],\\n        [  64,  100],\\n        [  63,  -61],\\n        [ -92,   50],\\n        [  88,    5],\\n        [  33,   68],\\n        [  47,  -60],\\n        [  61,   41],\\n        [   5,  -34],\\n        [ -47, -100],\\n        [  80,  -15],\\n        [ -21,  -22],\\n        [  59,  -50],\\n        [ -81,   11],\\n        [ -49,   23],\\n        [ -42,  -89],\\n        [  25,  -12],\\n        [ -39,   -5],\\n        [  40,   53],\\n        [ -47,  -37],\\n        [  87,   73],\\n        [  90,  -25],\\n        [  74,   53],\\n        [  16,   87],\\n        [ -59,   61],\\n        [  44,   50],\\n        [  57,  -76],\\n        [ -58,    7],\\n        [  22,   36],\\n        [ -71,   43],\\n        [ -31,  -71],\\n        [ -73,  -62],\\n        [  -1,   -5],\\n        [  70,   67],\\n        [  28,  -37],\\n        [  48,  -58],\\n        [  89,   76],\\n        [ -41,  -42],\\n        [ -76,   34],\\n        [  48,   58],\\n        [  63,  -52],\\n        [ -55,  -44],\\n        [ -23,  -23],\\n        [  72,   52],\\n        [ -74,  -72],\\n        [  54,  -54],\\n        [ -53,    9],\\n        [ -99,   55],\\n        [  32,   18],\\n        [ -38,   59]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009293630719184875, "start": 1738440441.6351066, "stop": 1738440441.6360364, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6367d54c9ec34f6eb9966d408dd8197e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_having_180_integers", "location": ["tests58_80_4.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0037921397015452385, "start": 1738440441.6668632, "stop": 1738440441.670656, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6367d54c9ec34f6eb9966d408dd8197e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
