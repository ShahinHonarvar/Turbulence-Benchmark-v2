{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -71,   -4],\\n        [ -40,   79],\\n        [  15,  -75],\\n        [ -24,   10],\\n        [  32,  -35],\\n        [  73, -100],\\n        [  53,  -26],\\n        [  59,   72],\\n        [  64,   99],\\n        [  90,  -65],\\n        [ -58,  -42],\\n        [  11,  -69],\\n        [ -23,   52],\\n        [ -85,    1],\\n        [  34,  -95],\\n        [  12,  -31],\\n        [ -82,  -31],\\n        [  98,   91],\\n        [  43,   50],\\n        [ -78,   35],\\n        [ -47,   -8],\\n        [ -68,   -7],\\n        [ -42,   77],\\n        [  31,   52],\\n        [ -57,   76],\\n        [  -1,   20],\\n        [  44,  -43],\\n        [  73,   67],\\n        [   1,  -64],\\n        [  95,  -89],\\n        [  86,   52],\\n        [  65,   11],\\n        [  61,  -10],\\n        [  43,  -34],\\n        [  18,   79],\\n        [ -54,    3],\\n        [ -36,   -8],\\n        [ -47,  -14],\\n        [  94,  -95],\\n        [ -93,  -81],\\n        [ -39,   20],\\n        [  27,  -92],\\n        [ -84,   76],\\n        [ -13,   33],\\n        [  41,   14],\\n        [  98,   64],\\n        [ -74,   21],\\n        [ -32,  -23]]))",
    0.0006
  ]
}