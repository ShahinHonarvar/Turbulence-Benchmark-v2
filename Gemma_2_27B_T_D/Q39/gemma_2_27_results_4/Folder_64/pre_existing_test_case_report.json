{
  "parameter(s)": [
    39,
    "descending"
  ],
  "test_strings_of_size_equal_to_39": [
    "failed",
    "AssertionError: assert ([' ', '$', '...', '0', ...],) == ['~', '{', 'y...'w', 'u', ...]\n  At index 0 diff: [' ', '$', '%', '&', ',', '0', '1', '4', '5', '7', '>', '@', 'E', 'F', 'G', 'L', 'O', 'Q', 'R', 'U', 'W', 'X', '[', '_', 'a', 'd', 'f', 'g', 'k', 'l', 'n', 'p', 'q', 'u', 'w', 'x', 'y', '{', '~'] != '~'\n  Right contains 38 more items, first extra item: '{'\n  Full diff:\n  + (\n  - [\n  -  '~',\n  -  '{',...\n  \n  ...Full output truncated (79 lines hidden), use '-vv' to show",
    0.00105
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert (['#', '$', '...', '2', ...],) == [['#', '$', '...*', '2', ...]]\n  Full diff:\n  - [\n  + (\n     ['#',\n      '$',\n      '&',\n      ')',...\n  \n  ...Full output truncated (39 lines hidden), use '-vv' to show",
    0.00083
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 1 == 39\n +  where 1 = len((['!', '$', '%', '(', ')', '*', ...],))\n +    where (['!', '$', '%', '(', ')', '*', ...],) = return_n_greatest_chars('(IkJAfVNs<)pota5xRnwD CPhb%evE*!$,0-Y_2M')",
    0.00045
  ]
}