{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests33_61_1.py::test_repeat_consonant_char", "location": ["tests33_61_1.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_61_1.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.874945342540741e-05, "start": 1738448642.1139255, "stop": 1738448642.1140141, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0bd395c32ef84558abf1803461b6104a", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_61_1.py::test_repeat_consonant_char", "location": ["tests33_61_1.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_61_1.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.899718523025513e-05, "start": 1738448642.114139, "stop": 1738448642.1142285, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0bd395c32ef84558abf1803461b6104a", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_61_1.py::test_repeat_consonant_char", "location": ["tests33_61_1.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_61_1.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.695130676031113e-05, "start": 1738448642.1144369, "stop": 1738448642.1144943, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0bd395c32ef84558abf1803461b6104a", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_61_1.py::test_distinct_consonant_chars", "location": ["tests33_61_1.py", 10, "test_distinct_consonant_chars"], "keywords": {"test_distinct_consonant_chars": 1, "tests33_61_1.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.652902811765671e-05, "start": 1738448642.115606, "stop": 1738448642.1156728, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0bd395c32ef84558abf1803461b6104a", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_61_1.py::test_distinct_consonant_chars", "location": ["tests33_61_1.py", 10, "test_distinct_consonant_chars"], "keywords": {"test_distinct_consonant_chars": 1, "tests33_61_1.py": 1, "Folder_61": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q33/starcoder2_15b_instruct_v0_1_results_1/Folder_61/tests33_61_1.py", "lineno": 13, "message": "AssertionError: assert not ['D', 'F']\n +  where ['D', 'F'] = return_vowels('BCDFGHJKLMNPQRSTVXZWYbcdfghjklmnpqrstvxzwy')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_distinct_consonant_chars():", "        s = 'BCDFGHJKLMNPQRSTVXZWYbcdfghjklmnpqrstvxzwy'", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['D', 'F']", "E        +  where ['D', 'F'] = return_vowels('BCDFGHJKLMNPQRSTVXZWYbcdfghjklmnpqrstvxzwy')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/starcoder2_15b_instruct_v0_1_results_1/Folder_61/tests33_61_1.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_distinct_consonant_chars():", "        s = 'BCDFGHJKLMNPQRSTVXZWYbcdfghjklmnpqrstvxzwy'", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['D', 'F']", "E        +  where ['D', 'F'] = return_vowels('BCDFGHJKLMNPQRSTVXZWYbcdfghjklmnpqrstvxzwy')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/starcoder2_15b_instruct_v0_1_results_1/Folder_61/tests33_61_1.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q33/starcoder2_15b_instruct_v0_1_results_1/Folder_61/tests33_61_1.py", "lineno": 13, "message": "AssertionError: assert not ['D', 'F']\n +  where ['D', 'F'] = return_vowels('BCDFGHJKLMNPQRSTVXZWYbcdfghjklmnpqrstvxzwy')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001349523663520813, "start": 1738448642.1157408, "stop": 1738448642.1158757, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0bd395c32ef84558abf1803461b6104a", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_61_1.py::test_distinct_consonant_chars", "location": ["tests33_61_1.py", 10, "test_distinct_consonant_chars"], "keywords": {"test_distinct_consonant_chars": 1, "tests33_61_1.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001302110031247139, "start": 1738448642.1245487, "stop": 1738448642.1246793, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0bd395c32ef84558abf1803461b6104a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
