ChatCompletion(id='', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Here's how you can implement the function using Python:\n\n```python\ndef all_left_right_truncatable_prime(numbers):\n    left_right_truncatable_primes = []\n    for number in numbers:\n        is_left_right_truncatable_prime = True\n        number_string = str(number)\n        for i in range(len(number_string)):\n            left_truncatable_prime = int(number_string[i:])\n            right_truncatable_prime = int(number_string[:len(number_string) - i])\n            if not is_prime(left_truncatable_prime) or not is_prime(right_truncatable_prime):\n                is_left_right_truncatable_prime = False\n                break\n        if is_left_right_truncatable_prime:\n            left_right_truncatable_primes.append(number)\n    return sorted(left_right_truncatable_primes)\n\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n```", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1730689110, model='/repository', object='chat.completion', service_tier=None, system_fingerprint='2.3.1-sha-a094729', usage=CompletionUsage(completion_tokens=289, prompt_tokens=234, total_tokens=523))