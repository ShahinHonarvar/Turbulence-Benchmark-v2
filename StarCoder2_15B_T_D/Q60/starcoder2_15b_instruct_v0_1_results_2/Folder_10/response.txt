ChatCompletion(id='', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Here's how you can implement this:\n\n```python\ndef is_truncatable(num):\n    if num < 10:\n        return False\n    num_str = str(num)\n    for i in range(len(num_str)):\n        truncated_num = int(num_str[i+1:]) if i == 0 else int(num_str[:i] + num_str[i+1:])\n        if not is_prime(truncated_num):\n            return False\n\n    return True\n\n\ndef is_prime(num):\n    if num < 2:\n        return False\n    if num == 2:\n        return True\n    if num % 2 == 0:\n        return False\n    for i in range(3, int(num ** 0.5) + 1, 2):\n        if num % i == 0:\n            return False\n\n    return True\n\n\ndef all_left_right_truncatable_prime(nums):\n    result = []\n    for num in nums:\n        if is_truncatable(num):\n            result.append(num)\n\n    return sorted(result, reverse=True)\n```", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1730688344, model='/repository', object='chat.completion', service_tier=None, system_fingerprint='2.3.1-sha-a094729', usage=CompletionUsage(completion_tokens=245, prompt_tokens=234, total_tokens=479))