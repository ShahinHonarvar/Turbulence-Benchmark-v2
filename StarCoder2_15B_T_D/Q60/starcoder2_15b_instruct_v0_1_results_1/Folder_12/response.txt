ChatCompletion(id='', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Here is a Python function that implements this approach:\n\n```python\ndef all_left_right_truncatable_prime(nums):\n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num ** 0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n\n    x = nums[70]\n    truncatable_primes = set()\n\n    for num in range(2, x + 1):\n        if is_prime(num):\n            digits = [int(d) for d in str(num)]\n            is_truncatable = True\n            for i in range(1, len(digits)):\n                if not is_prime(int(''.join(map(str, digits[i:])))) or not is_prime(int(''.join(map(str, digits[:-i])))):\n                    is_truncatable = False\n                    break\n            if is_truncatable:\n                truncatable_primes.add(num)\n\n    return sorted(list(truncatable_primes), reverse=True)\n```", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1730686732, model='/repository', object='chat.completion', service_tier=None, system_fingerprint='2.3.1-sha-a094729', usage=CompletionUsage(completion_tokens=243, prompt_tokens=234, total_tokens=477))