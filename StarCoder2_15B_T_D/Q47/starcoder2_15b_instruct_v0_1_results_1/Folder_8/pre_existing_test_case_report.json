{
  "parameter(s)": [
    17,
    72,
    50,
    51
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00019
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00014
  ],
  "test_location_of_palindrome": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_punctuations_and_space": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab'}\n +  where {'cabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab'} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')",
    0.00048
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n    {\n  -  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n     'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n    }",
    0.0006
  ]
}