{
  "parameter(s)": [
    27,
    77,
    18,
    19
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00018
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00013
  ],
  "test_location_of_palindrome": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_punctuations_and_space": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {'abcabcabcabcabcabca', 'bcabcabcabcabcabcab'}\n +  where {'abcabcabcabcabcabca', 'bcabcabcabcabcabcab'} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')",
    0.00024
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaa'}\n  + {'aaaaaaaaaaaaaaaaaaa'}",
    0.00064
  ]
}