ChatCompletion(id='', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Here is a Python function that implements this approach:\n\n```python\nfrom typing import List\n\ndef lists_with_product_equal_n(nums: List[int], n: int) -> List[List[int]]:\n    """\n    Finds all sublists of `nums` such that their product is equal to `n`.\n    """\n    sublists = []\n\n    for i in range(len(nums)):\n        curr_product = 1\n        curr_sublist = []\n\n        for j in range(i, len(nums)):\n            curr_product *= nums[j]\n            curr_sublist.append(nums[j])\n\n            if curr_product == n:\n                sublists.append(curr_sublist[:])\n\n            if curr_product > n:\n                break\n\n    return sublists\n```', refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1730664931, model='/repository', object='chat.completion', service_tier=None, system_fingerprint='2.3.1-sha-a094729', usage=CompletionUsage(completion_tokens=171, prompt_tokens=238, total_tokens=409))