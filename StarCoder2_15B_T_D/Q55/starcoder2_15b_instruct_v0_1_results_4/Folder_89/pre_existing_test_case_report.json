{
  "parameter(s)": [
    57
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00015
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.0001
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[57], [57, 5... 57, 57], ...] == [[57], [57], ...7], [57], ...]\n  At index 1 diff: [57, 57] != [57]\n  Left contains 3240 more items, first extra item: [57]\n  Full diff:\n    [\n     [57],\n  +  [57,\n  +   57],...\n  \n  ...Full output truncated (91879 lines hidden), use '-vv' to show",
    0.15861
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x760603d71a00>([57])\n +    where <built-in method count of list object at 0x760603d71a00> = [[1], [1, 57], [1, 57, 1], [1, 57, 1, 57], [1, 57, 1, 57, 1], [1, 57, 1, 57, 1, 57], ...].count\n +  and   3 = <built-in method count of list object at 0x760603d71a00>([1, 57])\n +    where <built-in method count of list object at 0x760603d71a00> = [[1], [1, 57], [1, 57, 1], [1, 57, 1, 57], [1, 57, 1, 57, 1], [1, 57, 1, 57, 1, 57], ...].count\n +  and   2 = <built-in method count of list object at 0x760603d71a00>([57, 1])\n +    where <built-in method count of list object at 0x760603d71a00> = [[1], [1, 57], [1, 57, 1], [1, 57, 1, 57], [1, 57, 1, 57, 1], [1, 57, 1, 57, 1, 57], ...].count",
    0.00049
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 1 == 57\n +  where 1 = <built-in function prod>([1])\n +    where <built-in function prod> = math.prod",
    0.00026
  ]
}