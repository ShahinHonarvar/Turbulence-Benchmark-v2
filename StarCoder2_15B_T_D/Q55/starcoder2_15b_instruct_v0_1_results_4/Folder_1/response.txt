ChatCompletion(id='', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Here's how you can implement the function:\n\n```python\ndef lists_with_product_equal_n(lst):\n    result = []\n\n    def find_sublists(sublist, product, index):\n        if product == -51:\n            result.append(sublist)\n        elif product!= -51 and index < len(lst):\n            find_sublists(sublist + [lst[index]], product * lst[index], index + 1)\n            find_sublists(sublist, product, index + 1)\n\n    find_sublists([], 1, 0)\n    return result\n```\n\nThis implementation uses a recursive function `find_sublists` to find all sublists that have a product equal to -51. It starts by calling `find_sublists` with an empty sublist, a product of 1, and an index of 0. The function then checks if the product is equal to -51. If so, it adds the sublist to the `result` list. If the product is not equal to -51 and the index is less than the length of the given list, it calls `find_sublists` twice: once with the current element appended to the sublist and once without. This allows the function to explore all possible combinations of sublists.", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1730664595, model='/repository', object='chat.completion', service_tier=None, system_fingerprint='2.3.1-sha-a094729', usage=CompletionUsage(completion_tokens=281, prompt_tokens=237, total_tokens=518))