{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests55_96_1.py::test_sublist_size", "location": ["tests55_96_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011952104978263378, "start": 1730935045.5043926, "stop": 1730935045.5045125, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_list_of_single_number", "location": ["tests55_96_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015854299999773502, "start": 1730935045.5045404, "stop": 1730935045.5046997, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_1.py::test_sublist_size", "location": ["tests55_96_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013138900976628065, "start": 1730935045.504713, "stop": 1730935045.5048444, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_sublist_size", "location": ["tests55_96_1.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.228091660887003e-05, "start": 1730935045.505079, "stop": 1730935045.5051417, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_list_of_several_same_number", "location": ["tests55_96_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019444606732577085, "start": 1730935045.5047555, "stop": 1730935045.5049505, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_96_1.py::test_return_elements_are_in_given_list", "location": ["tests55_96_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.62140441313386e-05, "start": 1730935045.5064783, "stop": 1730935045.5065649, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_return_elements_are_in_given_list", "location": ["tests55_96_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.94659897312522e-05, "start": 1730935045.506659, "stop": 1730935045.5067487, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_return_elements_are_in_given_list", "location": ["tests55_96_1.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.328608676791191e-05, "start": 1730935045.5069401, "stop": 1730935045.5069938, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_if_sublist_product_equals_number", "location": ["tests55_96_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.111792754381895e-05, "start": 1730935045.5075579, "stop": 1730935045.5076194, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_if_sublist_product_equals_number", "location": ["tests55_96_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.309104643762112e-05, "start": 1730935045.50769, "stop": 1730935045.5077834, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_if_sublist_product_equals_number", "location": ["tests55_96_1.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.835601430386305e-05, "start": 1730935045.5079641, "stop": 1730935045.5080128, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_1.py::test_list_of_single_number", "location": ["tests55_96_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q55/starcoder2_15b_instruct_v0_1_results_1/Folder_96/tests55_96_1.py", "lineno": 7, "message": "assert [] == [[0]]\n  Right contains one more item: [0]\n  Full diff:\n  - [[0]]\n  + []"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_single_number():", ">       assert lists_with_product_equal_n([0]) == [[0]]", "E       assert [] == [[0]]", "E         Right contains one more item: [0]", "E         Full diff:", "E         - [[0]]", "E         + []"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/starcoder2_15b_instruct_v0_1_results_1/Folder_96/tests55_96_1.py", "lineno": 7, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_single_number():", ">       assert lists_with_product_equal_n([0]) == [[0]]", "E       assert [] == [[0]]", "E         Right contains one more item: [0]", "E         Full diff:", "E         - [[0]]", "E         + []"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/starcoder2_15b_instruct_v0_1_results_1/Folder_96/tests55_96_1.py", "lineno": 7, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q55/starcoder2_15b_instruct_v0_1_results_1/Folder_96/tests55_96_1.py", "lineno": 7, "message": "assert [] == [[0]]\n  Right contains one more item: [0]\n  Full diff:\n  - [[0]]\n  + []"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003664110554382205, "start": 1730935045.5049672, "stop": 1730935045.505334, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_1.py::test_list_of_single_number", "location": ["tests55_96_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001104680122807622, "start": 1730935045.520362, "stop": 1730935045.5204737, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_1.py::test_list_of_several_same_number", "location": ["tests55_96_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if 0 == 0 or 0 == 1:", "            for i in range(1, n + 1):", "                l.append([0] * i)", "            l = l * n", "        elif 0 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[0]] * n", "    ", "        input_list = [0] * n", ">       assert lists_with_product_equal_n(input_list) == l"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/starcoder2_15b_instruct_v0_1_results_1/Folder_96/tests55_96_1.py", "lineno": 40, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    custom = util._reprcompare(ops[i], each_obj[i], each_obj[i + 1])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/rewrite.py", "lineno": 499, "message": "in _call_reprcompare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    hook_result = ihook.pytest_assertrepr_compare("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 141, "message": "in callbinrepr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_hooks.py", "lineno": 265, "message": "in __call__"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_manager.py", "lineno": 80, "message": "in _hookexec"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return util.assertrepr_compare(config=config, op=op, left=left, right=right)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 181, "message": "in pytest_assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation = _compare_eq_any(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 192, "message": "in assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    expl = _compare_eq_iterable(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 241, "message": "in _compare_eq_any"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in _compare_eq_iterable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in <genexpr>"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 872, "message": "in compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _fancy_replace(self, a, alo, ahi, b, blo, bhi):", "        r\"\"\"", "        When replacing one block of lines with another, search the blocks", "        for *similar* lines; the best-matching pair (if any) is used as a", "        synch point, and intraline difference marking is done on the", "        similar pair. Lots of work, but often worth it.", "    ", "        Example:", "    ", "        >>> d = Differ()", "        >>> results = d._fancy_replace(['abcDefghiJkl\\n'], 0, 1,", "        ...                            ['abcdefGhijkl\\n'], 0, 1)", "        >>> print(''.join(results), end=\"\")", "        - abcDefghiJkl", "        ?    ^  ^  ^", "        + abcdefGhijkl", "        ?    ^  ^  ^", "        \"\"\"", "    ", "        # don't synch up unless the lines have a similarity score of at", "        # least cutoff; best_ratio tracks the best score seen so far", "        best_ratio, cutoff = 0.74, 0.75", "        cruncher = SequenceMatcher(self.charjunk)", "        eqi, eqj = None, None   # 1st indices of equal lines (if any)", "    ", "        # search for the pair that matches best without being identical", "        # (identical lines must be junk lines, & we don't want to synch up", "        # on junk -- unless we have to)", "        for j in range(blo, bhi):", "            bj = b[j]", "            cruncher.set_seq2(bj)", "            for i in range(alo, ahi):", "                ai = a[i]", "                if ai == bj:", "                    if eqi is None:", "                        eqi, eqj = i, j", "                    continue", "                cruncher.set_seq1(ai)", "                # computing similarity is expensive, so use the quick", "                # upper bounds first -- have seen this speed up messy", "                # compares by a factor of 3.", "                # note that ratio() is only expensive to compute the first", "                # time it's called on a sequence pair; the expensive part", "                # of the computation is cached by cruncher", "                if cruncher.real_quick_ratio() > best_ratio and \\", ">                     cruncher.quick_ratio() > best_ratio and \\", "                      cruncher.ratio() > best_ratio:", "E                     Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["self", "<difflib.Differ object at 0x75f9c2df3890>"], ["a", "['[', ' [0],', ' [0,', '  0],', ' [0,', '  0,', ...]"], ["alo", "1"], ["ahi", "240318"], ["b", "['[', ' [0,', '  0],', ' [0,', '  0,', '  0],', ...]"], ["blo", "1"], ["bhi", "82082"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if 0 == 0 or 0 == 1:", "            for i in range(1, n + 1):", "                l.append([0] * i)", "            l = l * n", "        elif 0 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[0]] * n", "    ", "        input_list = [0] * n", ">       assert lists_with_product_equal_n(input_list) == l"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/starcoder2_15b_instruct_v0_1_results_1/Folder_96/tests55_96_1.py", "lineno": 40, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    custom = util._reprcompare(ops[i], each_obj[i], each_obj[i + 1])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/rewrite.py", "lineno": 499, "message": "in _call_reprcompare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    hook_result = ihook.pytest_assertrepr_compare("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 141, "message": "in callbinrepr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_hooks.py", "lineno": 265, "message": "in __call__"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_manager.py", "lineno": 80, "message": "in _hookexec"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return util.assertrepr_compare(config=config, op=op, left=left, right=right)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 181, "message": "in pytest_assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation = _compare_eq_any(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 192, "message": "in assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    expl = _compare_eq_iterable(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 241, "message": "in _compare_eq_any"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in _compare_eq_iterable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in <genexpr>"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 872, "message": "in compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _fancy_replace(self, a, alo, ahi, b, blo, bhi):", "        r\"\"\"", "        When replacing one block of lines with another, search the blocks", "        for *similar* lines; the best-matching pair (if any) is used as a", "        synch point, and intraline difference marking is done on the", "        similar pair. Lots of work, but often worth it.", "    ", "        Example:", "    ", "        >>> d = Differ()", "        >>> results = d._fancy_replace(['abcDefghiJkl\\n'], 0, 1,", "        ...                            ['abcdefGhijkl\\n'], 0, 1)", "        >>> print(''.join(results), end=\"\")", "        - abcDefghiJkl", "        ?    ^  ^  ^", "        + abcdefGhijkl", "        ?    ^  ^  ^", "        \"\"\"", "    ", "        # don't synch up unless the lines have a similarity score of at", "        # least cutoff; best_ratio tracks the best score seen so far", "        best_ratio, cutoff = 0.74, 0.75", "        cruncher = SequenceMatcher(self.charjunk)", "        eqi, eqj = None, None   # 1st indices of equal lines (if any)", "    ", "        # search for the pair that matches best without being identical", "        # (identical lines must be junk lines, & we don't want to synch up", "        # on junk -- unless we have to)", "        for j in range(blo, bhi):", "            bj = b[j]", "            cruncher.set_seq2(bj)", "            for i in range(alo, ahi):", "                ai = a[i]", "                if ai == bj:", "                    if eqi is None:", "                        eqi, eqj = i, j", "                    continue", "                cruncher.set_seq1(ai)", "                # computing similarity is expensive, so use the quick", "                # upper bounds first -- have seen this speed up messy", "                # compares by a factor of 3.", "                # note that ratio() is only expensive to compute the first", "                # time it's called on a sequence pair; the expensive part", "                # of the computation is cached by cruncher", "                if cruncher.real_quick_ratio() > best_ratio and \\", ">                     cruncher.quick_ratio() > best_ratio and \\", "                      cruncher.ratio() > best_ratio:", "E                     Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["self", "<difflib.Differ object at 0x75f9c2df3890>"], ["a", "['[', ' [0],', ' [0,', '  0],', ' [0,', '  0,', ...]"], ["alo", "1"], ["ahi", "240318"], ["b", "['[', ' [0,', '  0],', ' [0,', '  0,', '  0],', ...]"], ["blo", "1"], ["bhi", "82082"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (129715597739584) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999511178932153, "start": 1730935045.5052397, "stop": 1730935052.5047522, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_96_1.py::test_list_of_several_same_number", "location": ["tests55_96_1.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_96_1.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (129715597739584) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.0001224899897351861, "start": 1730935052.5512772, "stop": 1730935052.5514002, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "02529323ff8740fcb084a8b8b012621b", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
