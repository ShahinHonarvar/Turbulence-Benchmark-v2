{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_75_5.py::test_matrix_of_one_integer", "location": ["tests58_75_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_75_5.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012942589819431305, "start": 1738464772.326178, "stop": 1738464772.3263078, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8102e9a08234479ea863df9b6f7aeda1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_75_5.py::test_matrix_of_one_integer", "location": ["tests58_75_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_75_5.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000799800269305706, "start": 1738464772.3264813, "stop": 1738464772.3272817, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8102e9a08234479ea863df9b6f7aeda1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_75_5.py::test_matrix_of_one_integer", "location": ["tests58_75_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_75_5.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013490673154592514, "start": 1738464772.3316622, "stop": 1738464772.3317978, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8102e9a08234479ea863df9b6f7aeda1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_75_5.py::test_matrix_of_having_80_integers", "location": ["tests58_75_5.py", 28, "test_matrix_of_having_80_integers"], "keywords": {"test_matrix_of_having_80_integers": 1, "__wrapped__": 1, "tests58_75_5.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010030064731836319, "start": 1738464772.3326628, "stop": 1738464772.3327634, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8102e9a08234479ea863df9b6f7aeda1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_75_5.py::test_matrix_of_having_80_integers", "location": ["tests58_75_5.py", 28, "test_matrix_of_having_80_integers"], "keywords": {"test_matrix_of_having_80_integers": 1, "__wrapped__": 1, "tests58_75_5.py": 1, "Folder_75": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_5/Folder_75/tests58_75_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 83, -91],\\n        [ 91,  63],\\n        [-45,   5],\\n        [ 40,   6],\\n        [ 85,  75],\\n        [ 41, -61],\\n        [-62,  63],\\n        [-60,  70],\\n        [ 59, -95],\\n        [ 28,  51],\\n        [ 61, -13],\\n        [ 89,  72],\\n        [ 49, -72],\\n        [ 25,  70],\\n        [ 13, -39],\\n        [-80, -25],\\n        [ 40,  18],\\n        [ 38,  71],\\n        [-17, -52],\\n        [-28, -58],\\n        [-17, -40],\\n        [  3,  66],\\n        [ 76,  71],\\n        [ 16, -37],\\n        [-80, -47],\\n        [-45,  53],\\n        [ 99, -48],\\n        [ 55, -36],\\n        [  7, -62],\\n        [-36, -87],\\n        [-50,  39],\\n        [-16,  49],\\n        [-80, -80],\\n        [-57, -45],\\n        [-22,  68],\\n        [ 83, -57],\\n        [-71,  25],\\n        [ 33,  97],\\n        [ -3,  15],\\n        [ 52, -72]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_80_integers():", "        if 80 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(80 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(80)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 83, -91],\\n        [ 91,  63],\\n        [-45,   5],\\n        [ 40,   6],\\n        [ 85,  75],\\n        [ 41, -61],\\n        [-62,  63],\\n        [-60,  70],\\n        [ 59, -95],\\n        [ 28,  51],\\n        [ 61, -13],\\n        [ 89,  72],\\n        [ 49, -72],\\n        [ 25,  70],\\n        [ 13, -39],\\n        [-80, -25],\\n        [ 40,  18],\\n        [ 38,  71],\\n        [-17, -52],\\n        [-28, -58],\\n        [-17, -40],\\n        [  3,  66],\\n        [ 76,  71],\\n        [ 16, -37],\\n        [-80, -47],\\n        [-45,  53],\\n        [ 99, -48],\\n        [ 55, -36],\\n        [  7, -62],\\n        [-36, -87],\\n        [-50,  39],\\n        [-16,  49],\\n        [-80, -80],\\n        [-57, -45],\\n        [-22,  68],\\n        [ 83, -57],\\n        [-71,  25],\\n        [ 33,  97],\\n        [ -3,  15],\\n        [ 52, -72]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_5/Folder_75/tests58_75_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_80_integers():", "        if 80 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(80 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(80)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 83, -91],\\n        [ 91,  63],\\n        [-45,   5],\\n        [ 40,   6],\\n        [ 85,  75],\\n        [ 41, -61],\\n        [-62,  63],\\n        [-60,  70],\\n        [ 59, -95],\\n        [ 28,  51],\\n        [ 61, -13],\\n        [ 89,  72],\\n        [ 49, -72],\\n        [ 25,  70],\\n        [ 13, -39],\\n        [-80, -25],\\n        [ 40,  18],\\n        [ 38,  71],\\n        [-17, -52],\\n        [-28, -58],\\n        [-17, -40],\\n        [  3,  66],\\n        [ 76,  71],\\n        [ 16, -37],\\n        [-80, -47],\\n        [-45,  53],\\n        [ 99, -48],\\n        [ 55, -36],\\n        [  7, -62],\\n        [-36, -87],\\n        [-50,  39],\\n        [-16,  49],\\n        [-80, -80],\\n        [-57, -45],\\n        [-22,  68],\\n        [ 83, -57],\\n        [-71,  25],\\n        [ 33,  97],\\n        [ -3,  15],\\n        [ 52, -72]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_5/Folder_75/tests58_75_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_5/Folder_75/tests58_75_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 83, -91],\\n        [ 91,  63],\\n        [-45,   5],\\n        [ 40,   6],\\n        [ 85,  75],\\n        [ 41, -61],\\n        [-62,  63],\\n        [-60,  70],\\n        [ 59, -95],\\n        [ 28,  51],\\n        [ 61, -13],\\n        [ 89,  72],\\n        [ 49, -72],\\n        [ 25,  70],\\n        [ 13, -39],\\n        [-80, -25],\\n        [ 40,  18],\\n        [ 38,  71],\\n        [-17, -52],\\n        [-28, -58],\\n        [-17, -40],\\n        [  3,  66],\\n        [ 76,  71],\\n        [ 16, -37],\\n        [-80, -47],\\n        [-45,  53],\\n        [ 99, -48],\\n        [ 55, -36],\\n        [  7, -62],\\n        [-36, -87],\\n        [-50,  39],\\n        [-16,  49],\\n        [-80, -80],\\n        [-57, -45],\\n        [-22,  68],\\n        [ 83, -57],\\n        [-71,  25],\\n        [ 33,  97],\\n        [ -3,  15],\\n        [ 52, -72]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006169332191348076, "start": 1738464772.3328693, "stop": 1738464772.3334868, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8102e9a08234479ea863df9b6f7aeda1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_75_5.py::test_matrix_of_having_80_integers", "location": ["tests58_75_5.py", 28, "test_matrix_of_having_80_integers"], "keywords": {"test_matrix_of_having_80_integers": 1, "__wrapped__": 1, "tests58_75_5.py": 1, "Folder_75": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011094100773334503, "start": 1738464772.3633788, "stop": 1738464772.36349, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8102e9a08234479ea863df9b6f7aeda1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
