{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00045
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 21, -86,  29,  70,  83,  91,  64,  21, -85,  21,  17,  38, -13,\\n         -50, -39,  52, -32, -14, -70,  -3, -31, -54, -90, -99, -78, -47,\\n          20,  35, -12, -49,  75, -81,  80,  15, -33,  50,   2,  77,  22,\\n          80,  23, -54, -23, -25,  31, -46,  23,  48,  55,  69, -95,  66,\\n         -32, -60,  19, -79, -51,  53,  30,  68,  77,  34, -53, -39, -16,\\n          -2, -81,  53, -31,  46,  51,  48, -30, -50,  32, -33, -73, -68,\\n          61,  87,  78, -87, -55,  69, -42, -60, -66,  18, -28,   7,  48,\\n         -68,  60,  86,  48,  92, -86,  49, -34, -66,  -5, -82,  67, -69,\\n         -46,  33,  80,  79, -79,  82, -72,  29,  37,   9,  43, -96, -10,\\n         -97, -23,  70,  52, -79, -35, -71,  78, -23, -28,  57,  43,  69,\\n          27, -24,  -7, -92, -61,  27, -25, -96,  88, -89, -96, -81,  -1,\\n         -73, -94, -37, -63, -72,  13, -59,  -7,   2, -43,  76, -86,  35,\\n          38,  25,  34]]))",
    0.00064
  ]
}