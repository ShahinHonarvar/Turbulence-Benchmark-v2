{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00039
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 58, -64, -84, -56,  42,  95,  43,  76,  83, -50, -95, -68, -63,\\n          67, -96,  95, -19,  97, -59, -79,  80,   7, -22,  -4,  23, -12,\\n         -93,  43,   8,  29,  60,  44, -87,   4, -84, -68, -50,  -9, -53,\\n          23, -86,  89, -37,  67, -72, -14,  90,  99,  15,  82,  -6,   7,\\n          90, -29,  70,  45, -83,  20, -85,  74, -84, -68,  61, -45, -48,\\n         -78,  11, -90,  76, -18,  38,  22, -74, -92,  -3, -53,  37, -11,\\n         -77,  71,  62, -11, -38, -10,  96,  25,  73,  95, -79,  68, -24,\\n          89,  69, -24, -30,  88, -20,  30,  12, -20,  34, -82,  44, -41,\\n          55,  40,  14,  61, -15, -44,  40,  34,  39, 100,  76,  36,  59,\\n          22, -29, -18,   9,  56, -96, -15,  15,  75,   0, -58,  39, -98,\\n         -56,  69,  58, -23, -15, -29, -18,  86,  -4,   3,  -5,  21,  84,\\n          86, -39, -50,  28,  21, -80, -19,  38, -97, -47,  83,  51, -54,\\n         -76,  49,  90,  -2,  13, -44,  44,  51, -49,  42, -31, -36, -20,\\n         -71,  68,  82,  80,   5, -98]]))",
    0.0007
  ]
}