{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 22, -55, -73,  55, -96,  45,  30,  21,  10,  29,  24,  47, -64,\\n         -80, -89,  40,  72, -61,  -6,  40, 100, -95, -56, -56, -31, -39,\\n         -30,  62, -11,  11,  35,   6,  47,  -6, -57,   5, -63, -79,   0,\\n          62, -57,  26, -68, -83,  49, -91,  36, -60,  56,  87,  61, -97,\\n         -14,   1, -90,  71, -96, -33,  89,   5, -85,  42,  47,  58, -61,\\n          80, -87, -85, -65, -19,  33,  71,  94, -58, -67, -40,  15, -79,\\n          80, -68, -12,  89,  -2, -84, -39,  75, -33,  32, -53, -74,  81,\\n         -43, -24, -42,  36,  12,  84, -73,  38,  63, -95, -87, -55, -26,\\n         -58,  99,  36, -15,  73, -79, -18, -69, -75, -28,  -1, -58, -84,\\n         -81,  -6, -77,   1, -59,  -5,  33,  22, -10,   7,  20, -89,  41,\\n         -35,   4,   8, -53,  15,  98, -61, -41, -68,  54, -29, -29, -30,\\n          91, -39, -66,  32, -36,   9, -72,  -7, -78, -55, -85,   7,  46,\\n          26,  74,  30,  53, -16, -77, -58,  28, -50,  20,  13, -53,  98,\\n         -43,   6,  53,  98,  11,  43,  63,  42,  10, -34]]))",
    0.00091
  ]
}