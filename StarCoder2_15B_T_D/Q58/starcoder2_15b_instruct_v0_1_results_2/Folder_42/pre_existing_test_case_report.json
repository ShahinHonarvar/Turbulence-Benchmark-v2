{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   63,    9,  -99,  -54,  -71,   75,  -72,   65,  -72,\\n          -11,  -22,   93,   19,  -22,  -68,   45,   45,  -81,  -43,\\n          -28,  -41,  -70,   -6,   89,   88,   90,   63,   13,   86,\\n          -49,   52,  -70, -100,  -46,   85,   17,   48,   27,   90,\\n          -98,  -78,  -66,  -61,   88,  -36,    2,  -97,  -13,  -95,\\n          -24,   45,    5,   84,  100,  -85,  -68,  -20,    4,  -13,\\n           24,  -51,  -26,   62,    4,  -80,   68,   56,   13,   56,\\n          -68,  -45,  -37,  -45,  -86,   35,  -78,  -51,  -32,  -18,\\n           31,  -29,  -35,  -41,   92,  -79,   46,   55,   67,   26,\\n            2,   33,   39,   -5,    7,   10,   17,   51,  -81,   41,\\n           85,   47,  -15,   72,  -66,  -82,   57,    5,  -76,  -77,\\n           89,   88,  -87,   39,   73,  -88,  -98,   -9,  -26,   92,\\n           -9,  -36,  -78,   73,  -60,   45,  -96,  -55,   34,    2,\\n          -37,   31,   32,  -54,  -64,   60,   15,  -35,  -82,   15,\\n           97,  -76,   35,   -9,  -73,   65,   29,   -9,   50,  -91,\\n           28,  -47,   98,   65,  -95,  -93,   44,  -94,   22,  -19,\\n          -99,  -42,   99,  -28,   32,  -79,   82,   61,  -98,   37,\\n           38,   59,  -45,   65,  -81,   62,   15,  -46,  -73,   71,\\n           31,   62, -100,  -18,  -74,   44,  -98,   31,  -30,  -43,\\n           40,    0,  -16]]))",
    0.00072
  ]
}