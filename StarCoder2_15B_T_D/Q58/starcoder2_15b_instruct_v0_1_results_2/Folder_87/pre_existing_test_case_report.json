{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00039
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -79,   64],\\n        [  92,  -98],\\n        [  -7, -100],\\n        [ -85,    6],\\n        [  93,   18],\\n        [  34,  -21],\\n        [  57,  -29],\\n        [  51,   56],\\n        [ -56,  -95],\\n        [ -59,  -37],\\n        [ -57,   -8],\\n        [ -74,   24],\\n        [  85,  -15],\\n        [ -39,   51],\\n        [  69,   -4],\\n        [  15,   51],\\n        [  -5,  -64],\\n        [ -60,  -50],\\n        [ -48,  -56],\\n        [ -88,   18],\\n        [ -83,  -91],\\n        [  29,  -81],\\n        [ -67,   63],\\n        [ -92,  -44],\\n        [  72,  -79],\\n        [ -88,  -38],\\n        [ -12,  -76],\\n        [  -5,  -81],\\n        [  72, -100],\\n        [  -1,    1],\\n        [  89,   -4],\\n        [  14,  -93],\\n        [ -95,   48],\\n        [  75,  -87],\\n        [ -94,   93],\\n        [  72,   41],\\n        [  90,   43],\\n        [  33,  -20],\\n        [  65,   55],\\n        [ -41,   83],\\n        [ -13,   12],\\n        [ -51,   69],\\n        [ -22,   28],\\n        [  23,  -77],\\n        [ -25,  -83],\\n        [ -31,  -88],\\n        [ -16,   95],\\n        [ -18,   75]]))",
    0.00067
  ]
}