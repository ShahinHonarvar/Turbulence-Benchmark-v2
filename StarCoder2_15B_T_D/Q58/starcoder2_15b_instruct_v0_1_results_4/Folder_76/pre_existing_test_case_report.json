{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  78,   67,   83,   87,  -91,  -26,  -20,    9,  -98,   58,\\n          -94,  -54,  -61,  -73,  -42,  -94,  -17,  -36,  -88,   71,\\n          -52,   21,   94,   49,   74,  -20,   82,  -94,   -6,   75,\\n           38,  -58,   55,   85,  -73,   79,   -8,   35,   77,   86,\\n           27,  -79,   49,  -28,  -15,  -79,  -15,   28,  -65,  -26,\\n           26,   17,   72,    7,   54,   65,    9,   40,   -4,   17,\\n          -26,  -77,  -56,   48,  -54,  -83,   85,  -61,  -12,   45,\\n          -83,  -57,  -69,   78,   88,  -89,   81,   72,   48,  -67,\\n           54,   64,  -91,  -38,   44,   93,  -60,   34,   91,  -19,\\n            3,   98,  -49,  -75,  -85,   -3,   15,   13,  -50,  -80,\\n          -16,  -41,   16,    1,   63,   -9,  -39,   40,   -5,   77,\\n           67,  -71,   82,   -2,   20,    3,  -41,  -44,  -19,  -41,\\n          -15,   11,  -37,  -97,   11,  -49,  -57, -100,   57,  -91,\\n           23,  -48,   87,  -16,  -75,   65,  -35,   61,  -59,   56,\\n           42,    8,   57,  -92,  -26,  -93,  -88,   -7,  -63,   45,\\n          -45,  -28,   81,   54,  -22,  -73,  -90,   96,   33]]))",
    0.00358
  ]
}