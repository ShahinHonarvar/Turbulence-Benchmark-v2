{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -1,  45],\\n        [ 50, -10],\\n        [ 31, -64],\\n        [-88,  64],\\n        [-64,   5],\\n        [ 89,  40],\\n        [ 75, -64],\\n        [-61, -49],\\n        [ 78, -25],\\n        [-54, -49],\\n        [-96,  23],\\n        [ 34, -96],\\n        [-86,  51],\\n        [ 38, -22],\\n        [ 37, -68],\\n        [-92, -67],\\n        [-93, -43],\\n        [ 38,  70],\\n        [ 16,  59],\\n        [-84, -60],\\n        [-81, -97],\\n        [-21,  17],\\n        [  7, -50],\\n        [-49,  63],\\n        [-16, -43],\\n        [-70, -64],\\n        [ 89,  56],\\n        [-67,  -8],\\n        [-94,  77],\\n        [-50,   4],\\n        [ 10, -36],\\n        [ 15, -27],\\n        [-73,  99],\\n        [ 34,  58],\\n        [-77, -91],\\n        [-29,  88],\\n        [-52,  41],\\n        [-52,  17],\\n        [ -8,  11],\\n        [-23,  -4],\\n        [ 44, 100],\\n        [-18, -64],\\n        [-26,  85],\\n        [ 15,  73],\\n        [ 69, -61],\\n        [-68,  16],\\n        [ 58,  79],\\n        [ 16,  57]]))",
    0.00067
  ]
}