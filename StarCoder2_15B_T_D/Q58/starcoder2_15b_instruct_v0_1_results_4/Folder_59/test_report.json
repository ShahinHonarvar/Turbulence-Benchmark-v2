{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_4.py::test_matrix_of_one_integer", "location": ["tests58_59_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011082366108894348, "start": 1738464680.8500187, "stop": 1738464680.8501298, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6560b5048785443c82ef98f2c68e46ba", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_one_integer", "location": ["tests58_59_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013937894254922867, "start": 1738464680.8502831, "stop": 1738464680.850423, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6560b5048785443c82ef98f2c68e46ba", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_one_integer", "location": ["tests58_59_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.232744246721268e-05, "start": 1738464680.8506958, "stop": 1738464680.8507686, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6560b5048785443c82ef98f2c68e46ba", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_having_76_integers", "location": ["tests58_59_4.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.730590343475342e-05, "start": 1738464680.855637, "stop": 1738464680.8557246, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6560b5048785443c82ef98f2c68e46ba", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_having_76_integers", "location": ["tests58_59_4.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  72,   60],\\n        [  29,  -86],\\n        [ -75,   64],\\n        [  21,  -69],\\n        [  50,   98],\\n        [  63,  -56],\\n        [ -86,  -24],\\n        [  35,  -82],\\n        [   4,   48],\\n        [  10, -100],\\n        [ -85,   94],\\n        [ -89,  -74],\\n        [ -44,  -56],\\n        [  48,   71],\\n        [ -67,   96],\\n        [  72,  -96],\\n        [  -2,  -49],\\n        [  52,  -41],\\n        [ -89,  -60],\\n        [  47,  -40],\\n        [ -88,  -61],\\n        [ -61,   85],\\n        [ -57,  -90],\\n        [  51,   41],\\n        [ -31,   70],\\n        [ -53,   60],\\n        [   3,  -52],\\n        [  33,   -2],\\n        [ -89,   49],\\n        [ -62,   35],\\n        [ -14,   54],\\n        [ -56,   70],\\n        [ -80,  -48],\\n        [  81,   82],\\n        [ -50,   -2],\\n        [  44,   29],\\n        [  43,   -1],\\n        [  28,  -29]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  72,   60],\\n        [  29,  -86],\\n        [ -75,   64],\\n        [  21,  -69],\\n        [  50,   98],\\n        [  63,  -56],\\n        [ -86,  -24],\\n        [  35,  -82],\\n        [   4,   48],\\n        [  10, -100],\\n        [ -85,   94],\\n        [ -89,  -74],\\n        [ -44,  -56],\\n        [  48,   71],\\n        [ -67,   96],\\n        [  72,  -96],\\n        [  -2,  -49],\\n        [  52,  -41],\\n        [ -89,  -60],\\n        [  47,  -40],\\n        [ -88,  -61],\\n        [ -61,   85],\\n        [ -57,  -90],\\n        [  51,   41],\\n        [ -31,   70],\\n        [ -53,   60],\\n        [   3,  -52],\\n        [  33,   -2],\\n        [ -89,   49],\\n        [ -62,   35],\\n        [ -14,   54],\\n        [ -56,   70],\\n        [ -80,  -48],\\n        [  81,   82],\\n        [ -50,   -2],\\n        [  44,   29],\\n        [  43,   -1],\\n        [  28,  -29]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  72,   60],\\n        [  29,  -86],\\n        [ -75,   64],\\n        [  21,  -69],\\n        [  50,   98],\\n        [  63,  -56],\\n        [ -86,  -24],\\n        [  35,  -82],\\n        [   4,   48],\\n        [  10, -100],\\n        [ -85,   94],\\n        [ -89,  -74],\\n        [ -44,  -56],\\n        [  48,   71],\\n        [ -67,   96],\\n        [  72,  -96],\\n        [  -2,  -49],\\n        [  52,  -41],\\n        [ -89,  -60],\\n        [  47,  -40],\\n        [ -88,  -61],\\n        [ -61,   85],\\n        [ -57,  -90],\\n        [  51,   41],\\n        [ -31,   70],\\n        [ -53,   60],\\n        [   3,  -52],\\n        [  33,   -2],\\n        [ -89,   49],\\n        [ -62,   35],\\n        [ -14,   54],\\n        [ -56,   70],\\n        [ -80,  -48],\\n        [  81,   82],\\n        [ -50,   -2],\\n        [  44,   29],\\n        [  43,   -1],\\n        [  28,  -29]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  72,   60],\\n        [  29,  -86],\\n        [ -75,   64],\\n        [  21,  -69],\\n        [  50,   98],\\n        [  63,  -56],\\n        [ -86,  -24],\\n        [  35,  -82],\\n        [   4,   48],\\n        [  10, -100],\\n        [ -85,   94],\\n        [ -89,  -74],\\n        [ -44,  -56],\\n        [  48,   71],\\n        [ -67,   96],\\n        [  72,  -96],\\n        [  -2,  -49],\\n        [  52,  -41],\\n        [ -89,  -60],\\n        [  47,  -40],\\n        [ -88,  -61],\\n        [ -61,   85],\\n        [ -57,  -90],\\n        [  51,   41],\\n        [ -31,   70],\\n        [ -53,   60],\\n        [   3,  -52],\\n        [  33,   -2],\\n        [ -89,   49],\\n        [ -62,   35],\\n        [ -14,   54],\\n        [ -56,   70],\\n        [ -80,  -48],\\n        [  81,   82],\\n        [ -50,   -2],\\n        [  44,   29],\\n        [  43,   -1],\\n        [  28,  -29]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000590229406952858, "start": 1738464680.8558283, "stop": 1738464680.8564188, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6560b5048785443c82ef98f2c68e46ba", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_having_76_integers", "location": ["tests58_59_4.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012597348541021347, "start": 1738464680.8846078, "stop": 1738464680.8847349, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6560b5048785443c82ef98f2c68e46ba", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
