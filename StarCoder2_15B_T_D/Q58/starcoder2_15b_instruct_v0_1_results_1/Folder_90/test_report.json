{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003926781937479973, "start": 1738464457.4307494, "stop": 1738464457.4311423, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e29e276e0be34652b504f5e8836afeab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000368303619325161, "start": 1738464457.4314115, "stop": 1738464457.43178, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e29e276e0be34652b504f5e8836afeab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_one_integer", "location": ["tests58_90_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.125416934490204e-05, "start": 1738464457.4321713, "stop": 1738464457.432253, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e29e276e0be34652b504f5e8836afeab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.45249742269516e-05, "start": 1738464457.4332008, "stop": 1738464457.4332857, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e29e276e0be34652b504f5e8836afeab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  1, -97],\\n        [-42,  24],\\n        [-47,  43],\\n        [ 31,  14],\\n        [-72, -44],\\n        [-26, 100],\\n        [-53, -25],\\n        [-59,  78],\\n        [ 95,  54],\\n        [ 78, -13],\\n        [-15,  21],\\n        [-79, -68],\\n        [ 22,  22],\\n        [ 21, -72],\\n        [-64,   2],\\n        [ -4, -19],\\n        [ 98,  -8],\\n        [-82,  68],\\n        [  7,   7],\\n        [ 72, -16],\\n        [-47,  47],\\n        [  6,  60],\\n        [ 98, -61],\\n        [ 60, -40],\\n        [-68,  78],\\n        [-78, -56],\\n        [-11, -29],\\n        [-30, -16],\\n        [  3, -66],\\n        [-80, -96],\\n        [-46, -74],\\n        [-56, -44],\\n        [ 88,  92],\\n        [-43, -38],\\n        [ 39, -57],\\n        [-12,  41],\\n        [ 19, -14],\\n        [-87,   6],\\n        [ 39,  66],\\n        [-70,  70],\\n        [-41, -50],\\n        [  4,  46],\\n        [-75,  91],\\n        [ 90,  87],\\n        [ 41, -37],\\n        [ 43, -25],\\n        [-61, -85],\\n        [-85,  24],\\n        [  5,   5],\\n        [-33,  89],\\n        [ 96,  53],\\n        [-41,  38],\\n        [-12,  55],\\n        [ 48, -42],\\n        [ 61,  75],\\n        [ 72, -44],\\n        [ 41,   4],\\n        [ 90,  -5],\\n        [ 97,  72],\\n        [ 80,  19],\\n        [ 46, -43],\\n        [-15, -27],\\n        [ 28, -11],\\n        [  6,  47],\\n        [-97,  35],\\n        [-14,  85],\\n        [ 56,   8],\\n        [ 17, -18],\\n        [ 25, -75],\\n        [ 33,  77],\\n        [  6,  32],\\n        [-60,  80],\\n        [-20, -43],\\n        [  4,  -9],\\n        [ 20, -25],\\n        [ 11, -83],\\n        [-89, -65],\\n        [-31,  64],\\n        [ 47,  61],\\n        [ 33,  34],\\n        [ 17, -23],\\n        [-27,  13],\\n        [  6, -55],\\n        [ 75, -98],\\n        [  8,  66],\\n        [ 29,  24],\\n        [-73, -64],\\n        [ -8, -24]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  1, -97],\\n        [-42,  24],\\n        [-47,  43],\\n        [ 31,  14],\\n        [-72, -44],\\n        [-26, 100],\\n        [-53, -25],\\n        [-59,  78],\\n        [ 95,  54],\\n        [ 78, -13],\\n        [-15,  21],\\n        [-79, -68],\\n        [ 22,  22],\\n        [ 21, -72],\\n        [-64,   2],\\n        [ -4, -19],\\n        [ 98,  -8],\\n        [-82,  68],\\n        [  7,   7],\\n        [ 72, -16],\\n        [-47,  47],\\n        [  6,  60],\\n        [ 98, -61],\\n        [ 60, -40],\\n        [-68,  78],\\n        [-78, -56],\\n        [-11, -29],\\n        [-30, -16],\\n        [  3, -66],\\n        [-80, -96],\\n        [-46, -74],\\n        [-56, -44],\\n        [ 88,  92],\\n        [-43, -38],\\n        [ 39, -57],\\n        [-12,  41],\\n        [ 19, -14],\\n        [-87,   6],\\n        [ 39,  66],\\n        [-70,  70],\\n        [-41, -50],\\n        [  4,  46],\\n        [-75,  91],\\n        [ 90,  87],\\n        [ 41, -37],\\n        [ 43, -25],\\n        [-61, -85],\\n        [-85,  24],\\n        [  5,   5],\\n        [-33,  89],\\n        [ 96,  53],\\n        [-41,  38],\\n        [-12,  55],\\n        [ 48, -42],\\n        [ 61,  75],\\n        [ 72, -44],\\n        [ 41,   4],\\n        [ 90,  -5],\\n        [ 97,  72],\\n        [ 80,  19],\\n        [ 46, -43],\\n        [-15, -27],\\n        [ 28, -11],\\n        [  6,  47],\\n        [-97,  35],\\n        [-14,  85],\\n        [ 56,   8],\\n        [ 17, -18],\\n        [ 25, -75],\\n        [ 33,  77],\\n        [  6,  32],\\n        [-60,  80],\\n        [-20, -43],\\n        [  4,  -9],\\n        [ 20, -25],\\n        [ 11, -83],\\n        [-89, -65],\\n        [-31,  64],\\n        [ 47,  61],\\n        [ 33,  34],\\n        [ 17, -23],\\n        [-27,  13],\\n        [  6, -55],\\n        [ 75, -98],\\n        [  8,  66],\\n        [ 29,  24],\\n        [-73, -64],\\n        [ -8, -24]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  1, -97],\\n        [-42,  24],\\n        [-47,  43],\\n        [ 31,  14],\\n        [-72, -44],\\n        [-26, 100],\\n        [-53, -25],\\n        [-59,  78],\\n        [ 95,  54],\\n        [ 78, -13],\\n        [-15,  21],\\n        [-79, -68],\\n        [ 22,  22],\\n        [ 21, -72],\\n        [-64,   2],\\n        [ -4, -19],\\n        [ 98,  -8],\\n        [-82,  68],\\n        [  7,   7],\\n        [ 72, -16],\\n        [-47,  47],\\n        [  6,  60],\\n        [ 98, -61],\\n        [ 60, -40],\\n        [-68,  78],\\n        [-78, -56],\\n        [-11, -29],\\n        [-30, -16],\\n        [  3, -66],\\n        [-80, -96],\\n        [-46, -74],\\n        [-56, -44],\\n        [ 88,  92],\\n        [-43, -38],\\n        [ 39, -57],\\n        [-12,  41],\\n        [ 19, -14],\\n        [-87,   6],\\n        [ 39,  66],\\n        [-70,  70],\\n        [-41, -50],\\n        [  4,  46],\\n        [-75,  91],\\n        [ 90,  87],\\n        [ 41, -37],\\n        [ 43, -25],\\n        [-61, -85],\\n        [-85,  24],\\n        [  5,   5],\\n        [-33,  89],\\n        [ 96,  53],\\n        [-41,  38],\\n        [-12,  55],\\n        [ 48, -42],\\n        [ 61,  75],\\n        [ 72, -44],\\n        [ 41,   4],\\n        [ 90,  -5],\\n        [ 97,  72],\\n        [ 80,  19],\\n        [ 46, -43],\\n        [-15, -27],\\n        [ 28, -11],\\n        [  6,  47],\\n        [-97,  35],\\n        [-14,  85],\\n        [ 56,   8],\\n        [ 17, -18],\\n        [ 25, -75],\\n        [ 33,  77],\\n        [  6,  32],\\n        [-60,  80],\\n        [-20, -43],\\n        [  4,  -9],\\n        [ 20, -25],\\n        [ 11, -83],\\n        [-89, -65],\\n        [-31,  64],\\n        [ 47,  61],\\n        [ 33,  34],\\n        [ 17, -23],\\n        [-27,  13],\\n        [  6, -55],\\n        [ 75, -98],\\n        [  8,  66],\\n        [ 29,  24],\\n        [-73, -64],\\n        [ -8, -24]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_90/tests58_90_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  1, -97],\\n        [-42,  24],\\n        [-47,  43],\\n        [ 31,  14],\\n        [-72, -44],\\n        [-26, 100],\\n        [-53, -25],\\n        [-59,  78],\\n        [ 95,  54],\\n        [ 78, -13],\\n        [-15,  21],\\n        [-79, -68],\\n        [ 22,  22],\\n        [ 21, -72],\\n        [-64,   2],\\n        [ -4, -19],\\n        [ 98,  -8],\\n        [-82,  68],\\n        [  7,   7],\\n        [ 72, -16],\\n        [-47,  47],\\n        [  6,  60],\\n        [ 98, -61],\\n        [ 60, -40],\\n        [-68,  78],\\n        [-78, -56],\\n        [-11, -29],\\n        [-30, -16],\\n        [  3, -66],\\n        [-80, -96],\\n        [-46, -74],\\n        [-56, -44],\\n        [ 88,  92],\\n        [-43, -38],\\n        [ 39, -57],\\n        [-12,  41],\\n        [ 19, -14],\\n        [-87,   6],\\n        [ 39,  66],\\n        [-70,  70],\\n        [-41, -50],\\n        [  4,  46],\\n        [-75,  91],\\n        [ 90,  87],\\n        [ 41, -37],\\n        [ 43, -25],\\n        [-61, -85],\\n        [-85,  24],\\n        [  5,   5],\\n        [-33,  89],\\n        [ 96,  53],\\n        [-41,  38],\\n        [-12,  55],\\n        [ 48, -42],\\n        [ 61,  75],\\n        [ 72, -44],\\n        [ 41,   4],\\n        [ 90,  -5],\\n        [ 97,  72],\\n        [ 80,  19],\\n        [ 46, -43],\\n        [-15, -27],\\n        [ 28, -11],\\n        [  6,  47],\\n        [-97,  35],\\n        [-14,  85],\\n        [ 56,   8],\\n        [ 17, -18],\\n        [ 25, -75],\\n        [ 33,  77],\\n        [  6,  32],\\n        [-60,  80],\\n        [-20, -43],\\n        [  4,  -9],\\n        [ 20, -25],\\n        [ 11, -83],\\n        [-89, -65],\\n        [-31,  64],\\n        [ 47,  61],\\n        [ 33,  34],\\n        [ 17, -23],\\n        [-27,  13],\\n        [  6, -55],\\n        [ 75, -98],\\n        [  8,  66],\\n        [ 29,  24],\\n        [-73, -64],\\n        [ -8, -24]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011696871370077133, "start": 1738464457.4333816, "stop": 1738464457.4345517, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e29e276e0be34652b504f5e8836afeab", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_1.py::test_matrix_of_having_176_integers", "location": ["tests58_90_1.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_1.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016535073518753052, "start": 1738464457.451816, "stop": 1738464457.4519823, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e29e276e0be34652b504f5e8836afeab", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
