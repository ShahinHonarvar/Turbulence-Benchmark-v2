{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_44_1.py::test_matrix_of_one_integer", "location": ["tests58_44_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_1.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040222518146038055, "start": 1738464416.4273415, "stop": 1738464416.4277442, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3dce0d017d59406cad4be2b1f88ca405", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_1.py::test_matrix_of_one_integer", "location": ["tests58_44_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_1.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000366787426173687, "start": 1738464416.4280539, "stop": 1738464416.4284208, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3dce0d017d59406cad4be2b1f88ca405", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_1.py::test_matrix_of_one_integer", "location": ["tests58_44_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_44_1.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0004074377939105034, "start": 1738464416.428717, "stop": 1738464416.4291246, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3dce0d017d59406cad4be2b1f88ca405", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_1.py::test_matrix_of_having_191_integers", "location": ["tests58_44_1.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_1.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.024236351251602e-05, "start": 1738464416.4302952, "stop": 1738464416.4303858, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3dce0d017d59406cad4be2b1f88ca405", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_1.py::test_matrix_of_having_191_integers", "location": ["tests58_44_1.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_1.py": 1, "Folder_44": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_44/tests58_44_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 21, -29,  10,  79,  17,  49,  66, -13,  -5,  65,  -3,  76,  72,\\n         -38,  76,  44,  66, -58,  -4, -42,  30, -11,   3,  99, -52,  15,\\n          94,  17,  37, -87, -96, -89,   1,  76,  73,  17,  89,  69,  70,\\n          -5,  -1,  -1, -63, -25,  56,  93,  -2, -46, -77, -44, -85, -16,\\n          19,  18, -54,  86,  93, -23, -50, -71, -49, -24, -33,  45,   7,\\n         -22,  61,  80, -49,  57, -35, -91,  59, -52, -24, -90,  98,  49,\\n          30,  -8,  76, -95, -80, -12,  45,  72,  82,  51,  70, -27, -28,\\n          49,  -5,  19,  61,  28,  95, -32, -57,   1, -33,  -6,  78,  59,\\n          68,  94, -60, -53,  78, -81,  36, -64, -50,  90,  51,  21,  88,\\n          54,  -7,  79, -86,  57,  35, 100,  87,  -6,  16, -93, -59, -14,\\n          15, -11, -17,  69, -11,  77,  10, -94,  61, -35, -74, -38,  35,\\n          13, -69,  78, -77,   1, -50,  10, -81, -81, -75, -50, -55, -72,\\n         -50,  83,  69, -87, -52,  43,  80,   1,   0, -89, -13,   1,  87,\\n         -79, -88,  89,  53,  31, -20,  -9,  25, -40,  -2, -87,  80, -79,\\n          97, 100, -42, -84,  92, -49,  89,  26, -88]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 21, -29,  10,  79,  17,  49,  66, -13,  -5,  65,  -3,  76,  72,\\n         -38,  76,  44,  66, -58,  -4, -42,  30, -11,   3,  99, -52,  15,\\n          94,  17,  37, -87, -96, -89,   1,  76,  73,  17,  89,  69,  70,\\n          -5,  -1,  -1, -63, -25,  56,  93,  -2, -46, -77, -44, -85, -16,\\n          19,  18, -54,  86,  93, -23, -50, -71, -49, -24, -33,  45,   7,\\n         -22,  61,  80, -49,  57, -35, -91,  59, -52, -24, -90,  98,  49,\\n          30,  -8,  76, -95, -80, -12,  45,  72,  82,  51,  70, -27, -28,\\n          49,  -5,  19,  61,  28,  95, -32, -57,   1, -33,  -6,  78,  59,\\n          68,  94, -60, -53,  78, -81,  36, -64, -50,  90,  51,  21,  88,\\n          54,  -7,  79, -86,  57,  35, 100,  87,  -6,  16, -93, -59, -14,\\n          15, -11, -17,  69, -11,  77,  10, -94,  61, -35, -74, -38,  35,\\n          13, -69,  78, -77,   1, -50,  10, -81, -81, -75, -50, -55, -72,\\n         -50,  83,  69, -87, -52,  43,  80,   1,   0, -89, -13,   1,  87,\\n         -79, -88,  89,  53,  31, -20,  -9,  25, -40,  -2, -87,  80, -79,\\n          97, 100, -42, -84,  92, -49,  89,  26, -88]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_44/tests58_44_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_191_integers():", "        if 191 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(191 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(191)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 21, -29,  10,  79,  17,  49,  66, -13,  -5,  65,  -3,  76,  72,\\n         -38,  76,  44,  66, -58,  -4, -42,  30, -11,   3,  99, -52,  15,\\n          94,  17,  37, -87, -96, -89,   1,  76,  73,  17,  89,  69,  70,\\n          -5,  -1,  -1, -63, -25,  56,  93,  -2, -46, -77, -44, -85, -16,\\n          19,  18, -54,  86,  93, -23, -50, -71, -49, -24, -33,  45,   7,\\n         -22,  61,  80, -49,  57, -35, -91,  59, -52, -24, -90,  98,  49,\\n          30,  -8,  76, -95, -80, -12,  45,  72,  82,  51,  70, -27, -28,\\n          49,  -5,  19,  61,  28,  95, -32, -57,   1, -33,  -6,  78,  59,\\n          68,  94, -60, -53,  78, -81,  36, -64, -50,  90,  51,  21,  88,\\n          54,  -7,  79, -86,  57,  35, 100,  87,  -6,  16, -93, -59, -14,\\n          15, -11, -17,  69, -11,  77,  10, -94,  61, -35, -74, -38,  35,\\n          13, -69,  78, -77,   1, -50,  10, -81, -81, -75, -50, -55, -72,\\n         -50,  83,  69, -87, -52,  43,  80,   1,   0, -89, -13,   1,  87,\\n         -79, -88,  89,  53,  31, -20,  -9,  25, -40,  -2, -87,  80, -79,\\n          97, 100, -42, -84,  92, -49,  89,  26, -88]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_44/tests58_44_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q58/starcoder2_15b_instruct_v0_1_results_1/Folder_44/tests58_44_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 21, -29,  10,  79,  17,  49,  66, -13,  -5,  65,  -3,  76,  72,\\n         -38,  76,  44,  66, -58,  -4, -42,  30, -11,   3,  99, -52,  15,\\n          94,  17,  37, -87, -96, -89,   1,  76,  73,  17,  89,  69,  70,\\n          -5,  -1,  -1, -63, -25,  56,  93,  -2, -46, -77, -44, -85, -16,\\n          19,  18, -54,  86,  93, -23, -50, -71, -49, -24, -33,  45,   7,\\n         -22,  61,  80, -49,  57, -35, -91,  59, -52, -24, -90,  98,  49,\\n          30,  -8,  76, -95, -80, -12,  45,  72,  82,  51,  70, -27, -28,\\n          49,  -5,  19,  61,  28,  95, -32, -57,   1, -33,  -6,  78,  59,\\n          68,  94, -60, -53,  78, -81,  36, -64, -50,  90,  51,  21,  88,\\n          54,  -7,  79, -86,  57,  35, 100,  87,  -6,  16, -93, -59, -14,\\n          15, -11, -17,  69, -11,  77,  10, -94,  61, -35, -74, -38,  35,\\n          13, -69,  78, -77,   1, -50,  10, -81, -81, -75, -50, -55, -72,\\n         -50,  83,  69, -87, -52,  43,  80,   1,   0, -89, -13,   1,  87,\\n         -79, -88,  89,  53,  31, -20,  -9,  25, -40,  -2, -87,  80, -79,\\n          97, 100, -42, -84,  92, -49,  89,  26, -88]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007152538746595383, "start": 1738464416.4306698, "stop": 1738464416.4313855, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3dce0d017d59406cad4be2b1f88ca405", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_44_1.py::test_matrix_of_having_191_integers", "location": ["tests58_44_1.py", 28, "test_matrix_of_having_191_integers"], "keywords": {"test_matrix_of_having_191_integers": 1, "__wrapped__": 1, "tests58_44_1.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0003203097730875015, "start": 1738464416.4481847, "stop": 1738464416.4485059, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3dce0d017d59406cad4be2b1f88ca405", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
