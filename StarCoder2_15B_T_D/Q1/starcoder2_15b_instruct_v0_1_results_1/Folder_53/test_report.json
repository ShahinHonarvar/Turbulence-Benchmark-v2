{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests1_53_1.py::test_large_range", "location": ["tests1_53_1.py", 3, "test_large_range"], "keywords": {"test_large_range": 1, "tests1_53_1.py": 1, "Folder_53": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.778980165719986e-05, "start": 1738419667.8334785, "stop": 1738419667.8335767, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97ba16f92a714cf38bddb226182b39e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests1_53_1.py::test_large_range", "location": ["tests1_53_1.py", 3, "test_large_range"], "keywords": {"test_large_range": 1, "tests1_53_1.py": 1, "Folder_53": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010391045361757278, "start": 1738419667.8337226, "stop": 1738419667.8338268, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97ba16f92a714cf38bddb226182b39e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests1_53_1.py::test_large_range", "location": ["tests1_53_1.py", 3, "test_large_range"], "keywords": {"test_large_range": 1, "tests1_53_1.py": 1, "Folder_53": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9866346418857574e-05, "start": 1738419667.8340616, "stop": 1738419667.834122, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97ba16f92a714cf38bddb226182b39e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests1_53_1.py::test_minimal_range", "location": ["tests1_53_1.py", 9, "test_minimal_range"], "keywords": {"test_minimal_range": 1, "tests1_53_1.py": 1, "Folder_53": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.398744881153107e-05, "start": 1738419667.8353188, "stop": 1738419667.835383, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97ba16f92a714cf38bddb226182b39e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests1_53_1.py::test_minimal_range", "location": ["tests1_53_1.py", 9, "test_minimal_range"], "keywords": {"test_minimal_range": 1, "tests1_53_1.py": 1, "Folder_53": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q1/starcoder2_15b_instruct_v0_1_results_1/Folder_53/tests1_53_1.py", "lineno": 13, "message": "assert [] == [200]\n  \n  Right contains one more item: 200\n  \n  Full diff:\n  + []\n  - [\n  -     200,\n  - ]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_minimal_range():", "        exact_list = list(range(0, 200 + 1))", "        expected_list = list(range(200, 200 + 1))", ">       assert all_ints_inclusive(exact_list) == expected_list", "E       assert [] == [200]", "E         ", "E         Right contains one more item: 200", "E         ", "E         Full diff:", "E         + []", "E         - [", "E         -     200,", "E         - ]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q1/starcoder2_15b_instruct_v0_1_results_1/Folder_53/tests1_53_1.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_minimal_range():", "        exact_list = list(range(0, 200 + 1))", "        expected_list = list(range(200, 200 + 1))", ">       assert all_ints_inclusive(exact_list) == expected_list", "E       assert [] == [200]", "E         ", "E         Right contains one more item: 200", "E         ", "E         Full diff:", "E         + []", "E         - [", "E         -     200,", "E         - ]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q1/starcoder2_15b_instruct_v0_1_results_1/Folder_53/tests1_53_1.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_D/Q1/starcoder2_15b_instruct_v0_1_results_1/Folder_53/tests1_53_1.py", "lineno": 13, "message": "assert [] == [200]\n  \n  Right contains one more item: 200\n  \n  Full diff:\n  + []\n  - [\n  -     200,\n  - ]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028771068900823593, "start": 1738419667.8354526, "stop": 1738419667.8357406, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97ba16f92a714cf38bddb226182b39e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests1_53_1.py::test_minimal_range", "location": ["tests1_53_1.py", 9, "test_minimal_range"], "keywords": {"test_minimal_range": 1, "tests1_53_1.py": 1, "Folder_53": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.78768041729927e-05, "start": 1738419667.8438826, "stop": 1738419667.8439705, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97ba16f92a714cf38bddb226182b39e8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
