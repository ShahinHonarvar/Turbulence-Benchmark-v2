ChatCompletion(id='', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="Here's how you can create the function in Python according to the specification:\n\n```python\nimport re\n\ndef all_substring_of_size_n(text):\n    substrings = re.findall(r'.{28}', text)\n    return [substring for substring in substrings if len(set(substring)) == len(substring)]\n```\n\nYou can validate this function with a few test cases to ensure correctness:\n\n```python\nassert all_substring_of_size_n('abcdeabcdeabcdeabcdeabcdeabcde') == ['abcdeabcdeabcdeabcdeabcdeabcd']\nassert all_substring_of_size_n('abcabcabcabcabcabcabcabcabcabc') == []\nassert all_substring_of_size_n('abcdefghijklmnopqrstuvwxyz12345') == ['abcdefghijklmnopqrstuvwxyz12345']\n```", refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1730667823, model='/repository', object='chat.completion', service_tier=None, system_fingerprint='2.3.1-sha-a094729', usage=CompletionUsage(completion_tokens=200, prompt_tokens=166, total_tokens=366))