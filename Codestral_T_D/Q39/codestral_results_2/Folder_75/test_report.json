{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests39_75_2.py::test_strings_of_size_equal_to_2", "location": ["tests39_75_2.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019716899987543002, "start": 1729829037.6286545, "stop": 1729829037.6288528, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_75_2.py::test_length_of_result", "location": ["tests39_75_2.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023967100059962831, "start": 1729829037.6286194, "stop": 1729829037.62886, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_75_2.py::test_length_of_result", "location": ["tests39_75_2.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021688799824914895, "start": 1729829037.629185, "stop": 1729829037.6294024, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_75_2.py::test_length_of_result", "location": ["tests39_75_2.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012033500024699606, "start": 1729829037.629837, "stop": 1729829037.6299582, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_75_2.py::test_if_result_is_sorted", "location": ["tests39_75_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018522599930292927, "start": 1729829037.6301258, "stop": 1729829037.6303117, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw2>"}
{"nodeid": "tests39_75_2.py::test_strings_of_size_equal_to_2", "location": ["tests39_75_2.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 10, "message": "AssertionError: assert ['A', '/'] == ['/', 'A']\n  At index 0 diff: 'A' != '/'\n  Full diff:\n  - ['/', 'A']\n  + ['A', '/']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['A', '/'] == ['/', 'A']", "E             At index 0 diff: 'A' != '/'", "E             Full diff:", "E             - ['/', 'A']", "E             + ['A', '/']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_2():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['A', '/'] == ['/', 'A']", "E             At index 0 diff: 'A' != '/'", "E             Full diff:", "E             - ['/', 'A']", "E             + ['A', '/']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 10, "message": "AssertionError: assert ['A', '/'] == ['/', 'A']\n  At index 0 diff: 'A' != '/'\n  Full diff:\n  - ['/', 'A']\n  + ['A', '/']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005175490005058236, "start": 1729829037.629152, "stop": 1729829037.62967, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_75_2.py::test_strings_of_size_equal_to_2", "location": ["tests39_75_2.py", 5, "test_strings_of_size_equal_to_2"], "keywords": {"test_strings_of_size_equal_to_2": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001644180010771379, "start": 1729829037.645909, "stop": 1729829037.6460743, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_75_2.py::test_if_result_is_sorted", "location": ["tests39_75_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 26, "message": "AssertionError: assert ['7', '6'] == ['6', '7']\n  At index 0 diff: '7' != '6'\n  Full diff:\n  - ['6', '7']\n  + ['7', '6']"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['7', '6'] == ['6', '7']", "E             At index 0 diff: '7' != '6'", "E             Full diff:", "E             - ['6', '7']", "E             + ['7', '6']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=2 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['7', '6'] == ['6', '7']", "E             At index 0 diff: '7' != '6'", "E             Full diff:", "E             - ['6', '7']", "E             + ['7', '6']"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q39/codestral_results_2/Folder_75/tests39_75_2.py", "lineno": 26, "message": "AssertionError: assert ['7', '6'] == ['6', '7']\n  At index 0 diff: '7' != '6'\n  Full diff:\n  - ['6', '7']\n  + ['7', '6']"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00065037999956985, "start": 1729829037.6305993, "stop": 1729829037.6312501, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw2>"}
{"nodeid": "tests39_75_2.py::test_if_result_is_sorted", "location": ["tests39_75_2.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_75_2.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014926100266166031, "start": 1729829037.6475446, "stop": 1729829037.6476946, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0d10cd62e05049a9a2165e064ea866a5", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
