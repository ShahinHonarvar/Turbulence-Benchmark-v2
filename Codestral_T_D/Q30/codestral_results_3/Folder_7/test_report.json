{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests30_7_3.py::test_string_of_length_one", "location": ["tests30_7_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_7_3.py": 1, "Folder_7": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010292697697877884, "start": 1738421224.3098142, "stop": 1738421224.3099174, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f5c6fb8ce432459d857636324eb9b114", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_7_3.py::test_string_of_length_one", "location": ["tests30_7_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_7_3.py": 1, "Folder_7": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q30/codestral_results_3/Folder_7/tests30_7_3.py", "lineno": 8, "message": "AssertionError: assert 'H H' == 'H '\n  \n  - H \n  + H H\n  ?   +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'H' + ' '", "E       AssertionError: assert 'H H' == 'H '", "E         ", "E         - H ", "E         + H H", "E         ?   +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/codestral_results_3/Folder_7/tests30_7_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'H' + ' '", "E       AssertionError: assert 'H H' == 'H '", "E         ", "E         - H ", "E         + H H", "E         ?   +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/codestral_results_3/Folder_7/tests30_7_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q30/codestral_results_3/Folder_7/tests30_7_3.py", "lineno": 8, "message": "AssertionError: assert 'H H' == 'H '\n  \n  - H \n  + H H\n  ?   +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027184560894966125, "start": 1738421224.3100576, "stop": 1738421224.31033, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f5c6fb8ce432459d857636324eb9b114", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_7_3.py::test_string_of_length_one", "location": ["tests30_7_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_7_3.py": 1, "Folder_7": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011140294373035431, "start": 1738421224.319179, "stop": 1738421224.3192909, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f5c6fb8ce432459d857636324eb9b114", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
