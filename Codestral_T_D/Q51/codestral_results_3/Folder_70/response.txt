id='1189bbc5e8ef4189afe9c820c1e60aab' object='chat.completion' model='codestral-latest' usage=UsageInfo(prompt_tokens=161, completion_tokens=257, total_tokens=418) created=1724675758 choices=[ChatCompletionChoice(index=0, message=AssistantMessage(content="Sure, here is the Python code that meets the specified requirements:\n\n```python\ndef if_contains_anagrams(lst):\n    from collections import Counter\n    count = 0\n    anagrams = {}\n    for word in lst:\n        word = word.lower()\n        if len(word) < 3:\n            continue\n        key = ''.join(sorted(word))\n        if key not in anagrams:\n            anagrams[key] = 1\n        else:\n            anagrams[key] += 1\n            count += anagrams[key] - 1\n    return count <= 97\n```\n\nThis function works by sorting the letters of each word, using the sorted letters as a key to a dictionary. If the key already exists in the dictionary, it increment the value of that key by one and adds the value to the count of anagrams. The function only considers words of length 3 or more and ignores case by converting all words to lowercase. The function returns true if the count of anagrams is less than or equal to 97, and false otherwise.", tool_calls=None, prefix=False, role='assistant'), finish_reason='stop')]