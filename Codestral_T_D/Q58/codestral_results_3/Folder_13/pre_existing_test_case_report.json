{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00048
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-29, -10,  71,  70,  25, -58,  43,  59,  37, -55,  71, -12, -85,\\n          80,  -8,  67, -57, -21,  55, -73,  95,  13, -92, -90,  18,   1,\\n         -27,  89,  64,  88, -70, -44, -30, -10, -14,  48, -10,  14,  38,\\n           3,  99,  67,  12,  98, -58,  25,  56, -79,  72,  39, -73, -93,\\n         -92,   5,   3,  22, -36,  92,  55, -28,  43,  42,  35, -65,  82,\\n         -24,  -7,  96,  -4,   5,  83,  85, -60, -84,  -3,  84, -73,  90,\\n          64,  74,  71, -29,  53,  77, -98,  75,  48, -88,  42, -64,  96,\\n         -65, -21,  83,  46,   7,  -8, -90,  31,  14,  70, -58, -94, -30,\\n          90, 100, -84, -76,  43, -75,   1, -52,  20,   9, -70,  91,  31,\\n         -40, -83,  -2, -33,  -2, -73,  12, -46, -69,  81,  95, -37, -32,\\n          19,  57, -43,  48, -40,  -4,  20, -28, -71,   4, -19,  63, -65,\\n         -14,  95, -62,  90,  61,  92,  68,  46,  58,  47,  95,  69,  18,\\n          96,  94,  13, -76,  63,  34,  26,  23, -48, -38, -68, -12, -45,\\n          92, -14, -98,  64, -96,  76]]))",
    0.00087
  ]
}