{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-47,   9,  16, -57,  19,  -1,   0,  37,   0,  30,  67,  94, -46,\\n           6,  55,  83,  55,  32, -37, -50, -71, -45, -26, -54, -51,  -1,\\n         -78,  58,  46, -96,  99,  38, -17, -45,  44,  70,  45, -76,  70,\\n         -66,  31, -28,  34, -99,  -4, -15,  55, -64,  15,  32,  -8,  69,\\n          96,  64,  38,  64,  -8, -11, -60, -17,   4, -17,  96, -40,  32,\\n          98,   3,  93,  91,  42,  22, -88, -97, -55, -18,  94,   0, -57,\\n          70,  11, -61, -61, -49,  30, -88,  95, -43,  93, -47,  23, -41,\\n         -92,  -3,  15, -34, -97,   5, -79,  99, -15,  14,  52,   0, -57,\\n          -6, -42, -25,  -9,  72,   0,  21,  -5, -99, -51, -67,  17,  66,\\n         -73,  31,  26,  81, 100,  41,  78,   3,  60, -52, -11, -16,  42,\\n          22,  46, -85,  85,  87, -89,  49,  13,  43, -31,  25, -77,  75,\\n          63, -31,  81, -48,  59,  85, -38,  49,   3,  33,   1, -33, -57,\\n         -34,   9, -33,   9,  74,  92, -88,  48,  88,  67, -21, -98, -33,\\n          24,  71, -52,  51, -82, -74]]))",
    0.00092
  ]
}