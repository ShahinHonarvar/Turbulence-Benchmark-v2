{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_5.py::test_matrix_of_one_integer", "location": ["tests58_48_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001191338524222374, "start": 1738429054.4747248, "stop": 1738429054.4748445, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3a01c8631319444a85a2f1e1adddcb7d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_one_integer", "location": ["tests58_48_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014578737318515778, "start": 1738429054.475001, "stop": 1738429054.4751472, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3a01c8631319444a85a2f1e1adddcb7d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_one_integer", "location": ["tests58_48_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.320288568735123e-05, "start": 1738429054.4754148, "stop": 1738429054.4754882, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3a01c8631319444a85a2f1e1adddcb7d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_having_130_integers", "location": ["tests58_48_5.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010340195149183273, "start": 1738429054.4809976, "stop": 1738429054.4811013, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3a01c8631319444a85a2f1e1adddcb7d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_having_130_integers", "location": ["tests58_48_5.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16, -61],\\n        [ -8, -49],\\n        [-19, -46],\\n        [  9,  80],\\n        [ 59,  86],\\n        [ 43, -13],\\n        [-85,   3],\\n        [ 32,  32],\\n        [-30,  -7],\\n        [ 96, -70],\\n        [  6,  41],\\n        [-69, -26],\\n        [ 30,  90],\\n        [-76,  -4],\\n        [ 43,  45],\\n        [ 15,   3],\\n        [ 56,  31],\\n        [ 78,  44],\\n        [-93,   9],\\n        [ 19,  25],\\n        [ 71, -23],\\n        [ 78, -67],\\n        [-18, -72],\\n        [ 59,  18],\\n        [ 42, -17],\\n        [ 25,  -7],\\n        [ 10,   2],\\n        [ 94,  26],\\n        [-65,  69],\\n        [ 21, -48],\\n        [-54,  76],\\n        [-59,  91],\\n        [-68, -48],\\n        [-18,  43],\\n        [ 95,  83],\\n        [ 43,  29],\\n        [  5,  -4],\\n        [-47, -52],\\n        [ 19,  17],\\n        [-61, -54],\\n        [-85, -39],\\n        [ 64,  -3],\\n        [-67,  50],\\n        [-99, -16],\\n        [-42, -36],\\n        [-18, -32],\\n        [-17,   0],\\n        [-65,  45],\\n        [  4, -62],\\n        [-18, -94],\\n        [-95,  28],\\n        [-77,  58],\\n        [-25,  71],\\n        [-36, -66],\\n        [-74,  30],\\n        [-83,  45],\\n        [-83, -52],\\n        [ 58,  95],\\n        [-33,  -9],\\n        [ 95, -71],\\n        [ 70, -11],\\n        [  2, -15],\\n        [-57, -61],\\n        [-57,  43],\\n        [-54, -49]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-16, -61],\\n        [ -8, -49],\\n        [-19, -46],\\n        [  9,  80],\\n        [ 59,  86],\\n        [ 43, -13],\\n        [-85,   3],\\n        [ 32,  32],\\n        [-30,  -7],\\n        [ 96, -70],\\n        [  6,  41],\\n        [-69, -26],\\n        [ 30,  90],\\n        [-76,  -4],\\n        [ 43,  45],\\n        [ 15,   3],\\n        [ 56,  31],\\n        [ 78,  44],\\n        [-93,   9],\\n        [ 19,  25],\\n        [ 71, -23],\\n        [ 78, -67],\\n        [-18, -72],\\n        [ 59,  18],\\n        [ 42, -17],\\n        [ 25,  -7],\\n        [ 10,   2],\\n        [ 94,  26],\\n        [-65,  69],\\n        [ 21, -48],\\n        [-54,  76],\\n        [-59,  91],\\n        [-68, -48],\\n        [-18,  43],\\n        [ 95,  83],\\n        [ 43,  29],\\n        [  5,  -4],\\n        [-47, -52],\\n        [ 19,  17],\\n        [-61, -54],\\n        [-85, -39],\\n        [ 64,  -3],\\n        [-67,  50],\\n        [-99, -16],\\n        [-42, -36],\\n        [-18, -32],\\n        [-17,   0],\\n        [-65,  45],\\n        [  4, -62],\\n        [-18, -94],\\n        [-95,  28],\\n        [-77,  58],\\n        [-25,  71],\\n        [-36, -66],\\n        [-74,  30],\\n        [-83,  45],\\n        [-83, -52],\\n        [ 58,  95],\\n        [-33,  -9],\\n        [ 95, -71],\\n        [ 70, -11],\\n        [  2, -15],\\n        [-57, -61],\\n        [-57,  43],\\n        [-54, -49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-16, -61],\\n        [ -8, -49],\\n        [-19, -46],\\n        [  9,  80],\\n        [ 59,  86],\\n        [ 43, -13],\\n        [-85,   3],\\n        [ 32,  32],\\n        [-30,  -7],\\n        [ 96, -70],\\n        [  6,  41],\\n        [-69, -26],\\n        [ 30,  90],\\n        [-76,  -4],\\n        [ 43,  45],\\n        [ 15,   3],\\n        [ 56,  31],\\n        [ 78,  44],\\n        [-93,   9],\\n        [ 19,  25],\\n        [ 71, -23],\\n        [ 78, -67],\\n        [-18, -72],\\n        [ 59,  18],\\n        [ 42, -17],\\n        [ 25,  -7],\\n        [ 10,   2],\\n        [ 94,  26],\\n        [-65,  69],\\n        [ 21, -48],\\n        [-54,  76],\\n        [-59,  91],\\n        [-68, -48],\\n        [-18,  43],\\n        [ 95,  83],\\n        [ 43,  29],\\n        [  5,  -4],\\n        [-47, -52],\\n        [ 19,  17],\\n        [-61, -54],\\n        [-85, -39],\\n        [ 64,  -3],\\n        [-67,  50],\\n        [-99, -16],\\n        [-42, -36],\\n        [-18, -32],\\n        [-17,   0],\\n        [-65,  45],\\n        [  4, -62],\\n        [-18, -94],\\n        [-95,  28],\\n        [-77,  58],\\n        [-25,  71],\\n        [-36, -66],\\n        [-74,  30],\\n        [-83,  45],\\n        [-83, -52],\\n        [ 58,  95],\\n        [-33,  -9],\\n        [ 95, -71],\\n        [ 70, -11],\\n        [  2, -15],\\n        [-57, -61],\\n        [-57,  43],\\n        [-54, -49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16, -61],\\n        [ -8, -49],\\n        [-19, -46],\\n        [  9,  80],\\n        [ 59,  86],\\n        [ 43, -13],\\n        [-85,   3],\\n        [ 32,  32],\\n        [-30,  -7],\\n        [ 96, -70],\\n        [  6,  41],\\n        [-69, -26],\\n        [ 30,  90],\\n        [-76,  -4],\\n        [ 43,  45],\\n        [ 15,   3],\\n        [ 56,  31],\\n        [ 78,  44],\\n        [-93,   9],\\n        [ 19,  25],\\n        [ 71, -23],\\n        [ 78, -67],\\n        [-18, -72],\\n        [ 59,  18],\\n        [ 42, -17],\\n        [ 25,  -7],\\n        [ 10,   2],\\n        [ 94,  26],\\n        [-65,  69],\\n        [ 21, -48],\\n        [-54,  76],\\n        [-59,  91],\\n        [-68, -48],\\n        [-18,  43],\\n        [ 95,  83],\\n        [ 43,  29],\\n        [  5,  -4],\\n        [-47, -52],\\n        [ 19,  17],\\n        [-61, -54],\\n        [-85, -39],\\n        [ 64,  -3],\\n        [-67,  50],\\n        [-99, -16],\\n        [-42, -36],\\n        [-18, -32],\\n        [-17,   0],\\n        [-65,  45],\\n        [  4, -62],\\n        [-18, -94],\\n        [-95,  28],\\n        [-77,  58],\\n        [-25,  71],\\n        [-36, -66],\\n        [-74,  30],\\n        [-83,  45],\\n        [-83, -52],\\n        [ 58,  95],\\n        [-33,  -9],\\n        [ 95, -71],\\n        [ 70, -11],\\n        [  2, -15],\\n        [-57, -61],\\n        [-57,  43],\\n        [-54, -49]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.010680065490305424, "start": 1738429054.4812129, "stop": 1738429054.491894, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3a01c8631319444a85a2f1e1adddcb7d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_having_130_integers", "location": ["tests58_48_5.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012208521366119385, "start": 1738429054.528909, "stop": 1738429054.5290315, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3a01c8631319444a85a2f1e1adddcb7d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
