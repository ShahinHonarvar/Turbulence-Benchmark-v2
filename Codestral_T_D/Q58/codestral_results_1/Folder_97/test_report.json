{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001080268993973732, "start": 1738428823.5787554, "stop": 1738428823.5788639, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "399f9d283f644fc08f71acde7b85f6c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013990700244903564, "start": 1738428823.5790157, "stop": 1738428823.579156, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "399f9d283f644fc08f71acde7b85f6c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_one_integer", "location": ["tests58_97_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.653275340795517e-05, "start": 1738428823.5794334, "stop": 1738428823.5795002, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "399f9d283f644fc08f71acde7b85f6c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.183158934116364e-05, "start": 1738428823.5809355, "stop": 1738428823.5810175, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "399f9d283f644fc08f71acde7b85f6c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,  -28],\\n        [  34,   13],\\n        [ -69,   23],\\n        [  86,   87],\\n        [  76,   50],\\n        [ -10,  -10],\\n        [ -30,  -33],\\n        [  22,   -3],\\n        [  40, -100],\\n        [ -70,   42],\\n        [  71,  -29],\\n        [  10,  -10],\\n        [ -45,   26],\\n        [  59,   95],\\n        [ -55,   94],\\n        [-100,  -96],\\n        [  85,   67],\\n        [  45,  -33],\\n        [ -55,   43],\\n        [ -47,  -21],\\n        [ -92,   26],\\n        [  22,  -93],\\n        [  33,  -97],\\n        [ -73,   95],\\n        [ -62,   46],\\n        [ -17,  -80],\\n        [ -27,  -29],\\n        [ -55,   19],\\n        [ -56,   93],\\n        [  -1,  -98],\\n        [ -91,   63],\\n        [  57,   80],\\n        [  87,    1],\\n        [  95,  -79],\\n        [  15,  -76],\\n        [  47,   19],\\n        [ -88,   77],\\n        [   4,  -79],\\n        [ -24,   93],\\n        [ -62,  -16],\\n        [  73,   -2],\\n        [  76,   21],\\n        [ 100,  -99],\\n        [  97,  -28],\\n        [  68,  -40],\\n        [ -45,  -71],\\n        [  72,   13],\\n        [  24,   50],\\n        [  66,   26],\\n        [  29,  -99],\\n        [   7,    9],\\n        [  81,   52],\\n        [ -92,  -52],\\n        [-100,   76],\\n        [  92,   55],\\n        [  70,  -87],\\n        [ -65,   43],\\n        [  94,  -27],\\n        [  28,  -34],\\n        [  39,  -31]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  16,  -28],\\n        [  34,   13],\\n        [ -69,   23],\\n        [  86,   87],\\n        [  76,   50],\\n        [ -10,  -10],\\n        [ -30,  -33],\\n        [  22,   -3],\\n        [  40, -100],\\n        [ -70,   42],\\n        [  71,  -29],\\n        [  10,  -10],\\n        [ -45,   26],\\n        [  59,   95],\\n        [ -55,   94],\\n        [-100,  -96],\\n        [  85,   67],\\n        [  45,  -33],\\n        [ -55,   43],\\n        [ -47,  -21],\\n        [ -92,   26],\\n        [  22,  -93],\\n        [  33,  -97],\\n        [ -73,   95],\\n        [ -62,   46],\\n        [ -17,  -80],\\n        [ -27,  -29],\\n        [ -55,   19],\\n        [ -56,   93],\\n        [  -1,  -98],\\n        [ -91,   63],\\n        [  57,   80],\\n        [  87,    1],\\n        [  95,  -79],\\n        [  15,  -76],\\n        [  47,   19],\\n        [ -88,   77],\\n        [   4,  -79],\\n        [ -24,   93],\\n        [ -62,  -16],\\n        [  73,   -2],\\n        [  76,   21],\\n        [ 100,  -99],\\n        [  97,  -28],\\n        [  68,  -40],\\n        [ -45,  -71],\\n        [  72,   13],\\n        [  24,   50],\\n        [  66,   26],\\n        [  29,  -99],\\n        [   7,    9],\\n        [  81,   52],\\n        [ -92,  -52],\\n        [-100,   76],\\n        [  92,   55],\\n        [  70,  -87],\\n        [ -65,   43],\\n        [  94,  -27],\\n        [  28,  -34],\\n        [  39,  -31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  16,  -28],\\n        [  34,   13],\\n        [ -69,   23],\\n        [  86,   87],\\n        [  76,   50],\\n        [ -10,  -10],\\n        [ -30,  -33],\\n        [  22,   -3],\\n        [  40, -100],\\n        [ -70,   42],\\n        [  71,  -29],\\n        [  10,  -10],\\n        [ -45,   26],\\n        [  59,   95],\\n        [ -55,   94],\\n        [-100,  -96],\\n        [  85,   67],\\n        [  45,  -33],\\n        [ -55,   43],\\n        [ -47,  -21],\\n        [ -92,   26],\\n        [  22,  -93],\\n        [  33,  -97],\\n        [ -73,   95],\\n        [ -62,   46],\\n        [ -17,  -80],\\n        [ -27,  -29],\\n        [ -55,   19],\\n        [ -56,   93],\\n        [  -1,  -98],\\n        [ -91,   63],\\n        [  57,   80],\\n        [  87,    1],\\n        [  95,  -79],\\n        [  15,  -76],\\n        [  47,   19],\\n        [ -88,   77],\\n        [   4,  -79],\\n        [ -24,   93],\\n        [ -62,  -16],\\n        [  73,   -2],\\n        [  76,   21],\\n        [ 100,  -99],\\n        [  97,  -28],\\n        [  68,  -40],\\n        [ -45,  -71],\\n        [  72,   13],\\n        [  24,   50],\\n        [  66,   26],\\n        [  29,  -99],\\n        [   7,    9],\\n        [  81,   52],\\n        [ -92,  -52],\\n        [-100,   76],\\n        [  92,   55],\\n        [  70,  -87],\\n        [ -65,   43],\\n        [  94,  -27],\\n        [  28,  -34],\\n        [  39,  -31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_1/Folder_97/tests58_97_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,  -28],\\n        [  34,   13],\\n        [ -69,   23],\\n        [  86,   87],\\n        [  76,   50],\\n        [ -10,  -10],\\n        [ -30,  -33],\\n        [  22,   -3],\\n        [  40, -100],\\n        [ -70,   42],\\n        [  71,  -29],\\n        [  10,  -10],\\n        [ -45,   26],\\n        [  59,   95],\\n        [ -55,   94],\\n        [-100,  -96],\\n        [  85,   67],\\n        [  45,  -33],\\n        [ -55,   43],\\n        [ -47,  -21],\\n        [ -92,   26],\\n        [  22,  -93],\\n        [  33,  -97],\\n        [ -73,   95],\\n        [ -62,   46],\\n        [ -17,  -80],\\n        [ -27,  -29],\\n        [ -55,   19],\\n        [ -56,   93],\\n        [  -1,  -98],\\n        [ -91,   63],\\n        [  57,   80],\\n        [  87,    1],\\n        [  95,  -79],\\n        [  15,  -76],\\n        [  47,   19],\\n        [ -88,   77],\\n        [   4,  -79],\\n        [ -24,   93],\\n        [ -62,  -16],\\n        [  73,   -2],\\n        [  76,   21],\\n        [ 100,  -99],\\n        [  97,  -28],\\n        [  68,  -40],\\n        [ -45,  -71],\\n        [  72,   13],\\n        [  24,   50],\\n        [  66,   26],\\n        [  29,  -99],\\n        [   7,    9],\\n        [  81,   52],\\n        [ -92,  -52],\\n        [-100,   76],\\n        [  92,   55],\\n        [  70,  -87],\\n        [ -65,   43],\\n        [  94,  -27],\\n        [  28,  -34],\\n        [  39,  -31]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0057729631662368774, "start": 1738428823.581117, "stop": 1738428823.5868905, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "399f9d283f644fc08f71acde7b85f6c1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_1.py::test_matrix_of_having_120_integers", "location": ["tests58_97_1.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_1.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0007518790662288666, "start": 1738428823.603809, "stop": 1738428823.6045613, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "399f9d283f644fc08f71acde7b85f6c1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
