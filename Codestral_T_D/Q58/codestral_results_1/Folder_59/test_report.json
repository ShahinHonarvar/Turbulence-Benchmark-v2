{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00038646720349788666, "start": 1738428801.693266, "stop": 1738428801.6936533, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00b7eec713d74bcb863244b4ed07f96c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017498526722192764, "start": 1738428801.6941428, "stop": 1738428801.6943178, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00b7eec713d74bcb863244b4ed07f96c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016505643725395203, "start": 1738428801.6946256, "stop": 1738428801.6947908, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00b7eec713d74bcb863244b4ed07f96c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003385767340660095, "start": 1738428801.6957798, "stop": 1738428801.696119, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00b7eec713d74bcb863244b4ed07f96c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  91,   63],\\n        [ -57,  -37],\\n        [  22,  -40],\\n        [  50,  -68],\\n        [   5,   21],\\n        [ 100,   94],\\n        [  36,  -97],\\n        [ -14,    2],\\n        [  22,   88],\\n        [ -83,  -21],\\n        [   6,  -84],\\n        [ -40,  -42],\\n        [  95,   55],\\n        [  31,   27],\\n        [ -16,    3],\\n        [ -73,   48],\\n        [  63,   37],\\n        [  75,   40],\\n        [   8,   59],\\n        [ -89,   70],\\n        [  42,   20],\\n        [   0,   38],\\n        [  74,  -60],\\n        [  72,   98],\\n        [   0,  -46],\\n        [  38,  -17],\\n        [  -2,  -55],\\n        [  51, -100],\\n        [  17,   76],\\n        [  35,  -42],\\n        [ -50,   -6],\\n        [ -17,   64],\\n        [  24,   56],\\n        [  11,   64],\\n        [ -54,   33],\\n        [  81,  -30],\\n        [  34,   69],\\n        [  78,   46]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  91,   63],\\n        [ -57,  -37],\\n        [  22,  -40],\\n        [  50,  -68],\\n        [   5,   21],\\n        [ 100,   94],\\n        [  36,  -97],\\n        [ -14,    2],\\n        [  22,   88],\\n        [ -83,  -21],\\n        [   6,  -84],\\n        [ -40,  -42],\\n        [  95,   55],\\n        [  31,   27],\\n        [ -16,    3],\\n        [ -73,   48],\\n        [  63,   37],\\n        [  75,   40],\\n        [   8,   59],\\n        [ -89,   70],\\n        [  42,   20],\\n        [   0,   38],\\n        [  74,  -60],\\n        [  72,   98],\\n        [   0,  -46],\\n        [  38,  -17],\\n        [  -2,  -55],\\n        [  51, -100],\\n        [  17,   76],\\n        [  35,  -42],\\n        [ -50,   -6],\\n        [ -17,   64],\\n        [  24,   56],\\n        [  11,   64],\\n        [ -54,   33],\\n        [  81,  -30],\\n        [  34,   69],\\n        [  78,   46]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  91,   63],\\n        [ -57,  -37],\\n        [  22,  -40],\\n        [  50,  -68],\\n        [   5,   21],\\n        [ 100,   94],\\n        [  36,  -97],\\n        [ -14,    2],\\n        [  22,   88],\\n        [ -83,  -21],\\n        [   6,  -84],\\n        [ -40,  -42],\\n        [  95,   55],\\n        [  31,   27],\\n        [ -16,    3],\\n        [ -73,   48],\\n        [  63,   37],\\n        [  75,   40],\\n        [   8,   59],\\n        [ -89,   70],\\n        [  42,   20],\\n        [   0,   38],\\n        [  74,  -60],\\n        [  72,   98],\\n        [   0,  -46],\\n        [  38,  -17],\\n        [  -2,  -55],\\n        [  51, -100],\\n        [  17,   76],\\n        [  35,  -42],\\n        [ -50,   -6],\\n        [ -17,   64],\\n        [  24,   56],\\n        [  11,   64],\\n        [ -54,   33],\\n        [  81,  -30],\\n        [  34,   69],\\n        [  78,   46]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  91,   63],\\n        [ -57,  -37],\\n        [  22,  -40],\\n        [  50,  -68],\\n        [   5,   21],\\n        [ 100,   94],\\n        [  36,  -97],\\n        [ -14,    2],\\n        [  22,   88],\\n        [ -83,  -21],\\n        [   6,  -84],\\n        [ -40,  -42],\\n        [  95,   55],\\n        [  31,   27],\\n        [ -16,    3],\\n        [ -73,   48],\\n        [  63,   37],\\n        [  75,   40],\\n        [   8,   59],\\n        [ -89,   70],\\n        [  42,   20],\\n        [   0,   38],\\n        [  74,  -60],\\n        [  72,   98],\\n        [   0,  -46],\\n        [  38,  -17],\\n        [  -2,  -55],\\n        [  51, -100],\\n        [  17,   76],\\n        [  35,  -42],\\n        [ -50,   -6],\\n        [ -17,   64],\\n        [  24,   56],\\n        [  11,   64],\\n        [ -54,   33],\\n        [  81,  -30],\\n        [  34,   69],\\n        [  78,   46]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005896845832467079, "start": 1738428801.6963952, "stop": 1738428801.6969852, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00b7eec713d74bcb863244b4ed07f96c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00042117852717638016, "start": 1738428801.7133148, "stop": 1738428801.713737, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00b7eec713d74bcb863244b4ed07f96c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
