{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_2.py::test_matrix_of_one_integer", "location": ["tests58_59_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004606582224369049, "start": 1738428880.3785887, "stop": 1738428880.37905, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ad76306a338f44ddbcf2faf3cbf1ea04", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_one_integer", "location": ["tests58_59_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000205223448574543, "start": 1738428880.3796017, "stop": 1738428880.3798072, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ad76306a338f44ddbcf2faf3cbf1ea04", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_one_integer", "location": ["tests58_59_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018941890448331833, "start": 1738428880.3801258, "stop": 1738428880.3803153, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ad76306a338f44ddbcf2faf3cbf1ea04", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_having_76_integers", "location": ["tests58_59_2.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014550238847732544, "start": 1738428880.3814523, "stop": 1738428880.3815982, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ad76306a338f44ddbcf2faf3cbf1ea04", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_having_76_integers", "location": ["tests58_59_2.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -41,  -20],\\n        [ -88,   35],\\n        [  80,   72],\\n        [ -99,  -14],\\n        [  57,   82],\\n        [  76,  -89],\\n        [ -31,   56],\\n        [  22,   83],\\n        [ -71,  -21],\\n        [ -22,   48],\\n        [  52,  -17],\\n        [  37,   94],\\n        [ -48,   -2],\\n        [  97,   99],\\n        [ -38,  -64],\\n        [ -79,   41],\\n        [ -29,  -89],\\n        [  21,   92],\\n        [ -79,   31],\\n        [ -95,   76],\\n        [  71,  -81],\\n        [  80,   53],\\n        [ -35,   34],\\n        [ -52,  -11],\\n        [  62,  -78],\\n        [  94,  -54],\\n        [  33,  -48],\\n        [  37,  -55],\\n        [  -5,   -8],\\n        [  74,   23],\\n        [  53,    6],\\n        [  78,   65],\\n        [ -84,  -26],\\n        [ -63,  -12],\\n        [ -35,   32],\\n        [  34,  -38],\\n        [ -76,   69],\\n        [ -11, -100]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -41,  -20],\\n        [ -88,   35],\\n        [  80,   72],\\n        [ -99,  -14],\\n        [  57,   82],\\n        [  76,  -89],\\n        [ -31,   56],\\n        [  22,   83],\\n        [ -71,  -21],\\n        [ -22,   48],\\n        [  52,  -17],\\n        [  37,   94],\\n        [ -48,   -2],\\n        [  97,   99],\\n        [ -38,  -64],\\n        [ -79,   41],\\n        [ -29,  -89],\\n        [  21,   92],\\n        [ -79,   31],\\n        [ -95,   76],\\n        [  71,  -81],\\n        [  80,   53],\\n        [ -35,   34],\\n        [ -52,  -11],\\n        [  62,  -78],\\n        [  94,  -54],\\n        [  33,  -48],\\n        [  37,  -55],\\n        [  -5,   -8],\\n        [  74,   23],\\n        [  53,    6],\\n        [  78,   65],\\n        [ -84,  -26],\\n        [ -63,  -12],\\n        [ -35,   32],\\n        [  34,  -38],\\n        [ -76,   69],\\n        [ -11, -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -41,  -20],\\n        [ -88,   35],\\n        [  80,   72],\\n        [ -99,  -14],\\n        [  57,   82],\\n        [  76,  -89],\\n        [ -31,   56],\\n        [  22,   83],\\n        [ -71,  -21],\\n        [ -22,   48],\\n        [  52,  -17],\\n        [  37,   94],\\n        [ -48,   -2],\\n        [  97,   99],\\n        [ -38,  -64],\\n        [ -79,   41],\\n        [ -29,  -89],\\n        [  21,   92],\\n        [ -79,   31],\\n        [ -95,   76],\\n        [  71,  -81],\\n        [  80,   53],\\n        [ -35,   34],\\n        [ -52,  -11],\\n        [  62,  -78],\\n        [  94,  -54],\\n        [  33,  -48],\\n        [  37,  -55],\\n        [  -5,   -8],\\n        [  74,   23],\\n        [  53,    6],\\n        [  78,   65],\\n        [ -84,  -26],\\n        [ -63,  -12],\\n        [ -35,   32],\\n        [  34,  -38],\\n        [ -76,   69],\\n        [ -11, -100]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -41,  -20],\\n        [ -88,   35],\\n        [  80,   72],\\n        [ -99,  -14],\\n        [  57,   82],\\n        [  76,  -89],\\n        [ -31,   56],\\n        [  22,   83],\\n        [ -71,  -21],\\n        [ -22,   48],\\n        [  52,  -17],\\n        [  37,   94],\\n        [ -48,   -2],\\n        [  97,   99],\\n        [ -38,  -64],\\n        [ -79,   41],\\n        [ -29,  -89],\\n        [  21,   92],\\n        [ -79,   31],\\n        [ -95,   76],\\n        [  71,  -81],\\n        [  80,   53],\\n        [ -35,   34],\\n        [ -52,  -11],\\n        [  62,  -78],\\n        [  94,  -54],\\n        [  33,  -48],\\n        [  37,  -55],\\n        [  -5,   -8],\\n        [  74,   23],\\n        [  53,    6],\\n        [  78,   65],\\n        [ -84,  -26],\\n        [ -63,  -12],\\n        [ -35,   32],\\n        [  34,  -38],\\n        [ -76,   69],\\n        [ -11, -100]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0031295660883188248, "start": 1738428880.3817124, "stop": 1738428880.3848426, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ad76306a338f44ddbcf2faf3cbf1ea04", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_having_76_integers", "location": ["tests58_59_2.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013052672147750854, "start": 1738428880.40232, "stop": 1738428880.4024508, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ad76306a338f44ddbcf2faf3cbf1ea04", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
