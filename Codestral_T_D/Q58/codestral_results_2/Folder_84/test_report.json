{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_84_2.py::test_matrix_of_one_integer", "location": ["tests58_84_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00041534099727869034, "start": 1738428893.184729, "stop": 1738428893.185145, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "effb708c0de2441f851a4d3641a7664c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_one_integer", "location": ["tests58_84_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019636936485767365, "start": 1738428893.1856556, "stop": 1738428893.1858525, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "effb708c0de2441f851a4d3641a7664c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_one_integer", "location": ["tests58_84_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.953308522701263e-05, "start": 1738428893.1861782, "stop": 1738428893.186258, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "effb708c0de2441f851a4d3641a7664c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_having_127_integers", "location": ["tests58_84_2.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016937591135501862, "start": 1738428893.1875896, "stop": 1738428893.1877594, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "effb708c0de2441f851a4d3641a7664c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_having_127_integers", "location": ["tests58_84_2.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -47,   96,  -89,   13,  -35,   -9,    0,   35,   92,  -10,\\n           54,  -55,   13,    6,  -65,   14,  100,   -5,  -32,   87,\\n          -92,  -50,  -55,   -7,  -11,   50,   25,    3,   -2,  -10,\\n          -50,  -98,   96,    0,  -70,  -82,    3,  -12,   67,   11,\\n          -97,  -19,   48,    9,  -37,  -60,  -94,   76,  -66, -100,\\n          -33,   13,   10,  -61,   13,   69,  -18,   89,   76,   33,\\n          -12,   61,  -37,  -90,  -25,   11,  -46,   24,  -79,   -4,\\n          -17,    6,   56,   36,   31,   41,   33,   87,  -57,  -42,\\n          -15,  -74,  -72,   72,  -12,   19,   70,  -98,   31,  -91,\\n           32,  -76,   -7,   24,   15,  -51,   33,  -35,  -69,    9,\\n          -39,  -49,   29,    3,   39, -100,   80,  -23,   54,    9,\\n           52,   46,   11,   85,   -9,   -1,   71,   29,  -80,   73,\\n          -80,   27,   67,  -70,  -46,   91,  -61]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -47,   96,  -89,   13,  -35,   -9,    0,   35,   92,  -10,\\n           54,  -55,   13,    6,  -65,   14,  100,   -5,  -32,   87,\\n          -92,  -50,  -55,   -7,  -11,   50,   25,    3,   -2,  -10,\\n          -50,  -98,   96,    0,  -70,  -82,    3,  -12,   67,   11,\\n          -97,  -19,   48,    9,  -37,  -60,  -94,   76,  -66, -100,\\n          -33,   13,   10,  -61,   13,   69,  -18,   89,   76,   33,\\n          -12,   61,  -37,  -90,  -25,   11,  -46,   24,  -79,   -4,\\n          -17,    6,   56,   36,   31,   41,   33,   87,  -57,  -42,\\n          -15,  -74,  -72,   72,  -12,   19,   70,  -98,   31,  -91,\\n           32,  -76,   -7,   24,   15,  -51,   33,  -35,  -69,    9,\\n          -39,  -49,   29,    3,   39, -100,   80,  -23,   54,    9,\\n           52,   46,   11,   85,   -9,   -1,   71,   29,  -80,   73,\\n          -80,   27,   67,  -70,  -46,   91,  -61]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -47,   96,  -89,   13,  -35,   -9,    0,   35,   92,  -10,\\n           54,  -55,   13,    6,  -65,   14,  100,   -5,  -32,   87,\\n          -92,  -50,  -55,   -7,  -11,   50,   25,    3,   -2,  -10,\\n          -50,  -98,   96,    0,  -70,  -82,    3,  -12,   67,   11,\\n          -97,  -19,   48,    9,  -37,  -60,  -94,   76,  -66, -100,\\n          -33,   13,   10,  -61,   13,   69,  -18,   89,   76,   33,\\n          -12,   61,  -37,  -90,  -25,   11,  -46,   24,  -79,   -4,\\n          -17,    6,   56,   36,   31,   41,   33,   87,  -57,  -42,\\n          -15,  -74,  -72,   72,  -12,   19,   70,  -98,   31,  -91,\\n           32,  -76,   -7,   24,   15,  -51,   33,  -35,  -69,    9,\\n          -39,  -49,   29,    3,   39, -100,   80,  -23,   54,    9,\\n           52,   46,   11,   85,   -9,   -1,   71,   29,  -80,   73,\\n          -80,   27,   67,  -70,  -46,   91,  -61]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codestral_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q58/codestral_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -47,   96,  -89,   13,  -35,   -9,    0,   35,   92,  -10,\\n           54,  -55,   13,    6,  -65,   14,  100,   -5,  -32,   87,\\n          -92,  -50,  -55,   -7,  -11,   50,   25,    3,   -2,  -10,\\n          -50,  -98,   96,    0,  -70,  -82,    3,  -12,   67,   11,\\n          -97,  -19,   48,    9,  -37,  -60,  -94,   76,  -66, -100,\\n          -33,   13,   10,  -61,   13,   69,  -18,   89,   76,   33,\\n          -12,   61,  -37,  -90,  -25,   11,  -46,   24,  -79,   -4,\\n          -17,    6,   56,   36,   31,   41,   33,   87,  -57,  -42,\\n          -15,  -74,  -72,   72,  -12,   19,   70,  -98,   31,  -91,\\n           32,  -76,   -7,   24,   15,  -51,   33,  -35,  -69,    9,\\n          -39,  -49,   29,    3,   39, -100,   80,  -23,   54,    9,\\n           52,   46,   11,   85,   -9,   -1,   71,   29,  -80,   73,\\n          -80,   27,   67,  -70,  -46,   91,  -61]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006267689168453217, "start": 1738428893.1880484, "stop": 1738428893.1886756, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "effb708c0de2441f851a4d3641a7664c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_having_127_integers", "location": ["tests58_84_2.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.002455536276102066, "start": 1738428893.2050724, "stop": 1738428893.2075286, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "effb708c0de2441f851a4d3641a7664c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
