{
  "parameter(s)": [
    40
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00024
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00016
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00013
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[40], [40, 4... 40, 40], ...] == [[40], [40], ...0], [40], ...]\n  At index 1 diff: [40, 40] != [40]\n  Left contains 7482 more items, first extra item: [40]\n  Full diff:\n    [\n     [40],\n  +  [40,\n  +   40],...\n  \n  ...Full output truncated (333034 lines hidden), use '-vv' to show",
    1.40373
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 6 == 3)\n +  where 3 = <built-in method count of list object at 0x7582ebf69080>([40])\n +    where <built-in method count of list object at 0x7582ebf69080> = [[1, 40], [1, 40, 1], [1, 40, 1], [1, 40, 1, 40], [1, 40, 1, 40], [1, 40, 1, 40, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7582ebf69080>([1, 40])\n +    where <built-in method count of list object at 0x7582ebf69080> = [[1, 40], [1, 40, 1], [1, 40, 1], [1, 40, 1, 40], [1, 40, 1, 40], [1, 40, 1, 40, 1], ...].count\n +  and   6 = <built-in method count of list object at 0x7582ebf69080>([40, 1])\n +    where <built-in method count of list object at 0x7582ebf69080> = [[1, 40], [1, 40, 1], [1, 40, 1], [1, 40, 1, 40], [1, 40, 1, 40], [1, 40, 1, 40, 1], ...].count",
    0.00151
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 320 == 40\n +  where 320 = <built-in function prod>([1, 2, 4, 5, 8])\n +    where <built-in function prod> = math.prod",
    0.00057
  ]
}