{
  "parameter(s)": [
    -9
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00019
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00017
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00013
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-9], [-9, -...[-9, -9], ...] == [[-9], [-9], ...9], [-9], ...]\n  At index 1 diff: [-9, -9] != [-9]\n  Left contains 51 more items, first extra item: [-9, -9]\n  Full diff:\n    [\n     [-9],\n  +  [-9,\n  +   -9],...\n  \n  ...Full output truncated (150 lines hidden), use '-vv' to show",
    0.00782
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 0 == 3)\n +  where 3 = <built-in method count of list object at 0x7e06e6a4e780>([-9])\n +    where <built-in method count of list object at 0x7e06e6a4e780> = [[1, -9], [1, -9, 1], [-9], [-9, 1, -9], [-9, 1, -9, 1], [1, -9], ...].count\n +  and   3 = <built-in method count of list object at 0x7e06e6a4e780>([1, -9])\n +    where <built-in method count of list object at 0x7e06e6a4e780> = [[1, -9], [1, -9, 1], [-9], [-9, 1, -9], [-9, 1, -9, 1], [1, -9], ...].count\n +  and   0 = <built-in method count of list object at 0x7e06e6a4e780>([-9, 1])\n +    where <built-in method count of list object at 0x7e06e6a4e780> = [[1, -9], [1, -9, 1], [-9], [-9, 1, -9], [-9, 1, -9, 1], [1, -9], ...].count",
    0.00051
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 27 == -9\n +  where 27 = <built-in function prod>([-3, -9])\n +    where <built-in function prod> = math.prod",
    0.00027
  ]
}