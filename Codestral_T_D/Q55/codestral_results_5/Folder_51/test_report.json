{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests55_51_5.py::test_list_of_several_same_number", "location": ["tests55_51_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018816199735738337, "start": 1729924727.506866, "stop": 1729924727.5070548, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_51_5.py::test_sublist_size", "location": ["tests55_51_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016463200154248625, "start": 1729924727.5074134, "stop": 1729924727.5075788, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_list_of_single_number", "location": ["tests55_51_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00357935500505846, "start": 1729924727.5040133, "stop": 1729924727.5075934, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_51_5.py::test_sublist_size", "location": ["tests55_51_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019410600361879915, "start": 1729924727.507977, "stop": 1729924727.5081718, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_sublist_size", "location": ["tests55_51_5.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010232201020698994, "start": 1729924727.5085921, "stop": 1729924727.5086951, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_list_of_single_number", "location": ["tests55_51_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009496290003880858, "start": 1729924727.50872, "stop": 1729924727.5096703, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_51_5.py::test_list_of_single_number", "location": ["tests55_51_5.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0017544080037623644, "start": 1729924727.5100985, "stop": 1729924727.5118532, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_51_5.py::test_return_elements_are_in_given_list", "location": ["tests55_51_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016932400467339903, "start": 1729924727.5134017, "stop": 1729924727.513572, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_return_elements_are_in_given_list", "location": ["tests55_51_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017784499505069107, "start": 1729924727.513752, "stop": 1729924727.5139303, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_return_elements_are_in_given_list", "location": ["tests55_51_5.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010052099241875112, "start": 1729924727.514299, "stop": 1729924727.5143998, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_if_sublist_product_equals_number", "location": ["tests55_51_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001619640097487718, "start": 1729924727.5198643, "stop": 1729924727.520027, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_51_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001693560043349862, "start": 1729924727.519844, "stop": 1729924727.5200143, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_51_5.py::test_if_sublist_product_equals_number", "location": ["tests55_51_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 107, "message": "assert 7256313856 == -44\n +  where 7256313856 = <built-in function prod>([-44, -1, -2, -4, -11, -22, ...])\n +    where <built-in function prod> = math.prod"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_sublist_product_equals_number():", "        input_list = []", "        if -44 == 0:", "            k = random.randint(1, 4)", "            input_list = list(range(-k, k + 1))", "        elif -44 > 0:", "            divs = [i for i in range(1, -44 + 1) if -44 % i == 0]", "            input_list = divs + divs", "        else:", "            n = --44", "            divs = [-i for i in range(1, n + 1) if n % i == 0]", "            input_list = divs + divs", "    ", "        result = lists_with_product_equal_n(input_list)", "        if result:", "            for r in result:", ">               assert math.prod(r) == -44", "E               assert 7256313856 == -44", "E                +  where 7256313856 = <built-in function prod>([-44, -1, -2, -4, -11, -22, ...])", "E                +    where <built-in function prod> = math.prod"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 107, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_sublist_product_equals_number():", "        input_list = []", "        if -44 == 0:", "            k = random.randint(1, 4)", "            input_list = list(range(-k, k + 1))", "        elif -44 > 0:", "            divs = [i for i in range(1, -44 + 1) if -44 % i == 0]", "            input_list = divs + divs", "        else:", "            n = --44", "            divs = [-i for i in range(1, n + 1) if n % i == 0]", "            input_list = divs + divs", "    ", "        result = lists_with_product_equal_n(input_list)", "        if result:", "            for r in result:", ">               assert math.prod(r) == -44", "E               assert 7256313856 == -44", "E                +  where 7256313856 = <built-in function prod>([-44, -1, -2, -4, -11, -22, ...])", "E                +    where <built-in function prod> = math.prod"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 107, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 107, "message": "assert 7256313856 == -44\n +  where 7256313856 = <built-in function prod>([-44, -1, -2, -4, -11, -22, ...])\n +    where <built-in function prod> = math.prod"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00036953299422748387, "start": 1729924727.5202904, "stop": 1729924727.5206606, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_if_sublist_product_equals_number", "location": ["tests55_51_5.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001670909987296909, "start": 1729924727.5454323, "stop": 1729924727.5456002, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_51_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_51_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x76cd3fa6f500>([-44])\n +    where <built-in method count of list object at 0x76cd3fa6f500> = [[1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], [-44, 1, -44, 1, -44, 1], [-44, 1, -44, 1, -44, 1], [1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -44, 1, -44, 1, -44]", "        result = lists_with_product_equal_n(input_list)", "        if -44 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -44 == 1:", "            assert result.count([-44]) == 6 and result.count([1, -44]) == 6 and result.count([-44, 1]) == 6 and result.count([1, -44, 1]) == 6", "        else:", ">           assert result.count([-44]) == 3 and result.count([1, -44]) == 3 and result.count([-44, 1]) == 3 and result.count([1, -44, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x76cd3fa6f500>([-44])", "E            +    where <built-in method count of list object at 0x76cd3fa6f500> = [[1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], [-44, 1, -44, 1, -44, 1], [-44, 1, -44, 1, -44, 1], [1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -44, 1, -44, 1, -44]", "        result = lists_with_product_equal_n(input_list)", "        if -44 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -44 == 1:", "            assert result.count([-44]) == 6 and result.count([1, -44]) == 6 and result.count([-44, 1]) == 6 and result.count([1, -44, 1]) == 6", "        else:", ">           assert result.count([-44]) == 3 and result.count([1, -44]) == 3 and result.count([-44, 1]) == 3 and result.count([1, -44, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x76cd3fa6f500>([-44])", "E            +    where <built-in method count of list object at 0x76cd3fa6f500> = [[1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], [-44, 1, -44, 1, -44, 1], [-44, 1, -44, 1, -44, 1], [1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x76cd3fa6f500>([-44])\n +    where <built-in method count of list object at 0x76cd3fa6f500> = [[1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], [-44, 1, -44, 1, -44, 1], [-44, 1, -44, 1, -44, 1], [1, -44, 1, -44, 1, -44], [1, -44, 1, -44, 1, -44], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00044035998871549964, "start": 1729924727.5201986, "stop": 1729924727.5206394, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_51_5.py::test_presence_of_duplicates_in_result", "location": ["tests55_51_5.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017665101040620357, "start": 1729924727.5651429, "stop": 1729924727.56532, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_51_5.py::test_list_of_several_same_number", "location": ["tests55_51_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 40, "message": "AssertionError: assert [[-44, -44, -...44, ...], ...] == [[-44], [-44]...], [-44], ...]\n  At index 0 diff: [-44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44] != [-44]\n  Full diff:\n    [\n  -  [-44],\n  ?      -\n  +  [-44,\n  +   -44,...\n  \n  ...Full output truncated (2205 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if -44 == 0 or -44 == 1:", "            for i in range(1, n + 1):", "                l.append([-44] * i)", "            l = l * n", "        elif -44 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[-44]] * n", "    ", "        input_list = [-44] * n", ">       assert lists_with_product_equal_n(input_list) == l", "E       AssertionError: assert [[-44, -44, -...44, ...], ...] == [[-44], [-44]...], [-44], ...]", "E         At index 0 diff: [-44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44] != [-44]", "E         Full diff:", "E           [", "E         -  [-44],", "E         ?      -", "E         +  [-44,", "E         +   -44,...", "E         ", "E         ...Full output truncated (2205 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if -44 == 0 or -44 == 1:", "            for i in range(1, n + 1):", "                l.append([-44] * i)", "            l = l * n", "        elif -44 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[-44]] * n", "    ", "        input_list = [-44] * n", ">       assert lists_with_product_equal_n(input_list) == l", "E       AssertionError: assert [[-44, -44, -...44, ...], ...] == [[-44], [-44]...], [-44], ...]", "E         At index 0 diff: [-44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44] != [-44]", "E         Full diff:", "E           [", "E         -  [-44],", "E         ?      -", "E         +  [-44,", "E         +   -44,...", "E         ", "E         ...Full output truncated (2205 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_5/Folder_51/tests55_51_5.py", "lineno": 40, "message": "AssertionError: assert [[-44, -44, -...44, ...], ...] == [[-44], [-44]...], [-44], ...]\n  At index 0 diff: [-44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44] != [-44]\n  Full diff:\n    [\n  -  [-44],\n  ?      -\n  +  [-44,\n  +   -44,...\n  \n  ...Full output truncated (2205 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.8913668050081469, "start": 1729924727.5083363, "stop": 1729924728.3997037, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_51_5.py::test_list_of_several_same_number", "location": ["tests55_51_5.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_51_5.py": 1, "Folder_51": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015433999942615628, "start": 1729924728.4166706, "stop": 1729924728.4168255, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "48c01529c42e477c929c0718cbab4b69", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
