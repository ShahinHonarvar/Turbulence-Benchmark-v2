{
  "parameter(s)": [
    32
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00017
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00095
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00019
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 512 == 32\n +  where 512 = <built-in function prod>([4, 8, 16])\n +    where <built-in function prod> = math.prod",
    0.00037
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[32], [32, 3... 32, 32], ...] == [[32], [32], ...2], [32], ...]\n  At index 1 diff: [32, 32] != [32]\n  Left contains 171 more items, first extra item: [32]\n  Full diff:\n    [\n     [32],\n  -  [32],\n  ?     -...\n  \n  ...Full output truncated (1362 lines hidden), use '-vv' to show",
    0.17213
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 4 == 3)\n +  where 3 = <built-in method count of list object at 0x7d40eba3e200>([32])\n +    where <built-in method count of list object at 0x7d40eba3e200> = [[1, 32], [1, 32, 1], [1, 32, 1], [1, 32, 1, 32], [1, 32, 1, 32], [1, 32, 1, 32, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7d40eba3e200>([1, 32])\n +    where <built-in method count of list object at 0x7d40eba3e200> = [[1, 32], [1, 32, 1], [1, 32, 1], [1, 32, 1, 32], [1, 32, 1, 32], [1, 32, 1, 32, 1], ...].count\n +  and   4 = <built-in method count of list object at 0x7d40eba3e200>([32, 1])\n +    where <built-in method count of list object at 0x7d40eba3e200> = [[1, 32], [1, 32, 1], [1, 32, 1], [1, 32, 1, 32], [1, 32, 1, 32], [1, 32, 1, 32, 1], ...].count",
    0.00063
  ]
}