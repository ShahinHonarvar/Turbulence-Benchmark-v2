{
  "parameter(s)": [
    6
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00016
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00019
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[6, 6, 6, 6,... 6, ...], ...] == [[6], [6], [6...[6], [6], ...]\n  At index 0 diff: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6] != [6]\n  Full diff:\n    [\n  -  [6],\n  ?    -\n  +  [6,\n  +   6,...\n  \n  ...Full output truncated (4221 lines hidden), use '-vv' to show",
    3.06828
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x72afd8dd2840>([6])\n +    where <built-in method count of list object at 0x72afd8dd2840> = [[1, 6, 1, 6, 1, 6], [1, 6, 1, 6, 1, 6], [6, 1, 6, 1, 6, 1], [6, 1, 6, 1, 6, 1], [1, 6, 1, 6, 1, 6], [1, 6, 1, 6, 1, 6], ...].count",
    0.00032
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 1296 == 6\n +  where 1296 = <built-in function prod>([1, 2, 3, 6, 1, 2, ...])\n +    where <built-in function prod> = math.prod",
    0.00029
  ]
}