{
  "parameter(s)": [
    2
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00018
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00017
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00013
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[2, 2], [2, ..., [2, 2], ...] == [[2], [2], [2...[2], [2], ...]\n  At index 0 diff: [2, 2] != [2]\n  Left contains 7482 more items, first extra item: [2, 2]\n  Full diff:\n    [\n  +  [2,\n  +   2],\n  +  [2,...\n  \n  ...Full output truncated (15049 lines hidden), use '-vv' to show",
    0.11778
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 6 == 3)\n +  where 3 = <built-in method count of list object at 0x7f3d555c4d40>([2])\n +    where <built-in method count of list object at 0x7f3d555c4d40> = [[2, 1, 2], [2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2], [2, 1, 2], [2, 1, 2], ...].count\n +  and   3 = <built-in method count of list object at 0x7f3d555c4d40>([1, 2])\n +    where <built-in method count of list object at 0x7f3d555c4d40> = [[2, 1, 2], [2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2], [2, 1, 2], [2, 1, 2], ...].count\n +  and   6 = <built-in method count of list object at 0x7f3d555c4d40>([2, 1])\n +    where <built-in method count of list object at 0x7f3d555c4d40> = [[2, 1, 2], [2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2], [2, 1, 2], [2, 1, 2], ...].count",
    0.00073
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 4 == 2\n +  where 4 = <built-in function prod>([2, 1, 2])\n +    where <built-in function prod> = math.prod",
    0.00034
  ]
}