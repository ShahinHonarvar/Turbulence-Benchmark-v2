{
  "parameter(s)": [
    78
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00016
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00017
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00012
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[78], [78, 7... 78, 78], ...] == [[78], [78], ...8], [78], ...]\n  At index 1 diff: [78, 78] != [78]\n  Left contains 120 more items, first extra item: [78]\n  Full diff:\n    [\n     [78],\n  -  [78],\n  ?     -...\n  \n  ...Full output truncated (842 lines hidden), use '-vv' to show",
    0.0851
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 4 == 3)\n +  where 3 = <built-in method count of list object at 0x7f03d2c11980>([78])\n +    where <built-in method count of list object at 0x7f03d2c11980> = [[1, 78], [1, 78, 1], [1, 78, 1], [1, 78, 1, 78], [1, 78, 1, 78], [1, 78, 1, 78, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x7f03d2c11980>([1, 78])\n +    where <built-in method count of list object at 0x7f03d2c11980> = [[1, 78], [1, 78, 1], [1, 78, 1], [1, 78, 1, 78], [1, 78, 1, 78], [1, 78, 1, 78, 1], ...].count\n +  and   4 = <built-in method count of list object at 0x7f03d2c11980>([78, 1])\n +    where <built-in method count of list object at 0x7f03d2c11980> = [[1, 78], [1, 78, 1], [1, 78, 1], [1, 78, 1, 78], [1, 78, 1, 78], [1, 78, 1, 78, 1], ...].count",
    0.0015
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 2028 == 78\n +  where 2028 = <built-in function prod>([6, 13, 26])\n +    where <built-in function prod> = math.prod",
    0.00042
  ]
}