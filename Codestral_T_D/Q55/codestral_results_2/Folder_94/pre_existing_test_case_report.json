{
  "parameter(s)": [
    -30
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00118
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00015
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00036
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-30, -30, -...30, ...], ...] == [[-30], [-30]...], [-30], ...]\n  At index 0 diff: [-30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30] != [-30]\n  Left contains 60 more items, first extra item: [-30, -30, -30, -30, -30, -30, ...]\n  Full diff:\n    [\n  +  [-30,\n  +   -30,\n  +   -30,...\n  \n  ...Full output truncated (3781 lines hidden), use '-vv' to show",
    0.02787
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert -656100000000 == -30\n +  where -656100000000 = <built-in function prod>([-2, -3, -5, -6, -10, -15, ...])\n +    where <built-in function prod> = math.prod",
    0.00036
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (1 == 3)\n +  where 1 = <built-in method count of list object at 0x7c1474c97200>([-30])\n +    where <built-in method count of list object at 0x7c1474c97200> = [[1, -30, 1, -30, 1, -30], [1, -30, 1, -30, 1, -30], [-30, 1, -30, 1, -30], [-30, 1, -30, 1, -30], [1, -30, 1, -30], [1, -30, 1, -30], ...].count",
    0.00042
  ]
}