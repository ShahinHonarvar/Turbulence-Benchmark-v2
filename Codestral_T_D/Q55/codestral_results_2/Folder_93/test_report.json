{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests55_93_2.py::test_sublist_size", "location": ["tests55_93_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001514390023658052, "start": 1729920111.91935, "stop": 1729920111.919502, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_sublist_size", "location": ["tests55_93_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019624599372036755, "start": 1729920111.9229853, "stop": 1729920111.923182, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_sublist_size", "location": ["tests55_93_2.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010128800931852311, "start": 1729920111.9236786, "stop": 1729920111.9237804, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_list_of_single_number", "location": ["tests55_93_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.005521258994122036, "start": 1729920111.9178343, "stop": 1729920111.9233568, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_93_2.py::test_list_of_several_same_number", "location": ["tests55_93_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023602400324307382, "start": 1729920111.9299443, "stop": 1729920111.9301813, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_93_2.py::test_list_of_single_number", "location": ["tests55_93_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005540797006688081, "start": 1729920111.9237206, "stop": 1729920111.9292629, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_93_2.py::test_list_of_single_number", "location": ["tests55_93_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0014919090026523918, "start": 1729920111.9297628, "stop": 1729920111.9312556, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_93_2.py::test_return_elements_are_in_given_list", "location": ["tests55_93_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015107799845281988, "start": 1729920111.9359207, "stop": 1729920111.9360723, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_return_elements_are_in_given_list", "location": ["tests55_93_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014215199917089194, "start": 1729920111.9362943, "stop": 1729920111.936437, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_return_elements_are_in_given_list", "location": ["tests55_93_2.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.819300273898989e-05, "start": 1729920111.936838, "stop": 1729920111.9369266, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_93_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.004640729006496258, "start": 1729920111.9430938, "stop": 1729920111.9477355, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_93_2.py::test_if_sublist_product_equals_number", "location": ["tests55_93_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002223269984824583, "start": 1729920111.9480157, "stop": 1729920111.9482386, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_if_sublist_product_equals_number", "location": ["tests55_93_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 107, "message": "assert 68574961 == -91\n +  where 68574961 = <built-in function prod>([-1, -7, -13, -91, -1, -7, ...])\n +    where <built-in function prod> = math.prod"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_sublist_product_equals_number():", "        input_list = []", "        if -91 == 0:", "            k = random.randint(1, 4)", "            input_list = list(range(-k, k + 1))", "        elif -91 > 0:", "            divs = [i for i in range(1, -91 + 1) if -91 % i == 0]", "            input_list = divs + divs", "        else:", "            n = --91", "            divs = [-i for i in range(1, n + 1) if n % i == 0]", "            input_list = divs + divs", "    ", "        result = lists_with_product_equal_n(input_list)", "        if result:", "            for r in result:", ">               assert math.prod(r) == -91", "E               assert 68574961 == -91", "E                +  where 68574961 = <built-in function prod>([-1, -7, -13, -91, -1, -7, ...])", "E                +    where <built-in function prod> = math.prod"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 107, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_sublist_product_equals_number():", "        input_list = []", "        if -91 == 0:", "            k = random.randint(1, 4)", "            input_list = list(range(-k, k + 1))", "        elif -91 > 0:", "            divs = [i for i in range(1, -91 + 1) if -91 % i == 0]", "            input_list = divs + divs", "        else:", "            n = --91", "            divs = [-i for i in range(1, n + 1) if n % i == 0]", "            input_list = divs + divs", "    ", "        result = lists_with_product_equal_n(input_list)", "        if result:", "            for r in result:", ">               assert math.prod(r) == -91", "E               assert 68574961 == -91", "E                +  where 68574961 = <built-in function prod>([-1, -7, -13, -91, -1, -7, ...])", "E                +    where <built-in function prod> = math.prod"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 107, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 107, "message": "assert 68574961 == -91\n +  where 68574961 = <built-in function prod>([-1, -7, -13, -91, -1, -7, ...])\n +    where <built-in function prod> = math.prod"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003644889948191121, "start": 1729920111.9485097, "stop": 1729920111.9488747, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_if_sublist_product_equals_number", "location": ["tests55_93_2.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001486609980929643, "start": 1729920111.977818, "stop": 1729920111.9779675, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_93_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_93_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x77e2a9a79ec0>([-91])\n +    where <built-in method count of list object at 0x77e2a9a79ec0> = [[1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], [-91, 1, -91, 1, -91, 1], [-91, 1, -91, 1, -91, 1], [1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -91, 1, -91, 1, -91]", "        result = lists_with_product_equal_n(input_list)", "        if -91 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -91 == 1:", "            assert result.count([-91]) == 6 and result.count([1, -91]) == 6 and result.count([-91, 1]) == 6 and result.count([1, -91, 1]) == 6", "        else:", ">           assert result.count([-91]) == 3 and result.count([1, -91]) == 3 and result.count([-91, 1]) == 3 and result.count([1, -91, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x77e2a9a79ec0>([-91])", "E            +    where <built-in method count of list object at 0x77e2a9a79ec0> = [[1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], [-91, 1, -91, 1, -91, 1], [-91, 1, -91, 1, -91, 1], [1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -91, 1, -91, 1, -91]", "        result = lists_with_product_equal_n(input_list)", "        if -91 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -91 == 1:", "            assert result.count([-91]) == 6 and result.count([1, -91]) == 6 and result.count([-91, 1]) == 6 and result.count([1, -91, 1]) == 6", "        else:", ">           assert result.count([-91]) == 3 and result.count([1, -91]) == 3 and result.count([-91, 1]) == 3 and result.count([1, -91, 1]) == 3", "E           assert (0 == 3)", "E            +  where 0 = <built-in method count of list object at 0x77e2a9a79ec0>([-91])", "E            +    where <built-in method count of list object at 0x77e2a9a79ec0> = [[1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], [-91, 1, -91, 1, -91, 1], [-91, 1, -91, 1, -91, 1], [1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 21, "message": "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x77e2a9a79ec0>([-91])\n +    where <built-in method count of list object at 0x77e2a9a79ec0> = [[1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], [-91, 1, -91, 1, -91, 1], [-91, 1, -91, 1, -91, 1], [1, -91, 1, -91, 1, -91], [1, -91, 1, -91, 1, -91], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005542819999391213, "start": 1729920111.9548795, "stop": 1729920111.9554355, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_93_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_93_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014022701361682266, "start": 1729920111.9997952, "stop": 1729920111.9999363, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_93_2.py::test_list_of_several_same_number", "location": ["tests55_93_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 40, "message": "AssertionError: assert [[-91, -91, -...91, ...], ...] == [[-91], [-91]...], [-91], ...]\n  At index 0 diff: [-91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91] != [-91]\n  Full diff:\n    [\n  -  [-91],\n  ?      -\n  +  [-91,\n  +   -91,...\n  \n  ...Full output truncated (2112 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if -91 == 0 or -91 == 1:", "            for i in range(1, n + 1):", "                l.append([-91] * i)", "            l = l * n", "        elif -91 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[-91]] * n", "    ", "        input_list = [-91] * n", ">       assert lists_with_product_equal_n(input_list) == l", "E       AssertionError: assert [[-91, -91, -...91, ...], ...] == [[-91], [-91]...], [-91], ...]", "E         At index 0 diff: [-91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91] != [-91]", "E         Full diff:", "E           [", "E         -  [-91],", "E         ?      -", "E         +  [-91,", "E         +   -91,...", "E         ", "E         ...Full output truncated (2112 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if -91 == 0 or -91 == 1:", "            for i in range(1, n + 1):", "                l.append([-91] * i)", "            l = l * n", "        elif -91 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[-91]] * n", "    ", "        input_list = [-91] * n", ">       assert lists_with_product_equal_n(input_list) == l", "E       AssertionError: assert [[-91, -91, -...91, ...], ...] == [[-91], [-91]...], [-91], ...]", "E         At index 0 diff: [-91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91] != [-91]", "E         Full diff:", "E           [", "E         -  [-91],", "E         ?      -", "E         +  [-91,", "E         +   -91,...", "E         ", "E         ...Full output truncated (2112 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Codestral_T_D/Q55/codestral_results_2/Folder_93/tests55_93_2.py", "lineno": 40, "message": "AssertionError: assert [[-91, -91, -...91, ...], ...] == [[-91], [-91]...], [-91], ...]\n  At index 0 diff: [-91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91] != [-91]\n  Full diff:\n    [\n  -  [-91],\n  ?      -\n  +  [-91,\n  +   -91,...\n  \n  ...Full output truncated (2112 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.7159306329995161, "start": 1729920111.9307897, "stop": 1729920112.6467216, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_93_2.py::test_list_of_several_same_number", "location": ["tests55_93_2.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_93_2.py": 1, "Folder_93": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017890600429382175, "start": 1729920112.6710446, "stop": 1729920112.6712246, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "e22cc65156e04f0cb5ebed25a0191472", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
