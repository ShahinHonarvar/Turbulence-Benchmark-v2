{
  "parameter(s)": [
    76
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00019
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00016
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00014
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[76], [76, 7... 76, 76], ...] == [[76], [76], ...6], [76], ...]\n  At index 1 diff: [76, 76] != [76]\n  Left contains 9312 more items, first extra item: [76]\n  Full diff:\n    [\n     [76],\n  +  [76,\n  +   76],...\n  \n  ...Full output truncated (461039 lines hidden), use '-vv' to show",
    1.83657
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 8 == 76\n +  where 8 = <built-in function prod>([2, 4])\n +    where <built-in function prod> = math.prod",
    0.00035
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 6 == 3)\n +  where 3 = <built-in method count of list object at 0x7ae230118cc0>([76])\n +    where <built-in method count of list object at 0x7ae230118cc0> = [[1, 76], [1], [1, 76, 1], [1, 76], [76], [76, 1, 76], ...].count\n +  and   6 = <built-in method count of list object at 0x7ae230118cc0>([1, 76])\n +    where <built-in method count of list object at 0x7ae230118cc0> = [[1, 76], [1], [1, 76, 1], [1, 76], [76], [76, 1, 76], ...].count",
    0.00049
  ]
}