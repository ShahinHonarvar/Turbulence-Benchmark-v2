{
  "parameter(s)": [
    49
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00022
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.0002
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[49], [49, 4... 49, 49], ...] == [[49], [49], ...9], [49], ...]\n  At index 1 diff: [49, 49] != [49]\n  Left contains 3192 more items, first extra item: [49]\n  Full diff:\n    [\n     [49],\n  +  [49,\n  +   49],...\n  \n  ...Full output truncated (94219 lines hidden), use '-vv' to show",
    0.39711
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 6 == 3)\n +  where 3 = <built-in method count of list object at 0x704f9ebccf00>([49])\n +    where <built-in method count of list object at 0x704f9ebccf00> = [[1, 49], [1, 49, 1], [1, 49, 1], [1, 49, 1, 49], [1, 49, 1, 49], [1, 49, 1, 49, 1], ...].count\n +  and   3 = <built-in method count of list object at 0x704f9ebccf00>([1, 49])\n +    where <built-in method count of list object at 0x704f9ebccf00> = [[1, 49], [1, 49, 1], [1, 49, 1], [1, 49, 1, 49], [1, 49, 1, 49], [1, 49, 1, 49, 1], ...].count\n +  and   6 = <built-in method count of list object at 0x704f9ebccf00>([49, 1])\n +    where <built-in method count of list object at 0x704f9ebccf00> = [[1, 49], [1, 49, 1], [1, 49, 1], [1, 49, 1, 49], [1, 49, 1, 49], [1, 49, 1, 49, 1], ...].count",
    0.00113
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 343 == 49\n +  where 343 = <built-in function prod>([49, 1, 7])\n +    where <built-in function prod> = math.prod",
    0.0003
  ]
}