{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_82_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017568300245329738, "start": 1729758262.8367445, "stop": 1729758262.836921, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_4.py::test_string_of_length_one", "location": ["tests30_82_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016910998965613544, "start": 1729758262.836646, "stop": 1729758262.8368156, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_4.py::test_compare_length_of_strings", "location": ["tests30_82_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016078801127150655, "start": 1729758262.836666, "stop": 1729758262.8368278, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_4.py::test_compare_length_of_strings", "location": ["tests30_82_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018180900951847434, "start": 1729758262.8370826, "stop": 1729758262.837265, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_4.py::test_compare_length_of_strings", "location": ["tests30_82_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.76879964582622e-05, "start": 1729758262.837636, "stop": 1729758262.8377342, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_4.py::test_length_of_result", "location": ["tests30_82_4.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011726299999281764, "start": 1729758262.8388917, "stop": 1729758262.8390095, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_4.py::test_length_of_result", "location": ["tests30_82_4.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('L37CH5FoNRTzEJ4WugqjI I')\n +  and   21 = len('L37CH5FoNRTzEJ4WugqjI')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'I'", "        returned_string = insert_before_character(s)", "        count = s.count('I')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('L37CH5FoNRTzEJ4WugqjI I')", "E        +  and   21 = len('L37CH5FoNRTzEJ4WugqjI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'I'", "        returned_string = insert_before_character(s)", "        count = s.count('I')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('L37CH5FoNRTzEJ4WugqjI I')", "E        +  and   21 = len('L37CH5FoNRTzEJ4WugqjI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('L37CH5FoNRTzEJ4WugqjI I')\n +  and   21 = len('L37CH5FoNRTzEJ4WugqjI')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030710999271832407, "start": 1729758262.8391318, "stop": 1729758262.8394394, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_4.py::test_length_of_result", "location": ["tests30_82_4.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001203780120704323, "start": 1729758262.8519795, "stop": 1729758262.8521006, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_4.py::test_string_of_length_one", "location": ["tests30_82_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 8, "message": "AssertionError: assert 'I I' == 'II'\n  - II\n  + I I\n  ?  +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'I'", ">       assert insert_before_character(s) == 'I' + 'I'", "E       AssertionError: assert 'I I' == 'II'", "E         - II", "E         + I I", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'I'", ">       assert insert_before_character(s) == 'I' + 'I'", "E       AssertionError: assert 'I I' == 'II'", "E         - II", "E         + I I", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 8, "message": "AssertionError: assert 'I I' == 'II'\n  - II\n  + I I\n  ?  +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003485140041448176, "start": 1729758262.8370557, "stop": 1729758262.8374047, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_4.py::test_string_of_length_one", "location": ["tests30_82_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014412301243282855, "start": 1729758262.8523254, "stop": 1729758262.85247, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = lenn +    whereinsert_before_charactern +  and   1000 = len('IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'I' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'I' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = lenwhereinsert_before_characterand   1000 = len('IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_4/Folder_82/tests30_82_4.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040128501132130623, "start": 1729758262.8371935, "stop": 1729758262.8375952, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_4.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018401400302536786, "start": 1729758262.855616, "stop": 1729758262.8558009, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6292c5544bde49a6877e69472668e3ab", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
