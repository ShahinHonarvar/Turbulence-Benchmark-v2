{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_82_5.py::test_compare_length_of_strings", "location": ["tests30_82_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014654401456937194, "start": 1729759547.7499232, "stop": 1729759547.7500703, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_5.py::test_string_of_length_one", "location": ["tests30_82_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001766640052665025, "start": 1729759547.7501152, "stop": 1729759547.7502925, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016416999278590083, "start": 1729759547.7501316, "stop": 1729759547.7502964, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_5.py::test_compare_length_of_strings", "location": ["tests30_82_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017576600657775998, "start": 1729759547.7503014, "stop": 1729759547.7504776, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_5.py::test_compare_length_of_strings", "location": ["tests30_82_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.303598199039698e-05, "start": 1729759547.75081, "stop": 1729759547.7509036, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_5.py::test_length_of_result", "location": ["tests30_82_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001141440006904304, "start": 1729759547.7521417, "stop": 1729759547.7522562, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_5.py::test_length_of_result", "location": ["tests30_82_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('MyDfYQg5jScvLq8esNBwI I')\n +  and   21 = len('MyDfYQg5jScvLq8esNBwI')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'I'", "        returned_string = insert_before_character(s)", "        count = s.count('I')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('MyDfYQg5jScvLq8esNBwI I')", "E        +  and   21 = len('MyDfYQg5jScvLq8esNBwI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'I'", "        returned_string = insert_before_character(s)", "        count = s.count('I')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('MyDfYQg5jScvLq8esNBwI I')", "E        +  and   21 = len('MyDfYQg5jScvLq8esNBwI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('MyDfYQg5jScvLq8esNBwI I')\n +  and   21 = len('MyDfYQg5jScvLq8esNBwI')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002846349962055683, "start": 1729759547.7523875, "stop": 1729759547.7526727, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_5.py::test_length_of_result", "location": ["tests30_82_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001564190024510026, "start": 1729759547.7625382, "stop": 1729759547.7626958, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('I II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II I...II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II I')\n +    where 'I II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II I...II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II I' = insert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'I' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'I' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('I II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II I...II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II II I')\n +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00038838302134536207, "start": 1729759547.7505774, "stop": 1729759547.7509665, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016707999748177826, "start": 1729759547.7667618, "stop": 1729759547.7669299, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_5.py::test_string_of_length_one", "location": ["tests30_82_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 8, "message": "AssertionError: assert 'I I' == 'II'\n  - II\n  + I I\n  ?  +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'I'", ">       assert insert_before_character(s) == 'I' + 'I'", "E       AssertionError: assert 'I I' == 'II'", "E         - II", "E         + I I", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'I'", ">       assert insert_before_character(s) == 'I' + 'I'", "E       AssertionError: assert 'I I' == 'II'", "E         - II", "E         + I I", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_5/Folder_82/tests30_82_5.py", "lineno": 8, "message": "AssertionError: assert 'I I' == 'II'\n  - II\n  + I I\n  ?  +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00039917201502248645, "start": 1729759547.750556, "stop": 1729759547.750956, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_5.py::test_string_of_length_one", "location": ["tests30_82_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_5.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017538800602778792, "start": 1729759547.7729855, "stop": 1729759547.7731616, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "a6282c3fad4844d1aa60531e958f824a", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
