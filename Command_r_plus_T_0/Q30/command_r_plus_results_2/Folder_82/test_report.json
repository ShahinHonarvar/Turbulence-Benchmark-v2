{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_82_2.py::test_string_of_length_one", "location": ["tests30_82_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018257199553772807, "start": 1729755740.8683918, "stop": 1729755740.8685746, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017602299340069294, "start": 1729755740.8683949, "stop": 1729755740.868571, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_2.py::test_compare_length_of_strings", "location": ["tests30_82_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001769940136000514, "start": 1729755740.8682902, "stop": 1729755740.8684678, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_2.py::test_compare_length_of_strings", "location": ["tests30_82_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001707869814708829, "start": 1729755740.86874, "stop": 1729755740.8689113, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_2.py::test_compare_length_of_strings", "location": ["tests30_82_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010491299326531589, "start": 1729755740.869303, "stop": 1729755740.8694086, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_2.py::test_length_of_result", "location": ["tests30_82_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011861900566145778, "start": 1729755740.8711355, "stop": 1729755740.8712544, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'I' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'I' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = lenn +    whereinsert_before_character('IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII')\n +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003834579838439822, "start": 1729755740.868836, "stop": 1729755740.8692195, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_82_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013386399950832129, "start": 1729755740.8852024, "stop": 1729755740.885337, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_82_2.py::test_string_of_length_one", "location": ["tests30_82_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 8, "message": "AssertionError: assert 'I I' == 'II'\n  - II\n  + I I\n  ?  +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'I'", ">       assert insert_before_character(s) == 'I' + 'I'", "E       AssertionError: assert 'I I' == 'II'", "E         - II", "E         + I I", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'I'", ">       assert insert_before_character(s) == 'I' + 'I'", "E       AssertionError: assert 'I I' == 'II'", "E         - II", "E         + I I", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 8, "message": "AssertionError: assert 'I I' == 'II'\n  - II\n  + I I\n  ?  +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004024989902973175, "start": 1729755740.8688536, "stop": 1729755740.8692567, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_2.py::test_string_of_length_one", "location": ["tests30_82_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018788600573316216, "start": 1729755740.8887196, "stop": 1729755740.8889089, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_82_2.py::test_length_of_result", "location": ["tests30_82_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('u78wDGpBFrEdxLgZt1XfI I')\n +  and   21 = len('u78wDGpBFrEdxLgZt1XfI')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'I'", "        returned_string = insert_before_character(s)", "        count = s.count('I')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('u78wDGpBFrEdxLgZt1XfI I')", "E        +  and   21 = len('u78wDGpBFrEdxLgZt1XfI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'I'", "        returned_string = insert_before_character(s)", "        count = s.count('I')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('u78wDGpBFrEdxLgZt1XfI I')", "E        +  and   21 = len('u78wDGpBFrEdxLgZt1XfI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_0/Q30/command_r_plus_results_2/Folder_82/tests30_82_2.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('u78wDGpBFrEdxLgZt1XfI I')\n +  and   21 = len('u78wDGpBFrEdxLgZt1XfI')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033754599280655384, "start": 1729755740.8715134, "stop": 1729755740.8718512, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_82_2.py::test_length_of_result", "location": ["tests30_82_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_82_2.py": 1, "Folder_82": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012413799413479865, "start": 1729755740.8898783, "stop": 1729755740.890003, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "fa0572b1c8544b2e9ddc27a3e2439c3a", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
