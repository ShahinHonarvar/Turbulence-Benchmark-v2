{
  "parameter(s)": [
    12,
    56,
    20,
    21
  ],
  "test_string_of_distinct_chars": [
    "passed",
    "",
    0.00021
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  ', '  a  a  ', '  a  a  a  ', '  a  a  a  a  ', '  a  a  a  a  a  ', '  a  a  a  a  a  a  ', ...}\n +  where {'  a  ', '  a  a  ', '  a  a  a  ', '  a  a  a  a  ', '  a  a  a  a  a  ', '  a  a  a  a  a  a  ', ...} = palindromes_of_specific_lengths(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00027
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {'aaa', 'aaaa...aaaaaaa', ...} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaa'\n  'aaaa'\n  'aaaaaaaaaaaaaaaa'\n  'aaaaaaaaa'\n  'aaaaaaaaaaa'...\n  \n  ...Full output truncated (33 lines hidden), use '-vv' to show",
    0.00068
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert {'   ', '    ...       ', ...} == set()\n  Extra items in the left set:\n  '        '\n  '      '\n  '                     '\n  '           '\n  '     '\n  '       '...\n  \n  ...Full output truncated (37 lines hidden), use '-vv' to show",
    0.00094
  ]
}