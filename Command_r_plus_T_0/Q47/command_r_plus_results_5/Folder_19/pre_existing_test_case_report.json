{
  "parameter(s)": [
    10,
    55,
    3,
    7
  ],
  "test_string_of_similar_chars": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_distinct_chars": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  ', ' a ', ' a  a ', 'a  a', 'a  a  a'}\n +  where {'  a  ', ' a ', ' a  a ', 'a  a', 'a  a  a'} = palindromes_of_specific_lengths(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.0003
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert {'   ', '    ... ', '       '} == set()\n  Extra items in the left set:\n  '    '\n  '   '\n  '     '\n  '       '\n  '      '\n  Full diff:\n  - set()\n  + {'    ', '   ', '     ', '       ', '      '}",
    0.00049
  ],
  "test_string_of_similar_nums": [
    "failed",
    "AssertionError: assert not {'000', '0000', '00000', '000000', '0000000'}\n +  where {'000', '0000', '00000', '000000', '0000000'} = palindromes_of_specific_lengths('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.0003
  ]
}