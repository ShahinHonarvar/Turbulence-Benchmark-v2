{
  "parameter(s)": [
    12,
    25,
    64
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00018
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.00074
  ],
  "test_float_numbers": [
    "failed",
    "assert 6.0 == 6.082762530298219\n +  where 6.0 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00034
  ],
  "test_reversed_range": [
    "failed",
    "assert -65 == -64\n +  where -65 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00027
  ],
  "test_large_range": [
    "failed",
    "assert 35 == 36\n +  where 35 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00177
  ]
}