{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 45, -23,  43, -37, -87,  78,  22,  11,  42, -36, -88,  84,  54,\\n          15, -71,  79, -77, -82,  51,  -6,  31, -10, -36,  44,  52,  -6,\\n          43, -99,  42, -75, -34,  75, -37,  41, -52, -91,  23,  38, -84,\\n         -73, -90,   5,  74,  57,  -5,  10, -59,  95, -11, -39, -38,   2,\\n         -46, -60, -31,  90,  28,  78, -63, -17,  93, -75,  90,  71, -74,\\n         -80,  71, -73,  81,  25,  67, -10,  49, -21, -70, -14,  62, -87,\\n         -31, -65,  -9,   3,  -2, -17,  93,  90, -30,  38,   7,  58,  59,\\n         -24,  71, -14, -55,  46, 100, -18,   2, -74, -76,  27,   7, -84,\\n         -25,  -1, -54, -54,  -5,  24, -81,  13,  86,  76,  36,  -8,  17,\\n          48,  86,  69, -60,  18, -57,  45,  34, -27,  37,  -2, -24,  69,\\n          62]]))",
    0.00169
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00134
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00118
  ]
}