{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 17, -10, -41, -60, -54,  79, -24,  40,  21,  53,  87, -87, -41,\\n         -40,  22,  60,  51, -86,  40,  95, -34, -40,  25, -84,  88,  90,\\n          88,  13, -88,  67,  80, -96, 100,  76, -23,  -4, -48,   6, -89,\\n         -31, -49, -44, -87,  58,  83, -14, -95, -56,   0,   2, -60,  64,\\n         -79, -57,  46,  -4, -90,  -9, -16,  16, -57,  39, -78, -78, -73,\\n         -43, -19,  15,  95, -23, -28,  34,  -3, -44,  12, -36, -63,  43,\\n         -92, -75, -48,  60,  -2, -91,   3,  23, -99, -28,  25,  40,  90,\\n          41, -10, -81, -83,  39,  58, -36,  89,  95,  99,  32, -38, 100,\\n         -30,  74,  99,  36, -95,  10, -95,  52,   5,  28, -88,  12, -55,\\n         -80,  -1, -74, -63, -70, -85,  64,  73,  63,  63, -75,  60, -37,\\n          14, -36,  13,  64, -44, -85,   3, 100,  11,  88,  44, -14, -42,\\n          37, -17, -72,  57]]))",
    0.00506
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00125
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00698
  ]
}