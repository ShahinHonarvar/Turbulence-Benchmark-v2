{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00094
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00181
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00096
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-19,  83],\\n        [-74, -34],\\n        [ 38, -61],\\n        [-37, -33],\\n        [ 36,  -4],\\n        [-94,  22],\\n        [ 81, -48],\\n        [-23, -31],\\n        [ 49,  66],\\n        [-91, -30],\\n        [  2,  16],\\n        [  8,  43],\\n        [ 33, -32],\\n        [-90, -19],\\n        [ 27, -53],\\n        [-11, -53],\\n        [  4, -61],\\n        [  8,  79],\\n        [ -4, -30],\\n        [ 54, -77],\\n        [-63, -97],\\n        [ 67, -59],\\n        [ 37, -34],\\n        [-28,  46],\\n        [-19, -98],\\n        [ 82, -26],\\n        [-86,  26],\\n        [ 46, -40],\\n        [-51, -10],\\n        [ 55,  79],\\n        [ 31, -38],\\n        [-79,  30],\\n        [ 84, -55],\\n        [ 43,  97],\\n        [-57, -10],\\n        [ 67,  42],\\n        [ 95, -53],\\n        [ 58, -13],\\n        [-96,  90],\\n        [-57,  76],\\n        [-60,  63],\\n        [ 97,   9],\\n        [-72,  94],\\n        [ 72,  78]]))",
    0.00092
  ]
}