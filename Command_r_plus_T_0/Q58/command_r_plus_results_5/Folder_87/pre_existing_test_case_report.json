{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00254
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00046
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-82,  18],\\n        [ 84,  17],\\n        [ 80, -10],\\n        [-97,  23],\\n        [ 68,  78],\\n        [ -9, -48],\\n        [-89, -51],\\n        [-19,  97],\\n        [-28, -43],\\n        [-71,  10],\\n        [ 36, -78],\\n        [ 73, -55],\\n        [-70,  40],\\n        [-93, -87],\\n        [ 19, -32],\\n        [ 73,  -9],\\n        [ 64, -79],\\n        [  8,  22],\\n        [ 53,  51],\\n        [-15,  98],\\n        [  6, -51],\\n        [-79, -19],\\n        [-67,  98],\\n        [ 70, -98],\\n        [-57, -30],\\n        [-99,  48],\\n        [ 19, -48],\\n        [ 13,  17],\\n        [ 43,  77],\\n        [-81,  79],\\n        [-92,  63],\\n        [ 24, -16],\\n        [ -9,  55],\\n        [ 40, -27],\\n        [-98, -71],\\n        [-74,  97],\\n        [-24, -41],\\n        [ -2, -62],\\n        [ 52, -27],\\n        [-88,  94],\\n        [-10, -81],\\n        [-71,   1],\\n        [ 17, -12],\\n        [ 91,  81],\\n        [ 93, -68],\\n        [ 27,  28],\\n        [-99, -30],\\n        [-46,  45]]))",
    0.00506
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00117
  ]
}