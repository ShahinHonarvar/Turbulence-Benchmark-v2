{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00129
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00086
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 88, -57, -11,  18,  72, -17, -63, -72, -11,  -8,  15, -23, -71,\\n         -27, -21, -38, -14, -51, -23,  62,  99, -81, -91,  96,   2,  30,\\n          52, -98, -26, -66, -53, -94,  36,  73, -63,  36,  76, -73, -97,\\n          44,  84,  18,  78, -77, -10,  24,  -2, -80, -76,  57, -67, -56,\\n         -27,  28, -50,  26,  -3,   3,   8, -55,  45, -90,   0,  54, -73,\\n          55,  27,  55, -71, -97, -54, -27,  29,  10,  43, -96, -18, -93,\\n          -4,  -6,  76,  83, -46, -78,   8,  85, -19,  37,  91,  12,  65,\\n          39, -62,   1,  41,  92,  54, -26, -88, -98, -46,  41, -10,   1,\\n         -53,   9, -65, -15, -75,  42, -13, -88, -35,  42, -66, -34, -56,\\n          99, -67, -65, -92, -58,  65, -58, -70,  89, -52, -77,  84, -86,\\n          -8,  18, -51,  70,  47, -73, -53,   0,  55,  39,  28, -20, -86,\\n         -45,  -7, -65,  32,  96, -92,  11, -61, -87,  99,  20,  72,  -6,\\n         -25,  48,  64]]))",
    0.00102
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00211
  ]
}