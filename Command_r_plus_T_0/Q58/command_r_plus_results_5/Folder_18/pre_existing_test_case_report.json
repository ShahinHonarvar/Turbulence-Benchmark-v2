{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00044
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 11,  64],\\n        [ 18, -72],\\n        [ 30, -33],\\n        [ 82,  56],\\n        [-19, -77],\\n        [ 50, -75],\\n        [-96, -85],\\n        [  6,  59],\\n        [ 47,  48],\\n        [ 77, -62],\\n        [ 60, -75],\\n        [-19,  83],\\n        [-26,  -7],\\n        [-49, -11],\\n        [ 58, -67],\\n        [ 51,  11],\\n        [-97,  80],\\n        [ 82,  67],\\n        [ 78,   5],\\n        [-69, -50],\\n        [ 49, -67],\\n        [-99,  57],\\n        [ 85, -68],\\n        [ 22,  63],\\n        [ -8, -21],\\n        [ 29,  81],\\n        [ 66,  24],\\n        [-63,  43],\\n        [-44,  12],\\n        [-48,  26],\\n        [ 72,  54],\\n        [ 90, -89],\\n        [-89, -67],\\n        [ 41,   6],\\n        [-38,  89],\\n        [ 64, -33],\\n        [-94,   1],\\n        [  9, -83],\\n        [ 44, -66],\\n        [  2,  28],\\n        [ 61, -23],\\n        [-80, -23],\\n        [-29,  75],\\n        [-95,  24],\\n        [-88,  60],\\n        [ 59,  19],\\n        [ 27, -77],\\n        [-94, -56],\\n        [ 53, -23],\\n        [ 54,  55],\\n        [ 89,  61],\\n        [-32,  93]]))",
    0.00733
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00138
  ]
}