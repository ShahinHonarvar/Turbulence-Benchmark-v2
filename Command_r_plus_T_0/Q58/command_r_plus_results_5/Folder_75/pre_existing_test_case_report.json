{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0032
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.0039
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 19, -50],\\n        [-94, -83],\\n        [ 74,  62],\\n        [ -1, -20],\\n        [ 53,  64],\\n        [ 96, -10],\\n        [-50,  93],\\n        [ 55,   2],\\n        [ 17,  33],\\n        [-88, -35],\\n        [-21,  37],\\n        [  6,  25],\\n        [ 47,  -5],\\n        [ 14,  83],\\n        [-40,  34],\\n        [ 11,  20],\\n        [-23,  97],\\n        [ 75, -11],\\n        [-56,  34],\\n        [-12, -96],\\n        [ -6,  69],\\n        [ 35,  18],\\n        [ 38,  84],\\n        [-63, -76],\\n        [ 31, -13],\\n        [-37, -52],\\n        [  0, -99],\\n        [ 91,  41],\\n        [ 46,  49],\\n        [ 70,  40],\\n        [ 13, -95],\\n        [-81, -79],\\n        [  6, -85],\\n        [ 19, -45],\\n        [ 61,  52],\\n        [ 49,  13],\\n        [ 14, -77],\\n        [ 83, -47],\\n        [ 81,  32],\\n        [ 75,  15]]))",
    0.0055
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00531
  ]
}