{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -8,   45],\\n        [  67,    4],\\n        [ -82,   64],\\n        [  -3,   82],\\n        [   5,    2],\\n        [  -1,  -20],\\n        [ -89,  -11],\\n        [  80,    8],\\n        [ -27,   77],\\n        [  46,   64],\\n        [  54,   72],\\n        [   4,   45],\\n        [ -86,   -5],\\n        [  89,   15],\\n        [  45,  -93],\\n        [  -7,  -40],\\n        [ -68,    9],\\n        [ -46,  -94],\\n        [ -20,  -83],\\n        [ -54,   42],\\n        [  33,   48],\\n        [  30,  -91],\\n        [  33,   72],\\n        [  57,   87],\\n        [ -31, -100],\\n        [ -13,  -63],\\n        [ -20,   94],\\n        [  48,   -8],\\n        [  -9,  -29],\\n        [  -4,   -9],\\n        [ -45, -100],\\n        [  24,   30],\\n        [ -93,   -5],\\n        [  87,   71],\\n        [ -87,  -82],\\n        [  88,   87],\\n        [  -2,  -15],\\n        [ -84,   50],\\n        [ -84,   99],\\n        [  12,  -64],\\n        [ -11,   31],\\n        [  42,   86],\\n        [  81,   23],\\n        [ -33,  -67],\\n        [ -17,   72],\\n        [  77,  -61]]))",
    0.00095
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.0064
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00043
  ]
}