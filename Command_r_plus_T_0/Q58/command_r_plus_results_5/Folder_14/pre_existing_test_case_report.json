{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00043
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   0,   22],\\n        [  16,  -83],\\n        [  70,  -74],\\n        [  80,  -18],\\n        [ -83,   57],\\n        [   1,   57],\\n        [ -69,   60],\\n        [  50,  -72],\\n        [  33,   30],\\n        [   7,   68],\\n        [  60,   12],\\n        [ -58,    6],\\n        [  14,  -84],\\n        [  56,  -51],\\n        [ -18,  -74],\\n        [ -89,   -7],\\n        [  71,  -30],\\n        [ -34,  -29],\\n        [  94,   73],\\n        [  44,  -16],\\n        [  47,  -91],\\n        [  -8,  -80],\\n        [  -1,  -65],\\n        [  16,   60],\\n        [  31,   84],\\n        [  68,  -27],\\n        [  21,   10],\\n        [  15,   25],\\n        [  76,   75],\\n        [  46,   25],\\n        [  51,   56],\\n        [  75,    9],\\n        [  41,    7],\\n        [  47,  -73],\\n        [ -49,   78],\\n        [ -64,   32],\\n        [ -58,  -99],\\n        [ -73,  -50],\\n        [ -20,  -55],\\n        [ -69,  -18],\\n        [  34,   57],\\n        [ -18, -100]]))",
    0.00389
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00539
  ]
}