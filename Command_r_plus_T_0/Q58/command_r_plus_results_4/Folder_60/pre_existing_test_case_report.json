{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.001
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00105
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 35,  36],\\n        [ 21, -95],\\n        [-23,  47],\\n        [-83,  -2],\\n        [-61,  10],\\n        [ -7,  27],\\n        [-54,  59],\\n        [ 93,  83],\\n        [ 51, -68],\\n        [ 96,  61],\\n        [-78, -74],\\n        [ 92,  78],\\n        [-38,  92],\\n        [ 98,  48],\\n        [-57, -20],\\n        [ 55, -59],\\n        [-48,  97],\\n        [-42, -39],\\n        [ 13, -21],\\n        [ 80, -23],\\n        [ 20,  31],\\n        [ 76,  -8],\\n        [-25,  75],\\n        [ 58, -77],\\n        [ 19,  59],\\n        [ 49,  46],\\n        [ 25,  88],\\n        [ 90, -48],\\n        [-67,  70],\\n        [ 58,  88],\\n        [ 92, -46],\\n        [-36, -58],\\n        [ 46,  55],\\n        [-72, -87],\\n        [ 83, -83],\\n        [-38, -28],\\n        [ 45,   9],\\n        [ 63,  49],\\n        [ 21, -61],\\n        [ 57, -30],\\n        [-71,  90],\\n        [ 23,  -3],\\n        [-69, -29],\\n        [ 62, -24]]))",
    0.00713
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00127
  ]
}