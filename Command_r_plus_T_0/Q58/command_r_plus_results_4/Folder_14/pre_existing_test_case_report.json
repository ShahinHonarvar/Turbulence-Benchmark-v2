{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-18,  72],\\n        [ 21, -79],\\n        [-58, -29],\\n        [ 14, -74],\\n        [-30, -77],\\n        [ 79,  85],\\n        [ 77, -63],\\n        [ 62,   3],\\n        [-55, -94],\\n        [ 82,  26],\\n        [ 40,  -8],\\n        [ 19,   7],\\n        [  1,  65],\\n        [ 23,  91],\\n        [ 79, -62],\\n        [ 82, -78],\\n        [-58, -25],\\n        [ 42,  44],\\n        [-43,  93],\\n        [-15,  47],\\n        [-71,  61],\\n        [-45, -52],\\n        [-56, -94],\\n        [ 67, -83],\\n        [ 17,  31],\\n        [-81, -94],\\n        [ 23, -36],\\n        [-79,  48],\\n        [-88,  33],\\n        [-84,  61],\\n        [-44, -33],\\n        [-37,  67],\\n        [ 70,  92],\\n        [ 32, -99],\\n        [ 11, -49],\\n        [ 67,  66],\\n        [-92, -83],\\n        [ 93,  72],\\n        [-33,  21],\\n        [ 89,  22],\\n        [-45,  44],\\n        [ 19, -22]]))",
    0.00278
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00431
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00085
  ]
}