{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00041
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  77],\\n        [-69, -65],\\n        [-74, -35],\\n        [-19, -77],\\n        [-81, -77],\\n        [ 42, -14],\\n        [ 48, -72],\\n        [-75,  93],\\n        [ 66, -21],\\n        [ 47, -30],\\n        [-41, -76],\\n        [ 12,  21],\\n        [ 93, -94],\\n        [-42,  55],\\n        [-17,  38],\\n        [ 18, -15],\\n        [ 49,  14],\\n        [-46, -49],\\n        [ 89,  90],\\n        [ 72,  60],\\n        [ 99,  -1],\\n        [  5, -34],\\n        [-26,  34],\\n        [ 28,  12],\\n        [ 10,  49],\\n        [ 32,  75],\\n        [ 46, -75],\\n        [-25, -60],\\n        [-84, -51],\\n        [-42,  14],\\n        [ -4, -72],\\n        [ 29,  70],\\n        [ 75,  71],\\n        [-30,  -2],\\n        [ 71,  38],\\n        [-77,  -3],\\n        [ 70,  13],\\n        [ 87,  50],\\n        [ 26,  27],\\n        [ 50, -76],\\n        [-37,  62],\\n        [ 17, -35],\\n        [-52, -92],\\n        [-54,  39],\\n        [ -7,  70],\\n        [-40, -60],\\n        [ 96,  68],\\n        [-14, -48],\\n        [ 34, -22],\\n        [-18,  30],\\n        [-66, -96],\\n        [ 74, -35]]))",
    0.0019
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00581
  ]
}