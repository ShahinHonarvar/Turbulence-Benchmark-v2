{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  18,   43],\\n        [ -59, -100],\\n        [  66,  -12],\\n        [  88,  -13],\\n        [  45,  -33],\\n        [  33,  -40],\\n        [   7,  -91],\\n        [  46,  -25],\\n        [  16,   57],\\n        [  98,  -25],\\n        [  19,  -65],\\n        [ -80,  -21],\\n        [ -77,  -67],\\n        [  23,    4],\\n        [ -34,  -50],\\n        [  35,  -56],\\n        [  67,  -27],\\n        [ -55,  -68],\\n        [  72,   84],\\n        [  -4,    9],\\n        [ -29,    0],\\n        [ -79,  -63],\\n        [   9,  -29],\\n        [ -38,  -13],\\n        [ -46,    3],\\n        [ -48,  -91],\\n        [ -95,   68],\\n        [ -17,   88],\\n        [   0,  -72],\\n        [  36,   -1],\\n        [ -86,  -96],\\n        [  96,   55],\\n        [ -61,  -68],\\n        [  74,   36],\\n        [  50,   89],\\n        [ -28,   13],\\n        [  12,    2],\\n        [  83,   14],\\n        [  74,    6],\\n        [  26,  -23],\\n        [ -30,   91],\\n        [  30,   66],\\n        [ -65,   29],\\n        [  15,  -41],\\n        [  62,  -10],\\n        [  22,   73]]))",
    0.00085
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00214
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00522
  ]
}