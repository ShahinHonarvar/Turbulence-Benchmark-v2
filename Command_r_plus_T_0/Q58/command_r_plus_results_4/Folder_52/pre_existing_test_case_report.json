{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -20,  30,  48, -98, -74, -21,  15,  74,  76,  66, -42,  47,\\n          -1,  65, -54, -89,  34, -41, -79, -53,  11, -84,  82,  15,  -1,\\n          70, -12,  72, -74, -61,  29,  72,  22, -14,  11, -17,  74,  32,\\n         -44, -64, -45, -42,  84, -66, -17,   4,  -9, -82, -53, -52,  22,\\n           0, -32, -25,  61,  77, -78, -41,  54, -65, -45, -33, -51,  43,\\n         -23,  18,  -9,  44,   0, -83, -36, -97, -97,  -3,  82,  -4,  51,\\n         -65,  68, -58,  55,  60, -77,  17,  78,  54, -83,  99,   6, -67,\\n          18,  17, -46,  16,  -5, -68, -22,  16,  22,  72,  93,  26,  -5,\\n          -4,  77,  64, -91, -73, -43,  32, -49,  92,  64, -66,  40,  90,\\n         -68,  93,  95, -33, -53,  64, -96, -23, -67, -18, -81, -14,  92,\\n         -21,  41,  81,  85,  63,  99,   9,  66, -67,  14, -79,  83,  -3,\\n         -59,  73, -70, -49]]))",
    0.00232
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.0106
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00172
  ]
}