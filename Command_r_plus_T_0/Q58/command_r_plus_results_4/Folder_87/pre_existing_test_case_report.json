{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00285
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00038
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  20,   29],\\n        [  62,  -33],\\n        [  85,    1],\\n        [-100,  -91],\\n        [  20,  -30],\\n        [ -86,   13],\\n        [ -84,   62],\\n        [  86,  -39],\\n        [  91,  -57],\\n        [  -6,  -19],\\n        [  53,   12],\\n        [ -22,  -22],\\n        [  31,   29],\\n        [ -63,   17],\\n        [  51,   26],\\n        [  40,   12],\\n        [  75,   96],\\n        [  84,    5],\\n        [  32,   65],\\n        [  77,   68],\\n        [   0,   34],\\n        [ -30,  -47],\\n        [ -52,    6],\\n        [  44,  -17],\\n        [ -81,   85],\\n        [ -99,  -82],\\n        [  77,    4],\\n        [  54,   25],\\n        [  -9,   21],\\n        [ -65,  -40],\\n        [  62,  -44],\\n        [  40,   48],\\n        [   3,  -94],\\n        [  18,   94],\\n        [  21,  -29],\\n        [ -62,  -16],\\n        [  76,  -93],\\n        [  98,  -68],\\n        [   2,   39],\\n        [ -32,  -46],\\n        [  27,  -25],\\n        [  86,  -37],\\n        [ -60,   43],\\n        [  25,  -78],\\n        [ -13,  -78],\\n        [  69,  -85],\\n        [ -24,   75],\\n        [ -22,  -54]]))",
    0.00438
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00614
  ]
}