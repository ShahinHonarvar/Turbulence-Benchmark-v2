{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -14,  -77],\\n        [  62,  -19],\\n        [ -97,   50],\\n        [ -20,  -27],\\n        [  39,  -82],\\n        [  18,  -74],\\n        [ -49,  -99],\\n        [  82,   44],\\n        [ -88,   17],\\n        [ -40,  -27],\\n        [ -66,   94],\\n        [  39,  -71],\\n        [ -81,   84],\\n        [   6,   77],\\n        [ -57,  -52],\\n        [  79,   51],\\n        [  84,   19],\\n        [  59,   13],\\n        [ -27,  -43],\\n        [ -64,    5],\\n        [ -70,   74],\\n        [  12,   13],\\n        [  66,   45],\\n        [ -66,   13],\\n        [  36,  -31],\\n        [ -42,   47],\\n        [  46,  -41],\\n        [   8,   16],\\n        [-100,   78],\\n        [ -30,  -65],\\n        [   5,   70],\\n        [  99,  -19],\\n        [ -65,   55],\\n        [ -81,    1],\\n        [  46,   -3],\\n        [ -11,   15],\\n        [ -96,  -66],\\n        [ -83,  -98],\\n        [  71,   30],\\n        [  57,   46],\\n        [  86,   91],\\n        [  75,  -50],\\n        [  49,  100],\\n        [ 100,    9]]))",
    0.00491
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00813
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00081
  ]
}