{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-58,   6, -52,  67, -22, -33, -28, -34, -10, -43,  18, -99,  40,\\n          16, -57,  32,  67, -86, -32, -43,  88, -36,  17, -99, -92,  50,\\n         -17, -89,  58, -14, -48,  93,  16,  55, -38, -45,  97,  98, -85,\\n          78,  10,  67, -26, -61, -62,  38,  27, -58, -60,  62, -28,  95,\\n         -90,  63, -52, -24, -63, -62,  18, -14,  47, -92,  46, -57, -39,\\n         -30, -94,   8, -19,  10, -60, -60, -95,  54,  25,  -9, -21,  96,\\n          57,  79, -51,   9, -18, -97,   4, -76, -32,  -3,  -1,  75,  70,\\n          19, -54,  -7, -46, -87,  75, -59, -12, -28,  57,  42,   8,  31,\\n          69, -78, -82,  -7, -56, 100,  22,   8, -95, -56, -35, -15, -15,\\n          91,  -1, -54, -88,  26, -61, -10,  12,  81, -58,  61,   6,  74,\\n          95,  -7,  53, -41,  87, -88,  33, -19, -57, -99,  53,  28,  85,\\n          88, -30,  56,  30, -61,  80, -11,  25, -47, -46, -93, -18,  39,\\n          45,  79,  72]]))",
    0.01051
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00097
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00418
  ]
}