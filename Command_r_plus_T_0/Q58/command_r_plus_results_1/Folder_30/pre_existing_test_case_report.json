{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00278
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00049
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-33, -33],\\n        [  2, -52],\\n        [ 14, -58],\\n        [-81, -54],\\n        [ 43,  54],\\n        [-86, -88],\\n        [-99, -99],\\n        [ 16,  69],\\n        [ 30,  56],\\n        [100, -13],\\n        [ 29,  35],\\n        [ 24, -58],\\n        [ 17, -92],\\n        [ 57,  83],\\n        [ 11,  51],\\n        [-88,  81],\\n        [ 91, -62],\\n        [ 57,  27],\\n        [-52,   1],\\n        [ -3, -83],\\n        [-96,  -1],\\n        [ 76,  -4],\\n        [ 62,  35],\\n        [ -9,  96],\\n        [-75,  53],\\n        [-30, -78],\\n        [-15, -42],\\n        [-75,  64],\\n        [ 62, -56],\\n        [-78,  61],\\n        [-95,  97],\\n        [-32, -14],\\n        [-58, -78],\\n        [ 45, -80],\\n        [100,  40],\\n        [-34,  21],\\n        [-58,  58],\\n        [-90, -12],\\n        [ 81,  74],\\n        [ 29,  89],\\n        [  7,  -2],\\n        [ 43,  11],\\n        [ 65, -10],\\n        [-69, -65],\\n        [-73,  98],\\n        [ 27,   4],\\n        [ 77,  36]]))",
    0.00342
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00317
  ]
}