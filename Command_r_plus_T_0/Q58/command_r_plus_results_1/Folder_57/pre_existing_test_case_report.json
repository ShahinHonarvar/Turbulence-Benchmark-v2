{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00094
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-14, -17],\\n        [ -7,  13],\\n        [-69,  23],\\n        [ 78,  92],\\n        [-32, -75],\\n        [ 78, -95],\\n        [ 67,  78],\\n        [ 35, -98],\\n        [-93, -60],\\n        [ -1, -86],\\n        [ 78,  56],\\n        [ 30,  54],\\n        [-63, -12],\\n        [  6, -31],\\n        [ 66,  94],\\n        [  4, -31],\\n        [-47,  13],\\n        [ 63,  30],\\n        [  8,  62],\\n        [ 52, -38],\\n        [-21, -93],\\n        [-18,   2],\\n        [-90, -37],\\n        [ 49,  65],\\n        [ 80, -27],\\n        [-35, -91],\\n        [-68,  90],\\n        [ 70,  -1],\\n        [ 37, -38],\\n        [-36, -15],\\n        [-99, -23],\\n        [-99,  81],\\n        [ -7, -18],\\n        [ 97,  26],\\n        [-49,  60],\\n        [-91,  91],\\n        [-62, -60],\\n        [ -3, -71],\\n        [ 97, -46],\\n        [  5, -61],\\n        [ 97, -62],\\n        [-38,  28],\\n        [-45,  96],\\n        [-31,  12],\\n        [-67,  43],\\n        [-34,   9]]))",
    0.00338
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00305
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.0093
  ]
}