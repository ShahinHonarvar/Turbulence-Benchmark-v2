{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 58, -26],\\n        [ 51, -90],\\n        [-12,  94],\\n        [-41, -91],\\n        [-68, -25],\\n        [ 71, -99],\\n        [-71, -57],\\n        [ -5, -78],\\n        [ 53, -59],\\n        [-44,  22],\\n        [ 33, -57],\\n        [ 65,  22],\\n        [ 25, -45],\\n        [-22, -69],\\n        [ 31, -59],\\n        [ 39, -17],\\n        [ 83, -78],\\n        [-13, -17],\\n        [ 23,  80],\\n        [-35, -79],\\n        [-66,  68],\\n        [-62, -60],\\n        [-30, -86],\\n        [ 43,  74],\\n        [-30, -53],\\n        [ -2,  72],\\n        [-60, -29],\\n        [ -1, -37],\\n        [ 61,  45],\\n        [-92,  89],\\n        [-61, -49],\\n        [ 23, -96],\\n        [-47,  51],\\n        [-54, -82],\\n        [ 79, -40],\\n        [-42,  62],\\n        [ 99, -68],\\n        [ 22,  -5],\\n        [100, -80],\\n        [-58,  82],\\n        [ 40,  16],\\n        [-74, -96]]))",
    0.00369
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.01891
  ]
}