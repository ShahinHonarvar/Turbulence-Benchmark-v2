{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00201
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 87,  25],\\n        [ 34, -38],\\n        [-75,  53],\\n        [-44,   6],\\n        [ 45, -56],\\n        [-95, -62],\\n        [-61,  74],\\n        [ 47,  52],\\n        [-19,  76],\\n        [ 94,  60],\\n        [ 83, -70],\\n        [-41, -70],\\n        [ 16,  95],\\n        [ 68, -90],\\n        [  2, -51],\\n        [ 68,   2],\\n        [ 86,  15],\\n        [-46,  -6],\\n        [ 63,  21],\\n        [-72,  23],\\n        [ 78,  15],\\n        [ 58, -12],\\n        [-23, -48],\\n        [ -9,   6],\\n        [ 24, -34],\\n        [-44, -47],\\n        [ 84,  80],\\n        [-68, -95],\\n        [-90,  81],\\n        [-31, -72],\\n        [-18, -35],\\n        [-95,  13],\\n        [ 21,  85],\\n        [-39,  71],\\n        [-82, -69],\\n        [  7, -73],\\n        [-75,   4],\\n        [ 18, -93],\\n        [ -9, -43],\\n        [-57, -14],\\n        [-75, -63],\\n        [-38, -66],\\n        [ 75,  59],\\n        [ -8, -28],\\n        [-44,  97],\\n        [-97,  43],\\n        [ 68,  -9],\\n        [ 55,   8]]))",
    0.0028
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00044
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00126
  ]
}