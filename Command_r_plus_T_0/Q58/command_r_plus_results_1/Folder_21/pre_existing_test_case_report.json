{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00025
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00039
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00456
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 61, -97, -48,  31, -67,  76,   1, -16, -80, -83,  11, -52, -61,\\n          71,  15,   6, -15,  73,   9, -62,  -1,  78, -13,  45,   1, -25,\\n          11,  65, -84, -35, -32, -81,  49,  12, -65, -19,   0, -53,  -9,\\n         -44, -18, -48, -65, -21, -68,  37,  48,  45,  56,   8,  45,  47,\\n         -66, -24,  80,  65,  72,  46, -57, -42,  17,  48, -15,  84,  -8,\\n         -58,  40, -34, -56,  75,  -6, -83, -64,  94, -37,  55, -41,  27,\\n          31,  48,  67, -68,  94, -76, -22, -26, -14, -60, -38,  30, -34,\\n         -61,  63,  82,  22, -26, -27,  53,  50,  39,  90, -23,  97,  41,\\n          50,  51,  80, -42,  94, -26,  60, -71,  20, -59,   5, -37,  19,\\n          17, -60, -78, -78, -89, -10, -39, -31,  77, -60,  17, -57,  62,\\n          55, -37,  -1,  42, -81, -95, -36, -93,  40]]))",
    0.00089
  ]
}