{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00656
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  4,  78],\\n        [-11,  87],\\n        [ 11, -29],\\n        [-84,  35],\\n        [ 38,  16],\\n        [ 60, -44],\\n        [-66,  23],\\n        [ 52,   5],\\n        [-24, -37],\\n        [-55,   3],\\n        [ 81,   9],\\n        [-91,   2],\\n        [-28,  63],\\n        [-70,  16],\\n        [ 88,  -5],\\n        [ 54,   5],\\n        [ 11, -89],\\n        [-91,   5],\\n        [ 16,  -9],\\n        [ 30, -76],\\n        [ 26,   3],\\n        [ 62,  83],\\n        [-60,   3],\\n        [ 49,   5],\\n        [-70,  18],\\n        [ 92,   0],\\n        [-94,  -7],\\n        [ 82,  46],\\n        [-67,  85],\\n        [ 32, -82],\\n        [ 48, -78],\\n        [ 83,  87],\\n        [-36,  39],\\n        [ -7, -90],\\n        [ 14, -46],\\n        [ 35, -34],\\n        [ 41, -42],\\n        [ 52, -81],\\n        [-52, -16],\\n        [-71,  63],\\n        [ -8,  19],\\n        [-39,  69],\\n        [ 66, -54],\\n        [-22, -21]]))",
    0.01675
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0112
  ]
}