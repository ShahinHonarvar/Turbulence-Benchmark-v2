{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00082
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00191
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  46,  -61],\\n        [ -18,   73],\\n        [ -40,  -39],\\n        [ -62,  -16],\\n        [  30,   25],\\n        [  99, -100],\\n        [  37,   -9],\\n        [ -53,  -15],\\n        [  76,   66],\\n        [ -19,  -57],\\n        [  48,   30],\\n        [ -73,   52],\\n        [  -1,  -80],\\n        [  17,   98],\\n        [  49,  -76],\\n        [ -43,    8],\\n        [  55,  -92],\\n        [  31,  -76],\\n        [  40,  -99],\\n        [ -92,   55],\\n        [  69,   -4],\\n        [  83,  -51],\\n        [  11,  -65],\\n        [   8,  -68],\\n        [  98,  -82],\\n        [  74,   50],\\n        [ -90,   13],\\n        [ -95,   37],\\n        [ -63,  -93],\\n        [  51,  -15],\\n        [-100,   87],\\n        [   8,   51],\\n        [  77,   15],\\n        [ -15,  -40],\\n        [  31,   57],\\n        [ -50,  -39],\\n        [ -70,  100],\\n        [ -46,   23],\\n        [  12,  -59],\\n        [   7,  -61],\\n        [   4,   -3],\\n        [   1,   -4],\\n        [  18,   60],\\n        [  19,  -28],\\n        [ -87,  -65]]))",
    0.00408
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00557
  ]
}