{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00411
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  40],\\n        [ 29,  56],\\n        [ 62, -17],\\n        [  2, 100],\\n        [-25,  -5],\\n        [-94, -86],\\n        [  1,   0],\\n        [-87, -28],\\n        [ 70, -93],\\n        [ -4, -54],\\n        [ 98,  44],\\n        [ 82, -79],\\n        [ 69, -75],\\n        [ 84,  57],\\n        [ 22,  11],\\n        [  7,  66],\\n        [ -7, -23],\\n        [ 82, -51],\\n        [ 46, -67],\\n        [ 14, -85],\\n        [ 76,   1],\\n        [ 75, -15],\\n        [ 51,  19],\\n        [ 16,  75],\\n        [-20, -85],\\n        [ 44,  20],\\n        [-27,  29],\\n        [ 69, -74],\\n        [-91, -56],\\n        [ 77, -89],\\n        [ -9,  16],\\n        [-67,  -7],\\n        [  2, -88],\\n        [ 21,  29],\\n        [-78,  65],\\n        [ 49, -42],\\n        [  7,  19],\\n        [-98,  99],\\n        [-94,  -9],\\n        [ 21,  96],\\n        [-25,  76],\\n        [ 23,  49],\\n        [ 54, -97],\\n        [-17, -32],\\n        [ 62, -79],\\n        [ 18,  50],\\n        [  2, -26]]))",
    0.00492
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00125
  ]
}