{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00881
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00045
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,   23,   27,  -11, -100,  -72,   -6,  -10,   64,   31,\\n           19,  -14,   28,   65,  -75,   47,  -58,  -30,  -68,   48,\\n          100,   33,  -64,  -34,  -15,  -60,  -28,   78,  -94,  -53,\\n           48,   78,  -51,  -85,   82,   58,   13,  -15,  -74,  -54,\\n           21,   65,  -62,   82,  -56,  -74,  -93,   94,   49,    3,\\n          -48,   88,  -79,  100,    9,   24,    7,  -24,  -67,  -69,\\n          -98,  -52,  -39,   -9,   86,  -88,   -6,   -4,   53,   67,\\n          -28,  -72,   55,   53,  -45,  -29,  -51,   26,  -81,   47,\\n          -22,   25,   12,  -15,    6,   21,    7,   84,   55,  -52,\\n          -95,  -97,  -44,   95,   14,  -97,   71,   95,   69,    6,\\n           74,  -26,  -13,    6,   -1,  -91,  -70,   -9,   28,  -82,\\n           27,   95,   63,  -68,  -32,   53,    2,   43,  -29,    2,\\n          -23,  -81,   16,   88,   99,   -3,  -61,   79,   59,   54,\\n          -18,   36,   53,  -59,   17, -100,  -25,   68,   54,   45,\\n           35,  -74,   89,   -8,   25,   31,  -98]]))",
    0.00093
  ]
}