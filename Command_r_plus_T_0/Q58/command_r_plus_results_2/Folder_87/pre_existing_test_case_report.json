{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00095
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00051
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-50, -91],\\n        [ 40,  -8],\\n        [ 50,  69],\\n        [-13, -85],\\n        [-49, -83],\\n        [ 96,  82],\\n        [-30, -33],\\n        [ 55, -85],\\n        [ 87,  39],\\n        [-25, -64],\\n        [ 73, -11],\\n        [-62,  76],\\n        [ 52,  -9],\\n        [-40,  49],\\n        [ 41, -22],\\n        [-14,  -4],\\n        [-78, -57],\\n        [  8, -30],\\n        [ 39, -99],\\n        [-35, -63],\\n        [-20, -37],\\n        [-85,  82],\\n        [-25,  24],\\n        [-77,  31],\\n        [ 67,  89],\\n        [ 48,  14],\\n        [-21, -73],\\n        [-99, -20],\\n        [ 80,  11],\\n        [-83,  87],\\n        [ 19,  63],\\n        [ 58,   0],\\n        [ 89, -31],\\n        [ 62, -95],\\n        [-30,  87],\\n        [  0,  60],\\n        [-45, -46],\\n        [-89, -58],\\n        [-82, -74],\\n        [ 16,  79],\\n        [-29,  -8],\\n        [-25, -96],\\n        [ 46, -20],\\n        [ 65,  18],\\n        [ 20, -16],\\n        [ 81, -23],\\n        [ 90,  18],\\n        [-51, -33]]))",
    0.00216
  ]
}