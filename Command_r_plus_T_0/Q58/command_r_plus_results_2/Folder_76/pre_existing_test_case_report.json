{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00708
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 20, -23,   5, -25, -66,  71,  -8,  64,  73,  26,   9,  24, -54,\\n          85,  97,  24, -57, -97,   2,  30,  56, -82, -45, -31, -58, -15,\\n          47,  73,  20, -90,   6,  85, -28, -59, -38,  82, -42,  76,  54,\\n         -88,  91,  42, -76,  91,  -4,  65, -62, -71, -61,  67, -22,  97,\\n          90,  98,  51,  58,  32, -28, -10, -42,  84, -37, -18,  12,  19,\\n         -49, -24,   8, -74,  -9,  26,  74,  60, -36,  44, -60, -44, -47,\\n          81,  19,  -1, -34,  99, -26,  52, -26, -10, -58,  32,  78,  -3,\\n         -63,  63, -39, -33, -69, -36, -97, -72, -68, -31, -97, -35,  18,\\n          43,  98, -30,  41,  39,  71,  65,  77,   4,  28, -71,  99,  60,\\n          42,  69,  12,  90, -80,  76,  55,  63,  15, -34,  31, -12, -57,\\n          -2, -12,  46, -70, -59, -21,  16,  70, -82,  24,  88,  68,  10,\\n          81, -87,  32, -71,  63, 100,  56,  67, -85,  24,  20,  96, -76,\\n          -8,  91,  70]]))",
    0.00115
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.01218
  ]
}