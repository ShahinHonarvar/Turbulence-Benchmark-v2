{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-19, -48, -72,  75, -74,   4, -93, -53,   0, -25, -64, -97,  31,\\n          -5, -92, -86,  92,  66,  66, -51,  79,  68,  67, -73,  35,  23,\\n         -78, -69,   2,  67,   1,  88, -87,  32,  10, -74,  -2, -70,   8,\\n           7,  59,  46,  34,  73, -95, -88,  62, -35,  10, -27, -54,  16,\\n         -45, -27, -29,   5,  59, -10,   8, -90,  73,  65,  -3,  86, -35,\\n         -72, -53,  49, -49,  28,  25,  -1, -28, -21, -48, -26,  31, -16,\\n           7,  54,  29, -49,  37,  16, -96, -80,  -9,  21,  28,  32,  11,\\n         -74,  20,  -5, -51, -12, -15,   6, -25,  -1,  36,  -5,  98, -60,\\n          84,  49, -48, -12, -58, -13, -70, -52,  91,  12, -23, -16, -33,\\n         -60,  15,  37,  91, -97,  18,  92,  46, -36, -25, -28,  -7, -32,\\n         -69, -80,  91,  73,  10, -34, -52, -59,  68,  13, -72, -27, -81,\\n         -25,  69,  21,   1, -83,  65,   2, -63, -56, -44,  52,   6, -75,\\n         -51,  66,  75]]))",
    0.00126
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00098
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00631
  ]
}