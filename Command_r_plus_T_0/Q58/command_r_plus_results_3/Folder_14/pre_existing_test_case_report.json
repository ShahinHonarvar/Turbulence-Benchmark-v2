{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-86,  15],\\n        [-36,  68],\\n        [ 89, -68],\\n        [-60,  75],\\n        [-69, -59],\\n        [-66,  96],\\n        [ 53, -72],\\n        [-11, -23],\\n        [-63,  50],\\n        [ 29,  57],\\n        [ 38, -70],\\n        [ 69, -25],\\n        [  5,  97],\\n        [ 63,  31],\\n        [ 98, -67],\\n        [-90,  22],\\n        [ -9,  64],\\n        [ 16,  85],\\n        [ 75,  68],\\n        [ 46, -14],\\n        [-46, -75],\\n        [ 39, -59],\\n        [ 74, -34],\\n        [-68,  99],\\n        [ -2,  -7],\\n        [-51,  63],\\n        [  8, -82],\\n        [ 99,  54],\\n        [  3,   4],\\n        [ 70,  33],\\n        [  6, -48],\\n        [ 19,  54],\\n        [ 90, -95],\\n        [-95, -98],\\n        [ 48, -79],\\n        [  1,  63],\\n        [  5,  75],\\n        [-88,  58],\\n        [ 67,  71],\\n        [ 19, -11],\\n        [-98,  23],\\n        [-78,  53]]))",
    0.00203
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00113
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00098
  ]
}