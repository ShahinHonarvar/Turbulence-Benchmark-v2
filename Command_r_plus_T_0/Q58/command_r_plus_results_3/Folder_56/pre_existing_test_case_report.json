{
  "parameter(s)": [
    68
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_68_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-68,  53],\\n        [ 98,  87],\\n        [-95, -40],\\n        [-37, -42],\\n        [ 86,  66],\\n        [  3, -19],\\n        [-16,  78],\\n        [-61,  63],\\n        [  1, -96],\\n        [-64, -69],\\n        [-73, -69],\\n        [-51, -30],\\n        [-93,  88],\\n        [ 13, -67],\\n        [ 83, -56],\\n        [ 99, -71],\\n        [-36, -53],\\n        [-98,  93],\\n        [ 57,  82],\\n        [-24,  12],\\n        [ 11,  32],\\n        [ 31,  23],\\n        [-78,   0],\\n        [-72, -86],\\n        [-80, -21],\\n        [ 70,  37],\\n        [ 30, -11],\\n        [ 72,  62],\\n        [ 77, -59],\\n        [ 44, -86],\\n        [ 39,  97],\\n        [ 54,  61],\\n        [ 46, -46],\\n        [ 65, -78]]))",
    0.0008
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 137",
    0.00622
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 137",
    0.00041
  ]
}