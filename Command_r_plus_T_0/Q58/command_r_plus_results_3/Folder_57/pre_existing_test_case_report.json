{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00104
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,   66],\\n        [  52,  -77],\\n        [ -81,    4],\\n        [ -10,   -7],\\n        [ -30,  -76],\\n        [  27,  -76],\\n        [ -86,   53],\\n        [ -71,   26],\\n        [-100,  -53],\\n        [  42,  -98],\\n        [ -85,  -12],\\n        [  86,    3],\\n        [  19,   48],\\n        [ -29,  -94],\\n        [ -73,   18],\\n        [ -82,  -71],\\n        [ -16,   76],\\n        [  99,   31],\\n        [  56,  -60],\\n        [  21,   93],\\n        [  22,   24],\\n        [ -15,  -53],\\n        [  30,  -36],\\n        [  66,  -18],\\n        [ -87,   92],\\n        [  32,  -42],\\n        [  28,   22],\\n        [  68,  100],\\n        [ -99,  -75],\\n        [  59,  -71],\\n        [ -97,   45],\\n        [  43,   87],\\n        [  93,   86],\\n        [  17,   89],\\n        [ -82,   55],\\n        [ -70,  -40],\\n        [ -75,  -22],\\n        [  49,  -50],\\n        [ -75,   49],\\n        [ -21,  -41],\\n        [ -39,    7],\\n        [ -49,   82],\\n        [ -48,   70],\\n        [  -1,  -34],\\n        [ -16,   11],\\n        [ -43,   72]]))",
    0.00717
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00046
  ]
}