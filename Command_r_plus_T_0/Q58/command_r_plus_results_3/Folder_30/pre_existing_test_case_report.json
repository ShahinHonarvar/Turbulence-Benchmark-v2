{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00038
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -6,  30],\\n        [-78,  67],\\n        [-83,  -3],\\n        [ 51, -80],\\n        [  0, -24],\\n        [-84, -19],\\n        [-19,  22],\\n        [-61,  21],\\n        [-63,   0],\\n        [ 64,  48],\\n        [-55,  71],\\n        [-54,  82],\\n        [ -2,  36],\\n        [ 45,  23],\\n        [ 81,  98],\\n        [ 56, -15],\\n        [ 44, -24],\\n        [  0, -61],\\n        [ 70, -46],\\n        [ 36,  63],\\n        [ 77,  54],\\n        [ 19, -59],\\n        [-90, -92],\\n        [ 96, -60],\\n        [ 24, -19],\\n        [ -7, -25],\\n        [-47, -36],\\n        [-73,  -3],\\n        [ 80, -33],\\n        [-38,  64],\\n        [-44,  67],\\n        [ 71,  13],\\n        [-54,  51],\\n        [  2, -34],\\n        [-14, -48],\\n        [-68,  38],\\n        [ 63,  13],\\n        [  3, -44],\\n        [ 48, -87],\\n        [-23,  88],\\n        [ 44, -43],\\n        [-11, -59],\\n        [-97,  66],\\n        [ 39,   8],\\n        [ 78,  82],\\n        [-73, -30],\\n        [-48,  -3]]))",
    0.00077
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00115
  ]
}