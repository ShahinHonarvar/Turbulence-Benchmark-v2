{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  73,   59, -100,   65,   39,   90,  -97,  -43,   48,    9,\\n           32,   29,   98,   38,   94,   66,   88,  -99,  -17,  -40,\\n           90,  -62,   12,  -36,  -71,  -69,   39,   68,  -80,  -14,\\n          -85,   45,   -4,  -35,   10,   59,  -13,   10,   66,   93,\\n           63,  -24,   57,   63,   15,  -10,  -56,   42,    1,  -36,\\n            0,  -45,  -89,   35,  -80,   54,  -31,   -2,  -93,  -13,\\n          -16,  -95,   42,  -92,  -47,   83,   97,   99,    6,  -38,\\n          -28,   51,  -59,  -64,   12,   81,   92,  -37,    9,   43,\\n          -78,   86,  -65,  -59,   52,  -81,   31,   57,   62,  -29,\\n           51,  -17,   -8,   43,   98,   49,   76,  -60,   87,  -22,\\n          -22,  -10,   81,   42,  -76,  -26,  -12,  -42,  -30,  -49,\\n           96,   54,  -32,   25,  -60,   28,   58,  -50,  -73,    9,\\n            4,   67,  -94,  -71,   -4,   46,  -20,  -37,  -63,   78,\\n          -31,  -18,  -78,  -13,  -70,   99,   84,   20,   75,  -85,\\n           32,   58,  -36,  -48,  -74,  -27,   91]]))",
    0.00408
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00544
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00097
  ]
}