{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-53,  96],\\n        [-19,  90],\\n        [ 88,  40],\\n        [-47,  14],\\n        [ 56,  10],\\n        [ 34, -73],\\n        [-56, -59],\\n        [-30, -23],\\n        [ 54, -22],\\n        [ 79,  68],\\n        [-17, -63],\\n        [ 72, -46],\\n        [-65, -13],\\n        [-61, -69],\\n        [ 43, -77],\\n        [-25, -33],\\n        [-71, -34],\\n        [ 52,   0],\\n        [-95,   2],\\n        [ 16,  62],\\n        [ 89,  63],\\n        [ 42, -55],\\n        [ 93,   7],\\n        [ 77, -98],\\n        [ 31, -19],\\n        [-39,  45],\\n        [ -4, -90],\\n        [-37,  71],\\n        [ 80,  34],\\n        [-75,  96],\\n        [ 87, -13],\\n        [ 73,   3],\\n        [ 88,  89],\\n        [-84,  16],\\n        [ -5, -15],\\n        [-14, -22],\\n        [-43,  45],\\n        [-23, 100],\\n        [ 30, -70],\\n        [-36,  -7],\\n        [-98, -57],\\n        [-94,  43],\\n        [ 12, 100],\\n        [ -5,  61],\\n        [ 68,  43]]))",
    0.00082
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00041
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00782
  ]
}