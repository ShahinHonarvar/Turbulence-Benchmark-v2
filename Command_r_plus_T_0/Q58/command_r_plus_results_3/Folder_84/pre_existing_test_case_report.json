{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 96, -89, -99,  -3, -10, -38, -53,  62, -28,  76, -60,  92,  33,\\n          98, -34, -32,  63,  92, -54, -76,  -5, -84, -64, -85, -91, -20,\\n         -10,  42,  48, -83,  76,  98, -69, -86,  52, -60,  60, -86, -61,\\n         -95,  -4, -75,  28,  14, -42,  34, -62,  97,   1,  76,  30, -70,\\n         -25,  79,  53, -44, -56, -72,  26,  61,  86, -61, -24,  60,  -3,\\n           7,  61, -75, -98,  -1,  97,  16,  73, -84, -18,  40, -26, -67,\\n         -93, -70, -88, -29,  31, -76,  31,  15, -89, -75,  -3, -83,  80,\\n          22,   3,  87, -40, -55, -57, -85, -27, -25, -90,  79,  88, -43,\\n         -29,  56,  98,  60,  -4,  75, -83, -14,  63,  88, -15,  38, -10,\\n         -87,  80,  28,  33, -82,  87,  -3,   1,  42,   1]]))",
    0.00097
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 255",
    0.00139
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.0006
  ]
}