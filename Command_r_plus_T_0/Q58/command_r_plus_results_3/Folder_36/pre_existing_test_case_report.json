{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  92,  -99,  -28,   72,  -58,   57,   40,   53,   48,  -32,\\n          -20,  -72,   33,   98,   23,  -41,  -22,  -49,  -26,  -11,\\n          -89,   10,   12,   26,   16,   27,   46,  -25,  -32,  -99,\\n           49, -100,   46,   65,   88,   79,   -7,    6,    3,  -12,\\n           15,   59,   79,   48,   20,  -41,   68,  -58,   59,  -35,\\n           66,   82,   59,   76,  -23,   70,  -11,    9,   79,   22,\\n          -92,   41,  -89,  -25,  -14,  -17,  -36,   81,  -74,   35,\\n          -20,  -96,    7,  -60,  -27,  -52,    0,  -79,  -73,  -96,\\n           95,    0,  -45,  -53,  -38,  -36,   49,   89,  -85,  -52,\\n           66,   59,  -45,  -87,   -7,  -78,   -7,  -37,  -30,   -3,\\n           -2,   24,   -7,   46,  -99,  -65,  -27,  -80,  -76,   54,\\n            9,  -90,  -19,   37,   -5,   24,   87,  -10,   85,  -46,\\n          -44,   73,  -60,   35,   -5,  -67,  -58,  -14,   84,   71,\\n          -33]]))",
    0.00517
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00272
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00632
  ]
}