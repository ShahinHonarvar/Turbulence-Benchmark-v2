{
  "parameter(s)": [
    53
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'}\n +  where {'aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00031
  ],
  "test_string_of_identical_nums": [
    "failed",
    "AssertionError: assert not {'00000000000000000000000000000000000000000000000000000'}\n +  where {'00000000000000000000000000000000000000000000000000000'} = palindrome_of_length_n('0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.00024
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'                                                     '}\n +  where {'                                                     '} = palindrome_of_length_n('                                                                                                          ')",
    0.00022
  ]
}