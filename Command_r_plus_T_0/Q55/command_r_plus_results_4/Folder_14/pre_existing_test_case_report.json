{
  "parameter(s)": [
    -72
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00016
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00012
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00018
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-72, -72, -...72, ...], ...] == [[-72], [-72]...], [-72], ...]\n  At index 0 diff: [-72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72] != [-72]\n  Left contains 1122 more items, first extra item: [-72, -72, -72, -72, -72, -72, ...]\n  Full diff:\n    [\n  +  [-72,\n  +   -72,\n  +   -72,...\n  \n  ...Full output truncated (13683 lines hidden), use '-vv' to show",
    0.09294
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 9704204980882671403008 == -72\n +  where 9704204980882671403008 = <built-in function prod>([-3, -4, -6, -8, -9, -12, ...])\n +    where <built-in function prod> = math.prod",
    0.00098
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (6 == 3)\n +  where 6 = <built-in method count of list object at 0x748b38157440>([-72])\n +    where <built-in method count of list object at 0x748b38157440> = [[1, -72, 1, -72, 1, -72], [1, -72, 1, -72, 1, -72], [-72, 1, -72, 1, -72], [-72, 1, -72, 1, -72], [1, -72, 1, -72], [1, -72, 1, -72], ...].count",
    0.00039
  ]
}