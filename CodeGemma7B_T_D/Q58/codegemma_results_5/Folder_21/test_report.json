{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_21_5.py::test_horizontal_matrix", "location": ["tests58_21_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021004400332458317, "start": 1729906545.7268946, "stop": 1729906545.7271056, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_21_5.py::test_matrix_of_one_integer", "location": ["tests58_21_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019512799917720258, "start": 1729906545.7315838, "stop": 1729906545.7317798, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_21_5.py::test_matrix_of_one_integer", "location": ["tests58_21_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022204799461178482, "start": 1729906545.732083, "stop": 1729906545.732306, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_21_5.py::test_matrix_of_having_139_integers", "location": ["tests58_21_5.py", 28, "test_matrix_of_having_139_integers"], "keywords": {"test_matrix_of_having_139_integers": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0015728270082036033, "start": 1729906545.7334504, "stop": 1729906545.7350242, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_21_5.py::test_matrix_of_one_integer", "location": ["tests58_21_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.002781381001113914, "start": 1729906545.732707, "stop": 1729906545.7354896, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_21_5.py::test_vertical_matrix", "location": ["tests58_21_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0012094830017304048, "start": 1729906545.7393365, "stop": 1729906545.7405465, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_21_5.py::test_horizontal_matrix", "location": ["tests58_21_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 58, "message": "assert 0 == 279"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(139)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 139 < 30:", "            num = 4", "        elif 30 <= 139 < 70:", "            num = 3", "        elif 70 <= 139 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 139) + 1", ">           assert output == expected_result", "E           assert 0 == 279"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(139)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 139 < 30:", "            num = 4", "        elif 30 <= 139 < 70:", "            num = 3", "        elif 70 <= 139 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 139) + 1", ">           assert output == expected_result", "E           assert 0 == 279"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 58, "message": "assert 0 == 279"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016002399934222922, "start": 1729906545.7274048, "stop": 1729906545.7290058, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_21_5.py::test_horizontal_matrix", "location": ["tests58_21_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001795150019461289, "start": 1729906545.787251, "stop": 1729906545.7874312, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_21_5.py::test_matrix_of_having_139_integers", "location": ["tests58_21_5.py", 28, "test_matrix_of_having_139_integers"], "keywords": {"test_matrix_of_having_139_integers": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -31,  -22,   -2,   41,   74,  -17,  -56,  -32,  -62,  -20,\\n           99,  -34,   -5,  -56,   92,   27,  -46,   87,   95,  -57,\\n           85,  -17,   46,   28,  -60,   99,   81,  -57,  -25,   22,\\n          -86,  -91,   45,  -81,  -94,  -72,   33,   55,   97,    6,\\n          -75,  -91,   94,  -58,  -38,  -90,  -61,   63,   72,   98,\\n           73,   41,   99,  -11,   85,   82,    3,  -78,  -76,  -59,\\n          -42,    2,  -80,  -72, -100,   56,  -28,  -64,  -65,   65,\\n          -48,    5,   -7,  -15,   28,  -71,  -97,  -37,   82,  -93,\\n          -24,    5,  -90,  -66,   57,  -12,  -93,   15,  -45,  -29,\\n            4,    5,   50,  -67,    9,  -19,   30,   83,   47,   73,\\n          -20,   52,  -59,    2,   10,   42,   -4,  -53,  -21,  -82,\\n           89,   -8,  -40,   93,  -74,   16,   83,   88,   63,   73,\\n          -50,  -45,  -26,   28,   -7,  -57,   52,  -22,  -77,  -39,\\n          -89,   98, -100,    1,  -75,  -75,  -54,   27,  -93]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_139_integers():", "        if 139 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(139 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(139)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -31,  -22,   -2,   41,   74,  -17,  -56,  -32,  -62,  -20,\\n           99,  -34,   -5,  -56,   92,   27,  -46,   87,   95,  -57,\\n           85,  -17,   46,   28,  -60,   99,   81,  -57,  -25,   22,\\n          -86,  -91,   45,  -81,  -94,  -72,   33,   55,   97,    6,\\n          -75,  -91,   94,  -58,  -38,  -90,  -61,   63,   72,   98,\\n           73,   41,   99,  -11,   85,   82,    3,  -78,  -76,  -59,\\n          -42,    2,  -80,  -72, -100,   56,  -28,  -64,  -65,   65,\\n          -48,    5,   -7,  -15,   28,  -71,  -97,  -37,   82,  -93,\\n          -24,    5,  -90,  -66,   57,  -12,  -93,   15,  -45,  -29,\\n            4,    5,   50,  -67,    9,  -19,   30,   83,   47,   73,\\n          -20,   52,  -59,    2,   10,   42,   -4,  -53,  -21,  -82,\\n           89,   -8,  -40,   93,  -74,   16,   83,   88,   63,   73,\\n          -50,  -45,  -26,   28,   -7,  -57,   52,  -22,  -77,  -39,\\n          -89,   98, -100,    1,  -75,  -75,  -54,   27,  -93]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_139_integers():", "        if 139 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(139 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(139)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -31,  -22,   -2,   41,   74,  -17,  -56,  -32,  -62,  -20,\\n           99,  -34,   -5,  -56,   92,   27,  -46,   87,   95,  -57,\\n           85,  -17,   46,   28,  -60,   99,   81,  -57,  -25,   22,\\n          -86,  -91,   45,  -81,  -94,  -72,   33,   55,   97,    6,\\n          -75,  -91,   94,  -58,  -38,  -90,  -61,   63,   72,   98,\\n           73,   41,   99,  -11,   85,   82,    3,  -78,  -76,  -59,\\n          -42,    2,  -80,  -72, -100,   56,  -28,  -64,  -65,   65,\\n          -48,    5,   -7,  -15,   28,  -71,  -97,  -37,   82,  -93,\\n          -24,    5,  -90,  -66,   57,  -12,  -93,   15,  -45,  -29,\\n            4,    5,   50,  -67,    9,  -19,   30,   83,   47,   73,\\n          -20,   52,  -59,    2,   10,   42,   -4,  -53,  -21,  -82,\\n           89,   -8,  -40,   93,  -74,   16,   83,   88,   63,   73,\\n          -50,  -45,  -26,   28,   -7,  -57,   52,  -22,  -77,  -39,\\n          -89,   98, -100,    1,  -75,  -75,  -54,   27,  -93]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -31,  -22,   -2,   41,   74,  -17,  -56,  -32,  -62,  -20,\\n           99,  -34,   -5,  -56,   92,   27,  -46,   87,   95,  -57,\\n           85,  -17,   46,   28,  -60,   99,   81,  -57,  -25,   22,\\n          -86,  -91,   45,  -81,  -94,  -72,   33,   55,   97,    6,\\n          -75,  -91,   94,  -58,  -38,  -90,  -61,   63,   72,   98,\\n           73,   41,   99,  -11,   85,   82,    3,  -78,  -76,  -59,\\n          -42,    2,  -80,  -72, -100,   56,  -28,  -64,  -65,   65,\\n          -48,    5,   -7,  -15,   28,  -71,  -97,  -37,   82,  -93,\\n          -24,    5,  -90,  -66,   57,  -12,  -93,   15,  -45,  -29,\\n            4,    5,   50,  -67,    9,  -19,   30,   83,   47,   73,\\n          -20,   52,  -59,    2,   10,   42,   -4,  -53,  -21,  -82,\\n           89,   -8,  -40,   93,  -74,   16,   83,   88,   63,   73,\\n          -50,  -45,  -26,   28,   -7,  -57,   52,  -22,  -77,  -39,\\n          -89,   98, -100,    1,  -75,  -75,  -54,   27,  -93]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.003079867994529195, "start": 1729906545.7395418, "stop": 1729906545.742623, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_21_5.py::test_matrix_of_having_139_integers", "location": ["tests58_21_5.py", 28, "test_matrix_of_having_139_integers"], "keywords": {"test_matrix_of_having_139_integers": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017850099538918585, "start": 1729906545.8148255, "stop": 1729906545.8150048, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_21_5.py::test_vertical_matrix", "location": ["tests58_21_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 79, "message": "assert 0 == 279"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 139", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 139 < 30:", "            num = 4", "        elif 30 <= 139 < 70:", "            num = 3", "        elif 70 <= 139 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 139) + 1", ">           assert output == expected_result", "E           assert 0 == 279"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 139", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 139 < 30:", "            num = 4", "        elif 30 <= 139 < 70:", "            num = 3", "        elif 70 <= 139 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 139) + 1", ">           assert output == expected_result", "E           assert 0 == 279"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_21/tests58_21_5.py", "lineno": 79, "message": "assert 0 == 279"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.04918175299826544, "start": 1729906545.740741, "stop": 1729906545.789924, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_21_5.py::test_vertical_matrix", "location": ["tests58_21_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_21_5.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001640859991312027, "start": 1729906545.836793, "stop": 1729906545.8369577, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "c1b930d3910744f59571a613dd19d5d9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
