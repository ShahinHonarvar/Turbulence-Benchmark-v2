{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.0001
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 44,  75],\\n        [-91,  81],\\n        [-19, -45],\\n        [ 30, -21],\\n        [ 15, -56],\\n        [-40, -63],\\n        [ -6,  -6],\\n        [-25, -55],\\n        [ 68, -69],\\n        [ 33, -94],\\n        [-64,  76],\\n        [  7, -69],\\n        [  4, -84],\\n        [-50, -90],\\n        [-57, -74],\\n        [-79,  55],\\n        [ 67, -99],\\n        [-16,  22],\\n        [-53, -46],\\n        [-69,  86],\\n        [ 93, -13],\\n        [ 51, -24],\\n        [ -4, -89],\\n        [-30,  74],\\n        [-36, -51],\\n        [-57,  18],\\n        [-11,  37],\\n        [-78, -26],\\n        [-89,  30],\\n        [-50,  89],\\n        [ 78, -60],\\n        [ 36,  -8],\\n        [ 92, -69],\\n        [ 85, -86],\\n        [ -1, -82],\\n        [ 89,  -1],\\n        [-24,  61],\\n        [-24, -44],\\n        [-13,  95],\\n        [-45, -41],\\n        [-65, -85],\\n        [-88, -43],\\n        [-84, -82],\\n        [ 83,  62],\\n        [ 83, -36],\\n        [ 21,  74],\\n        [-26,  90],\\n        [ 66, -67]]))",
    0.0057
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00044
  ]
}