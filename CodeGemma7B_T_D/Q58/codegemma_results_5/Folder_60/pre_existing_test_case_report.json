{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -18,   61],\\n        [ -60,    2],\\n        [  55,   -2],\\n        [ -83,  -83],\\n        [ -77,  -96],\\n        [ -60,  -10],\\n        [ -41,   48],\\n        [  58,   25],\\n        [  13,   -5],\\n        [  66,   62],\\n        [ -85,   76],\\n        [  29,   70],\\n        [ -87,   32],\\n        [  78,   65],\\n        [  67,   91],\\n        [  92,   23],\\n        [ -37,  -40],\\n        [  31,   42],\\n        [   8,   18],\\n        [ -59,   51],\\n        [ -70,   52],\\n        [  27,    5],\\n        [ -47,  -51],\\n        [   8,  -24],\\n        [ -98,   36],\\n        [ -17,   46],\\n        [ -87,  -28],\\n        [  90,  -10],\\n        [ -48,  -83],\\n        [  51,  -59],\\n        [ -44,   40],\\n        [  75,  -38],\\n        [  39,  -46],\\n        [-100,  -46],\\n        [ -51,   80],\\n        [  86,   61],\\n        [ -65,   88],\\n        [ -14,  -59],\\n        [  95,  -49],\\n        [  25,   66],\\n        [   1,   15],\\n        [ -87,   40],\\n        [-100,  -54],\\n        [ -24,   64]]))",
    0.04646
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00271
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0119
  ]
}