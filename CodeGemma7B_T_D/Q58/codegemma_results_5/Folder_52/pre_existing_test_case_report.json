{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.61212
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.81858
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   0,   61,    8,  -90,   46,   23,  -25,  -89,  -95,  -21,\\n           79,  -90,  -71, -100,   86,    5,   45,  -26,  -51,   96,\\n           17,   84,   -9,  -10,   44,   47,    9,  -64,   30,   53,\\n          -89,  -76,  -57,   19,   14,  -73,   95,    8,   -7,  -65,\\n           64,  -55,   55,    2,  -62,  -92,  -97,  -66,  -74,   36,\\n           64,  -19,  -87,  -88,   53,  -45,  -42,  -37,  -61,   12,\\n           30,   90,  -43,   -2,  -55,  -78,  -21,   84,  -12,   74,\\n           63,   82,   14,   87,  -15,  -99,   39,  -76,  -29,   77,\\n          -62,  -32,   96,  -90,    4,  -98,  -72,   63,  -10,   99,\\n          -71,  -36,  -67,  -26,  -41,  -88,  -42,  -59,   61,   41,\\n            1,   40,  -45,   77,  -96,    9,   71,   74,   81,   -7,\\n           84,    0,  -84,   61,   47,   -2,  -29,    2,  -75,   55,\\n          -60,  -81,   95,   31,  -25,  -37,   92,   60,   78,  -17,\\n           24,  -53,  -69,    2,  -74,   63,   39,  -49,  -99,   99,\\n          -48,   77,    3,  -23,   23,   23,   53]]))",
    0.09275
  ]
}