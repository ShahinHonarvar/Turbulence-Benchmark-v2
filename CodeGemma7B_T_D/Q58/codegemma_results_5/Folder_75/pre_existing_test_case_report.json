{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0005
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.0686
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.05698
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 12, -26],\\n        [-76,  60],\\n        [ 59,  64],\\n        [ 24, -39],\\n        [ 14,  80],\\n        [ 45,   0],\\n        [ 63,  -3],\\n        [ 50,  10],\\n        [ 48, -91],\\n        [-93,   2],\\n        [-63, -58],\\n        [ -8,  -7],\\n        [-65, -51],\\n        [ 40,  86],\\n        [ 88,  31],\\n        [-83,  30],\\n        [-90, -92],\\n        [-18,  69],\\n        [-81, -81],\\n        [-42, -45],\\n        [ 73, -79],\\n        [-81,   3],\\n        [-19,  73],\\n        [-18, -65],\\n        [ 66,  33],\\n        [ 72, -86],\\n        [ 33, -25],\\n        [-21, -81],\\n        [ 81, -56],\\n        [ 66, -89],\\n        [-68, -70],\\n        [ 99, -81],\\n        [ 67,  -8],\\n        [-23,  24],\\n        [ 46, -31],\\n        [-87,  56],\\n        [-20,   0],\\n        [ 45,  38],\\n        [ 27,  -8],\\n        [ 55, -40]]))",
    0.01111
  ]
}