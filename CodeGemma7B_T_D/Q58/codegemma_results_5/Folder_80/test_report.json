{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002742260112427175, "start": 1729906797.8494546, "stop": 1729906797.8497295, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019644699932541698, "start": 1729906797.8474586, "stop": 1729906797.847656, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012063290050718933, "start": 1729906797.8503218, "stop": 1729906797.8515284, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_one_integer", "location": ["tests58_80_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.002901471991208382, "start": 1729906797.8519766, "stop": 1729906797.854879, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_vertical_matrix", "location": ["tests58_80_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0033776740019675344, "start": 1729906797.855484, "stop": 1729906797.8588622, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_horizontal_matrix", "location": ["tests58_80_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001833360001910478, "start": 1729906797.8529577, "stop": 1729906797.8531418, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -97,  -82],\\n        [  53,   -1],\\n        [ -20,  -38],\\n        [ -64,  -78],\\n        [ -10, -100],\\n        [  65,  -39],\\n        [  -7,  -94],\\n        [ -73,   14],\\n        [  60,   -8],\\n        [  17,  -61],\\n        [  94,   -5],\\n        [  59,  -62],\\n        [  90,   12],\\n        [  66,  -95],\\n        [  33, -100],\\n        [  68,   57],\\n        [  22,    1],\\n        [  43,   99],\\n        [  61,   37],\\n        [ -56,  -34],\\n        [ -70,   86],\\n        [   8,    6],\\n        [  72,  -43],\\n        [  69,   37],\\n        [  70,  -43],\\n        [   8,    0],\\n        [  66,  100],\\n        [  56,  -97],\\n        [ -28,  -42],\\n        [  78,  -98],\\n        [ -69,  -26],\\n        [ -25,  -56],\\n        [  47,  -91],\\n        [  56,    2],\\n        [ -97,  -21],\\n        [  -6,  -10],\\n        [  77,  -68],\\n        [ -93,   29],\\n        [ -90,   43],\\n        [  35,   27],\\n        [  25,   31],\\n        [ -93,  -52],\\n        [  93,   84],\\n        [ -79,   93],\\n        [  12,  -41],\\n        [  17,  -88],\\n        [ -61,  -19],\\n        [ -84,   29],\\n        [  66,  -26],\\n        [ -45,   83],\\n        [ -41,  -93],\\n        [  34,  -39],\\n        [ -29,    9],\\n        [  89,   67],\\n        [ -21,  -29],\\n        [  60,  -71],\\n        [  26,   21],\\n        [ -10,   46],\\n        [  46,  -40],\\n        [  24,   94],\\n        [ -33,  -56],\\n        [  48,   42],\\n        [ -41,  -82],\\n        [  97,   75],\\n        [  48,   19],\\n        [  -2,  -28],\\n        [  42,   71],\\n        [  68,   29],\\n        [  52,  -18],\\n        [ -41,   88],\\n        [   4,  -76],\\n        [ 100,  -35],\\n        [  86,  -90],\\n        [   4,   65],\\n        [ -86,  -21],\\n        [  47,  -91],\\n        [ -74,   72],\\n        [ -42,  -14],\\n        [  -5,   38],\\n        [ -63,  -69],\\n        [   5,  -96],\\n        [  87, -100],\\n        [  77,   25],\\n        [ -29,  -40],\\n        [ -59,  -26],\\n        [   8,  -45],\\n        [ -53,  -79],\\n        [ -82,  -36],\\n        [   7,  -26],\\n        [  79,  -93]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -97,  -82],\\n        [  53,   -1],\\n        [ -20,  -38],\\n        [ -64,  -78],\\n        [ -10, -100],\\n        [  65,  -39],\\n        [  -7,  -94],\\n        [ -73,   14],\\n        [  60,   -8],\\n        [  17,  -61],\\n        [  94,   -5],\\n        [  59,  -62],\\n        [  90,   12],\\n        [  66,  -95],\\n        [  33, -100],\\n        [  68,   57],\\n        [  22,    1],\\n        [  43,   99],\\n        [  61,   37],\\n        [ -56,  -34],\\n        [ -70,   86],\\n        [   8,    6],\\n        [  72,  -43],\\n        [  69,   37],\\n        [  70,  -43],\\n        [   8,    0],\\n        [  66,  100],\\n        [  56,  -97],\\n        [ -28,  -42],\\n        [  78,  -98],\\n        [ -69,  -26],\\n        [ -25,  -56],\\n        [  47,  -91],\\n        [  56,    2],\\n        [ -97,  -21],\\n        [  -6,  -10],\\n        [  77,  -68],\\n        [ -93,   29],\\n        [ -90,   43],\\n        [  35,   27],\\n        [  25,   31],\\n        [ -93,  -52],\\n        [  93,   84],\\n        [ -79,   93],\\n        [  12,  -41],\\n        [  17,  -88],\\n        [ -61,  -19],\\n        [ -84,   29],\\n        [  66,  -26],\\n        [ -45,   83],\\n        [ -41,  -93],\\n        [  34,  -39],\\n        [ -29,    9],\\n        [  89,   67],\\n        [ -21,  -29],\\n        [  60,  -71],\\n        [  26,   21],\\n        [ -10,   46],\\n        [  46,  -40],\\n        [  24,   94],\\n        [ -33,  -56],\\n        [  48,   42],\\n        [ -41,  -82],\\n        [  97,   75],\\n        [  48,   19],\\n        [  -2,  -28],\\n        [  42,   71],\\n        [  68,   29],\\n        [  52,  -18],\\n        [ -41,   88],\\n        [   4,  -76],\\n        [ 100,  -35],\\n        [  86,  -90],\\n        [   4,   65],\\n        [ -86,  -21],\\n        [  47,  -91],\\n        [ -74,   72],\\n        [ -42,  -14],\\n        [  -5,   38],\\n        [ -63,  -69],\\n        [   5,  -96],\\n        [  87, -100],\\n        [  77,   25],\\n        [ -29,  -40],\\n        [ -59,  -26],\\n        [   8,  -45],\\n        [ -53,  -79],\\n        [ -82,  -36],\\n        [   7,  -26],\\n        [  79,  -93]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -97,  -82],\\n        [  53,   -1],\\n        [ -20,  -38],\\n        [ -64,  -78],\\n        [ -10, -100],\\n        [  65,  -39],\\n        [  -7,  -94],\\n        [ -73,   14],\\n        [  60,   -8],\\n        [  17,  -61],\\n        [  94,   -5],\\n        [  59,  -62],\\n        [  90,   12],\\n        [  66,  -95],\\n        [  33, -100],\\n        [  68,   57],\\n        [  22,    1],\\n        [  43,   99],\\n        [  61,   37],\\n        [ -56,  -34],\\n        [ -70,   86],\\n        [   8,    6],\\n        [  72,  -43],\\n        [  69,   37],\\n        [  70,  -43],\\n        [   8,    0],\\n        [  66,  100],\\n        [  56,  -97],\\n        [ -28,  -42],\\n        [  78,  -98],\\n        [ -69,  -26],\\n        [ -25,  -56],\\n        [  47,  -91],\\n        [  56,    2],\\n        [ -97,  -21],\\n        [  -6,  -10],\\n        [  77,  -68],\\n        [ -93,   29],\\n        [ -90,   43],\\n        [  35,   27],\\n        [  25,   31],\\n        [ -93,  -52],\\n        [  93,   84],\\n        [ -79,   93],\\n        [  12,  -41],\\n        [  17,  -88],\\n        [ -61,  -19],\\n        [ -84,   29],\\n        [  66,  -26],\\n        [ -45,   83],\\n        [ -41,  -93],\\n        [  34,  -39],\\n        [ -29,    9],\\n        [  89,   67],\\n        [ -21,  -29],\\n        [  60,  -71],\\n        [  26,   21],\\n        [ -10,   46],\\n        [  46,  -40],\\n        [  24,   94],\\n        [ -33,  -56],\\n        [  48,   42],\\n        [ -41,  -82],\\n        [  97,   75],\\n        [  48,   19],\\n        [  -2,  -28],\\n        [  42,   71],\\n        [  68,   29],\\n        [  52,  -18],\\n        [ -41,   88],\\n        [   4,  -76],\\n        [ 100,  -35],\\n        [  86,  -90],\\n        [   4,   65],\\n        [ -86,  -21],\\n        [  47,  -91],\\n        [ -74,   72],\\n        [ -42,  -14],\\n        [  -5,   38],\\n        [ -63,  -69],\\n        [   5,  -96],\\n        [  87, -100],\\n        [  77,   25],\\n        [ -29,  -40],\\n        [ -59,  -26],\\n        [   8,  -45],\\n        [ -53,  -79],\\n        [ -82,  -36],\\n        [   7,  -26],\\n        [  79,  -93]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q58/codegemma_results_5/Folder_80/tests58_80_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -97,  -82],\\n        [  53,   -1],\\n        [ -20,  -38],\\n        [ -64,  -78],\\n        [ -10, -100],\\n        [  65,  -39],\\n        [  -7,  -94],\\n        [ -73,   14],\\n        [  60,   -8],\\n        [  17,  -61],\\n        [  94,   -5],\\n        [  59,  -62],\\n        [  90,   12],\\n        [  66,  -95],\\n        [  33, -100],\\n        [  68,   57],\\n        [  22,    1],\\n        [  43,   99],\\n        [  61,   37],\\n        [ -56,  -34],\\n        [ -70,   86],\\n        [   8,    6],\\n        [  72,  -43],\\n        [  69,   37],\\n        [  70,  -43],\\n        [   8,    0],\\n        [  66,  100],\\n        [  56,  -97],\\n        [ -28,  -42],\\n        [  78,  -98],\\n        [ -69,  -26],\\n        [ -25,  -56],\\n        [  47,  -91],\\n        [  56,    2],\\n        [ -97,  -21],\\n        [  -6,  -10],\\n        [  77,  -68],\\n        [ -93,   29],\\n        [ -90,   43],\\n        [  35,   27],\\n        [  25,   31],\\n        [ -93,  -52],\\n        [  93,   84],\\n        [ -79,   93],\\n        [  12,  -41],\\n        [  17,  -88],\\n        [ -61,  -19],\\n        [ -84,   29],\\n        [  66,  -26],\\n        [ -45,   83],\\n        [ -41,  -93],\\n        [  34,  -39],\\n        [ -29,    9],\\n        [  89,   67],\\n        [ -21,  -29],\\n        [  60,  -71],\\n        [  26,   21],\\n        [ -10,   46],\\n        [  46,  -40],\\n        [  24,   94],\\n        [ -33,  -56],\\n        [  48,   42],\\n        [ -41,  -82],\\n        [  97,   75],\\n        [  48,   19],\\n        [  -2,  -28],\\n        [  42,   71],\\n        [  68,   29],\\n        [  52,  -18],\\n        [ -41,   88],\\n        [   4,  -76],\\n        [ 100,  -35],\\n        [  86,  -90],\\n        [   4,   65],\\n        [ -86,  -21],\\n        [  47,  -91],\\n        [ -74,   72],\\n        [ -42,  -14],\\n        [  -5,   38],\\n        [ -63,  -69],\\n        [   5,  -96],\\n        [  87, -100],\\n        [  77,   25],\\n        [ -29,  -40],\\n        [ -59,  -26],\\n        [   8,  -45],\\n        [ -53,  -79],\\n        [ -82,  -36],\\n        [   7,  -26],\\n        [  79,  -93]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.05954298599681351, "start": 1729906797.8479493, "stop": 1729906797.9074934, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_5.py::test_matrix_of_having_180_integers", "location": ["tests58_80_5.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001619260001461953, "start": 1729906797.9757767, "stop": 1729906797.9759393, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_80_5.py::test_horizontal_matrix", "location": ["tests58_80_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.45644556000479497, "start": 1729906797.853419, "stop": 1729906798.3098657, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_80_5.py::test_horizontal_matrix", "location": ["tests58_80_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016609299927949905, "start": 1729906798.3112326, "stop": 1729906798.3113995, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_80_5.py::test_vertical_matrix", "location": ["tests58_80_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.4780714100052137, "start": 1729906797.859132, "stop": 1729906798.3372047, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_5.py::test_vertical_matrix", "location": ["tests58_80_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_80_5.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014949899923522025, "start": 1729906798.3382928, "stop": 1729906798.3384428, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "f04d89f248a64acdb69db942b7b5ab2c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
