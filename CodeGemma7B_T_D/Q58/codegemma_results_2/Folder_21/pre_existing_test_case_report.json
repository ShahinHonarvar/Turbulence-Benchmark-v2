{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-55,  77, -10,  -6,  37, -29,  21,  84,  63, -79, -24, -62, -16,\\n          59,  40, -77,  24,  40, -93,  39,  -9,   1,  18,  60,  45,  43,\\n         -34,   6, -15, -88,  89, -51, -95,  77,  74,  38,  86, -37, -82,\\n          94, -55, -56,  32,  57,  82,  72, -76, -68, -15,  31,  31,  56,\\n           6, -88,  -3, -34,  20, -86, -52,  46, -65,  49, -98,  37, -64,\\n         -87,  88,  60,  62, -20,  87, -99,  99,  48, -67, -50,  81,  15,\\n         -33,  84, -22,  56, -50, -65,  30, -30, -31,  64, -19, -41, -40,\\n          32,  43,  16,   8, -52,  95,  27, -13,  64,  -9,  60,  -4, -23,\\n         -75, -55, -40, -89,  70,  58,  97,  47,  90,  72, -27,  23, -10,\\n         -32, -69,  32, -79,  12,  26,  57, -14, -27, -27, -12, -64,  50,\\n          28, -26, -70, -47, -82, -92, -21,  16,  65]]))",
    0.00376
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[139]]))",
    0.00064
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00289
  ]
}