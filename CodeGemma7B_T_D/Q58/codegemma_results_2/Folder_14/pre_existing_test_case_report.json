{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00123
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-38,  39],\\n        [ 77, -57],\\n        [ -3,  -7],\\n        [ 19, -63],\\n        [-55,  44],\\n        [ 43, -78],\\n        [-11,  80],\\n        [ 50, -87],\\n        [-36,  65],\\n        [ 56, -39],\\n        [100, -46],\\n        [-45, -40],\\n        [-27,  79],\\n        [-68, -32],\\n        [ -4,  42],\\n        [ 21, -13],\\n        [ 97, -63],\\n        [ 18, -37],\\n        [ -5,  27],\\n        [ 18, -80],\\n        [-93,  32],\\n        [ 15,  83],\\n        [-92,   2],\\n        [-75,  69],\\n        [-33,  71],\\n        [-87,  67],\\n        [-80,  38],\\n        [ 60, -56],\\n        [ 85,  -8],\\n        [ 42,  81],\\n        [ 62, -32],\\n        [-95,  45],\\n        [ -2, -82],\\n        [-34, -83],\\n        [ -7, -35],\\n        [ 35, -84],\\n        [-96, -95],\\n        [  7, -93],\\n        [-52, -97],\\n        [-68,  74],\\n        [-28,  27],\\n        [  7, -79]]))",
    0.00144
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.02184
  ]
}