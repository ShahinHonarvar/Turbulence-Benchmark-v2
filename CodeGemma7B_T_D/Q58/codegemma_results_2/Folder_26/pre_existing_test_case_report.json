{
  "parameter(s)": [
    115
  ],
  "test_matrix_of_having_115_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -84,  45, -47, -98, -26,  81, -41,  10,   3,  -9,  33, -81,\\n          65,  51, -92, -18,  70,  40,  58,  63, -41,  71, -41, -53,  46,\\n         -68,  36,  84,   0, -69, -94, -24, -35, -40,  94,  65,  40,  55,\\n          96, -40, -58, -10,  48,  39, -84,  55,   3,  34,  39,  70,  72,\\n          18,  71,  -7,  35,  22,  73, -99, -74, -95,  71,  19, -69,   4,\\n          43, -78,  36,  82,  99,  97,  38, -79, -24,  15,  13,  18,  82,\\n           0, -50,  95,   4, -34, -38, -68, -51,  87,  86,  25,  90, -52,\\n         -81,  70, -14,  -1,  89, -73, -11, -96,  34,  80,  20, -64, -29,\\n          39, -47, -70,  48,  35, -38,  80,  86,  -1,  64, -28]]))",
    0.00281
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 231",
    0.00309
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[115]]))",
    0.00049
  ]
}