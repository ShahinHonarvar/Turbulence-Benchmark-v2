{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00028
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00388
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  91,   67],\\n        [ -77,  -34],\\n        [  94,  -59],\\n        [ -87,   23],\\n        [ -28,   93],\\n        [ -68,    0],\\n        [  51,  -83],\\n        [  -3,   55],\\n        [ -30,   65],\\n        [ -77,  -86],\\n        [  32,   28],\\n        [ -68,  -84],\\n        [ -50,  -96],\\n        [ -47,  -49],\\n        [ -66,  -99],\\n        [  27,    3],\\n        [  35,   49],\\n        [  69,   10],\\n        [ -56,  -34],\\n        [  60,  -75],\\n        [  60,   61],\\n        [  46,   18],\\n        [  88,  -15],\\n        [-100,  -36],\\n        [  -7,  -37],\\n        [ -17,  -85],\\n        [ -99,  -99],\\n        [  67,  -90],\\n        [ -87,   -5],\\n        [   5,  -83],\\n        [  82,   82],\\n        [  21,   23],\\n        [  53,   72],\\n        [  67,    1],\\n        [ -76,   78],\\n        [  10,   -3],\\n        [  61,  -93],\\n        [ -28,   55],\\n        [ -49,  -37],\\n        [  68,    2]]))",
    0.01561
  ]
}