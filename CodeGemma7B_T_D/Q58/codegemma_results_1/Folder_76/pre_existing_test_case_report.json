{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -86,  -96,   26,   34,  -60,   13,  -87,   67,   81,  -58,\\n           95,  -50,   76,  -69,   47,   83,  -22,   99,  -34,   96,\\n            5,    0,  -48,   76,  -71,  -69,  -88,   94,    0,  -74,\\n           -4,  -67,   77,   -8,    5,  -51,   10,   65,  -71,  -30,\\n          -36,  -25,   67,  -55,    6,   28,   85,  -83,   17,   76,\\n          -45,  -25,   68,  -23,   55,   44,  -43,  -39,   28,   71,\\n          -86,   74,  -70,   83,   68,   -8,  -60,   82,   19,  -26,\\n           76,   88,   58,   36,   36,   30,   97,   16,   12, -100,\\n           21,   95,  -73,   79,  -21,   -4,  -44,  -57,   18,  -55,\\n           90,   28,  -28,  -13,  -23,   -5,  -40,  -15,   77,   31,\\n           20,   98,   46,   43,   51,   47,  -74,   99,   -8,  -69,\\n         -100,  -41,    8,  -87,   15,   29,   88,   23,  -86,  -28,\\n          -41,  -78,   -2,  -91,    2,  -61,   66,   75,  -35,  -31,\\n           -1,   17,   60,    0,   68,   80,   10,   -5,   -6,   61,\\n           46,   79,  -78,   39,  -41,  -77,  -19,   39,   86,  -71,\\n           86,  -98,  -24,   15,  -27,    4,  -20,  -46,   -7]]))",
    0.00501
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00323
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    2.88564
  ]
}