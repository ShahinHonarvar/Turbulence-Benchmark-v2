{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00045
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 90, -10],\\n        [-89, -33],\\n        [ 85,  33],\\n        [-73, -77],\\n        [  5, -84],\\n        [-30,  25],\\n        [-75,  93],\\n        [ 80, -16],\\n        [ 44, -83],\\n        [ 90,  10],\\n        [  8,  42],\\n        [-26, -57],\\n        [-53,  31],\\n        [-42,  79],\\n        [ -8,   1],\\n        [-46,  22],\\n        [ 76, -80],\\n        [-90, -45],\\n        [ -8,  19],\\n        [  3,  -2],\\n        [-35,  65],\\n        [ 98,  83],\\n        [-79, -12],\\n        [ 60,   6],\\n        [-72, -65],\\n        [-93, -92],\\n        [ 35, -98],\\n        [ 71,  65],\\n        [-79,  68],\\n        [  9,  88],\\n        [ 61, -48],\\n        [  1,  16],\\n        [ -5,   8],\\n        [ 25,  85],\\n        [-88,  53],\\n        [-21, -59],\\n        [ 12, -26],\\n        [ 66,   6],\\n        [ 69,  95],\\n        [ 77, -83],\\n        [ 96,  19],\\n        [-41,  53],\\n        [-28,  -4],\\n        [ 96,  39]]))",
    0.0238
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00051
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.02264
  ]
}