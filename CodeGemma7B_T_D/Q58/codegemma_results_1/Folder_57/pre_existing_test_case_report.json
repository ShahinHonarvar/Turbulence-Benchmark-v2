{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00358
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,   17],\\n        [  52,  -92],\\n        [ -21,  -74],\\n        [ -79,   80],\\n        [  48,  -71],\\n        [  75,   -2],\\n        [ -74,   70],\\n        [ -74,  -13],\\n        [  83,    8],\\n        [  52,   93],\\n        [ -79,   45],\\n        [  91,   78],\\n        [ -74,   92],\\n        [ -36,   93],\\n        [  94,  -58],\\n        [-100,   86],\\n        [ -49,  -60],\\n        [ -42, -100],\\n        [ -81,  -15],\\n        [  94,   92],\\n        [ -96,  -44],\\n        [ -62,   41],\\n        [ -20,  -99],\\n        [ -86,  -44],\\n        [ -40,   71],\\n        [  88,  -29],\\n        [ -61,  -68],\\n        [  67,   86],\\n        [ -47,   53],\\n        [ -78,   -6],\\n        [  89,   39],\\n        [ -20,   79],\\n        [  51,   50],\\n        [  -4,  -58],\\n        [ -98,   80],\\n        [ -45,   24],\\n        [ -21,  -65],\\n        [  55,  -89],\\n        [   6,  -21],\\n        [ -76,   78],\\n        [ -18,  -93],\\n        [  71,   60],\\n        [  63,   68],\\n        [ -12,   28],\\n        [  75,   68],\\n        [  83,  -17]]))",
    0.05529
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00216
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.66125
  ]
}