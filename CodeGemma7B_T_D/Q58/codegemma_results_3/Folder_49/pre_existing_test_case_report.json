{
  "parameter(s)": [
    72
  ],
  "test_matrix_of_having_72_integers": [
    "failed",
    "assert 3 == 1\n +  where 3 = submatrix_with_n_numbers(matrix([[-99, -35],\\n        [-45,  -3],\\n        [-19,  -8],\\n        [ -6,   4],\\n        [ -4,  86],\\n        [-62, -26],\\n        [ 99,  76],\\n        [-68, -81],\\n        [ 34,  79],\\n        [ 46, -60],\\n        [ 95,  65],\\n        [-16, -18],\\n        [-46,  87],\\n        [ 16,  80],\\n        [ 73, -11],\\n        [-15,  79],\\n        [-53,  40],\\n        [-26, -68],\\n        [-54, -39],\\n        [ 66,  62],\\n        [ 52,  36],\\n        [-71, -32],\\n        [ 56,  81],\\n        [ 60,  65],\\n        [  3,  95],\\n        [ 37, -27],\\n        [-67,  42],\\n        [ -7,  67],\\n        [ 17, -63],\\n        [ 79,  92],\\n        [ 31,  57],\\n        [-73,  36],\\n        [ 99, -38],\\n        [ 10,  34],\\n        [ 31,   8],\\n        [-60,  64]]))",
    0.05841
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 145",
    0.20325
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[72]]))",
    0.00513
  ]
}