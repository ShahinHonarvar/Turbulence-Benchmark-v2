{
  "parameter(s)": [
    60
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[60]]))",
    0.0033
  ],
  "test_matrix_of_having_60_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -95,  -45],\\n        [  44,   31],\\n        [ -18,  -33],\\n        [   8,  -37],\\n        [ -94,  -17],\\n        [ -66,   95],\\n        [-100,    2],\\n        [ -91,  -54],\\n        [ -73,  -58],\\n        [  56,   80],\\n        [  85,  -36],\\n        [ -96,  -39],\\n        [  66,  -15],\\n        [ -40,   57],\\n        [  20,   74],\\n        [  98,  -68],\\n        [-100,   30],\\n        [ -67,  -16],\\n        [  77,   89],\\n        [ -24,  -38],\\n        [ -72,  -84],\\n        [  30,  -56],\\n        [ -35,   26],\\n        [ -43,   -7],\\n        [  88,   11],\\n        [  40,  -46],\\n        [ -50,   -1],\\n        [  -1,   62],\\n        [  41,  -46],\\n        [  51,  -53]]))",
    0.01983
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 121",
    0.00086
  ]
}