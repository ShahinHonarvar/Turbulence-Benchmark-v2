{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-82,   3],\\n        [-32, -60],\\n        [-36, -45],\\n        [ 68,  87],\\n        [ 96, -95],\\n        [-90, -66],\\n        [-99,  40],\\n        [ 64,  42],\\n        [ 28,  27],\\n        [-23,  99],\\n        [ 94,  50],\\n        [-56,  34],\\n        [-23,  31],\\n        [ 81,  51],\\n        [-65, -10],\\n        [  3, -62],\\n        [-34, -58],\\n        [-58, -54],\\n        [ 40, -22],\\n        [-94,  20],\\n        [-11,  76],\\n        [ 99,  98],\\n        [-23,  51],\\n        [-76, -70],\\n        [-12, -28],\\n        [ 62,   3],\\n        [ 49,  64],\\n        [ -3,  81],\\n        [-68,  87],\\n        [ 22,  -3],\\n        [  5,  67],\\n        [-14, -67],\\n        [-28,  56],\\n        [-84, -77],\\n        [ 72, -83],\\n        [  0,  47],\\n        [ 96,  68],\\n        [ 59,  37],\\n        [-37,  -9],\\n        [-77, -93],\\n        [ 95, -38],\\n        [ 39,   7],\\n        [-73,  77],\\n        [-10,  44]]))",
    0.0261
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00049
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[88]]))",
    0.00055
  ]
}