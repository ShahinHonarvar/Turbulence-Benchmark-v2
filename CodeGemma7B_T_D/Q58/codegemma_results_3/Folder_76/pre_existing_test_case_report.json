{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00128
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 90, -39, -81,  37,  41,  28,  68, -61,  95, -85, -48, -24, -57,\\n          48,  -2, -92,  78,  11, -98, -35, -64,  27,  29,  38,  92, -76,\\n          22,  88, -90,  67, -16, -92, -18,  88,  34,   8, -59, -65, -95,\\n          35,   6, -95, -62, -49,  41, -99, -16, -27,  52,  16,  76, -70,\\n         -42,  50,  47, -48, -11, -37,  83, -21, -31, -12, -85,  33, -29,\\n         -85,  16, -78, -14, -10, -23, -36,  51,  99, -38,  91, -62, -38,\\n          17, -23, -19,  59,  40, -84,  51,  39, 100,  81,  79,  26, -82,\\n         -19,  25,  20,   2, -46,  16,  31,  78,  16, -73,  88,  11,  76,\\n         -28,  12,  43, -30, -52, -69, -77, -77, -90,  46, -83,  61, -28,\\n          57, -22, -18,  -1,  14,  49, -83, -91,  -9,  -2,  29, -96, -13,\\n          66, -78,  62, -72,  80,  82, -93,  80,  78, -78,  94,  37,  89,\\n          47, -61,  34, -57,  56,  37,  18, -59,   7, -72,  83, -62, -24,\\n          14, -24, -53]]))",
    0.00095
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.01134
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00054
  ]
}