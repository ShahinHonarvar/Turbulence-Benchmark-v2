{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 32 == 1\n +  where 32 = submatrix_with_n_numbers(matrix([[  40,  -44,   72,  -31,  -50,  -61,   78,   -5,   12,   11,\\n           21,  -85,  -54,  -82,  -71,   49,  -41,    5,   -1,   47,\\n           40,   21,   36,   72,   58,   80,   89,   60,  -87,    0,\\n           -3,   34,   65,  -58,  -35,  -14,   54,  -80,  -26,    4,\\n          -74,   54,   -6,   82,  -88,  -73,   -7,  -44,   21,  -25,\\n           65,  -21,   52,  -79,   25,  -20,   90,  -50,   37,    7,\\n          -85,   29,  -14,  -62,   72,  -60,  -38,   21,  -89,   42,\\n          -74,  -95,    8,   75,   91,  -97,   95,   45,   71,  -73,\\n          -42,   11,   66,   87,  -21,  -60,   -1,   35,   92,   41,\\n          -94,  -68,  -38,  -87,   21,  -27,   25,   54,   78,  -60,\\n          -48,   52,  -38,  -20,   98,  -28,   99,  -17,  -47,    5,\\n           80,  -33,   68,   46,  -21,   26,  -63,   82,   57,  -58,\\n            1,  -88,   45,   15,   88,   90,  -90,  -33,  -29,  -39,\\n           -4,   -6,   -1,  -82,  -54,   81,   20,  -70,  -92,   95,\\n          -70,  -83,   29,   99,   70,   92,   85,  -41,   -5,  -48,\\n          -31,  -17,   48,   45,  100,   29,  -11,  -65,   25,  -50,\\n            8,  -88,   88, -100,  -94,  -21,   85,  -61,   63,  -80,\\n          -37,  -84,   36,   15,   75,   37,  -65,  -75,   93]]))",
    0.26963
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[179]]))",
    0.00046
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 359",
    1.27553
  ]
}