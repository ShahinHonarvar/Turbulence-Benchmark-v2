{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00406
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  46,   72],\\n        [  49,   37],\\n        [  24,  -54],\\n        [ -32,   92],\\n        [  86,  -63],\\n        [  -2,  -92],\\n        [ -10,    3],\\n        [  64,  -66],\\n        [  85,   40],\\n        [ -34,  -85],\\n        [ -81,  -19],\\n        [  43,   22],\\n        [  83,  -56],\\n        [ -71,   31],\\n        [ -15,   44],\\n        [  44,   52],\\n        [  62,   64],\\n        [ -58,   71],\\n        [   3,  -58],\\n        [  55,  -55],\\n        [ -51,  -38],\\n        [  46,   42],\\n        [ -19,  -14],\\n        [  57,   36],\\n        [  23,  -32],\\n        [ -20,   17],\\n        [  32,   16],\\n        [ -24,  -17],\\n        [ -83,  -48],\\n        [  51,  -97],\\n        [ -37,   63],\\n        [  13,    9],\\n        [  36,   12],\\n        [ -12,  -96],\\n        [  51,  -21],\\n        [-100,   58],\\n        [ -55,  -33],\\n        [  72,  -30],\\n        [  22,  -88],\\n        [ -95,   10]]))",
    0.01281
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00192
  ]
}