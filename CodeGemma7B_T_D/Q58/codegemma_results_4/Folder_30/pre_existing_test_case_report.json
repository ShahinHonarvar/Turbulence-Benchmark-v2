{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00469
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-64, -43],\\n        [-78,  24],\\n        [ 45, -99],\\n        [ 20, -44],\\n        [  3,  43],\\n        [ 83,  29],\\n        [-39,  76],\\n        [-27,  67],\\n        [-68,  99],\\n        [ 30, -73],\\n        [-51,  17],\\n        [ 37, -67],\\n        [ 62,  82],\\n        [-55,  46],\\n        [ 67,  -4],\\n        [100, -58],\\n        [ 65,  43],\\n        [ 77,  74],\\n        [ 71, -91],\\n        [-76,  14],\\n        [ 79, -92],\\n        [-58, -42],\\n        [-57,  60],\\n        [ 48, -68],\\n        [ 23,  21],\\n        [-19,  -1],\\n        [ -3, -61],\\n        [ -6,  -2],\\n        [ 22,  75],\\n        [-40, -74],\\n        [ 63, -67],\\n        [-50,  59],\\n        [ 64, -40],\\n        [-56, -76],\\n        [-71,  48],\\n        [-75,  85],\\n        [-77,   9],\\n        [100,  -3],\\n        [ 66, -14],\\n        [ 17,   4],\\n        [ -9, -39],\\n        [ 48, -23],\\n        [-92,  33],\\n        [ 63,  35],\\n        [-88,  63],\\n        [-28,   2],\\n        [-62,   4]]))",
    0.00144
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00431
  ]
}