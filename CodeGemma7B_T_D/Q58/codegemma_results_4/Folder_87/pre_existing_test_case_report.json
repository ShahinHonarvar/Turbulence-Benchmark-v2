{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00274
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-54, -77],\\n        [ 87, -54],\\n        [ 81,  48],\\n        [-36,  17],\\n        [ 16,  94],\\n        [ 85,  81],\\n        [ 82, -44],\\n        [  3,   8],\\n        [ 52, -25],\\n        [ 15,  89],\\n        [-34,  21],\\n        [ 95,   2],\\n        [ 59,  96],\\n        [ 49, -12],\\n        [-18, -66],\\n        [ 59,  34],\\n        [-52,  64],\\n        [-23,  35],\\n        [ 30,  87],\\n        [-28, -29],\\n        [-30,  88],\\n        [-36,  25],\\n        [-19, -54],\\n        [ 29, -76],\\n        [ 88,  90],\\n        [ 32,  48],\\n        [ -1,  22],\\n        [ 73,  22],\\n        [-38,  66],\\n        [-24,  -3],\\n        [ 14, -64],\\n        [ 99, -28],\\n        [-59,  20],\\n        [-74, -46],\\n        [ 77,  90],\\n        [-27, -76],\\n        [ 37, -80],\\n        [  9,   2],\\n        [ 15,  56],\\n        [ 44,  31],\\n        [ 45, -44],\\n        [-72, -35],\\n        [ 46, -89],\\n        [ -5, -86],\\n        [-81,  91],\\n        [  3,  65],\\n        [ 86,  91],\\n        [-49, -92]]))",
    0.0143
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.11252
  ]
}