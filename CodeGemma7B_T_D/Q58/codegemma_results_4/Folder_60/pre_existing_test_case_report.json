{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00047
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -20,    1],\\n        [ -77,  -43],\\n        [ -62,  -49],\\n        [ -62,   93],\\n        [  71,  -29],\\n        [ -21,   14],\\n        [ -93,  -42],\\n        [   3,  -66],\\n        [  36,  -55],\\n        [  62,   30],\\n        [  56,  -49],\\n        [  82, -100],\\n        [   2,   11],\\n        [  54,   20],\\n        [   7,   33],\\n        [  81,  -95],\\n        [ -57,   -3],\\n        [ -30,    5],\\n        [ -89,  -21],\\n        [ -62,   81],\\n        [ -60,   61],\\n        [  14,   45],\\n        [ -57,   99],\\n        [  52,   62],\\n        [   5,  -69],\\n        [ -19,   68],\\n        [ -42,  -63],\\n        [ -33,   45],\\n        [  60,    3],\\n        [  -4,  -56],\\n        [  16,  -87],\\n        [ -83,   14],\\n        [  17,   34],\\n        [ -89,   23],\\n        [  30,   26],\\n        [ -62,  -25],\\n        [  -1,   63],\\n        [ -32,  -13],\\n        [ -74,   48],\\n        [  58,    1],\\n        [  55,  -56],\\n        [ -28,   74],\\n        [  46,   38],\\n        [  89,   84]]))",
    0.01869
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.39494
  ]
}