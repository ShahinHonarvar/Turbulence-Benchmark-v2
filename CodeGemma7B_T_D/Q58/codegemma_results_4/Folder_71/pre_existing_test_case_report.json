{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -41],\\n        [-97,   9],\\n        [-29,  41],\\n        [-54,  58],\\n        [-85, -45],\\n        [-45, -73],\\n        [-23,  95],\\n        [ 88,  33],\\n        [-98, -65],\\n        [ 39, -85],\\n        [  4,  77],\\n        [ 73, -75],\\n        [-89, -41],\\n        [ 60,  30],\\n        [ -4,  33],\\n        [-66, -22],\\n        [  3, -64],\\n        [-69, -58],\\n        [  8, -55],\\n        [ 54, -26],\\n        [ 62,  67],\\n        [-75, -35],\\n        [ 17, -64],\\n        [ 45,  37],\\n        [-78, -10],\\n        [-66,  -6],\\n        [ -9,  45],\\n        [-59, -78],\\n        [-27, -40],\\n        [ 90,  36],\\n        [ 73,  65],\\n        [ 44, -50],\\n        [ 15,  85],\\n        [-13, -46],\\n        [-79,  83],\\n        [ 14,  62],\\n        [ 91,  59],\\n        [-34,  69],\\n        [ 16, -49]]))",
    0.00853
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00238
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.06162
  ]
}