{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00148
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.54724
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -55,   73],\\n        [-100,  -25],\\n        [ -55,  -96],\\n        [  40,    9],\\n        [  97,   47],\\n        [ -24,   95],\\n        [ -90,  -26],\\n        [  30,   98],\\n        [  25,  -47],\\n        [  59,  -94],\\n        [  64,  -77],\\n        [   7,   49],\\n        [ -29,   75],\\n        [  50,   81],\\n        [  50,   69],\\n        [  17,  -94],\\n        [ -78,  -38],\\n        [  41,   26],\\n        [ -40,   28],\\n        [  -2,   88],\\n        [  94,   66],\\n        [  63,  -77],\\n        [  81,   11],\\n        [  94,  -89],\\n        [  -2,   29],\\n        [  13,   93],\\n        [ -29,  -43],\\n        [  64,  -43],\\n        [  69,  -34],\\n        [ -39,   13],\\n        [  44,   62],\\n        [  67,   68],\\n        [  83,   50],\\n        [ -47,   81],\\n        [ -42,  -91],\\n        [ -17,  -81],\\n        [ -17,   45],\\n        [  60,  -78],\\n        [  39,   67],\\n        [  83,   94],\\n        [  38,   52],\\n        [  96,   31],\\n        [  53,  -27],\\n        [  33,   99],\\n        [ -38,  -25],\\n        [ -64,  -46]]))",
    0.08108
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00055
  ]
}