{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests39_80_1.py::test_if_result_is_sorted", "location": ["tests39_80_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010968599235638976, "start": 1729803534.5024, "stop": 1729803534.50251, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_80_1.py::test_strings_of_size_equal_to_35", "location": ["tests39_80_1.py", 5, "test_strings_of_size_equal_to_35"], "keywords": {"test_strings_of_size_equal_to_35": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001308100181631744, "start": 1729803534.502481, "stop": 1729803534.502612, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_80_1.py::test_length_of_result", "location": ["tests39_80_1.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025689200265333056, "start": 1729803534.5032306, "stop": 1729803534.5034883, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw2>"}
{"nodeid": "tests39_80_1.py::test_length_of_result", "location": ["tests39_80_1.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003035260015167296, "start": 1729803534.5038905, "stop": 1729803534.5041943, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw2>"}
{"nodeid": "tests39_80_1.py::test_length_of_result", "location": ["tests39_80_1.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019760499708354473, "start": 1729803534.5049136, "stop": 1729803534.5051115, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw2>"}
{"nodeid": "tests39_80_1.py::test_strings_of_size_equal_to_35", "location": ["tests39_80_1.py", 5, "test_strings_of_size_equal_to_35"], "keywords": {"test_strings_of_size_equal_to_35": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 10, "message": "AssertionError: assert ['z', 'y', 'x...'r', 'q', ...] == ['#', '$', '(...'0', '1', ...]\n  At index 0 diff: 'z' != '#'\n  Full diff:\n    [\n  +  'z',\n  +  'y',\n  +  'x',\n  +  'w',...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_35():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['z', 'y', 'x...'r', 'q', ...] == ['#', '$', '(...'0', '1', ...]", "E             At index 0 diff: 'z' != '#'", "E             Full diff:", "E               [", "E             +  'z',", "E             +  'y',", "E             +  'x',", "E             +  'w',...", "E             ", "E             ...Full output truncated (66 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_35():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert ['z', 'y', 'x...'r', 'q', ...] == ['#', '$', '(...'0', '1', ...]", "E             At index 0 diff: 'z' != '#'", "E             Full diff:", "E               [", "E             +  'z',", "E             +  'y',", "E             +  'x',", "E             +  'w',...", "E             ", "E             ...Full output truncated (66 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 10, "message": "AssertionError: assert ['z', 'y', 'x...'r', 'q', ...] == ['#', '$', '(...'0', '1', ...]\n  At index 0 diff: 'z' != '#'\n  Full diff:\n    [\n  +  'z',\n  +  'y',\n  +  'x',\n  +  'w',...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005118409753777087, "start": 1729803534.5028, "stop": 1729803534.503312, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_80_1.py::test_if_result_is_sorted", "location": ["tests39_80_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 26, "message": "AssertionError: assert ['~', '|', 'w...'p', 'o', ...] == ['#', '$', ')...'-', '.', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n    [\n  +  '~',\n  +  '|',\n  +  'w',\n  +  't',...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', '|', 'w...'p', 'o', ...] == ['#', '$', ')...'-', '.', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E               [", "E             +  '~',", "E             +  '|',", "E             +  'w',", "E             +  't',...", "E             ", "E             ...Full output truncated (66 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=35 + 1))", "        result = return_n_greatest_chars(s)", "        if 'ascending' == 'ascending':", ">           assert result == sorted(result)", "E           AssertionError: assert ['~', '|', 'w...'p', 'o', ...] == ['#', '$', ')...'-', '.', ...]", "E             At index 0 diff: '~' != '#'", "E             Full diff:", "E               [", "E             +  '~',", "E             +  '|',", "E             +  'w',", "E             +  't',...", "E             ", "E             ...Full output truncated (66 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 26, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q39/codegemma_results_1/Folder_80/tests39_80_1.py", "lineno": 26, "message": "AssertionError: assert ['~', '|', 'w...'p', 'o', ...] == ['#', '$', ')...'-', '.', ...]\n  At index 0 diff: '~' != '#'\n  Full diff:\n    [\n  +  '~',\n  +  '|',\n  +  'w',\n  +  't',...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005153639940544963, "start": 1729803534.5026827, "stop": 1729803534.5031981, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_80_1.py::test_if_result_is_sorted", "location": ["tests39_80_1.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010512600420042872, "start": 1729803534.512116, "stop": 1729803534.5122218, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw1>"}
{"nodeid": "tests39_80_1.py::test_strings_of_size_equal_to_35", "location": ["tests39_80_1.py", 5, "test_strings_of_size_equal_to_35"], "keywords": {"test_strings_of_size_equal_to_35": 1, "tests39_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011650499072857201, "start": 1729803534.5120687, "stop": 1729803534.512186, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e72c5302205a48298ca16659cec81486", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
