{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_70_4.py::test_string_of_length_one", "location": ["tests32_70_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012709799921140075, "start": 1729729770.5381722, "stop": 1729729770.5382996, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_compare_length_of_strings", "location": ["tests32_70_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001338179863523692, "start": 1729729770.5381796, "stop": 1729729770.5383136, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_string_of_length_one", "location": ["tests32_70_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.809000766836107e-05, "start": 1729729770.5384963, "stop": 1729729770.5385947, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_string_of_length_one", "location": ["tests32_70_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.005098111927509e-05, "start": 1729729770.5388236, "stop": 1729729770.5388842, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_compare_length_of_strings", "location": ["tests32_70_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014883800758980215, "start": 1729729770.5385435, "stop": 1729729770.5386922, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_compare_length_of_strings", "location": ["tests32_70_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.063000859692693e-05, "start": 1729729770.5390189, "stop": 1729729770.5391, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_70_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001896150060929358, "start": 1729729770.5384243, "stop": 1729729770.5386145, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_70_4.py::test_large_string_of_only_specified_character", "location": ["tests32_70_4.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010962900705635548, "start": 1729729770.5406668, "stop": 1729729770.540777, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_length_of_result", "location": ["tests32_70_4.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011534799705259502, "start": 1729729770.5411983, "stop": 1729729770.5413141, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_length_of_result", "location": ["tests32_70_4.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012535898713395, "start": 1729729770.5414464, "stop": 1729729770.541572, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_length_of_result", "location": ["tests32_70_4.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.601501420140266e-05, "start": 1729729770.5418544, "stop": 1729729770.5419307, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_all_indices_of_char_destination_in_result", "location": ["tests32_70_4.py", 55, "test_all_indices_of_char_destination_in_result"], "keywords": {"test_all_indices_of_char_destination_in_result": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.330299169756472e-05, "start": 1729729770.5427492, "stop": 1729729770.5428329, "$report_type": "TestReport", "item_index": 7, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_large_string_of_only_specified_character", "location": ["tests32_70_4.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 13, "message": "AssertionError: assert 'PVPVPVPVPVPV...PPPPPPPPPPPPP' == 'PVPVPVPVPVPV...VPVPVPVPVPVPV'\nn  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = 'P' * 1000", ">       assert insert_after_character(s) == ('P' + 'V') * 1000", "E       AssertionError: assert 'PVPVPVPVPVPV...PPPPPPPPPPPPP' == 'PVPVPVPVPVPV...VPVPVPVPVPVPV'", "E         - PVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPV...", "E         ", "E         ...Full output truncated (2 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = 'P' * 1000", ">       assert insert_after_character(s) == ('P' + 'V') * 1000", "E       AssertionError: assert 'PVPVPVPVPVPV...PPPPPPPPPPPPP' == 'PVPVPVPVPVPV...VPVPVPVPVPVPV'", "E         - PVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPVPV...", "E         ", "E         ...Full output truncated (2 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 13, "message": "AssertionError: assert 'PVPVPVPVPVPV...PPPPPPPPPPPPP' == 'PVPVPVPVPVPV...VPVPVPVPVPVPV'\nn  \n  ...Full output truncated (2 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012161780032329261, "start": 1729729770.5409014, "stop": 1729729770.542118, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_large_string_of_only_specified_character", "location": ["tests32_70_4.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011242099571973085, "start": 1729729770.5538256, "stop": 1729729770.5539384, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_70_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 18, "message": "AssertionError: assert 1500 == (2 * 1000)\n +  where 1500 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'P' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1500 == (2 * 1000)", "E        +  where 1500 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'P' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1500 == (2 * 1000)", "E        +  where 1500 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 18, "message": "AssertionError: assert 1500 == (2 * 1000)\n +  where 1500 = lenn +    whereinsert_after_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005885789869353175, "start": 1729729770.5388992, "stop": 1729729770.5394883, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_70_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_70_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001294410030823201, "start": 1729729770.5543716, "stop": 1729729770.5545015, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_70_4.py::test_all_indices_of_char_destination_in_result", "location": ["tests32_70_4.py", 55, "test_all_indices_of_char_destination_in_result"], "keywords": {"test_all_indices_of_char_destination_in_result": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 64, "message": "assert 15 == 14\n +  where 14 = len([31, 45, 180, 321, 374, 495, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_all_indices_of_char_destination_in_result():", "        s = ''.join(random.choices(string.ascii_letters + string.digits + ' ' * 10, k=1000))", "        s = s + 'P'", "        s = s.replace('V', '')", "        returned_string = insert_after_character(s)", "        indices_in_s = [i[0] for i in enumerate(s) if i[1] == 'P']", "        indices_in_returned_string = [i[0] for i in enumerate(returned_string) if i[1] == 'V']", "        length = len(indices_in_s)", ">       assert length == len(indices_in_returned_string)", "E       assert 15 == 14", "E        +  where 14 = len([31, 45, 180, 321, 374, 495, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 64, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_all_indices_of_char_destination_in_result():", "        s = ''.join(random.choices(string.ascii_letters + string.digits + ' ' * 10, k=1000))", "        s = s + 'P'", "        s = s.replace('V', '')", "        returned_string = insert_after_character(s)", "        indices_in_s = [i[0] for i in enumerate(s) if i[1] == 'P']", "        indices_in_returned_string = [i[0] for i in enumerate(returned_string) if i[1] == 'V']", "        length = len(indices_in_s)", ">       assert length == len(indices_in_returned_string)", "E       assert 15 == 14", "E        +  where 14 = len([31, 45, 180, 321, 374, 495, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 64, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_4/Folder_70/tests32_70_4.py", "lineno": 64, "message": "assert 15 == 14\n +  where 14 = len([31, 45, 180, 321, 374, 495, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004731290100608021, "start": 1729729770.5429368, "stop": 1729729770.54341, "extras": [], "$report_type": "TestReport", "item_index": 7, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_70_4.py::test_all_indices_of_char_destination_in_result", "location": ["tests32_70_4.py", 55, "test_all_indices_of_char_destination_in_result"], "keywords": {"test_all_indices_of_char_destination_in_result": 1, "tests32_70_4.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013846898218616843, "start": 1729729770.5592127, "stop": 1729729770.559355, "$report_type": "TestReport", "item_index": 7, "worker_id": "gw2", "testrun_uid": "4a8106fb004545d2b0aedacc57303541", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
