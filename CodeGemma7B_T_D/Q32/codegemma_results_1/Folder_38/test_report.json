{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_38_1.py::test_compare_length_of_strings", "location": ["tests32_38_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.919499279931188e-05, "start": 1729727839.01219, "stop": 1729727839.0122898, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_38_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001355449785478413, "start": 1729727839.0122638, "stop": 1729727839.0123997, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_38_1.py::test_string_of_length_one", "location": ["tests32_38_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016696701641194522, "start": 1729727839.0123394, "stop": 1729727839.0125074, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_38_1.py::test_compare_length_of_strings", "location": ["tests32_38_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011387400445528328, "start": 1729727839.0124722, "stop": 1729727839.0125864, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_1.py::test_compare_length_of_strings", "location": ["tests32_38_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.528099766001105e-05, "start": 1729727839.0128253, "stop": 1729727839.012891, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_1.py::test_length_of_result", "location": ["tests32_38_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010240098345093429, "start": 1729727839.014136, "stop": 1729727839.0142388, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_38_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'X' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = len('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'X' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_character('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')", "E        +  and   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len('XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028820501756854355, "start": 1729727839.0126057, "stop": 1729727839.0128944, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_38_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_38_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012132598203606904, "start": 1729727839.0224426, "stop": 1729727839.0225646, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_38_1.py::test_string_of_length_one", "location": ["tests32_38_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 8, "message": "AssertionError: assert '6' == 'X6'\n  - X6\n  + 6"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'X'", ">       assert insert_after_character(s) == 'X' + '6'", "E       AssertionError: assert '6' == 'X6'", "E         - X6", "E         + 6"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'X'", ">       assert insert_after_character(s) == 'X' + '6'", "E       AssertionError: assert '6' == 'X6'", "E         - X6", "E         + 6"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 8, "message": "AssertionError: assert '6' == 'X6'\n  - X6\n  + 6"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024096199194900692, "start": 1729727839.0127022, "stop": 1729727839.0129435, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_38_1.py::test_string_of_length_one", "location": ["tests32_38_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012232200242578983, "start": 1729727839.022427, "stop": 1729727839.0225503, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_38_1.py::test_length_of_result", "location": ["tests32_38_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 40, "message": "AssertionError: assert 41 == (21 + 1)\n +  where 41 = len('t9qeRYxhy3w1NAkCEfQOt9qeRYxhy3w1NAkCEfQO6')\n +  and   21 = len('t9qeRYxhy3w1NAkCEfQOX')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + 'X'", "        returned_string = insert_after_character(s)", "        count = s.count('X')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 41 == (21 + 1)", "E        +  where 41 = len('t9qeRYxhy3w1NAkCEfQOt9qeRYxhy3w1NAkCEfQO6')", "E        +  and   21 = len('t9qeRYxhy3w1NAkCEfQOX')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + 'X'", "        returned_string = insert_after_character(s)", "        count = s.count('X')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 41 == (21 + 1)", "E        +  where 41 = len('t9qeRYxhy3w1NAkCEfQOt9qeRYxhy3w1NAkCEfQO6')", "E        +  and   21 = len('t9qeRYxhy3w1NAkCEfQOX')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q32/codegemma_results_1/Folder_38/tests32_38_1.py", "lineno": 40, "message": "AssertionError: assert 41 == (21 + 1)\n +  where 41 = len('t9qeRYxhy3w1NAkCEfQOt9qeRYxhy3w1NAkCEfQO6')\n +  and   21 = len('t9qeRYxhy3w1NAkCEfQOX')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00025837201974354684, "start": 1729727839.0143578, "stop": 1729727839.0146165, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_38_1.py::test_length_of_result", "location": ["tests32_38_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests32_38_1.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011051399633288383, "start": 1729727839.027674, "stop": 1729727839.027785, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "c1a6dafba1bf47b99148e0dbf8d4479a", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
