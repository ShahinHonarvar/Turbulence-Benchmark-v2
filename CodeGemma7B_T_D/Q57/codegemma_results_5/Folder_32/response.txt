predictions {
  string_value: "Prompt:\nSystem: You are an expert in Python programming. You are given a text specification surrounded by angle brackets. Create Python code according to the text specification. The Python code should not contain any comments. The Python code should be delimited only by triple backticks.\n        User: <Write a function called \'submatrix_with_particular_sum\' that takes one argument which is a two-dimensional numpy matrix of integers. The function should return the list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals 901. If no such submatrix is found, the function should return an empty list.>\nOutput:\nSystem: ```python\n        from itertools import combinations\n        import numpy as np\n\n        def submatrix_with_particular_sum(matrix):\n            res = []\n            s = sum(matrix.flatten())\n            combinations_of_two_values = combinations(range(len(matrix)), 2)\n            combinations_of_three_values = combinations(range(len(matrix)), 3)\n            for row_start, row_finish in combinations_of_two_values:\n                for col_start, col_finish in combinations_of_two_values:\n                    a = matrix[row_start:row_finish, col_start:col_finish]\n                    if a.sum() == s - 901:\n                        res.append((row_start, row_finish, col_start, col_finish))\n            for col in combinations_of_three_values:\n                for row in combinations_of_three_values:\n                    a = matrix[min(row):max(row)+1, min(col):max(col)+1]\n                    if a.sum() == s - 901:\n                        res.append((min(row), max(row), min(col), max(col)))\n            return res\n\n        ```"
}
deployed_model_id: "1558232276930658304"
model: "projects/901665225437/locations/us-east1/models/google_codegemma-7b-it-1725717676032"
model_version_id: "1"
model_display_name: "google_codegemma-7b-it-1725717676032"
