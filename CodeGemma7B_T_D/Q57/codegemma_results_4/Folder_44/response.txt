predictions {
  string_value: "Prompt:\nSystem: You are an expert in Python programming. You are given a text specification surrounded by angle brackets. Create Python code according to the text specification. The Python code should not contain any comments. The Python code should be delimited only by triple backticks.\n        User: <Write a function called \'submatrix_with_particular_sum\' that takes one argument which is a two-dimensional numpy matrix of integers. The function should return the list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals 830. If no such submatrix is found, the function should return an empty list.>\nOutput:\nSystem: ```python\n        import numpy as np\n\n        def submatrix_with_particular_sum(matrix):\n            \"\"\"\n            Returns a list of all submatrices of a given matrix with a sum of 830.\n\n            Args:\n                matrix: A 2D numpy matrix of integers.\n\n            Returns:\n                A list of submatrices with a sum of 830, or an empty list if no such submatrices are found.\n            \"\"\"\n\n            def get_submatrices(matrix, i, j):\n                \"\"\"\n                Returns a list of all submatrices of a given matrix starting at row i and column j.\n\n                Args:\n                    matrix: A 2D numpy matrix of integers.\n                    i: The row where the submatrix starts.\n                    j: The column where the submatrix starts.\n\n                Returns:\n                    A list of submatrices.\n                \"\"\"\n\n                submatrices = []\n                for k in range(i, len(matrix)):\n                    for l in range(j, len(matrix[0])):\n                        submatrix = matrix[i:k+1, j:l+1]\n                        submatrices.append(submatrix)\n                return submatrices\n\n            def get_submatrix_sum(submatrix):\n                \"\"\"\n                Returns the sum of all integers in a given submatrix.\n\n                Args:\n                    submatrix: A 2D numpy matrix of integers.\n\n                Returns:\n                    The sum of all integers in the submatrix.\n                \"\"\"\n\n                return np.sum(submatrix)\n\n            submatrices = []\n            for i in range(len(matrix)):\n                for j in range(len(matrix[0])):\n                    submatrices.extend(get_submatrices(matrix, i, j))\n\n            for submatrix in submatrices:\n                if get_submatrix_sum(submatrix) == 830:\n                    return [submatrix]\n\n            return []\n        ```"
}
deployed_model_id: "1558232276930658304"
model: "projects/901665225437/locations/us-east1/models/google_codegemma-7b-it-1725717676032"
model_version_id: "1"
model_display_name: "google_codegemma-7b-it-1725717676032"
