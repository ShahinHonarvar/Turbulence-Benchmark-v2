predictions {
  string_value: "Prompt:\nSystem: You are an expert in Python programming. You are given a text specification surrounded by angle brackets. Create Python code according to the text specification. The Python code should not contain any comments. The Python code should be delimited only by triple backticks.\n        User: <Write a function called \'submatrix_with_particular_sum\' that takes one argument which is a two-dimensional numpy matrix of integers. The function should return the list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals 8. If no such submatrix is found, the function should return an empty list.>\nOutput:\nSystem: Tripple backticks delimiter for start and end.\n```python\ndef submatrix_with_particular_sum(matrix):\n  from numpy import ones\n  submatrix_list = []\n  size_matrix_hor = len(matrix)\n  size_matrix_ver = len(matrix[0])\n  for i in range(size_matrix_hor):\n    for j in range(size_matrix_ver):\n    # Horizontal submatrices\n      submatrix_list.append(matrix[i:i+1, j:j+1])\n      for k in range(i+2,size_matrix_hor):\n      # Vertical submatrices\n        submatrix_list.append(matrix[i:i+1, j:j+k+2-i])\n      for l in range(j+2,size_matrix_ver):\n      # Diagonals submatrices\n        submatrix_list.append(matrix[i:i+l+2-j, j:k+2-j])\n      for l in range(j-2,size_matrix_ver-k):\n        submatrix_list.append(matrix[i:i+k+2-i, j:j+l+2-k])\n\n  for submatrix in submatrix_list:\n    if submatrix.sum() == 8:\n      return submatrix\n\n  return []\n```"
}
deployed_model_id: "1558232276930658304"
model: "projects/901665225437/locations/us-east1/models/google_codegemma-7b-it-1725717676032"
model_version_id: "1"
model_display_name: "google_codegemma-7b-it-1725717676032"
