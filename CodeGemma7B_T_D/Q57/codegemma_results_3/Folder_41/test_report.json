{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests57_41_3.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_41_3.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000677187999826856, "start": 1729903924.1928308, "stop": 1729903924.1935086, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_several_numbers", "location": ["tests57_41_3.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016923100338317454, "start": 1729903924.1928122, "stop": 1729903924.192982, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_41_3.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015929399523884058, "start": 1729903924.200593, "stop": 1729903924.200753, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_41_3.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError: not enough values to unpack (expected 4, got 1)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_equal_to_sum():", "        input_matrix = np.matrix([[-26]])", ">       assert submatrix_with_particular_sum(input_matrix) == [[[-26]]]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/tests57_41_3.py", "lineno": 21, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_particular_sum(matrix):", "        prefix_sums = np.zeros((matrix.shape[0] + 1, matrix.shape[1] + 1))", "        for row in range(matrix.shape[0]):", "            for col in range(matrix.shape[1]):", "                prefix_sums[row + 1, col + 1] = prefix_sums[row, col + 1] + prefix_sums[row + 1, col] - prefix_sums[row, col] + matrix[row, col]", "        res = []", ">       for top_row, bot_row, left_col, right_col in product(*zip(range(matrix.shape[0]), range(matrix.shape[0]), range(matrix.shape[1]), range(matrix.shape[1]))):", "E       ValueError: not enough values to unpack (expected 4, got 1)"], "reprfuncargs": {"args": [["matrix", "matrix([[-26]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_equal_to_sum():", "        input_matrix = np.matrix([[-26]])", ">       assert submatrix_with_particular_sum(input_matrix) == [[[-26]]]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/tests57_41_3.py", "lineno": 21, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_particular_sum(matrix):", "        prefix_sums = np.zeros((matrix.shape[0] + 1, matrix.shape[1] + 1))", "        for row in range(matrix.shape[0]):", "            for col in range(matrix.shape[1]):", "                prefix_sums[row + 1, col + 1] = prefix_sums[row, col + 1] + prefix_sums[row + 1, col] - prefix_sums[row, col] + matrix[row, col]", "        res = []", ">       for top_row, bot_row, left_col, right_col in product(*zip(range(matrix.shape[0]), range(matrix.shape[0]), range(matrix.shape[1]), range(matrix.shape[1]))):", "E       ValueError: not enough values to unpack (expected 4, got 1)"], "reprfuncargs": {"args": [["matrix", "matrix([[-26]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError: not enough values to unpack (expected 4, got 1)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002551359939388931, "start": 1729903924.1938243, "stop": 1729903924.19408, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_41_3.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001551340101286769, "start": 1729903924.2354586, "stop": 1729903924.2356145, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_several_numbers", "location": ["tests57_41_3.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError: not enough values to unpack (expected 4, got 3)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_several_numbers():", "        if -26 <= 0:", "            row = '1 2 3 4 5 6 7 8 9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", "        else:", "            row = '-1 -2 -3 -4 -5 -6 -7 -8 -9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/tests57_41_3.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_particular_sum(matrix):", "        prefix_sums = np.zeros((matrix.shape[0] + 1, matrix.shape[1] + 1))", "        for row in range(matrix.shape[0]):", "            for col in range(matrix.shape[1]):", "                prefix_sums[row + 1, col + 1] = prefix_sums[row, col + 1] + prefix_sums[row + 1, col] - prefix_sums[row, col] + matrix[row, col]", "        res = []", ">       for top_row, bot_row, left_col, right_col in product(*zip(range(matrix.shape[0]), range(matrix.shape[0]), range(matrix.shape[1]), range(matrix.shape[1]))):", "E       ValueError: not enough values to unpack (expected 4, got 3)"], "reprfuncargs": {"args": [["matrix", "matrix([[1, 2, 3, 4, 5, 6, 7, 8, 9],\n        [1, 2, 3, 4, 5, 6, 7, 8, 9],\n        [1, 2, 3, 4, 5, 6, 7, 8, 9]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_several_numbers():", "        if -26 <= 0:", "            row = '1 2 3 4 5 6 7 8 9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", "        else:", "            row = '-1 -2 -3 -4 -5 -6 -7 -8 -9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/tests57_41_3.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_particular_sum(matrix):", "        prefix_sums = np.zeros((matrix.shape[0] + 1, matrix.shape[1] + 1))", "        for row in range(matrix.shape[0]):", "            for col in range(matrix.shape[1]):", "                prefix_sums[row + 1, col + 1] = prefix_sums[row, col + 1] + prefix_sums[row + 1, col] - prefix_sums[row, col] + matrix[row, col]", "        res = []", ">       for top_row, bot_row, left_col, right_col in product(*zip(range(matrix.shape[0]), range(matrix.shape[0]), range(matrix.shape[1]), range(matrix.shape[1]))):", "E       ValueError: not enough values to unpack (expected 4, got 3)"], "reprfuncargs": {"args": [["matrix", "matrix([[1, 2, 3, 4, 5, 6, 7, 8, 9],\n        [1, 2, 3, 4, 5, 6, 7, 8, 9],\n        [1, 2, 3, 4, 5, 6, 7, 8, 9]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError: not enough values to unpack (expected 4, got 3)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005560879944823682, "start": 1729903924.193254, "stop": 1729903924.193811, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_41_3.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError: not enough values to unpack (expected 4, got 1)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_and_zeros():", "        if -26 == 0:", "            element = 1", "        else:", "            element = 0", "        for i in range(1, 11):", "            mat = ''", "            for j in range(i):", "                row = (f'{element} ' * i) + ';'", "                mat += row", "            mat = mat[:-1]", "            mat = np.matrix(mat)", "            mat[0, 0] = -26", "            if -26 == 0:", "                assert len(submatrix_with_particular_sum(mat)) == 1", "            else:", ">               assert len(submatrix_with_particular_sum(mat)) == i * i"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/tests57_41_3.py", "lineno": 69, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_particular_sum(matrix):", "        prefix_sums = np.zeros((matrix.shape[0] + 1, matrix.shape[1] + 1))", "        for row in range(matrix.shape[0]):", "            for col in range(matrix.shape[1]):", "                prefix_sums[row + 1, col + 1] = prefix_sums[row, col + 1] + prefix_sums[row + 1, col] - prefix_sums[row, col] + matrix[row, col]", "        res = []", ">       for top_row, bot_row, left_col, right_col in product(*zip(range(matrix.shape[0]), range(matrix.shape[0]), range(matrix.shape[1]), range(matrix.shape[1]))):", "E       ValueError: not enough values to unpack (expected 4, got 1)"], "reprfuncargs": {"args": [["matrix", "matrix([[-26]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_and_zeros():", "        if -26 == 0:", "            element = 1", "        else:", "            element = 0", "        for i in range(1, 11):", "            mat = ''", "            for j in range(i):", "                row = (f'{element} ' * i) + ';'", "                mat += row", "            mat = mat[:-1]", "            mat = np.matrix(mat)", "            mat[0, 0] = -26", "            if -26 == 0:", "                assert len(submatrix_with_particular_sum(mat)) == 1", "            else:", ">               assert len(submatrix_with_particular_sum(mat)) == i * i"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/tests57_41_3.py", "lineno": 69, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def submatrix_with_particular_sum(matrix):", "        prefix_sums = np.zeros((matrix.shape[0] + 1, matrix.shape[1] + 1))", "        for row in range(matrix.shape[0]):", "            for col in range(matrix.shape[1]):", "                prefix_sums[row + 1, col + 1] = prefix_sums[row, col + 1] + prefix_sums[row + 1, col] - prefix_sums[row, col] + matrix[row, col]", "        res = []", ">       for top_row, bot_row, left_col, right_col in product(*zip(range(matrix.shape[0]), range(matrix.shape[0]), range(matrix.shape[1]), range(matrix.shape[1]))):", "E       ValueError: not enough values to unpack (expected 4, got 1)"], "reprfuncargs": {"args": [["matrix", "matrix([[-26]])"]]}, "reprlocals": null, "reprfileloc": {"path": "Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q57/codegemma_results_3/Folder_41/generated_answer.py", "lineno": 10, "message": "ValueError: not enough values to unpack (expected 4, got 1)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002546660107327625, "start": 1729903924.201011, "stop": 1729903924.2012663, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_several_numbers", "location": ["tests57_41_3.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017369799024891108, "start": 1729903924.2524498, "stop": 1729903924.252624, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_41_3.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_41_3.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_41_3.py": 1, "Folder_41": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001546319981571287, "start": 1729903924.2568915, "stop": 1729903924.2570467, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "c345218aae364df7a29a45d918a6e55c", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
