{
  "parameter(s)": [
    7,
    15,
    24
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00017
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.0002
  ],
  "test_float_numbers": [
    "failed",
    "assert 4.58257569495584 == 4.69041575982343\n +  where 4.58257569495584 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00025
  ],
  "test_reversed_range": [
    "failed",
    "assert -80 == -79\n +  where -80 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00027
  ],
  "test_large_range": [
    "failed",
    "assert 20 == 21\n +  where 20 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00067
  ]
}