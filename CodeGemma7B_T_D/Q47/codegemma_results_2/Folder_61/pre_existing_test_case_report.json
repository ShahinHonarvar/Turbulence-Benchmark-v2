{
  "parameter(s)": [
    0,
    30,
    20,
    30
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaa', ...} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n    {\n  -  'aaaaaaaaaaaaaaaaaaaa',...\n  \n  ...Full output truncated (12 lines hidden), use '-vv' to show",
    0.00069
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {'abcabcabcabcabcabcabca', 'abcabcabcabcabcabcabcabca', 'abcabcabcabcabcabcabcabcabca', 'abcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcab', 'bcabcabcabcabcabcabcabcab', ...}\n +  where {'abcabcabcabcabcabcabca', 'abcabcabcabcabcabcabcabca', 'abcabcabcabcabcabcabcabcabca', 'abcabcabcabcabcabcabcabcabcabca', 'bcabcabcabcabcabcabcab', 'bcabcabcabcabcabcabcabcab', ...} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')",
    0.00035
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 31 <= 30\n +  where 31 = len('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')",
    0.00041
  ]
}