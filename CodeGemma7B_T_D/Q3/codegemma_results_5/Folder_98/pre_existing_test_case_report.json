{
  "parameter(s)": [
    0,
    6
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_large_range": [
    "failed",
    "assert [2, 3, 4, 5, 6, 7] == [1, 2, 3, 4, 5, 6, ...]\n  At index 0 diff: 2 != 1\n  Right contains one more item: 7\n  Full diff:\n  - [1, 2, 3, 4, 5, 6, 7]\n  ?  ---\n  + [2, 3, 4, 5, 6, 7]",
    0.00039
  ],
  "test_even_range": [
    "failed",
    "assert [4, 6, 8, 10, 12, 14] == [2, 4, 6, 8, 10, 12, ...]\n  At index 0 diff: 4 != 2\n  Right contains one more item: 14\n  Full diff:\n  - [2, 4, 6, 8, 10, 12, 14]\n  ?  ---\n  + [4, 6, 8, 10, 12, 14]",
    0.00058
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 6 == ((6 - 0) + 1)\n +  where 6 = sum([1, 1, 1, 1, 1, 1])\n +    where [1, 1, 1, 1, 1, 1] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}