{
  "parameter(s)": [
    28,
    40
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00017
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [6, 8, 10, 12, 14, 16, ...] == [58, 60, 62, 64, 66, 68, ...]\n  At index 0 diff: 6 != 58\n  Left contains 26 more items, first extra item: 32\n  Full diff:\n    [\n  +  6,\n  +  8,\n  +  10,...\n  \n  ...Full output truncated (37 lines hidden), use '-vv' to show",
    0.00079
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [2, 3, 4, 5, 6, 7, ...] == [29, 30, 31, 32, 33, 34, ...]\n  At index 0 diff: 2 != 29\n  Left contains 1025 more items, first extra item: 15\n  Full diff:\n    [\n  +  2,\n  +  3,\n  +  4,...\n  \n  ...Full output truncated (1036 lines hidden), use '-vv' to show",
    0.00364
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((40 - 28) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00028
  ]
}