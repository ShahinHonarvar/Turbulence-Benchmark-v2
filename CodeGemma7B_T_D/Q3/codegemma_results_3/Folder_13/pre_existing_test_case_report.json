{
  "parameter(s)": [
    25,
    87
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00019
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00017
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [26, 28, 30, 32, 34, 36, ...] == [52, 54, 56, 58, 60, 62, ...]\n  At index 0 diff: 26 != 52\n  Right contains 32 more items, first extra item: 114\n  Full diff:\n    [\n  +  26,\n  +  28,\n  +  30,...\n  \n  ...Full output truncated (74 lines hidden), use '-vv' to show",
    0.00095
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [25, 26, 27, 28, 29, 30, ...] == [26, 27, 28, 29, 30, 31, ...]\n  At index 0 diff: 25 != 26\n  Full diff:\n    [\n  +  25,\n     26,\n     27,\n     28,...\n  \n  ...Full output truncated (61 lines hidden), use '-vv' to show",
    0.00079
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((87 - 25) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0004
  ]
}