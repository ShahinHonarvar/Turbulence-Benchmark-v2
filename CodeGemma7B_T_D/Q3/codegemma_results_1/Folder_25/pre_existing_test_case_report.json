{
  "parameter(s)": [
    29,
    93
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00014
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    9e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [2, 3, 4, 5, 6, 7, ...] == [30, 31, 32, 33, 34, 35, ...]\n  At index 0 diff: 2 != 30\n  Left contains 27 more items, first extra item: 67\n  Full diff:\n    [\n  +  2,\n  +  3,\n  +  4,...\n  \n  ...Full output truncated (91 lines hidden), use '-vv' to show",
    0.00107
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [60, 62, 64, 66, 68, 70, ...]\n  At index 0 diff: 2 != 60\n  Right contains 19 more items, first extra item: 152\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (92 lines hidden), use '-vv' to show",
    0.00089
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((93 - 29) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0003
  ]
}