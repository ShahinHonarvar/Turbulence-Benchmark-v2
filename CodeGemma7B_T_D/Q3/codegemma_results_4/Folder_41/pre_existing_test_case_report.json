{
  "parameter(s)": [
    6,
    6
  ],
  "test_even_range": [
    "passed",
    "",
    0.00014
  ],
  "test_negative_range": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "assert [7, 8] == [7]\n  Left contains one more item: 8\n  Full diff:\n  - [7]\n  + [7, 8]",
    0.00042
  ],
  "test_zero_range": [
    "failed",
    "assert [0, 0] == []\n  Left contains 2 more items, first extra item: 0\n  Full diff:\n  - []\n  + [0, 0]",
    0.00031
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 2 == ((6 - 6) + 1)\n +  where 2 = sum([1, 1])\n +    where [1, 1] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}