{
  "parameter(s)": [
    26,
    52
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    9e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [26, 27, 28, 29, 30, 31, ...] == [27, 28, 29, 30, 31, 32, ...]\n  At index 0 diff: 26 != 27\n  Left contains one more item: 53\n  Full diff:\n    [\n  +  26,\n     27,\n     28,...\n  \n  ...Full output truncated (26 lines hidden), use '-vv' to show",
    0.00046
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [52, 54, 56, 58, 60, 62, ...] == [54, 56, 58, 60, 62, 64, ...]\n  At index 0 diff: 52 != 54\n  Left contains one more item: 106\n  Full diff:\n    [\n  +  52,\n     54,\n     56,...\n  \n  ...Full output truncated (26 lines hidden), use '-vv' to show",
    0.00068
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 28 == ((52 - 26) + 1)\n +  where 28 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00026
  ]
}