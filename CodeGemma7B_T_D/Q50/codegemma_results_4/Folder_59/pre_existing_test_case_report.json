{
  "parameter(s)": [
    10
  ],
  "test_list_of_strings_of_length_two": [
    "passed",
    "",
    0.00021
  ],
  "test_list_of_many_strings_with_different_lengths": [
    "passed",
    "",
    0.00024
  ],
  "test_list_of_two_strings_of_different_lengths": [
    "passed",
    "",
    0.00019
  ],
  "test_list_of_strings_including_one_same_uppercase_char_1": [
    "failed",
    "AssertionError: assert None\n +  where None = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])",
    0.00073
  ],
  "test_list_of_strings_including_one_same_lowercase_char_1": [
    "failed",
    "AssertionError: assert None\n +  where None = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])",
    0.00084
  ],
  "test_list_of_anagrams_of_size_n": [
    "failed",
    "AssertionError: assert None\n +  where None = if_contains_anagrams(['aBc', 'acB', 'Bac', 'Bca', 'caB', 'cBa'])",
    0.0003
  ]
}