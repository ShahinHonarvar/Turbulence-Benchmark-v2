predictions {
  string_value: "Prompt:\nSystem: You are an expert in Python programming. You are given a text specification surrounded by angle brackets. Create Python code according to the text specification. The Python code should not contain any comments. The Python code should be delimited only by triple backticks.\n        User: <Write a function called \'if_contains_anagrams\' that takes one argument, a list of strings. The function should return true if there are at least 75 pairs of anagrams in the given list; otherwise, it should return false. The function should only consider the anagrams of the length of at least three. The function should compare the strings in a case-insensitive manner.>\nOutput:\nSystem: ```python\ndef if_contains_anagrams(str_list):\n  # Create a dictionary to store anagrams.\n  anagrams = {}\n\n  # Iterate over the strings in the list.\n  for string in str_list:\n    # Convert the string to lowercase.\n    string = string.lower()\n\n    # Sort the string alphabetically.\n    sorted_string = \'\'.join(sorted(string))\n\n    # Add the sorted string to the dictionary as a key.\n    if sorted_string not in anagrams:\n      anagrams[sorted_string] = []\n\n    # Add the original string to the list of anagrams for the sorted string.\n    anagrams[sorted_string].append(string)\n\n  # Count the number of anagram pairs.\n  num_pairs = 0\n  for anagram_list in anagrams.values():\n    num_pairs += len(anagram_list) * (len(anagram_list) - 1) // 2\n\n  # Check if there are at least 75 anagram pairs.\n  if num_pairs >= 75:\n    return True\n  else:\n    return False\n```"
}
deployed_model_id: "1558232276930658304"
model: "projects/901665225437/locations/us-east1/models/google_codegemma-7b-it-1725717676032"
model_version_id: "1"
model_display_name: "google_codegemma-7b-it-1725717676032"
