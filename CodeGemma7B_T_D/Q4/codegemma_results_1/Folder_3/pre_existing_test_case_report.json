{
  "parameter(s)": [
    78,
    93
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00023
  ],
  "test_range_size": [
    "passed",
    "",
    0.00017
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00015
  ],
  "test_even_range": [
    "failed",
    "assert [158, 162, 16...174, 178, ...] == [160, 162, 16...168, 170, ...]\n  At index 0 diff: 158 != 160\n  Right contains 6 more items, first extra item: 176\n  Full diff:\n  - [160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186]\n  + [158, 162, 166, 170, 174, 178, 182, 186]",
    0.00042
  ],
  "test_large_range": [
    "failed",
    "assert [79, 80, 81, 82, 83, 84, ...] == [80, 81, 82, 83, 84, 85, ...]\n  At index 0 diff: 79 != 80\n  Left contains one more item: 93\n  Full diff:\n  - [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]\n  + [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]\n  ?  ++++",
    0.001
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((93 - 78) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00035
  ]
}