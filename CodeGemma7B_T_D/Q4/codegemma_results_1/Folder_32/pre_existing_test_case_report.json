{
  "parameter(s)": [
    11,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00015
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00014
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [11, 12, 13, 14, 15, 16, ...] == [13, 14, 15, 16, 17, 18, ...]\n  At index 0 diff: 11 != 13\n  Left contains one more item: 75\n  Full diff:\n    [\n  +  11,\n  +  12,\n     13,...\n  \n  ...Full output truncated (64 lines hidden), use '-vv' to show",
    0.00105
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [12, 14, 16, 18, 20, 22, ...] == [26, 28, 30, 32, 34, 36, ...]\n  At index 0 diff: 12 != 26\n  Right contains 32 more items, first extra item: 90\n  Full diff:\n    [\n  +  12,\n  +  14,\n  +  16,...\n  \n  ...Full output truncated (69 lines hidden), use '-vv' to show",
    0.00085
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((76 - 11) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00032
  ]
}