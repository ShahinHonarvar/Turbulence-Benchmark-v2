{
  "parameter(s)": [
    62,
    96
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00049
  ],
  "test_range_size": [
    "passed",
    "",
    0.00016
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00012
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [62, 63, 64, 65, 66, 67, ...] == [64, 65, 66, 67, 68, 69, ...]\n  At index 0 diff: 62 != 64\n  Left contains 2 more items, first extra item: 95\n  Full diff:\n    [\n  +  62,\n  +  63,\n     64,...\n  \n  ...Full output truncated (33 lines hidden), use '-vv' to show",
    0.00078
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [62, 63, 64, 65, 66, 67, ...] == [128, 130, 13...136, 138, ...]\n  At index 0 diff: 62 != 128\n  Left contains 2 more items, first extra item: 95\n  Full diff:\n    [\n  -  128,\n  -  130,\n  -  132,...\n  \n  ...Full output truncated (82 lines hidden), use '-vv' to show",
    0.00335
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((96 - 62) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00031
  ]
}