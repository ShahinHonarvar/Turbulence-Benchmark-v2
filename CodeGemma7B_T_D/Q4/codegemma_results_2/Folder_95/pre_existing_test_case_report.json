{
  "parameter(s)": [
    25,
    80
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0002
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [26, 28, 30, 32, 34, 36, ...] == [54, 56, 58, 60, 62, 64, ...]\n  At index 0 diff: 26 != 54\n  Right contains 27 more items, first extra item: 108\n  Full diff:\n    [\n  +  26,\n  +  28,\n  +  30,...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show",
    0.0007
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [25, 26, 27, 28, 29, 30, ...] == [27, 28, 29, 30, 31, 32, ...]\n  At index 0 diff: 25 != 27\n  Left contains one more item: 79\n  Full diff:\n    [\n  +  25,\n  +  26,\n     27,...\n  \n  ...Full output truncated (54 lines hidden), use '-vv' to show",
    0.00095
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((80 - 25) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00031
  ]
}