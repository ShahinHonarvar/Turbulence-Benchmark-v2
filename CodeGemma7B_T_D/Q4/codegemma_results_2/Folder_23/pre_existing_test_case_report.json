{
  "parameter(s)": [
    29,
    53
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00016
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    0.0001
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [60, 62, 64, 66, 68, 70, ...] == [62, 64, 66, 68, 70, 72, ...]\n  At index 0 diff: 60 != 62\n  Left contains 2 more items, first extra item: 106\n  Full diff:\n    [\n  +  60,\n     62,\n     64,...\n  \n  ...Full output truncated (23 lines hidden), use '-vv' to show",
    0.00058
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [30, 31, 32, 33, 34, 35, ...] == [31, 32, 33, 34, 35, 36, ...]\n  At index 0 diff: 30 != 31\n  Left contains 2 more items, first extra item: 53\n  Full diff:\n    [\n  +  30,\n     31,\n     32,...\n  \n  ...Full output truncated (23 lines hidden), use '-vv' to show",
    0.00061
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 25 == ((53 - 29) - 1)\n +  where 25 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00028
  ]
}