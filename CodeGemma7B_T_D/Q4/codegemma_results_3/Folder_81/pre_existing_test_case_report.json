{
  "parameter(s)": [
    10,
    100
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00019
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00016
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10] == [24, 26, 28, 30, 32, 34, ...]\n  At index 0 diff: 2 != 24\n  Right contains 84 more items, first extra item: 34\n  Full diff:\n    [\n  -  24,\n  ?   -\n  +  2,...\n  \n  ...Full output truncated (97 lines hidden), use '-vv' to show",
    0.00147
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [12, 13, 14, 15, 16, 17, ...]\n  At index 0 diff: 1 != 12\n  Right contains 79 more items, first extra item: 22\n  Full diff:\n    [\n  -  12,\n  ?   -\n  +  1,...\n  \n  ...Full output truncated (107 lines hidden), use '-vv' to show",
    0.00363
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 101 == ((100 - 10) - 1)\n +  where 101 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0003
  ]
}