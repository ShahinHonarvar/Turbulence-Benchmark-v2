{
  "parameter(s)": [
    48,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00018
  ],
  "test_range_size": [
    "passed",
    "",
    0.00013
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00014
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [49, 50, 51, 52, 53, 54, ...] == [50, 51, 52, 53, 54, 55, ...]\n  At index 0 diff: 49 != 50\n  Left contains 2 more items, first extra item: 76\n  Full diff:\n    [\n  +  49,\n     50,\n     51,...\n  \n  ...Full output truncated (27 lines hidden), use '-vv' to show",
    0.00077
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [98, 100, 102...106, 108, ...] == [100, 102, 10...108, 110, ...]\n  At index 0 diff: 98 != 100\n  Left contains 2 more items, first extra item: 152\n  Full diff:\n    [\n  +  98,\n     100,\n     102,...\n  \n  ...Full output truncated (27 lines hidden), use '-vv' to show",
    0.00081
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 29 == ((76 - 48) - 1)\n +  where 29 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00037
  ]
}