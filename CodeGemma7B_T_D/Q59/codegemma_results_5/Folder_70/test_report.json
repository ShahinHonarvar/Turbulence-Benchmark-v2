{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests59_70_5.py::test_if_result_is_less_than_433", "location": ["tests59_70_5.py", 34, "test_if_result_is_less_than_433"], "keywords": {"test_if_result_is_less_than_433": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019613200856838375, "start": 1729907912.179927, "stop": 1729907912.1801238, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_70_5.py::test_list_of_all_one_digit_nums", "location": ["tests59_70_5.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0015141920011956245, "start": 1729907912.1799042, "stop": 1729907912.1814196, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_70_5.py::test_if_result_integers_are_odd", "location": ["tests59_70_5.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015485599578823894, "start": 1729907912.1838276, "stop": 1729907912.1839833, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_70_5.py::test_list_of_all_one_digit_nums", "location": ["tests59_70_5.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError: invalid literal for int() with base 10: ''"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_all_one_digit_nums():", "        for i in range(1,10):", "            input_list = (i,) * (433 + 1)", "            if i <= 2:", "                assert not all_left_truncatable_prime(input_list)", "            elif i == 3:", ">               assert all_left_truncatable_prime(input_list) == [2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/tests59_70_5.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(t):", "        x = t[433]", "        ans = []", "        for i in range(x):", ">           if isprime(i) and (not str(i).count('0')) and isprime(int(str(i)[1:])) and isprime(int(str(i)[2:])) and isprime(int(str(i)[3:])) and isprime(int(str(i)[4:])) and isprime(int(str(i)[5:])) and isprime(int(str(i)[6:])) and isprime(int(str(i)[7:])) and isprime(int(str(i)[8:])) and isprime(int(str(i)[9:])) and isprime(int(str(i)[10:])) and isprime(int(str(i)[11:])) and isprime(int(str(i)[12:])) and isprime(int(str(i)[13:])) and isprime(int(str(i)[14:])) and isprime(int(str(i)[15:])) and isprime(int(str(i)[16:])) and isprime(int(str(i)[17:])) and isprime(int(str(i)[18:])) and isprime(int(str(i)[19:])) and isprime(int(str(i)[20:])) and isprime(int(str(i)[21:])) and isprime(int(str(i)[22:])) and isprime(int(str(i)[23:])) and isprime(int(str(i)[24:])) and isprime(int(str(i)[25:])) and isprime(int(str(i)[26:])) and isprime(int(str(i)[27:])) and isprime(int(str(i)[28:])) and isprime(int(str(i)[29:])) and isprime(int(str(i)[30:])) and isprime(int(str(i)[31:])) and isprime(int(str(i)[32:])) and isprime(int(str(i)[33:])) and isprime(int(str(i)[34:])) and isprime(int(str(i)[35:])) and isprime(int(str(i)[36:])) and isprime(int(str(i)[37:])) and isprime(int(str(i)[38:])) and isprime(int(str(i)[39:])) and isprime(int(str(i)[40:])) and isprime(int(str(i)[41:])) and isprime(int(str(i)[42:])) and isprime(int(str(i)[43:])):", "E           ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["t", "(3, 3, 3, 3, 3, 3, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_all_one_digit_nums():", "        for i in range(1,10):", "            input_list = (i,) * (433 + 1)", "            if i <= 2:", "                assert not all_left_truncatable_prime(input_list)", "            elif i == 3:", ">               assert all_left_truncatable_prime(input_list) == [2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/tests59_70_5.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(t):", "        x = t[433]", "        ans = []", "        for i in range(x):", ">           if isprime(i) and (not str(i).count('0')) and isprime(int(str(i)[1:])) and isprime(int(str(i)[2:])) and isprime(int(str(i)[3:])) and isprime(int(str(i)[4:])) and isprime(int(str(i)[5:])) and isprime(int(str(i)[6:])) and isprime(int(str(i)[7:])) and isprime(int(str(i)[8:])) and isprime(int(str(i)[9:])) and isprime(int(str(i)[10:])) and isprime(int(str(i)[11:])) and isprime(int(str(i)[12:])) and isprime(int(str(i)[13:])) and isprime(int(str(i)[14:])) and isprime(int(str(i)[15:])) and isprime(int(str(i)[16:])) and isprime(int(str(i)[17:])) and isprime(int(str(i)[18:])) and isprime(int(str(i)[19:])) and isprime(int(str(i)[20:])) and isprime(int(str(i)[21:])) and isprime(int(str(i)[22:])) and isprime(int(str(i)[23:])) and isprime(int(str(i)[24:])) and isprime(int(str(i)[25:])) and isprime(int(str(i)[26:])) and isprime(int(str(i)[27:])) and isprime(int(str(i)[28:])) and isprime(int(str(i)[29:])) and isprime(int(str(i)[30:])) and isprime(int(str(i)[31:])) and isprime(int(str(i)[32:])) and isprime(int(str(i)[33:])) and isprime(int(str(i)[34:])) and isprime(int(str(i)[35:])) and isprime(int(str(i)[36:])) and isprime(int(str(i)[37:])) and isprime(int(str(i)[38:])) and isprime(int(str(i)[39:])) and isprime(int(str(i)[40:])) and isprime(int(str(i)[41:])) and isprime(int(str(i)[42:])) and isprime(int(str(i)[43:])):", "E           ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["t", "(3, 3, 3, 3, 3, 3, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError: invalid literal for int() with base 10: ''"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019373399845790118, "start": 1729907912.182002, "stop": 1729907912.1821964, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_70_5.py::test_list_of_all_one_digit_nums", "location": ["tests59_70_5.py", 4, "test_list_of_all_one_digit_nums"], "keywords": {"test_list_of_all_one_digit_nums": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.007490225994843058, "start": 1729907912.232405, "stop": 1729907912.2398965, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw1>"}
{"nodeid": "tests59_70_5.py::test_if_result_integers_are_odd", "location": ["tests59_70_5.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError: invalid literal for int() with base 10: ''"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_integers_are_odd():", "        input_list = tuple(range(1, 433 + 2))", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/tests59_70_5.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(t):", "        x = t[433]", "        ans = []", "        for i in range(x):", ">           if isprime(i) and (not str(i).count('0')) and isprime(int(str(i)[1:])) and isprime(int(str(i)[2:])) and isprime(int(str(i)[3:])) and isprime(int(str(i)[4:])) and isprime(int(str(i)[5:])) and isprime(int(str(i)[6:])) and isprime(int(str(i)[7:])) and isprime(int(str(i)[8:])) and isprime(int(str(i)[9:])) and isprime(int(str(i)[10:])) and isprime(int(str(i)[11:])) and isprime(int(str(i)[12:])) and isprime(int(str(i)[13:])) and isprime(int(str(i)[14:])) and isprime(int(str(i)[15:])) and isprime(int(str(i)[16:])) and isprime(int(str(i)[17:])) and isprime(int(str(i)[18:])) and isprime(int(str(i)[19:])) and isprime(int(str(i)[20:])) and isprime(int(str(i)[21:])) and isprime(int(str(i)[22:])) and isprime(int(str(i)[23:])) and isprime(int(str(i)[24:])) and isprime(int(str(i)[25:])) and isprime(int(str(i)[26:])) and isprime(int(str(i)[27:])) and isprime(int(str(i)[28:])) and isprime(int(str(i)[29:])) and isprime(int(str(i)[30:])) and isprime(int(str(i)[31:])) and isprime(int(str(i)[32:])) and isprime(int(str(i)[33:])) and isprime(int(str(i)[34:])) and isprime(int(str(i)[35:])) and isprime(int(str(i)[36:])) and isprime(int(str(i)[37:])) and isprime(int(str(i)[38:])) and isprime(int(str(i)[39:])) and isprime(int(str(i)[40:])) and isprime(int(str(i)[41:])) and isprime(int(str(i)[42:])) and isprime(int(str(i)[43:])):", "E           ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["t", "(1, 2, 3, 4, 5, 6, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_integers_are_odd():", "        input_list = tuple(range(1, 433 + 2))", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/tests59_70_5.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(t):", "        x = t[433]", "        ans = []", "        for i in range(x):", ">           if isprime(i) and (not str(i).count('0')) and isprime(int(str(i)[1:])) and isprime(int(str(i)[2:])) and isprime(int(str(i)[3:])) and isprime(int(str(i)[4:])) and isprime(int(str(i)[5:])) and isprime(int(str(i)[6:])) and isprime(int(str(i)[7:])) and isprime(int(str(i)[8:])) and isprime(int(str(i)[9:])) and isprime(int(str(i)[10:])) and isprime(int(str(i)[11:])) and isprime(int(str(i)[12:])) and isprime(int(str(i)[13:])) and isprime(int(str(i)[14:])) and isprime(int(str(i)[15:])) and isprime(int(str(i)[16:])) and isprime(int(str(i)[17:])) and isprime(int(str(i)[18:])) and isprime(int(str(i)[19:])) and isprime(int(str(i)[20:])) and isprime(int(str(i)[21:])) and isprime(int(str(i)[22:])) and isprime(int(str(i)[23:])) and isprime(int(str(i)[24:])) and isprime(int(str(i)[25:])) and isprime(int(str(i)[26:])) and isprime(int(str(i)[27:])) and isprime(int(str(i)[28:])) and isprime(int(str(i)[29:])) and isprime(int(str(i)[30:])) and isprime(int(str(i)[31:])) and isprime(int(str(i)[32:])) and isprime(int(str(i)[33:])) and isprime(int(str(i)[34:])) and isprime(int(str(i)[35:])) and isprime(int(str(i)[36:])) and isprime(int(str(i)[37:])) and isprime(int(str(i)[38:])) and isprime(int(str(i)[39:])) and isprime(int(str(i)[40:])) and isprime(int(str(i)[41:])) and isprime(int(str(i)[42:])) and isprime(int(str(i)[43:])):", "E           ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["t", "(1, 2, 3, 4, 5, 6, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError: invalid literal for int() with base 10: ''"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016682999557815492, "start": 1729907912.18424, "stop": 1729907912.1844075, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_70_5.py::test_if_result_integers_are_odd", "location": ["tests59_70_5.py", 19, "test_if_result_integers_are_odd"], "keywords": {"test_if_result_integers_are_odd": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015096399874892086, "start": 1729907912.2615974, "stop": 1729907912.261749, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw2>"}
{"nodeid": "tests59_70_5.py::test_if_result_is_less_than_433", "location": ["tests59_70_5.py", 34, "test_if_result_is_less_than_433"], "keywords": {"test_if_result_is_less_than_433": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError: invalid literal for int() with base 10: ''"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_433():", "        input_list = tuple([random.randint(3, 1000) for _ in range(433 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/tests59_70_5.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(t):", "        x = t[433]", "        ans = []", "        for i in range(x):", ">           if isprime(i) and (not str(i).count('0')) and isprime(int(str(i)[1:])) and isprime(int(str(i)[2:])) and isprime(int(str(i)[3:])) and isprime(int(str(i)[4:])) and isprime(int(str(i)[5:])) and isprime(int(str(i)[6:])) and isprime(int(str(i)[7:])) and isprime(int(str(i)[8:])) and isprime(int(str(i)[9:])) and isprime(int(str(i)[10:])) and isprime(int(str(i)[11:])) and isprime(int(str(i)[12:])) and isprime(int(str(i)[13:])) and isprime(int(str(i)[14:])) and isprime(int(str(i)[15:])) and isprime(int(str(i)[16:])) and isprime(int(str(i)[17:])) and isprime(int(str(i)[18:])) and isprime(int(str(i)[19:])) and isprime(int(str(i)[20:])) and isprime(int(str(i)[21:])) and isprime(int(str(i)[22:])) and isprime(int(str(i)[23:])) and isprime(int(str(i)[24:])) and isprime(int(str(i)[25:])) and isprime(int(str(i)[26:])) and isprime(int(str(i)[27:])) and isprime(int(str(i)[28:])) and isprime(int(str(i)[29:])) and isprime(int(str(i)[30:])) and isprime(int(str(i)[31:])) and isprime(int(str(i)[32:])) and isprime(int(str(i)[33:])) and isprime(int(str(i)[34:])) and isprime(int(str(i)[35:])) and isprime(int(str(i)[36:])) and isprime(int(str(i)[37:])) and isprime(int(str(i)[38:])) and isprime(int(str(i)[39:])) and isprime(int(str(i)[40:])) and isprime(int(str(i)[41:])) and isprime(int(str(i)[42:])) and isprime(int(str(i)[43:])):", "E           ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["t", "(65, 135, 186, 660, 779, 596, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_less_than_433():", "        input_list = tuple([random.randint(3, 1000) for _ in range(433 + 1)])", ">       output = all_left_truncatable_prime(input_list)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/tests59_70_5.py", "lineno": 37, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def all_left_truncatable_prime(t):", "        x = t[433]", "        ans = []", "        for i in range(x):", ">           if isprime(i) and (not str(i).count('0')) and isprime(int(str(i)[1:])) and isprime(int(str(i)[2:])) and isprime(int(str(i)[3:])) and isprime(int(str(i)[4:])) and isprime(int(str(i)[5:])) and isprime(int(str(i)[6:])) and isprime(int(str(i)[7:])) and isprime(int(str(i)[8:])) and isprime(int(str(i)[9:])) and isprime(int(str(i)[10:])) and isprime(int(str(i)[11:])) and isprime(int(str(i)[12:])) and isprime(int(str(i)[13:])) and isprime(int(str(i)[14:])) and isprime(int(str(i)[15:])) and isprime(int(str(i)[16:])) and isprime(int(str(i)[17:])) and isprime(int(str(i)[18:])) and isprime(int(str(i)[19:])) and isprime(int(str(i)[20:])) and isprime(int(str(i)[21:])) and isprime(int(str(i)[22:])) and isprime(int(str(i)[23:])) and isprime(int(str(i)[24:])) and isprime(int(str(i)[25:])) and isprime(int(str(i)[26:])) and isprime(int(str(i)[27:])) and isprime(int(str(i)[28:])) and isprime(int(str(i)[29:])) and isprime(int(str(i)[30:])) and isprime(int(str(i)[31:])) and isprime(int(str(i)[32:])) and isprime(int(str(i)[33:])) and isprime(int(str(i)[34:])) and isprime(int(str(i)[35:])) and isprime(int(str(i)[36:])) and isprime(int(str(i)[37:])) and isprime(int(str(i)[38:])) and isprime(int(str(i)[39:])) and isprime(int(str(i)[40:])) and isprime(int(str(i)[41:])) and isprime(int(str(i)[42:])) and isprime(int(str(i)[43:])):", "E           ValueError: invalid literal for int() with base 10: ''"], "reprfuncargs": {"args": [["t", "(65, 135, 186, 660, 779, 596, ...)"]]}, "reprlocals": null, "reprfileloc": {"path": "Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q59/codegemma_results_5/Folder_70/generated_answer.py", "lineno": 7, "message": "ValueError: invalid literal for int() with base 10: ''"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00044288201024755836, "start": 1729907912.1804047, "stop": 1729907912.1808481, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw0>"}
{"nodeid": "tests59_70_5.py::test_if_result_is_less_than_433", "location": ["tests59_70_5.py", 34, "test_if_result_is_less_than_433"], "keywords": {"test_if_result_is_less_than_433": 1, "tests59_70_5.py": 1, "Folder_70": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015830399934202433, "start": 1729907912.2642267, "stop": 1729907912.2643855, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "928205fa9ef44e1d985cd14f7e3caa3f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
