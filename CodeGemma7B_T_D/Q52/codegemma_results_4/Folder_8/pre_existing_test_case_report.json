{
  "parameter(s)": [
    49
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00019
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not frozenset({' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa '})\n +  where frozenset({' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa '}) = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00029
  ],
  "test_string_of_identical_nums": [
    "failed",
    "AssertionError: assert not frozenset({'0000000000000000000000000000000000000000000000000'})\n +  where frozenset({'0000000000000000000000000000000000000000000000000'}) = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.00027
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not frozenset({'                                                 '})\n +  where frozenset({'                                                 '}) = palindrome_of_length_n('                                                                                                  ')",
    0.00025
  ]
}