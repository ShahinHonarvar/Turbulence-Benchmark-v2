{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_6_4.py::test_string_of_identical_nums", "location": ["tests52_6_4.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001409010001225397, "start": 1729876223.203578, "stop": 1729876223.2037194, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_6_4.py::test_string_of_spaces_and_letters", "location": ["tests52_6_4.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017871399904834107, "start": 1729876223.203735, "stop": 1729876223.2039144, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_6_4.py::test_string_of_many_chars", "location": ["tests52_6_4.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017947099695447832, "start": 1729876223.2037165, "stop": 1729876223.2038968, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_4.py::test_string_of_many_chars", "location": ["tests52_6_4.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001532460009912029, "start": 1729876223.2041473, "stop": 1729876223.204301, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_4.py::test_string_of_many_chars", "location": ["tests52_6_4.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.735299732303247e-05, "start": 1729876223.2046192, "stop": 1729876223.2046971, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_4.py::test_string_of_spaces", "location": ["tests52_6_4.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.871700654504821e-05, "start": 1729876223.205819, "stop": 1729876223.205898, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_4.py::test_string_of_identical_nums", "location": ["tests52_6_4.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/tests52_6_4.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal to 474,", "        where each palindrome is a substring of the given string. Each palindrome should only consist of English letters.", "        If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set.", "        The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        result = set()", "        for i in range(len(text)):", "            for j in range(i + 1, min(i + 238, len(text))):", "                for k in range(j + 1, min(j + 239, len(text))):", "                    for l in range(k + 1, min(k + 240, len(text))):", "                        word = text[i:l + 1]", "                        if word == word[::-1]:", ">                           result.add(word)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/tests52_6_4.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal to 474,", "        where each palindrome is a substring of the given string. Each palindrome should only consist of English letters.", "        If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set.", "        The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        result = set()", "        for i in range(len(text)):", "            for j in range(i + 1, min(i + 238, len(text))):", "                for k in range(j + 1, min(j + 239, len(text))):", "                    for l in range(k + 1, min(k + 240, len(text))):", "                        word = text[i:l + 1]", "                        if word == word[::-1]:", ">                           result.add(word)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (136419934733888) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999741986001027, "start": 1729876223.2039795, "stop": 1729876230.2037225, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_6_4.py::test_string_of_identical_nums", "location": ["tests52_6_4.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (136419934733888) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.00011523500143084675, "start": 1729876230.2145119, "stop": 1729876230.2146277, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_6_4.py::test_string_of_spaces", "location": ["tests52_6_4.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/tests52_6_4.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal to 474,", "        where each palindrome is a substring of the given string. Each palindrome should only consist of English letters.", "        If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set.", "        The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        result = set()", "        for i in range(len(text)):", "            for j in range(i + 1, min(i + 238, len(text))):", "                for k in range(j + 1, min(j + 239, len(text))):", "                    for l in range(k + 1, min(k + 240, len(text))):", "                        word = text[i:l + 1]", "                        if word == word[::-1]:", ">                           result.add(word)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'                                                                                                                     ...                                                                                                                      '"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/tests52_6_4.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal to 474,", "        where each palindrome is a substring of the given string. Each palindrome should only consist of English letters.", "        If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set.", "        The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        result = set()", "        for i in range(len(text)):", "            for j in range(i + 1, min(i + 238, len(text))):", "                for k in range(j + 1, min(j + 239, len(text))):", "                    for l in range(k + 1, min(k + 240, len(text))):", "                        word = text[i:l + 1]", "                        if word == word[::-1]:", ">                           result.add(word)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'                                                                                                                     ...                                                                                                                      '"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (123581348447808) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 7.00011382199591, "start": 1729876223.205974, "stop": 1729876230.2060885, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_4.py::test_string_of_spaces", "location": ["tests52_6_4.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (123581348447808) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.00012971200339961797, "start": 1729876230.21655, "stop": 1729876230.2166805, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_4.py::test_string_of_spaces_and_letters", "location": ["tests52_6_4.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/tests52_6_4.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal to 474,", "        where each palindrome is a substring of the given string. Each palindrome should only consist of English letters.", "        If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set.", "        The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        result = set()", "        for i in range(len(text)):", "            for j in range(i + 1, min(i + 238, len(text))):", "                for k in range(j + 1, min(j + 239, len(text))):", "                    for l in range(k + 1, min(k + 240, len(text))):", "                        word = text[i:l + 1]", "                        if word == word[::-1]:", ">                           result.add(word)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a...aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/tests52_6_4.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal to 474,", "        where each palindrome is a substring of the given string. Each palindrome should only consist of English letters.", "        If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set.", "        The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        result = set()", "        for i in range(len(text)):", "            for j in range(i + 1, min(i + 238, len(text))):", "                for k in range(j + 1, min(j + 239, len(text))):", "                    for l in range(k + 1, min(k + 240, len(text))):", "                        word = text[i:l + 1]", "                        if word == word[::-1]:", ">                           result.add(word)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a...aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_4/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (135950961215040) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999629755002388, "start": 1729876223.2041705, "stop": 1729876230.2038012, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_6_4.py::test_string_of_spaces_and_letters", "location": ["tests52_6_4.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_6_4.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (135950961215040) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.0001283979945583269, "start": 1729876230.2178016, "stop": 1729876230.2179306, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "894c69179263472aa490cb27cf561600", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
