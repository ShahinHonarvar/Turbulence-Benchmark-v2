{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_30_1.py::test_string_of_spaces_and_letters", "location": ["tests52_30_1.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017216699779964983, "start": 1729875716.823649, "stop": 1729875716.8238218, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_30_1.py::test_string_of_identical_nums", "location": ["tests52_30_1.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016988800052786246, "start": 1729875716.8236506, "stop": 1729875716.823821, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_30_1.py::test_string_of_many_chars", "location": ["tests52_30_1.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001794179988792166, "start": 1729875716.8236327, "stop": 1729875716.8238127, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_30_1.py::test_string_of_many_chars", "location": ["tests52_30_1.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013738800043938681, "start": 1729875716.824079, "stop": 1729875716.824217, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_30_1.py::test_string_of_many_chars", "location": ["tests52_30_1.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.115200373344123e-05, "start": 1729875716.8245656, "stop": 1729875716.8246577, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_30_1.py::test_string_of_spaces", "location": ["tests52_30_1.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.62550038821064e-05, "start": 1729875716.8259082, "stop": 1729875716.8260047, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_30_1.py::test_string_of_identical_nums", "location": ["tests52_30_1.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 29, "message": "AssertionError: assert not {'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', ...}\n +  where {} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (94 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (94 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 29, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0019081930004176684, "start": 1729875716.8240943, "stop": 1729875716.8260026, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_30_1.py::test_string_of_identical_nums", "location": ["tests52_30_1.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016893000429263338, "start": 1729875716.8479877, "stop": 1729875716.8481576, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_30_1.py::test_string_of_spaces", "location": ["tests52_30_1.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('                                                                                                                                                                                            ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (94 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('                                                                                                                                                                                            ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (94 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('                                                                                                                                                                                            ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('                                                                                                                                                                                            ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002129524997144472, "start": 1729875716.8261154, "stop": 1729875716.8282454, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_30_1.py::test_string_of_spaces", "location": ["tests52_30_1.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015737400099169463, "start": 1729875716.8492398, "stop": 1729875716.849398, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_30_1.py::test_string_of_spaces_and_letters", "location": ["tests52_30_1.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 19, "message": "AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}\n +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (94 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}", "E        +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (94 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}", "E        +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_1/Folder_30/tests52_30_1.py", "lineno": 19, "message": "AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}\n +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.05512686400470557, "start": 1729875716.8240888, "stop": 1729875716.8792164, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_30_1.py::test_string_of_spaces_and_letters", "location": ["tests52_30_1.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_30_1.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001511189984739758, "start": 1729875716.89551, "stop": 1729875716.895662, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "85ed1c3a6c9446bb83599afa4c6346e4", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
