{
  "parameter(s)": [
    34
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_identical_nums": [
    "failed",
    "AssertionError: assert not {'000', '0000', '00000', '000000', '0000000', '00000000', ...}\n +  where {'000', '0000', '00000', '000000', '0000000', '00000000', ...} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000')",
    0.00604
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', 'aaaaaaaa', ...}\n +  where {'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', 'aaaaaaaa', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.06588
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 40 == 34\n +  where 40 = len('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')",
    0.29476
  ]
}