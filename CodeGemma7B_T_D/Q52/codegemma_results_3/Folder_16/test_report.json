{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_16_3.py::test_string_of_identical_nums", "location": ["tests52_16_3.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014197600103216246, "start": 1729876045.212972, "stop": 1729876045.2131147, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_16_3.py::test_string_of_many_chars", "location": ["tests52_16_3.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016830400272738189, "start": 1729876045.2131479, "stop": 1729876045.2133167, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_16_3.py::test_string_of_spaces_and_letters", "location": ["tests52_16_3.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015999400056898594, "start": 1729876045.2130916, "stop": 1729876045.2132525, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_16_3.py::test_string_of_spaces_and_letters", "location": ["tests52_16_3.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (255 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/tests52_16_3.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(s: str) -> set:", "        \"\"\"", "        Write a function called 'palindrome_of_length_n' that takes one argument, a string, and returns the set of all palindromes of the length equal to 255, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        lowercase_list = list(ascii_lowercase) + list(ascii_uppercase)", "        uppercase_list = list(ascii_uppercase)", "        combinations = set()", "        for i in range(255):", "            for comb in combinations_with_replacement(lowercase_list, i):", ">               combinations.add(''.join(comb))", "E               Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["s", "'a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a...aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (255 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/tests52_16_3.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(s: str) -> set:", "        \"\"\"", "        Write a function called 'palindrome_of_length_n' that takes one argument, a string, and returns the set of all palindromes of the length equal to 255, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        lowercase_list = list(ascii_lowercase) + list(ascii_uppercase)", "        uppercase_list = list(ascii_uppercase)", "        combinations = set()", "        for i in range(255):", "            for comb in combinations_with_replacement(lowercase_list, i):", ">               combinations.add(''.join(comb))", "E               Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["s", "'a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a...aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (128094878828096) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999720002000686, "start": 1729876045.2135022, "stop": 1729876052.2132232, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_16_3.py::test_string_of_spaces_and_letters", "location": ["tests52_16_3.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (128094878828096) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.00015590499970130622, "start": 1729876053.4012296, "stop": 1729876053.4013867, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_16_3.py::test_string_of_identical_nums", "location": ["tests52_16_3.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (255 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/tests52_16_3.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(s: str) -> set:", "        \"\"\"", "        Write a function called 'palindrome_of_length_n' that takes one argument, a string, and returns the set of all palindromes of the length equal to 255, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        lowercase_list = list(ascii_lowercase) + list(ascii_uppercase)", "        uppercase_list = list(ascii_uppercase)", "        combinations = set()", "        for i in range(255):", "            for comb in combinations_with_replacement(lowercase_list, i):", ">               combinations.add(''.join(comb))", "E               Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["s", "'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (255 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/tests52_16_3.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(s: str) -> set:", "        \"\"\"", "        Write a function called 'palindrome_of_length_n' that takes one argument, a string, and returns the set of all palindromes of the length equal to 255, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        lowercase_list = list(ascii_lowercase) + list(ascii_uppercase)", "        uppercase_list = list(ascii_uppercase)", "        combinations = set()", "        for i in range(255):", "            for comb in combinations_with_replacement(lowercase_list, i):", ">               combinations.add(''.join(comb))", "E               Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["s", "'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (125168959620672) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.9999266319937306, "start": 1729876045.2133272, "stop": 1729876052.2132545, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_16_3.py::test_string_of_identical_nums", "location": ["tests52_16_3.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (125168959620672) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.0001452919968869537, "start": 1729876053.5285566, "stop": 1729876053.5287027, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_16_3.py::test_string_of_many_chars", "location": ["tests52_16_3.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/tests52_16_3.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(s: str) -> set:", "        \"\"\"", "        Write a function called 'palindrome_of_length_n' that takes one argument, a string, and returns the set of all palindromes of the length equal to 255, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        lowercase_list = list(ascii_lowercase) + list(ascii_uppercase)", "        uppercase_list = list(ascii_uppercase)", "        combinations = set()", "        for i in range(255):", "            for comb in combinations_with_replacement(lowercase_list, i):", ">               combinations.add(''.join(comb))", "E               Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["s", "'abcdef'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_many_chars():", "        s = 'abcdef'", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/tests52_16_3.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(s: str) -> set:", "        \"\"\"", "        Write a function called 'palindrome_of_length_n' that takes one argument, a string, and returns the set of all palindromes of the length equal to 255, where each palindrome is a substring of the given string. Each palindrome should only consist of English letters. If there is no palindrome of the specified length as a substring of the given string, the function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        lowercase_list = list(ascii_lowercase) + list(ascii_uppercase)", "        uppercase_list = list(ascii_uppercase)", "        combinations = set()", "        for i in range(255):", "            for comb in combinations_with_replacement(lowercase_list, i):", ">               combinations.add(''.join(comb))", "E               Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["s", "'abcdef'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_3/Folder_16/generated_answer.py", "lineno": 13, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (137397767505472) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999585975005175, "start": 1729876045.2135794, "stop": 1729876052.213166, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_16_3.py::test_string_of_many_chars", "location": ["tests52_16_3.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_16_3.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (137397767505472) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.00015669700223952532, "start": 1729876054.5270934, "stop": 1729876054.5272515, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "091e2ea81d8348d9a91ad65ce98e29db", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
