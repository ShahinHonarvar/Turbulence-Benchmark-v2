{
  "parameter(s)": [
    181
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00019
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {' aa ', ' aa aa', ' aa aa aa ', ' aa aa aa aa', ' aa aa aa aa aa ', ' aa aa aa aa aa aa', ...}\n +  where {' aa ', ' aa aa', ' aa aa aa ', ' aa aa aa aa', ' aa aa aa aa aa ', ' aa aa aa aa aa aa', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    4.97804
  ],
  "test_string_of_identical_nums": [
    "failed",
    "AssertionError: assert not {'00', '0000', '000000', '00000000', '0000000000', '000000000000', ...}\n +  where {'00', '0000', '000000', '00000000', '0000000000', '000000000000', ...} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.20295
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'  ', '    ', '      ', '        ', '          ', '            ', ...}\n +  where {'  ', '    ', '      ', '        ', '          ', '            ', ...} = palindrome_of_length_n('                                                                                                                                                                                                                                                                                                                                                                          ')",
    0.26126
  ]
}