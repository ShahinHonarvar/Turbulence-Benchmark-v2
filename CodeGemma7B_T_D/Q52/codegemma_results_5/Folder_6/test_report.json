{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_6_5.py::test_string_of_many_chars", "location": ["tests52_6_5.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012878900452051312, "start": 1729876538.6651196, "stop": 1729876538.665249, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_5.py::test_string_of_many_chars", "location": ["tests52_6_5.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001128350049839355, "start": 1729876538.6654515, "stop": 1729876538.665565, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_5.py::test_string_of_many_chars", "location": ["tests52_6_5.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.542600021930411e-05, "start": 1729876538.6658096, "stop": 1729876538.6658754, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_5.py::test_string_of_spaces_and_letters", "location": ["tests52_6_5.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017793900042306632, "start": 1729876538.665334, "stop": 1729876538.6655128, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_6_5.py::test_string_of_identical_nums", "location": ["tests52_6_5.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014606499462388456, "start": 1729876538.6650836, "stop": 1729876538.6652303, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_6_5.py::test_string_of_spaces", "location": ["tests52_6_5.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.637000428279862e-05, "start": 1729876538.6673455, "stop": 1729876538.6674323, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_5.py::test_string_of_spaces", "location": ["tests52_6_5.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/tests52_6_5.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal", "        to 474, where each palindrome is a substring of the given string. Each palindrome should only consist of", "        English letters. If there is no palindrome of the specified length as a substring of the given string, the", "        function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        text = text.lower()", "        palindromes = set()", "        for i in range(len(text)):", "            for j in range(i + 1, len(text)):", "                for k in range(j + 1, len(text)):", "                    for l in range(k + 1, len(text)):", "                        substring = text[i:l + 1]", "                        if substring == substring[::-1]:", ">                           palindromes.add(substring)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'                                                                                                                     ...                                                                                                                      '"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/tests52_6_5.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal", "        to 474, where each palindrome is a substring of the given string. Each palindrome should only consist of", "        English letters. If there is no palindrome of the specified length as a substring of the given string, the", "        function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        text = text.lower()", "        palindromes = set()", "        for i in range(len(text)):", "            for j in range(i + 1, len(text)):", "                for k in range(j + 1, len(text)):", "                    for l in range(k + 1, len(text)):", "                        substring = text[i:l + 1]", "                        if substring == substring[::-1]:", ">                           palindromes.add(substring)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'                                                                                                                     ...                                                                                                                      '"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (129007207056960) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 7.0000918109944905, "start": 1729876538.667517, "stop": 1729876545.6676097, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_5.py::test_string_of_spaces", "location": ["tests52_6_5.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (129007207056960) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.0001265459941350855, "start": 1729876545.6780035, "stop": 1729876545.6781306, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_6_5.py::test_string_of_identical_nums", "location": ["tests52_6_5.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/tests52_6_5.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal", "        to 474, where each palindrome is a substring of the given string. Each palindrome should only consist of", "        English letters. If there is no palindrome of the specified length as a substring of the given string, the", "        function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        text = text.lower()", "        palindromes = set()", "        for i in range(len(text)):", "            for j in range(i + 1, len(text)):", "                for k in range(j + 1, len(text)):", "                    for l in range(k + 1, len(text)):", "                        substring = text[i:l + 1]", "                        if substring == substring[::-1]:", ">                           palindromes.add(substring)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/tests52_6_5.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal", "        to 474, where each palindrome is a substring of the given string. Each palindrome should only consist of", "        English letters. If there is no palindrome of the specified length as a substring of the given string, the", "        function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        text = text.lower()", "        palindromes = set()", "        for i in range(len(text)):", "            for j in range(i + 1, len(text)):", "                for k in range(j + 1, len(text)):", "                    for l in range(k + 1, len(text)):", "                        substring = text[i:l + 1]", "                        if substring == substring[::-1]:", ">                           palindromes.add(substring)", "E                           Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 16, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (131160837457472) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999833212998055, "start": 1729876538.6654758, "stop": 1729876545.6653101, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_6_5.py::test_string_of_identical_nums", "location": ["tests52_6_5.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (131160837457472) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.00014522799756377935, "start": 1729876545.679257, "stop": 1729876545.679403, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_6_5.py::test_string_of_spaces_and_letters", "location": ["tests52_6_5.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/tests52_6_5.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal", "        to 474, where each palindrome is a substring of the given string. Each palindrome should only consist of", "        English letters. If there is no palindrome of the specified length as a substring of the given string, the", "        function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        text = text.lower()", "        palindromes = set()", "        for i in range(len(text)):", "            for j in range(i + 1, len(text)):", "                for k in range(j + 1, len(text)):", "                    for l in range(k + 1, len(text)):", "                        substring = text[i:l + 1]", ">                       if substring == substring[::-1]:", "E                       Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a...aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (474 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/tests52_6_5.py", "lineno": 19, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def palindrome_of_length_n(text):", "        \"\"\"", "        This function takes one argument, a string, and returns the set of all palindromes of the length equal", "        to 474, where each palindrome is a substring of the given string. Each palindrome should only consist of", "        English letters. If there is no palindrome of the specified length as a substring of the given string, the", "        function should return an empty set. The function should find the palindromes in a case-insensitive manner.", "        \"\"\"", "        text = text.lower()", "        palindromes = set()", "        for i in range(len(text)):", "            for j in range(i + 1, len(text)):", "                for k in range(j + 1, len(text)):", "                    for l in range(k + 1, len(text)):", "                        substring = text[i:l + 1]", ">                       if substring == substring[::-1]:", "E                       Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["text", "'a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a...aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q52/codegemma_results_5/Folder_6/generated_answer.py", "lineno": 15, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (128271018624576) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999827316998562, "start": 1729876538.6657739, "stop": 1729876545.665602, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_6_5.py::test_string_of_spaces_and_letters", "location": ["tests52_6_5.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_6_5.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (128271018624576) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.00012304799747653306, "start": 1729876545.688172, "stop": 1729876545.6882956, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d3b81a64ffe540d9add152a819fcc1d6", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
