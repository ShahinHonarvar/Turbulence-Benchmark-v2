{
  "parameter(s)": [
    54
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_similar_chars_of_length_54": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    8e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    8e-05
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    8e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00058
  ],
  "test_string_of_similar_chars_of_length_greater_than_54": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (106 lines hidden), use '-vv' to show",
    0.00118
  ],
  "test_numeric_string": [
    "failed",
    "AssertionError: assert not {'634619594696848819174568758857865471918848696495916436'}\n +  where {'634619594696848819174568758857865471918848696495916436'} = palindrome_of_length_at_least_n('634619594696848819174568758857865471918848696495916436')",
    0.0002
  ]
}