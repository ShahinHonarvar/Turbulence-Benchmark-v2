{
  "parameter(s)": [
    33
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  ', ...}\n +  where {'  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.0027
  ],
  "test_string_of_similar_chars_of_length_33": [
    "failed",
    "AssertionError: assert set() == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n  + set()",
    0.00049
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabc', 'abcdefabcdefabcdefabcdefabcdefabcd', 'abcdefabcdefabcdefabcdefabcdefabcde', 'abcdefabcdefabcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefab', ...}\n +  where {'abcdefabcdefabcdefabcdefabcdefabc', 'abcdefabcdefabcdefabcdefabcdefabcd', 'abcdefabcdefabcdefabcdefabcdefabcde', 'abcdefabcdefabcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefab', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00357
  ]
}