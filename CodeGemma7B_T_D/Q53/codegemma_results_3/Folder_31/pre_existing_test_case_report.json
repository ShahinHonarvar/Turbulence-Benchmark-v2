{
  "parameter(s)": [
    34
  ],
  "test_string_of_similar_chars_of_length_34": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_similar_chars_of_length_greater_than_34": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', ...}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00188
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  ', ...}\n +  where {'  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00266
  ],
  "test_string_of_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', ...}\n +  where {'%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', ...} = palindrome_of_length_at_least_n('a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%')",
    0.0004
  ]
}