{
  "parameter(s)": [
    43
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_similar_chars_of_length_43": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    0.00013
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_similar_chars_of_length_greater_than_43": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (84 lines hidden), use '-vv' to show",
    0.00106
  ],
  "test_string_of_similar_nums": [
    "failed",
    "AssertionError: assert not {'0000000000000000000000000000000000000000000'}\n +  where {'0000000000000000000000000000000000000000000'} = palindrome_of_length_at_least_n('0000000000000000000000000000000000000000000')",
    0.0002
  ],
  "test_string_of_many_similar_nums": [
    "failed",
    "AssertionError: assert not {'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}\n +  where {'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000'} = palindrome_of_length_at_least_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.00019
  ]
}