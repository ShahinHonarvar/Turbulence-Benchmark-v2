{
  "parameter(s)": [
    42
  ],
  "test_string_of_similar_chars_of_length_42": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_similar_chars_of_length_greater_than_42": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefab', ...}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefab', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00707
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', ...}\n +  where {'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', 'a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00348
  ],
  "test_string_of_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', ...}\n +  where {'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', 'a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', ...} = palindrome_of_length_at_least_n('a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%')",
    0.00081
  ]
}