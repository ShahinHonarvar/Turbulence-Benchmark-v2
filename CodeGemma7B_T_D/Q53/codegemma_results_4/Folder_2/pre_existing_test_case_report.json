{
  "parameter(s)": [
    55
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  ', '  a  a  a  ', '  a  a  a  a  a  ', '  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  ', ...}\n +  where {'  a  ', '  a  a  a  ', '  a  a  a  a  a  ', '  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    1.00736
  ],
  "test_string_of_similar_chars_of_length_55": [
    "failed",
    "AssertionError: assert {'aaa', 'aaaa...aaaaaaa', ...} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (50 lines hidden), use '-vv' to show",
    0.00684
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'   ', '     ', '       ', '         ', '           ', '             ', ...}\n +  where {'   ', '     ', '       ', '         ', '           ', '             ', ...} = palindrome_of_length_at_least_n('                                                                                                              ')",
    0.03223
  ]
}