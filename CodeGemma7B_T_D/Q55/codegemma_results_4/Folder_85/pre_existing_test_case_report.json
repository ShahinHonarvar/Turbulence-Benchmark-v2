{
  "parameter(s)": [
    -97
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00017
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00017
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00014
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-97, -97, -...97, -97, ...]] == [[-97], [-97]...], [-97], ...]\n  At index 0 diff: [-97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97] != [-97]\n  Right contains 61 more items, first extra item: [-97]\n  Full diff:\n    [\n  -  [-97],\n  ?      -\n  +  [-97,...\n  \n  ...Full output truncated (125 lines hidden), use '-vv' to show",
    0.00569
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7c845049b440>([-97])\n +    where <built-in method count of list object at 0x7c845049b440> = [[-97, 1, -97, 1, -97], [-97, 1, -97, 1, -97], [1, -97, 1, -97], [-97, 1, -97]].count",
    0.00035
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 97 == -97\n +  where 97 = <built-in function prod>([-1, -97])\n +    where <built-in function prod> = math.prod",
    0.00028
  ]
}