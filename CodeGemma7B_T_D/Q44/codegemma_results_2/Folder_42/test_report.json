{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests44_42_2.py::test_list_of_primes", "location": ["tests44_42_2.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023182099994301097, "start": 1729816962.9314613, "stop": 1729816962.931694, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw0>"}
{"nodeid": "tests44_42_2.py::test_list_of_ones", "location": ["tests44_42_2.py", 9, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000331291999827954, "start": 1729816962.9314892, "stop": 1729816962.9318216, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw2>"}
{"nodeid": "tests44_42_2.py::test_list_of_non_prime_nums", "location": ["tests44_42_2.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00036095199993724236, "start": 1729816962.9314415, "stop": 1729816962.9318032, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_42_2.py::test_list_of_ones", "location": ["tests44_42_2.py", 9, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016822799989313353, "start": 1729816962.932127, "stop": 1729816962.9322956, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw2>"}
{"nodeid": "tests44_42_2.py::test_list_of_ones", "location": ["tests44_42_2.py", 9, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011373699999239761, "start": 1729816962.932698, "stop": 1729816962.9328125, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw2>"}
{"nodeid": "tests44_42_2.py::test_each_number_is_composite", "location": ["tests44_42_2.py", 26, "test_each_number_is_composite"], "keywords": {"test_each_number_is_composite": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001089469997168635, "start": 1729816962.933294, "stop": 1729816962.9334035, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw2>"}
{"nodeid": "tests44_42_2.py::test_each_number_is_composite", "location": ["tests44_42_2.py", 26, "test_each_number_is_composite"], "keywords": {"test_each_number_is_composite": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018095700033882167, "start": 1729816962.9335227, "stop": 1729816962.9337041, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw2>"}
{"nodeid": "tests44_42_2.py::test_each_number_is_composite", "location": ["tests44_42_2.py", 26, "test_each_number_is_composite"], "keywords": {"test_each_number_is_composite": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.18140003705048e-05, "start": 1729816962.9340432, "stop": 1729816962.9341354, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw2>"}
{"nodeid": "tests44_42_2.py::test_list_of_primes", "location": ["tests44_42_2.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 7, "message": "assert {2} == set()\n  Extra items in the left set:\n  2\n  Full diff:\n  - set()\n  + {2}"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(99 * 10)]", ">           assert composite_nums_between_indices(list_of_primes) == set()", "E           assert {2} == set()", "E             Extra items in the left set:", "E             2", "E             Full diff:", "E             - set()", "E             + {2}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 7, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(99 * 10)]", ">           assert composite_nums_between_indices(list_of_primes) == set()", "E           assert {2} == set()", "E             Extra items in the left set:", "E             2", "E             Full diff:", "E             - set()", "E             + {2}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 7, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 7, "message": "assert {2} == set()\n  Extra items in the left set:\n  2\n  Full diff:\n  - set()\n  + {2}"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005541390000871615, "start": 1729816962.9320135, "stop": 1729816962.9325683, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw0>"}
{"nodeid": "tests44_42_2.py::test_list_of_non_prime_nums", "location": ["tests44_42_2.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 19, "message": "assert {465, 470, 480, 490, 495, 500} == {465, 470, 47...485, 490, ...}\n  Extra items in the right set:\n  505\n  475\n  485\n  Full diff:\n  - {480, 485, 490, 495, 465, 500, 470, 505, 475}\n  ?       -----                       ----------\n  + {480, 490, 495, 465, 500, 470}"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (99 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[91:99 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert {465, 470, 480, 490, 495, 500} == {465, 470, 47...485, 490, ...}", "E             Extra items in the right set:", "E             505", "E             475", "E             485", "E             Full diff:", "E             - {480, 485, 490, 495, 465, 500, 470, 505, 475}", "E             ?       -----                       ----------", "E             + {480, 490, 495, 465, 500, 470}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_non_prime_nums():", "        for n in range(2,10):", "            list_of_non_prime_nums = [n*i for i in range(2, (99 + 1) * 10)]", "            expected_result = list_of_non_prime_nums[91:99 + 1]", ">           assert composite_nums_between_indices(list_of_non_prime_nums) == set(expected_result)", "E           assert {465, 470, 480, 490, 495, 500} == {465, 470, 47...485, 490, ...}", "E             Extra items in the right set:", "E             505", "E             475", "E             485", "E             Full diff:", "E             - {480, 485, 490, 495, 465, 500, 470, 505, 475}", "E             ?       -----                       ----------", "E             + {480, 490, 495, 465, 500, 470}"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q44/codegemma_results_2/Folder_42/tests44_42_2.py", "lineno": 19, "message": "assert {465, 470, 480, 490, 495, 500} == {465, 470, 47...485, 490, ...}\n  Extra items in the right set:\n  505\n  475\n  485\n  Full diff:\n  - {480, 485, 490, 495, 465, 500, 470, 505, 475}\n  ?       -----                       ----------\n  + {480, 490, 495, 465, 500, 470}"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009958869995898567, "start": 1729816962.9321594, "stop": 1729816962.933156, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_42_2.py::test_list_of_non_prime_nums", "location": ["tests44_42_2.py", 14, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018238099983136635, "start": 1729816962.9521, "stop": 1729816962.9522839, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw1>"}
{"nodeid": "tests44_42_2.py::test_list_of_primes", "location": ["tests44_42_2.py", 3, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests44_42_2.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019255999995948514, "start": 1729816962.9515965, "stop": 1729816962.95179, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "14e029dd74df4426b6892d5fffcf8ca9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
