{
  "parameter(s)": [
    4,
    4,
    9
  ],
  "test_string_of_same_numbers": [
    "failed",
    "AssertionError: assert not {('0', '0', '0', '0'), ('0', '0', '0', '0', '0', '0', ...), ('0', '0', '0', '0', '0', '0'), '0000', '00000', '00', ...}\n +  where {('0', '0', '0', '0'), ('0', '0', '0', '0', '0', '0', ...), ('0', '0', '0', '0', '0', '0'), '0000', '00000', '00', ...} = palindromes_between_indices('000000000000000000')",
    0.00756
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'      ', '   ', (' ', ' ', ' ', ' ', ' ', ' ', ...), '    ', (' ', ' ', ' ', ' ', ' ', ' ', ...), '     ', ...}\n +  where {'      ', '   ', (' ', ' ', ' ', ' ', ' ', ' ', ...), '    ', (' ', ' ', ' ', ' ', ' ', ' ', ...), '     ', ...} = palindromes_between_indices('                  ')",
    0.0069
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {('A', 'A', '...A', 'A'), ...} == {'aaaa', 'aaaaa', 'aaaaaa'}\n  Extra items in the left set:\n  'AA'\n  ('A', 'A', 'A', 'A')\n  ('A', 'A', 'A', 'A', 'A', 'A', ...)\n  'AAAA'\n  'A'\n  ('A', 'A', 'A', 'A', 'A', 'A')...\n  \n  ...Full output truncated (61 lines hidden), use '-vv' to show",
    0.00712
  ]
}