{
  "parameter(s)": [
    7,
    2,
    8
  ],
  "test_string_of_same_numbers": [
    "passed",
    "",
    0.00036
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00133
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_same_punctuations": [
    "passed",
    "",
    0.00022
  ],
  "test_string_of_similar_chars": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'a%%&&aa', 'a%%&a&a', 'a%%a&&a', 'a%&%&aa', 'a%&%a&a', 'a%&&%aa', ...}\n +  where {'a%%&&aa', 'a%%&a&a', 'a%%a&&a', 'a%&%&aa', 'a%&%a&a', 'a%&&%aa', ...} = palindromes_between_indices('%a&%a&%a&%a&%a&%a&%a&%a&%a&')",
    0.01381
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'a    aa', 'a   a a', 'a  a  a', 'a a   a', 'aa    a'}\n +  where {'a    aa', 'a   a a', 'a  a  a', 'a a   a', 'aa    a'} = palindromes_between_indices(' a  a  a  a  a  a  a  a  a ')",
    0.01151
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {'abcdefg', 'abcdfeg', 'abcedfg', 'abcefdg', 'abcfdeg', 'abcfedg', ...}\n +  where {'abcdefg', 'abcdfeg', 'abcedfg', 'abcefdg', 'abcfdeg', 'abcfedg', ...} = palindromes_between_indices('abcdefghijkl')",
    0.00826
  ]
}