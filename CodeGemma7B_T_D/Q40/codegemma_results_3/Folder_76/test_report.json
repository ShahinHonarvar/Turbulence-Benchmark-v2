{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests40_76_3.py::test_length_of_result", "location": ["tests40_76_3.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015760600217618048, "start": 1729807232.0901666, "stop": 1729807232.0903246, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw2>"}
{"nodeid": "tests40_76_3.py::test_if_result_is_sorted", "location": ["tests40_76_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011753899161703885, "start": 1729807232.089916, "stop": 1729807232.090034, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_76_3.py::test_strings_of_size_equal_to_3", "location": ["tests40_76_3.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015992598491720855, "start": 1729807232.090163, "stop": 1729807232.0903237, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_76_3.py::test_length_of_result", "location": ["tests40_76_3.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001334609987679869, "start": 1729807232.0905478, "stop": 1729807232.0906816, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw2>"}
{"nodeid": "tests40_76_3.py::test_length_of_result", "location": ["tests40_76_3.py", 14, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.43409909773618e-05, "start": 1729807232.0909414, "stop": 1729807232.091016, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw2>"}
{"nodeid": "tests40_76_3.py::test_if_result_is_sorted", "location": ["tests40_76_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 28, "message": "AssertionError: assert ['F', 'W', '^'] == ['^', 'W', 'F']\n  At index 0 diff: 'F' != '^'\n  Full diff:\n  - ['^', 'W', 'F']\n  ?   ^         ^\n  + ['F', 'W', '^']\n  ?   ^         ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['F', 'W', '^'] == ['^', 'W', 'F']", "E             At index 0 diff: 'F' != '^'", "E             Full diff:", "E             - ['^', 'W', 'F']", "E             ?   ^         ^", "E             + ['F', 'W', '^']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_result_is_sorted():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3 + 1))", "        result = return_n_smallest_chars(s)", "        if 'descending' == 'ascending':", "            assert result == sorted(result)", "        else:", ">           assert result == sorted(result, reverse=True)", "E           AssertionError: assert ['F', 'W', '^'] == ['^', 'W', 'F']", "E             At index 0 diff: 'F' != '^'", "E             Full diff:", "E             - ['^', 'W', 'F']", "E             ?   ^         ^", "E             + ['F', 'W', '^']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 28, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 28, "message": "AssertionError: assert ['F', 'W', '^'] == ['^', 'W', 'F']\n  At index 0 diff: 'F' != '^'\n  Full diff:\n  - ['^', 'W', 'F']\n  ?   ^         ^\n  + ['F', 'W', '^']\n  ?   ^         ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005152100056875497, "start": 1729807232.0902112, "stop": 1729807232.0907266, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_76_3.py::test_if_result_is_sorted", "location": ["tests40_76_3.py", 20, "test_if_result_is_sorted"], "keywords": {"test_if_result_is_sorted": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001039999770000577, "start": 1729807232.0999074, "stop": 1729807232.1000118, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw1>"}
{"nodeid": "tests40_76_3.py::test_strings_of_size_equal_to_3", "location": ["tests40_76_3.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 12, "message": "AssertionError: assert ['$', 'L', '|'] == ['|', 'L', '$']\n  At index 0 diff: '$' != '|'\n  Full diff:\n  - ['|', 'L', '$']\n  ?   ^         ^\n  + ['$', 'L', '|']\n  ?   ^         ^"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_3():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['$', 'L', '|'] == ['|', 'L', '$']", "E             At index 0 diff: '$' != '|'", "E             Full diff:", "E             - ['|', 'L', '$']", "E             ?   ^         ^", "E             + ['$', 'L', '|']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_3():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=3))", "        if 'descending' == 'ascending':", "            assert return_n_smallest_chars(s) == sorted(s)", "        else:", ">           assert return_n_smallest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert ['$', 'L', '|'] == ['|', 'L', '$']", "E             At index 0 diff: '$' != '|'", "E             Full diff:", "E             - ['|', 'L', '$']", "E             ?   ^         ^", "E             + ['$', 'L', '|']", "E             ?   ^         ^"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q40/codegemma_results_3/Folder_76/tests40_76_3.py", "lineno": 12, "message": "AssertionError: assert ['$', 'L', '|'] == ['|', 'L', '$']\n  At index 0 diff: '$' != '|'\n  Full diff:\n  - ['|', 'L', '$']\n  ?   ^         ^\n  + ['$', 'L', '|']\n  ?   ^         ^"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005125610041432083, "start": 1729807232.0905883, "stop": 1729807232.0911014, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw0>"}
{"nodeid": "tests40_76_3.py::test_strings_of_size_equal_to_3", "location": ["tests40_76_3.py", 5, "test_strings_of_size_equal_to_3"], "keywords": {"test_strings_of_size_equal_to_3": 1, "tests40_76_3.py": 1, "Folder_76": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013967501581646502, "start": 1729807232.1062021, "stop": 1729807232.1063426, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ede8eef591064377b2a916e1c11f85ef", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
