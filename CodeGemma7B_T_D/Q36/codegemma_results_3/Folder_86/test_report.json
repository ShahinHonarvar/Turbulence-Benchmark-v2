{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests36_86_3.py::test_repeat_char", "location": ["tests36_86_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015720800729468465, "start": 1729773884.1280417, "stop": 1729773884.1281993, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_86_3.py::test_property_of_function", "location": ["tests36_86_3.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022099699708633125, "start": 1729773884.1280644, "stop": 1729773884.128286, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw2>"}
{"nodeid": "tests36_86_3.py::test_compare_lengths_with_large_string", "location": ["tests36_86_3.py", 24, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002511769998818636, "start": 1729773884.128071, "stop": 1729773884.1283228, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_86_3.py::test_repeat_char", "location": ["tests36_86_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 9, "message": "AssertionError: assert not 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'\n +  where 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm' = filter_chars('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (709 + 2)", "        if 'X' < 'm' < '}':", ">           assert not filter_chars(s)", "E           AssertionError: assert not 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'", "E            +  where 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm' = filter_chars('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (709 + 2)", "        if 'X' < 'm' < '}':", ">           assert not filter_chars(s)", "E           AssertionError: assert not 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'", "E            +  where 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm' = filter_chars('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 9, "message": "AssertionError: assert not 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'\n +  where 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm' = filter_chars('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024947000201791525, "start": 1729773884.1284268, "stop": 1729773884.1286767, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_86_3.py::test_repeat_char", "location": ["tests36_86_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014715400175191462, "start": 1729773884.1386535, "stop": 1729773884.1388016, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_86_3.py::test_property_of_function", "location": ["tests36_86_3.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 22, "message": "AssertionError: assert 1397 == (1418 - 395)\n +  where 1397 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')\n +    where 'kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI' = filter_chars('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')\n +  and   1418 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_property_of_function():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(709 * 2))", "        sliced_s = set(s[672 + 1:709])", "        c = 0", "        for char in sliced_s:", "            if 'X' < char < '}':", "                c += s.count(char)", "    ", ">       assert len(filter_chars(s)) == len(s) - c", "E       AssertionError: assert 1397 == (1418 - 395)", "E        +  where 1397 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')", "E        +    where 'kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI' = filter_chars('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')", "E        +  and   1418 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 22, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_property_of_function():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(709 * 2))", "        sliced_s = set(s[672 + 1:709])", "        c = 0", "        for char in sliced_s:", "            if 'X' < char < '}':", "                c += s.count(char)", "    ", ">       assert len(filter_chars(s)) == len(s) - c", "E       AssertionError: assert 1397 == (1418 - 395)", "E        +  where 1397 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')", "E        +    where 'kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI' = filter_chars('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')", "E        +  and   1418 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 22, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_3/Folder_86/tests36_86_3.py", "lineno": 22, "message": "AssertionError: assert 1397 == (1418 - 395)\n +  where 1397 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')\n +    where 'kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzQNKMFDTUJCFMSBVQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI' = filter_chars('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')\n +  and   1418 = len('kocuPFwDRhxvlbOrQtMVurXRmFKNjvpoENchpuCCpcSoaOODwycWCDriOsiPiWkOrgJgIWuBFqBvmffOEOpHNciqPLCkwPdblNdBCwSqlygfXtxchrSuoClggcKwCzITsMTTgFFJIDdXKdgEiwLBdeUnhTrpLzsmJHlvvXzVdNEGcFuSFgMGfYkGkhPaRfwDhntqaHDngttorqUhtvAUjFvCXDlQNNDMltdxzwluuBDdlZWYZDsZFkJQzGdJRXiArZsUefIYenXMkinakFDWCllmGumyVGAPQfcSQirCHfqCeLtiJiUyXDtINeRyMWSMbVNLMNoYgKSNkNDZbUUqNZHtuglDQmfRCgYsNSpxfILONJaWGgzBGBTcCznccufoMGQQjQfiMiullbwBunTBLreIjTIGszlPjFKxcXyzvRubOrDqWXpizrbkqYXulgdYukoMIXDwzayrezeAMfowwCIrrwNkawjDDQnYnfmzlTRSomonfmMTwhNeyzdKjyaEyBqKcVBNrjNXlLiHFgUUmLvkSQDqkOPjdBCfESvrbIbAlPiWNjVmEPuLugAfiwQZykkcmSFGVKGqhJXorzauzgFxPXeWRUtEZKVHDpKqRAtXSGOKgiYpWuBCbpSgqciPfEejWbmtJHGbJZhArGqNTJdOujttQmJzbQNKMFimumcyqZxDnjZTUsrhJCyFqMSBZVrgQmKRUeIAsAUGyXABSTQRsnUGueqRqUwHujjfceHBXTsRqLwKppxLxShHmcjUznVlamzUYWawLfcczRiIROAtSUHyZytIXTZhgRcSAcIGOWOCBvtcSgGzpAfKAZXrCfZsqBzpArYrJQJpymnFNwStlFNxpSyDECgbSvPIijXusfAxsbAHToXQeJnTvMqHzHMbbYHnJiNwOFURZttxxqrYWvAjayFVnBAhllTvNZmtcWrMDRDxVPjOJjKGRZmbkxRuyKRHJbmrRPdliydUgYedVFtTOfVRejlARumPrUakDQHDqhBdoDIuCHQjHglSmfrZjYyNUYDSLwGXMcNDhkQjvSCDtmOLOXJcjukPiWiAkviTnKxTjOQjVIhHLpKQINnXzcrYZOQtmwbXQpSqVTJAOKTJWFgKWZmqcqMCFItLEDBzgYNbKNpnJmnHWHloRotuFiWtzcYFzsIzAmULpeDQYVtaUgzEBVHWohZKaAsilTqKLHxElwgpRatuFLOLptNOXKpJQwNNXSrNGPQoNwxLjJWARyKvsCsPofrWFZvDqPVpQKsbCDITFObGbtXBaRyuBMMJbDddfLsiGuJlUzmFLnpJXUAlyZXfVqYfBRiqdwqnSYoElPPFjyXUdZBQNEvRZgEmWezDmtjqonlEIqKCgifwtGUkzgTyFpzqolpwIQHaXCvdrsLoupNHXoLWFJYoRLNmZI')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005813379830215126, "start": 1729773884.1284933, "stop": 1729773884.129075, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw2>"}
{"nodeid": "tests36_86_3.py::test_property_of_function", "location": ["tests36_86_3.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001116110070142895, "start": 1729773884.1386907, "stop": 1729773884.1388035, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw2>"}
{"nodeid": "tests36_86_3.py::test_compare_lengths_with_large_string", "location": ["tests36_86_3.py", 24, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.02411925999331288, "start": 1729773884.1285963, "stop": 1729773884.1527169, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_86_3.py::test_compare_lengths_with_large_string", "location": ["tests36_86_3.py", 24, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests36_86_3.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015907699707895517, "start": 1729773884.1532927, "stop": 1729773884.1534526, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "41bd18a23735466d818dcd970f81010d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
