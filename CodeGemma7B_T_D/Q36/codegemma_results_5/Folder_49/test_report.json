{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests36_49_5.py::test_repeat_char", "location": ["tests36_49_5.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001693529775366187, "start": 1729774257.8445337, "stop": 1729774257.844704, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_49_5.py::test_compare_lengths_with_large_string", "location": ["tests36_49_5.py", 24, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015714598703198135, "start": 1729774257.8444593, "stop": 1729774257.8446167, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw2>"}
{"nodeid": "tests36_49_5.py::test_property_of_function", "location": ["tests36_49_5.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016484697698615491, "start": 1729774257.8445456, "stop": 1729774257.844711, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_49_5.py::test_repeat_char", "location": ["tests36_49_5.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013866598601453006, "start": 1729774257.8449547, "stop": 1729774257.845094, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_49_5.py::test_repeat_char", "location": ["tests36_49_5.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.999899728223681e-05, "start": 1729774257.845417, "stop": 1729774257.8455074, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_49_5.py::test_chars_not_in_range", "location": ["tests36_49_5.py", 29, "test_chars_not_in_range"], "keywords": {"test_chars_not_in_range": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.367298869416118e-05, "start": 1729774257.8458948, "stop": 1729774257.845979, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_49_5.py::test_chars_not_in_range", "location": ["tests36_49_5.py", 29, "test_chars_not_in_range"], "keywords": {"test_chars_not_in_range": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError: '<' not supported between instances of 'str' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_chars_not_in_range():", "        given_range = list(range(ord('D') + 1, ord('H')))", "        s = ''", "        for _ in range(91 + 10):", "            char = random.choice(string.ascii_letters + '$ % & * + < = > @ ' + string.digits)", "            while ord(char) in given_range:", "                char = random.choice(string.ascii_letters + '$ % & * + < = > @ ' + string.digits)", "            s += char", "    ", ">       assert filter_chars(s) == s"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/tests36_49_5.py", "lineno": 39, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", ">       return ''.join([c for c in string if (c < 'D' or c > 'H') or c < 46 or c >= 91])", "E       TypeError: '<' not supported between instances of 'str' and 'int'"], "reprfuncargs": {"args": [["string", "'itj6 qA wmB>zyjK   btojz  M2zzS1sJy*71CvP0T2R<1g8rdxvyTIbtpSI PtN0yqC9ge6CAdmUHf1qsf>< mlU5 4 hXArp2l'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_chars_not_in_range():", "        given_range = list(range(ord('D') + 1, ord('H')))", "        s = ''", "        for _ in range(91 + 10):", "            char = random.choice(string.ascii_letters + '$ % & * + < = > @ ' + string.digits)", "            while ord(char) in given_range:", "                char = random.choice(string.ascii_letters + '$ % & * + < = > @ ' + string.digits)", "            s += char", "    ", ">       assert filter_chars(s) == s"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/tests36_49_5.py", "lineno": 39, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", ">       return ''.join([c for c in string if (c < 'D' or c > 'H') or c < 46 or c >= 91])", "E       TypeError: '<' not supported between instances of 'str' and 'int'"], "reprfuncargs": {"args": [["string", "'itj6 qA wmB>zyjK   btojz  M2zzS1sJy*71CvP0T2R<1g8rdxvyTIbtpSI PtN0yqC9ge6CAdmUHf1qsf>< mlU5 4 hXArp2l'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError: '<' not supported between instances of 'str' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017219901201315224, "start": 1729774257.846068, "stop": 1729774257.8462405, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_49_5.py::test_chars_not_in_range", "location": ["tests36_49_5.py", 29, "test_chars_not_in_range"], "keywords": {"test_chars_not_in_range": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013343599857762456, "start": 1729774257.8574822, "stop": 1729774257.8576164, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw1>"}
{"nodeid": "tests36_49_5.py::test_property_of_function", "location": ["tests36_49_5.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError: '<' not supported between instances of 'str' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_property_of_function():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(91 * 2))", "        sliced_s = set(s[46 + 1:91])", "        c = 0", "        for char in sliced_s:", "            if 'D' < char < 'H':", "                c += s.count(char)", "    ", ">       assert len(filter_chars(s)) == len(s) - c"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/tests36_49_5.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", ">       return ''.join([c for c in string if (c < 'D' or c > 'H') or c < 46 or c >= 91])", "E       TypeError: '<' not supported between instances of 'str' and 'int'"], "reprfuncargs": {"args": [["string", "'klaYBPzEHfFxovxyQctkOdJjuOvYvdjpkXZyeoAclMFNariTGPFTJsmHOgYRyfoRwOYaoWsHwDuTfTQEspcsjpqkunwlujfgRTQFutKgJHkspTLmVynEGsaqxliJNDIHCpvCwfVRVJUppDIzrELpHnuLGtfQLixcmEBBuNLrIyqjOMyObupmEY'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_property_of_function():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(91 * 2))", "        sliced_s = set(s[46 + 1:91])", "        c = 0", "        for char in sliced_s:", "            if 'D' < char < 'H':", "                c += s.count(char)", "    ", ">       assert len(filter_chars(s)) == len(s) - c"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/tests36_49_5.py", "lineno": 22, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", ">       return ''.join([c for c in string if (c < 'D' or c > 'H') or c < 46 or c >= 91])", "E       TypeError: '<' not supported between instances of 'str' and 'int'"], "reprfuncargs": {"args": [["string", "'klaYBPzEHfFxovxyQctkOdJjuOvYvdjpkXZyeoAclMFNariTGPFTJsmHOgYRyfoRwOYaoWsHwDuTfTQEspcsjpqkunwlujfgRTQFutKgJHkspTLmVynEGsaqxliJNDIHCpvCwfVRVJUppDIzrELpHnuLGtfQLixcmEBBuNLrIyqjOMyObupmEY'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError: '<' not supported between instances of 'str' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022553399321623147, "start": 1729774257.8450692, "stop": 1729774257.8452952, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_49_5.py::test_property_of_function", "location": ["tests36_49_5.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013863499043509364, "start": 1729774257.8585744, "stop": 1729774257.8587136, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_49_5.py::test_compare_lengths_with_large_string", "location": ["tests36_49_5.py", 24, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError: '<' not supported between instances of 'str' and 'int'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_lengths_with_large_string():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(91*100))", ">       assert len(filter_chars(s)) <= len(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/tests36_49_5.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", ">       return ''.join([c for c in string if (c < 'D' or c > 'H') or c < 46 or c >= 91])", "E       TypeError: '<' not supported between instances of 'str' and 'int'"], "reprfuncargs": {"args": [["string", "'GxLysBgnlWPPdLdRoaAKoypckOsDjsuQFJAHSATuLgbpjAhnyZwJvrdCAgrxPLCOlDgfOXuheznFmLdqAgeTqzhUQAKXqOqekVlPcmbojxRLixATqPiTO...MsgSyQfsNVwUqfcfhzLfDHwRDxbewUlqabWUBAwCWkAFmWtkJRohxHUzUyIGPThbmelDqmRhnsCmEZbdyMWdafcCGWabldBYvqCFQAjgezxghqgPlOihQu'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_lengths_with_large_string():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(91*100))", ">       assert len(filter_chars(s)) <= len(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/tests36_49_5.py", "lineno": 27, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def filter_chars(string):", ">       return ''.join([c for c in string if (c < 'D' or c > 'H') or c < 46 or c >= 91])", "E       TypeError: '<' not supported between instances of 'str' and 'int'"], "reprfuncargs": {"args": [["string", "'GxLysBgnlWPPdLdRoaAKoypckOsDjsuQFJAHSATuLgbpjAhnyZwJvrdCAgrxPLCOlDgfOXuheznFmLdqAgeTqzhUQAKXqOqekVlPcmbojxRLixATqPiTO...MsgSyQfsNVwUqfcfhzLfDHwRDxbewUlqabWUBAwCWkAFmWtkJRohxHUzUyIGPThbmelDqmRhnsCmEZbdyMWdafcCGWabldBYvqCFQAjgezxghqgPlOihQu'"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q36/codegemma_results_5/Folder_49/generated_answer.py", "lineno": 2, "message": "TypeError: '<' not supported between instances of 'str' and 'int'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0035381359921302646, "start": 1729774257.8449886, "stop": 1729774257.8485274, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw2>"}
{"nodeid": "tests36_49_5.py::test_compare_lengths_with_large_string", "location": ["tests36_49_5.py", 24, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests36_49_5.py": 1, "Folder_49": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013395698624663055, "start": 1729774257.8642082, "stop": 1729774257.864343, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4a4c202fe62349738eac431e40397a5c", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
