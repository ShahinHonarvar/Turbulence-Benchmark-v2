{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests43_11_1.py::test_list_of_non_prime_nums", "location": ["tests43_11_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017691899984129122, "start": 1729814643.2590675, "stop": 1729814643.259245, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_11_1.py::test_list_of_primes", "location": ["tests43_11_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018112099996869802, "start": 1729814643.2590625, "stop": 1729814643.2592444, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_11_1.py::test_list_of_non_prime_nums", "location": ["tests43_11_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004318050000620133, "start": 1729814643.2595387, "stop": 1729814643.2599711, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_11_1.py::test_list_of_non_prime_nums", "location": ["tests43_11_1.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.130699982051738e-05, "start": 1729814643.2603345, "stop": 1729814643.2604265, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_11_1.py::test_prime_nums_are_odd", "location": ["tests43_11_1.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002099059997817676, "start": 1729814643.2592418, "stop": 1729814643.2594523, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_11_1.py::test_prime_nums_are_odd", "location": ["tests43_11_1.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002357419998588739, "start": 1729814643.259789, "stop": 1729814643.2600255, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_11_1.py::test_prime_nums_are_odd", "location": ["tests43_11_1.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012794999975085375, "start": 1729814643.2604678, "stop": 1729814643.2605968, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_11_1.py::test_result_order", "location": ["tests43_11_1.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000142758999572834, "start": 1729814643.2612145, "stop": 1729814643.2613578, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_11_1.py::test_list_of_negative_nums", "location": ["tests43_11_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.051999995790538e-05, "start": 1729814643.2608747, "stop": 1729814643.2609653, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_11_1.py::test_list_of_primes", "location": ["tests43_11_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 2\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n  ?                                                              ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(76 * 10)]", "            expected_result = list_of_primes[55:76 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E             Right contains one more item: 2", "E             Full diff:", "E             - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "E             ?                                                              ---", "E             + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(76 * 10)]", "            expected_result = list_of_primes[55:76 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E             Right contains one more item: 2", "E             Full diff:", "E             - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "E             ?                                                              ---", "E             + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 2\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n  ?                                                              ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011536269998941862, "start": 1729814643.259492, "stop": 1729814643.2606459, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_11_1.py::test_list_of_primes", "location": ["tests43_11_1.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013122299969836604, "start": 1729814643.2699444, "stop": 1729814643.2700768, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_11_1.py::test_list_of_negative_nums", "location": ["tests43_11_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q43/codegemma_results_1/Folder_11/generated_answer.py", "lineno": 6, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(76 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        prime_nums = []", "        for i in range(55, 76):", "            num = nums[i]", "            is_prime = True", ">           for j in range(2, int(num ** 0.5) + 1):", "E           TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["nums", "[-1, -2, -3, -4, -5, -6, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(76 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_primes_between_indices(nums):", "        prime_nums = []", "        for i in range(55, 76):", "            num = nums[i]", "            is_prime = True", ">           for j in range(2, int(num ** 0.5) + 1):", "E           TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["nums", "[-1, -2, -3, -4, -5, -6, ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/generated_answer.py", "lineno": 6, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q43/codegemma_results_1/Folder_11/generated_answer.py", "lineno": 6, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013741599968852825, "start": 1729814643.2610657, "stop": 1729814643.2612038, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_11_1.py::test_list_of_negative_nums", "location": ["tests43_11_1.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012177000007795868, "start": 1729814643.276792, "stop": 1729814643.2769144, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_11_1.py::test_result_order", "location": ["tests43_11_1.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 53, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 3\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]\n  ?                                                               ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 55 == 76:", "            initial_list = [i for i in range(1, (76 + 1) * 10)]", "            initial_list[55] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 76 - 55 + 1", "            prefix = random.choices(range(1, 1000), k=55)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E                 Right contains one more item: 3", "E                 Full diff:", "E                 - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]", "E                 ?                                                               ---", "E                 + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 55 == 76:", "            initial_list = [i for i in range(1, (76 + 1) * 10)]", "            initial_list[55] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 76 - 55 + 1", "            prefix = random.choices(range(1, 1000), k=55)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E                 Right contains one more item: 3", "E                 Full diff:", "E                 - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]", "E                 ?                                                               ---", "E                 + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_D/Q43/codegemma_results_1/Folder_11/tests43_11_1.py", "lineno": 53, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 3\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]\n  ?                                                               ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016044879998844408, "start": 1729814643.261507, "stop": 1729814643.263113, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_11_1.py::test_result_order", "location": ["tests43_11_1.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_11_1.py": 1, "Folder_11": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015374599979622872, "start": 1729814643.2811615, "stop": 1729814643.2813165, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "78546205e15e47c7b3976932574c9674", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
