{
  "parameter(s)": [
    65
  ],
  "test_list_of_strings_of_length_two": [
    "passed",
    "",
    0.00016
  ],
  "test_list_of_two_strings_of_same_lengths": [
    "passed",
    "",
    0.00015
  ],
  "test_list_of_four_strings": [
    "passed",
    "",
    9e-05
  ],
  "test_list_of_two_strings_of_different_lengths": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_strings_including_one_same_uppercase_char_1": [
    "passed",
    "",
    7e-05
  ],
  "test_list_of_strings_including_one_same_lowercase_char_1": [
    "passed",
    "",
    7e-05
  ],
  "test_list_of_strings_including_one_distinct_sequence_1": [
    "passed",
    "",
    6e-05
  ],
  "test_list_of_many_strings_with_different_lengths": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', 'aaaaaaaa', ...])",
    0.00257
  ],
  "test_list_of_strings_including_one_same_uppercase_char_2": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaa', 'aAaaaa', 'aaAaaa', 'aaaAaa', 'aaaaAa', 'aaaaaA'])",
    0.00019
  ],
  "test_list_of_strings_including_one_distinct_sequence_2": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['testAAAAA', 'AtestAAAA', 'AAtestAAA', 'AAAtestAA', 'AAAAtestA', 'AAAAAtest'])",
    0.00022
  ]
}