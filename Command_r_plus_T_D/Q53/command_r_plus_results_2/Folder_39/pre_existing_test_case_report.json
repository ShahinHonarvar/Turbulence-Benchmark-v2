{
  "parameter(s)": [
    69
  ],
  "test_string_of_similar_chars_of_length_69": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00019
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00045
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00047
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.00012
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_similar_chars_of_length_greater_than_69": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...\n  \n  ...Full output truncated (137 lines hidden), use '-vv' to show",
    0.00154
  ],
  "test_string_of_similar_nums": [
    "failed",
    "AssertionError: assert not {'000000000000000000000000000000000000000000000000000000000000000000000'}\n +  where {'000000000000000000000000000000000000000000000000000000000000000000000'} = palindrome_of_length_at_least_n('000000000000000000000000000000000000000000000000000000000000000000000')",
    0.0012
  ],
  "test_string_of_many_similar_nums": [
    "failed",
    "AssertionError: assert not {'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}\n +  where {'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'} = palindrome_of_length_at_least_n('000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.00024
  ]
}