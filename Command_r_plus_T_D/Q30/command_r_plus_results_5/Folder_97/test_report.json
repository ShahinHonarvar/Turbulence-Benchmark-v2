{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_97_5.py::test_compare_length_of_strings", "location": ["tests30_97_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011284500942565501, "start": 1729760682.8667579, "stop": 1729760682.866871, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_97_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001663959992583841, "start": 1729760682.8670084, "stop": 1729760682.8671753, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_97_5.py::test_compare_length_of_strings", "location": ["tests30_97_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012529798550531268, "start": 1729760682.8670602, "stop": 1729760682.8671856, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_5.py::test_compare_length_of_strings", "location": ["tests30_97_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.448898395523429e-05, "start": 1729760682.8674402, "stop": 1729760682.867515, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_5.py::test_string_of_length_one", "location": ["tests30_97_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020618599955923855, "start": 1729760682.8671126, "stop": 1729760682.8673198, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_97_5.py::test_length_of_result", "location": ["tests30_97_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012021799921058118, "start": 1729760682.8691146, "stop": 1729760682.8692355, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_5.py::test_length_of_result", "location": ["tests30_97_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 40, "message": "AssertionError: assert 25 == (21 + 2)\n +  where 25 = len('DhhobSewmntuIxQJ3UMrBThho')\n +  and   21 = len('DobSewmntuIxQJ3UMrBTo')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'o'", "        returned_string = insert_before_character(s)", "        count = s.count('o')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 25 == (21 + 2)", "E        +  where 25 = len('DhhobSewmntuIxQJ3UMrBThho')", "E        +  and   21 = len('DobSewmntuIxQJ3UMrBTo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'o'", "        returned_string = insert_before_character(s)", "        count = s.count('o')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 25 == (21 + 2)", "E        +  where 25 = len('DhhobSewmntuIxQJ3UMrBThho')", "E        +  and   21 = len('DobSewmntuIxQJ3UMrBTo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 40, "message": "AssertionError: assert 25 == (21 + 2)\n +  where 25 = len('DhhobSewmntuIxQJ3UMrBThho')\n +  and   21 = len('DobSewmntuIxQJ3UMrBTo')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023392101866193116, "start": 1729760682.8693497, "stop": 1729760682.8695838, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_5.py::test_length_of_result", "location": ["tests30_97_5.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014783299411647022, "start": 1729760682.8827405, "stop": 1729760682.8828897, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_97_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')\n +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')\n +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'o' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')", "E        +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')", "E        +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'o' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')", "E        +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')", "E        +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')\n +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')\n +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003702079993672669, "start": 1729760682.8674414, "stop": 1729760682.8678122, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_97_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_97_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015619100304320455, "start": 1729760682.8843136, "stop": 1729760682.8844705, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_97_5.py::test_string_of_length_one", "location": ["tests30_97_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 8, "message": "AssertionError: assert 'hho' == 'ho'\n  - ho\n  + hho\n  ? +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'o'", ">       assert insert_before_character(s) == 'h' + 'o'", "E       AssertionError: assert 'hho' == 'ho'", "E         - ho", "E         + hho", "E         ? +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'o'", ">       assert insert_before_character(s) == 'h' + 'o'", "E       AssertionError: assert 'hho' == 'ho'", "E         - ho", "E         + hho", "E         ? +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_5/Folder_97/tests30_97_5.py", "lineno": 8, "message": "AssertionError: assert 'hho' == 'ho'\n  - ho\n  + hho\n  ? +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004697809927165508, "start": 1729760682.867643, "stop": 1729760682.8681138, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_97_5.py::test_string_of_length_one", "location": ["tests30_97_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_97_5.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018976000137627125, "start": 1729760682.8910837, "stop": 1729760682.8912747, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "fa8726715bf4404eb392a9610712d1b2", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
