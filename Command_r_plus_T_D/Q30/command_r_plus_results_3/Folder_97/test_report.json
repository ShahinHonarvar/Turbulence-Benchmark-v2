{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_97_3.py::test_compare_length_of_strings", "location": ["tests30_97_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016260301345027983, "start": 1729758182.4227, "stop": 1729758182.422863, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_97_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001657760003581643, "start": 1729758182.4226604, "stop": 1729758182.4228265, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_97_3.py::test_string_of_length_one", "location": ["tests30_97_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018081101006828249, "start": 1729758182.4227588, "stop": 1729758182.4229407, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_97_3.py::test_compare_length_of_strings", "location": ["tests30_97_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015939099830575287, "start": 1729758182.4231174, "stop": 1729758182.4232771, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_3.py::test_compare_length_of_strings", "location": ["tests30_97_3.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.381197742186487e-05, "start": 1729758182.4236507, "stop": 1729758182.4237454, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_3.py::test_length_of_result", "location": ["tests30_97_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010466700769029558, "start": 1729758182.4250453, "stop": 1729758182.4251502, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_97_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')\n +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')\n +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'o' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')", "E        +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')", "E        +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'o' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 3000 == (2 * 1000)", "E        +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')", "E        +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')", "E        +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 18, "message": "AssertionError: assert 3000 == (2 * 1000)\n +  where 3000 = len('hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho')\n +    where 'hhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho...ohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohhohho' = insert_before_character('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')\n +  and   1000 = len('oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003096350119449198, "start": 1729758182.4230587, "stop": 1729758182.4233687, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_97_3.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_97_3.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012626199168153107, "start": 1729758182.4331298, "stop": 1729758182.4332566, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_97_3.py::test_string_of_length_one", "location": ["tests30_97_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 8, "message": "AssertionError: assert 'hho' == 'ho'\n  - ho\n  + hho\n  ? +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'o'", ">       assert insert_before_character(s) == 'h' + 'o'", "E       AssertionError: assert 'hho' == 'ho'", "E         - ho", "E         + hho", "E         ? +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'o'", ">       assert insert_before_character(s) == 'h' + 'o'", "E       AssertionError: assert 'hho' == 'ho'", "E         - ho", "E         + hho", "E         ? +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 8, "message": "AssertionError: assert 'hho' == 'ho'\n  - ho\n  + hho\n  ? +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003946379874832928, "start": 1729758182.4232275, "stop": 1729758182.4236226, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_97_3.py::test_string_of_length_one", "location": ["tests30_97_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015381898265331984, "start": 1729758182.4398124, "stop": 1729758182.4399672, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_97_3.py::test_length_of_result", "location": ["tests30_97_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('gzysKbH2xQkGaWf9nvulhho')\n +  and   21 = len('gzysKbH2xQkGaWf9nvulo')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'o'", "        returned_string = insert_before_character(s)", "        count = s.count('o')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('gzysKbH2xQkGaWf9nvulhho')", "E        +  and   21 = len('gzysKbH2xQkGaWf9nvulo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'o'", "        returned_string = insert_before_character(s)", "        count = s.count('o')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('gzysKbH2xQkGaWf9nvulhho')", "E        +  and   21 = len('gzysKbH2xQkGaWf9nvulo')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q30/command_r_plus_results_3/Folder_97/tests30_97_3.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('gzysKbH2xQkGaWf9nvulhho')\n +  and   21 = len('gzysKbH2xQkGaWf9nvulo')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030626400257460773, "start": 1729758182.4252725, "stop": 1729758182.4255795, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_97_3.py::test_length_of_result", "location": ["tests30_97_3.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_97_3.py": 1, "Folder_97": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001375319843646139, "start": 1729758182.442049, "stop": 1729758182.4421873, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "858686ba5d294c259b70ac87e5d99f41", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
