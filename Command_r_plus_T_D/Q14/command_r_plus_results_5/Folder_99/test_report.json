{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_99_5.py::test_unsorted_large_range", "location": ["tests14_99_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015713299944764003, "start": 1729607588.422615, "stop": 1729607588.4227726, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_99_5.py::test_large_range", "location": ["tests14_99_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017535200458951294, "start": 1729607588.4230814, "stop": 1729607588.4232574, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_99_5.py::test_smallest_is_in_range", "location": ["tests14_99_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000202930998057127, "start": 1729607588.4240127, "stop": 1729607588.4242163, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_99_5.py::test_smallest_is_in_range", "location": ["tests14_99_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 10, "message": "assert None in [751, 911, -866, 787, -911, 614, ...]\n +  where None = find_second_smallest_num([751, 911, -866, 787, -911, 614, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(609 + 2))", "        if 608 == 609:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert None in [751, 911, -866, 787, -911, 614, ...]", "E            +  where None = find_second_smallest_num([751, 911, -866, 787, -911, 614, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(609 + 2))", "        if 608 == 609:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert None in [751, 911, -866, 787, -911, 614, ...]", "E            +  where None = find_second_smallest_num([751, 911, -866, 787, -911, 614, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 10, "message": "assert None in [751, 911, -866, 787, -911, 614, ...]\n +  where None = find_second_smallest_num([751, 911, -866, 787, -911, 614, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000401936995331198, "start": 1729607588.424514, "stop": 1729607588.4249165, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_99_5.py::test_smallest_is_in_range", "location": ["tests14_99_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018443800217937678, "start": 1729607588.4412262, "stop": 1729607588.4414117, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_99_5.py::test_unsorted_large_range", "location": ["tests14_99_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 30, "message": "assert None == -51\n +  where None = find_second_smallest_num([-143, 110, -25, -701, -848, -901, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 609 + 1000)]", "        random.shuffle(initial_list)", "        if 608 == 609:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[608:609 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert None == -51", "E            +  where None = find_second_smallest_num([-143, 110, -25, -701, -848, -901, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 609 + 1000)]", "        random.shuffle(initial_list)", "        if 608 == 609:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[608:609 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert None == -51", "E            +  where None = find_second_smallest_num([-143, 110, -25, -701, -848, -901, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 30, "message": "assert None == -51\n +  where None = find_second_smallest_num([-143, 110, -25, -701, -848, -901, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001190342998597771, "start": 1729607588.4231536, "stop": 1729607588.4243445, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_99_5.py::test_unsorted_large_range", "location": ["tests14_99_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001516799966339022, "start": 1729607588.4412804, "stop": 1729607588.4414327, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_99_5.py::test_large_range", "location": ["tests14_99_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 19, "message": "assert None == 609\n +  where None = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(609 + 1) * 1000)]", "        if 608 == 609:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[608 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert None == 609", "E            +  where None = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(609 + 1) * 1000)]", "        if 608 == 609:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[608 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert None == 609", "E            +  where None = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_r_plus_T_D/Q14/command_r_plus_results_5/Folder_99/tests14_99_5.py", "lineno": 19, "message": "assert None == 609\n +  where None = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.02062106099765515, "start": 1729607588.4236772, "stop": 1729607588.4442992, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_99_5.py::test_large_range", "location": ["tests14_99_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_99_5.py": 1, "Folder_99": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001122839967138134, "start": 1729607588.4591014, "stop": 1729607588.4592144, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "43c15e8dbad9480e90ffdcd452d18fb5", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
