text='```python\nimport numpy as np\n\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    for i in range(rows):\n        for j in range(cols):\n            for k in range(i, rows):\n                for l in range(j, cols):\n                    submatrix = matrix[i : k + 1, j : l + 1]\n                    if np.sum(submatrix) == -90:\n                        result.append(submatrix)\n    return result\n```' generation_id='da679702-196b-457f-bcf1-27cbd7b08616' citations=None documents=None is_search_required=None search_queries=None search_results=None finish_reason='COMPLETE' tool_calls=None chat_history=[Message_User(role='USER', message="<Write a function called 'submatrix_with_particular_sum' that takes one argument which is a two-dimensional numpy matrix of integers. The function should return the list of all submatrices of the given matrix such that the sum of all integers in each submatrix equals -90. If no such submatrix is found, the function should return an empty list.>", tool_calls=None), Message_Chatbot(role='CHATBOT', message='```python\nimport numpy as np\n\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    for i in range(rows):\n        for j in range(cols):\n            for k in range(i, rows):\n                for l in range(j, cols):\n                    submatrix = matrix[i : k + 1, j : l + 1]\n                    if np.sum(submatrix) == -90:\n                        result.append(submatrix)\n    return result\n```', tool_calls=None)] prompt=None meta=ApiMeta(api_version=ApiMetaApiVersion(version='1', is_deprecated=None, is_experimental=None), billed_units=ApiMetaBilledUnits(input_tokens=126.0, output_tokens=116.0, search_units=None, classifications=None), tokens=ApiMetaTokens(input_tokens=285.0, output_tokens=116.0), warnings=None) response_id='1e7add3e-2e7e-4304-9c96-01d9b3d7c6ae'