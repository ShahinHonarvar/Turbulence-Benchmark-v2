{
  "parameter(s)": [
    -690
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00036
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00016
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00012
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-690, -690]...0, -690], ...] == [[-690], [-69..., [-690], ...]\n  At index 0 diff: [-690, -690] != [-690]\n  Left contains 1406 more items, first extra item: [-690, -690]\n  Full diff:\n    [\n  -  [-690],\n  ?       -\n  +  [-690,...\n  \n  ...Full output truncated (2922 lines hidden), use '-vv' to show",
    2.69095
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 0 == 3)\n +  where 3 = <built-in method count of list object at 0x77d46f2765c0>([-690])\n +    where <built-in method count of list object at 0x77d46f2765c0> = [[-690, 1, -690], [-690, 1, -690], [-690, 1, -690], [-690, 1, -690], [-690], [-690, 1, -690], ...].count\n +  and   0 = <built-in method count of list object at 0x77d46f2765c0>([1, -690])\n +    where <built-in method count of list object at 0x77d46f2765c0> = [[-690, 1, -690], [-690, 1, -690], [-690, 1, -690], [-690, 1, -690], [-690], [-690, 1, -690], ...].count",
    0.0005
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 690 == -690\n +  where 690 = <built-in function prod>([-690, -1])\n +    where <built-in function prod> = math.prod",
    0.00054
  ]
}