{
  "parameter(s)": [
    6,
    12,
    60
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00016
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.00013
  ],
  "test_float_numbers": [
    "failed",
    "assert 4.123105625617661 == 4.242640687119285\n +  where 4.123105625617661 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.0003
  ],
  "test_reversed_range": [
    "failed",
    "assert -84 == -83\n +  where -84 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00026
  ],
  "test_large_range": [
    "failed",
    "assert 16 == 17\n +  where 16 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00117
  ]
}