{
  "parameter(s)": [
    14,
    32,
    61
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00017
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.00016
  ],
  "test_float_numbers": [
    "failed",
    "assert 6.708203932499369 == 6.782329983125268\n +  where 6.708203932499369 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00031
  ],
  "test_reversed_range": [
    "failed",
    "assert -56 == -55\n +  where -56 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00026
  ],
  "test_large_range": [
    "failed",
    "assert 44 == 45\n +  where 44 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00103
  ]
}