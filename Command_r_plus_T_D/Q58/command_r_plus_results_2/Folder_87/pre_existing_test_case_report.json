{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00087
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-72,   2],\\n        [-92, -65],\\n        [-93,  67],\\n        [ 36,  23],\\n        [-39, -56],\\n        [-46,  13],\\n        [ 73,  96],\\n        [-64,  53],\\n        [ -8, -36],\\n        [ 49, -20],\\n        [ 85, -25],\\n        [ 13, -38],\\n        [-79, -25],\\n        [-43, -57],\\n        [-70,  29],\\n        [ 49, -27],\\n        [-85, -93],\\n        [-96, -50],\\n        [-77, -66],\\n        [ 23,  -2],\\n        [ 26, -29],\\n        [-26, -13],\\n        [ 29,  94],\\n        [-49,  -1],\\n        [ 99, -11],\\n        [-95,  38],\\n        [-43,  48],\\n        [-30,  48],\\n        [ 31, 100],\\n        [ 86, -17],\\n        [ -9,  49],\\n        [ 88,  52],\\n        [ 24, -78],\\n        [-28, -54],\\n        [-88,  17],\\n        [-87, -48],\\n        [-87,   4],\\n        [ 75, -23],\\n        [ -1,  36],\\n        [ -5, -49],\\n        [-56, -40],\\n        [-79,   1],\\n        [ 81, -40],\\n        [ 34, -62],\\n        [ 76, -17],\\n        [-18, -19],\\n        [ 53,  80],\\n        [-95, -89]]))",
    0.00109
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00048
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00295
  ]
}