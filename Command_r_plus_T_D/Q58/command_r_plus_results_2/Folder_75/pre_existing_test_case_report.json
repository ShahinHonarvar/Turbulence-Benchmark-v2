{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0003
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 52, -26],\\n        [ 59, -37],\\n        [ 77, 100],\\n        [-67, -70],\\n        [  8,  84],\\n        [ 99, -61],\\n        [100, -29],\\n        [ 83,  61],\\n        [-45,  45],\\n        [  4,  18],\\n        [ 80, -57],\\n        [ 23,  97],\\n        [-42,  -7],\\n        [ 63,  93],\\n        [-87,  93],\\n        [-18,  40],\\n        [ 12, -41],\\n        [  5, -84],\\n        [ 18, -11],\\n        [ 37, -56],\\n        [ 63,  63],\\n        [ 48, -55],\\n        [-51,  -4],\\n        [ 91,  55],\\n        [ -9,  75],\\n        [ 88, -66],\\n        [ 64,   3],\\n        [-37, -23],\\n        [ 51,  71],\\n        [-17, -58],\\n        [ 21, -72],\\n        [ 18, -99],\\n        [ 99,   8],\\n        [-39, -63],\\n        [ 33, -92],\\n        [-87, -38],\\n        [ 77, -25],\\n        [ 42, 100],\\n        [ -4,  21],\\n        [ 65,   9]]))",
    0.00235
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00038
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00496
  ]
}