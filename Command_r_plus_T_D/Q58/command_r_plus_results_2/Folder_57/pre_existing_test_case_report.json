{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00132
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00275
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 44, -42],\\n        [ 30,  12],\\n        [ 83, -74],\\n        [-96,  98],\\n        [ 22, -89],\\n        [ 30,  20],\\n        [ 52, -31],\\n        [-83,  60],\\n        [  9,  66],\\n        [  1, -71],\\n        [ 56,  76],\\n        [ -9, -44],\\n        [-43, -90],\\n        [ 87, -66],\\n        [ 35, -93],\\n        [-60, -60],\\n        [-80,  42],\\n        [  2, -87],\\n        [ 58,  90],\\n        [-87,  38],\\n        [-54, -52],\\n        [-50,  50],\\n        [ 37, -24],\\n        [ 79,  30],\\n        [-43,  -4],\\n        [-25,   1],\\n        [ 54, -40],\\n        [-88,  30],\\n        [-45,  91],\\n        [-43, -10],\\n        [-98,  65],\\n        [-75, -33],\\n        [ -8,  83],\\n        [-86, -64],\\n        [ 11, -33],\\n        [ 96,  96],\\n        [ 22,  42],\\n        [ 46, -14],\\n        [ 56,  59],\\n        [-48, -98],\\n        [ 98, -34],\\n        [-15,  82],\\n        [ -8, -32],\\n        [  4,  56],\\n        [-67, -44],\\n        [-67, -63]]))",
    0.00224
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00355
  ]
}