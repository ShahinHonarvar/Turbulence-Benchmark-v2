{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00069
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-66, -92],\\n        [-30, -20],\\n        [ 67,  68],\\n        [-20, -68],\\n        [ 79, -92],\\n        [ 72,  87],\\n        [ 25, -84],\\n        [ 16, -71],\\n        [-55,  93],\\n        [ 56, -34],\\n        [-77, -85],\\n        [ 59, -44],\\n        [ 37,  76],\\n        [-51,  17],\\n        [ 21,  35],\\n        [-61, -89],\\n        [-73,  52],\\n        [ 21,  47],\\n        [ 18, -62],\\n        [-36, -60],\\n        [-42,  16],\\n        [-13, -50],\\n        [ 50, -93],\\n        [-47,   1],\\n        [ 41, -32],\\n        [-61, 100],\\n        [-56, -17],\\n        [ -6, -62],\\n        [-41, -21],\\n        [ 54, 100],\\n        [-65, -64],\\n        [-12,  -1],\\n        [-16,  -8],\\n        [-43,  82],\\n        [ 31, -22],\\n        [-92,  21],\\n        [-91,  97],\\n        [ 80, -64],\\n        [ 65,  90],\\n        [ 65,  21],\\n        [-10, -27],\\n        [-32, -15],\\n        [-82,  75],\\n        [ 48,  50],\\n        [-93,  67],\\n        [-31,  55],\\n        [  6,  16],\\n        [ 11, -14],\\n        [-18,   4],\\n        [-80, -18],\\n        [ 57,  32],\\n        [-48, 100]]))",
    0.0082
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00714
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.0062
  ]
}