{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00952
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00041
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-58, -76],\\n        [-30, -89],\\n        [ 70, -75],\\n        [-10, -29],\\n        [-99, -59],\\n        [ 72,  83],\\n        [ 81,  76],\\n        [-80, -87],\\n        [ 65, -46],\\n        [ 43, -72],\\n        [-33, -69],\\n        [ 66, -93],\\n        [ 20,  15],\\n        [ 61, -55],\\n        [ 54,  63],\\n        [-12,  53],\\n        [ 41, -72],\\n        [ 65,  91],\\n        [ -1, -68],\\n        [ 50,  71],\\n        [ 11,  72],\\n        [-31,  33],\\n        [-42,  31],\\n        [ 22,  85],\\n        [-98,  67],\\n        [ 50, -18],\\n        [-80, -67],\\n        [-79, -58],\\n        [ 32, -20],\\n        [-31,  96],\\n        [-87, -59],\\n        [ 61, -83],\\n        [-74,  24],\\n        [ 72,  17],\\n        [-99,  28],\\n        [ 18, -60],\\n        [-85,  22],\\n        [-40,  67],\\n        [ 30, -39],\\n        [ -6,  18],\\n        [ 59, -42],\\n        [-40,  15]]))",
    0.0008
  ]
}