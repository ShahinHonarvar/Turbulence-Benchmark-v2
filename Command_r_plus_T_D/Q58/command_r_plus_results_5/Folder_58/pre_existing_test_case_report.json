{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00268
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -64,   26,  100,  -41,  -82,   24,  -17,   -5,  -99,   15,\\n          -77,   -5,  -52,   62,    9,  -62,   15,    6,  -13,  -43,\\n            3,  -42,   71,   -9,   39,   35,   26,  -24,  -90,   -2,\\n           83,  -61,   18,  -17,   61,   41,   42,  -63,   58,   70,\\n           -1,   83,   31,   26,   38,  -74,  -11,  -57,   -2,   40,\\n           28,  -16,   43,   41,  -17,    5,  -70,   -4,   97,   71,\\n           95,    2,   56,   53,   81,    2,   61,  -96,  -46,   28,\\n           -4,  -21,    7,  -46,   69,   96,  -10,   98,   -9,   46,\\n          -69,   52,   74,   28,  -60,   40,  -21,   15,   11,  -49,\\n           33,   58,   22,   28,  -79,   60,  -32,   42,   21,   55,\\n          -80,   63,  -63,  -91,  -92,   -1,   80,  -30,  -60,   11,\\n           85,  -29,   98,   55,    4,   47,  -68,  -97,   62,   57,\\n           50,    9,  -43,  -83,   58,  -47,  -15,  -55,  -76,   59,\\n          -68,  -14,  -19,   71,  -19,  -39,   58,  -88,   35,   76,\\n           62,  100,   52,  -51,  -88,   20,  -13,  -70,   71,   55,\\n          -93,   36,    1,   35, -100,  -36,  -31,   38,   91,  -32,\\n            2,  -41,  -55,  -26,  -66,   76,  -64,   52,   34,  100,\\n          -75,  -82,  -73,  -98,   24,  -96,  -76,   45,  -20,   43,\\n          -43,  -67,   -8,   56,  -61]]))",
    0.0086
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00204
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.00157
  ]
}