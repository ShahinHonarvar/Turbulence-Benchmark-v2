{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 20, -49,  66,  57,  79,  79,  99,  60,  17,  24, -39,  29, -52,\\n         -50,  55,  40,  97,  38,  42,  83,  -5,  25, -75,  63, -95,  83,\\n          32, -12, -52, -43,   1,   3, -97,  33, -29, -21, -69,  -3,  69,\\n         -48, -79,  65, -21, -10,  -1, -41, -80,  -9,  27, -45, -79,  23,\\n          87,  58, -35,  65,  77,  50,   3, -76,  -9, -19,  19, -49, -20,\\n         -93, -59,  85, -98, -31,  14,  90,  62,  87,  43, -17, -18, -70,\\n         -16,  -3, -81,  82,  73, -90,  73, -85, -48, -48,  36, -30, -29,\\n           6,  18, -42,  35,  41, -64,  99,  23, -19, -61,  38, -34, -57,\\n          -7, -65, -45, -73, -15, -18, -38,   9,   7, -16,  55, -50,  93,\\n          28, -75, -43,  44,  95,  35, -22, -30, -89, -96, -30, -67,   1,\\n           1,  -6,  40,  80, -53,  14,  19, -98,  47, -98, -23,  14, -79,\\n         -82, -26,  18,  38, -13,  15,  15,  -8,  -2,  38,  47,  54,  12,\\n          79, -42, -47, -94, -36, -34, -95, -81,  66,  36, -21, -20,  34,\\n           6,  90,  27, -58]]))",
    0.00424
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00049
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.00786
  ]
}