{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 76, -92,   8, -51,  55, -93,  95,  30,  11, -48, -94, -30, -24,\\n         -51, -24,  58, -95, -67,  50,  71, -34, -56,   8,  21, -28, -26,\\n          99,  12, -37, -19, -34,  98, -38,  83,  97,  32,  26,  29,  34,\\n         -27,  40,  73,  -4, -87, -39,  93,  72, -27, -98, -55,  33, -24,\\n         -64, -51,  50,  28, -56, -39,  63, -45,  25,  62,  29,  26,  59,\\n         -34, -86,  83, -47, -57,  94, -21, -55,  23, -57, -20, -67, -42,\\n          81,  34,  32, -17,  39,  26,   1,  -1, -57,  56,   2, -94, -35,\\n          31,  -5, -32,  47, -63, -58,   6,  12, -28, -95,   8,  30, -80,\\n          60,  36, -76,  -1,  50,  96, -43,  12, -93,  -8,  28, -53, -97,\\n          89,   9,  78, -42, -39,  64, -67, -18,  97, -22,   2,  -3,  14,\\n         -12,  31, -67,   8,   0, -67, -14, -57,  25, -90, -88, -76, -92,\\n          78, -97,   5,  -6]]))",
    0.00197
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00996
  ]
}