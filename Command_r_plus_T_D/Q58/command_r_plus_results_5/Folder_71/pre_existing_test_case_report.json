{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00037
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 30, -79],\\n        [-59,  10],\\n        [ 85, -27],\\n        [-61,  35],\\n        [ 45, -88],\\n        [-21,  19],\\n        [  5,  27],\\n        [-54, -45],\\n        [100, -43],\\n        [-87,  -9],\\n        [ 86, -72],\\n        [ 22, -67],\\n        [-99, -13],\\n        [-81,  11],\\n        [-72,  45],\\n        [ 38,  80],\\n        [ 91, -49],\\n        [-74,  36],\\n        [-51,  10],\\n        [-99,  82],\\n        [ 68,  34],\\n        [ 45,  23],\\n        [ 92,  80],\\n        [-88, -89],\\n        [ 37,  18],\\n        [-69, -33],\\n        [ 85, -39],\\n        [ 22, -94],\\n        [  2,  90],\\n        [ 92, -11],\\n        [-38,  67],\\n        [ 62,  88],\\n        [-97, -30],\\n        [ 44, -52],\\n        [-48,  32],\\n        [ 81,  22],\\n        [ 56,  10],\\n        [-70, -56],\\n        [-58,  -5]]))",
    0.00087
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.0008
  ]
}