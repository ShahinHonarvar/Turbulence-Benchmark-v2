{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-32,  22],\\n        [ 20,  71],\\n        [ 14, -96],\\n        [  3,  52],\\n        [100,  38],\\n        [-90, -33],\\n        [ 35,  89],\\n        [ 29,  30],\\n        [-36,  77],\\n        [-70,  58],\\n        [ -5,  31],\\n        [-86,   2],\\n        [ 10, -27],\\n        [ 25,  96],\\n        [-48,  10],\\n        [ 72, -10],\\n        [ 34, -41],\\n        [ -1,  16],\\n        [-11,  69],\\n        [ 94,  81],\\n        [ 43,  58],\\n        [ 64,  75],\\n        [-22,  50],\\n        [ -9,  49],\\n        [ 44, -38],\\n        [-12,  90],\\n        [-39,  86],\\n        [-57,  37],\\n        [ 52,  88],\\n        [ 29, -37],\\n        [-48,  47],\\n        [-87, -35],\\n        [ 54,  22],\\n        [-17, -34],\\n        [-35,  67],\\n        [-36, -93],\\n        [-68,   0],\\n        [-15,   8],\\n        [ 82, -30],\\n        [-70,  85],\\n        [-61,  94],\\n        [ 24, -95],\\n        [  8, -27],\\n        [ 17, -95]]))",
    0.0008
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0016
  ]
}