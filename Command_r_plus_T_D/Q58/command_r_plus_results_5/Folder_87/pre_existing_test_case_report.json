{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00096
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 76, -42],\\n        [  8,   4],\\n        [ 47,  82],\\n        [-49,  40],\\n        [ 76,   8],\\n        [-46,  55],\\n        [-16, -78],\\n        [-70, -88],\\n        [-96,  74],\\n        [ 58,  -5],\\n        [ 31,  93],\\n        [-84,  49],\\n        [ 95,  65],\\n        [-78, -86],\\n        [ 30, -82],\\n        [-49, -11],\\n        [-73, -75],\\n        [ 11, -33],\\n        [ 89,  49],\\n        [-43, -51],\\n        [ 72, -73],\\n        [-77,  66],\\n        [-51, -68],\\n        [ 74, -15],\\n        [ 55,  71],\\n        [ 27, -43],\\n        [ 16,  43],\\n        [ 11, -11],\\n        [-50,  48],\\n        [-11,  12],\\n        [-95, -70],\\n        [ 89,  59],\\n        [ 88, -50],\\n        [ 57,  80],\\n        [-84, -34],\\n        [-40,  48],\\n        [ 46,  38],\\n        [-97, -30],\\n        [ 64,  62],\\n        [ 91,  33],\\n        [ 94,  86],\\n        [-24, -38],\\n        [ 25,  92],\\n        [ 57,  22],\\n        [ 76, -62],\\n        [ -5,  -5],\\n        [ 28, -86],\\n        [ 38, -41]]))",
    0.00523
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00124
  ]
}