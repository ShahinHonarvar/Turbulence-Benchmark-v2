{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00313
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 1 == 161",
    0.00041
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 202 == 161",
    0.00868
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 15 == 1\n +  where 15 = submatrix_with_n_numbers(matrix([[-88,  56],\\n        [  9,  58],\\n        [ 94, -61],\\n        [-94,  82],\\n        [-89,  53],\\n        [ 99,  26],\\n        [ 64,  98],\\n        [ 85, -23],\\n        [ 94,  41],\\n        [ 73,   0],\\n        [ 68, -13],\\n        [ 26, -23],\\n        [ 18, -36],\\n        [ 25,  62],\\n        [ 73, -74],\\n        [ 25,   7],\\n        [-97,  31],\\n        [-39, -86],\\n        [ 61,  -2],\\n        [ 62, -76],\\n        [-75, -89],\\n        [-73,  46],\\n        [ 92, -22],\\n        [-58,  55],\\n        [-59,  95],\\n        [ 28, -50],\\n        [ 57, -19],\\n        [ -9, -98],\\n        [ 57,  -7],\\n        [-95, -79],\\n        [ 37,  34],\\n        [ 67, -40],\\n        [-88, -75],\\n        [ 22, -48],\\n        [ 78,  -1],\\n        [ 65,  32],\\n        [-42,   2],\\n        [ 10,  -6],\\n        [-15, -95],\\n        [-95, -77]]))",
    0.00145
  ]
}