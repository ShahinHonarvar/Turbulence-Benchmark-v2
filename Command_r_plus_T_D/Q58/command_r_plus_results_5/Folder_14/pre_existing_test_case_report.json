{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00036
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 22,  76],\\n        [ -7, -23],\\n        [ 15,  80],\\n        [-53,  53],\\n        [ 25, -50],\\n        [ 92, -12],\\n        [ 76,  60],\\n        [-37, -43],\\n        [ 93,  65],\\n        [-98,  -5],\\n        [-24, -38],\\n        [ 45,  40],\\n        [-71,  12],\\n        [-27, -32],\\n        [ 45,  32],\\n        [-14, -36],\\n        [ 38,  48],\\n        [ 32,  22],\\n        [  8, -11],\\n        [-19,  -2],\\n        [ 78, -31],\\n        [-96,   3],\\n        [-35,  37],\\n        [ 82, -42],\\n        [-90,   4],\\n        [-89,  10],\\n        [ 60,  35],\\n        [ 48,  -6],\\n        [ 63,  96],\\n        [ 16,  -8],\\n        [-12, -57],\\n        [ 18,  93],\\n        [-21,   6],\\n        [ 57,  -4],\\n        [-17, -82],\\n        [ 13, -88],\\n        [ -7,  43],\\n        [ 34,  13],\\n        [-52,  22],\\n        [ 83,  86],\\n        [-52, -18],\\n        [ 85, -74]]))",
    0.0008
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00214
  ]
}