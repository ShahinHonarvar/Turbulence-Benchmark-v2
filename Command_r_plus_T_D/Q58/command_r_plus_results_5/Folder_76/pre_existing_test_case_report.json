{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00125
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -39,   32,   38,  -14,  -45,   99,   10,   15,   78,  -85,\\n          -17,   22,   63,  -68,  -39,  -95,   94,  -43,  -29,  -93,\\n            6,   70,   33,    5,   20,   88,   52,  -62,  -48,  -55,\\n           43,   54,   69,  -33,   86,  -55,   82,  -94,   74,   76,\\n          -42,  -92,    1,  -88,   36,   32,  -32,  -82,   73,   70,\\n           11,   98,   87,   99,   54,   17,  -65,   71,    7,  -14,\\n           82,  -99,  -34,  -69,  -64,   46,  -24,  -24,   90,   93,\\n            5,   85,  -25,  -48,   -1,  -42,   16,  -21,   85,  -90,\\n          -39,   80,   -6,  -52,  -60,   53,  -88,  -17,   18,  -96,\\n         -100,  -11,    3,  -47,  -33,  -82,  -76,  -57,   91,   35,\\n           60,   45,   16,   88,  -81,  -12,   26,  -71,   76,  -26,\\n          -79,  -93,  -49,  -62,   59,  -93,   39,  -13,  -90,  -42,\\n          -40,   14,   -2,   -9,   85,  -56,   43,   77,   49,  -54,\\n           28,   61,  -52,  -35,   75,   40,  -52,   10,  -30,  -19,\\n          -91,   66,   -3,   53,   68,   12,  -75,  -44,  -94,  -12,\\n           48,  -96,  -56,  -30,    0,   99,   51,   44,   27]]))",
    0.00118
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00422
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00524
  ]
}