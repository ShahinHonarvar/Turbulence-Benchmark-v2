{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00079
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  25,  -26],\\n        [  40,   42],\\n        [  -2,  -49],\\n        [ -71,  -59],\\n        [ -26,   86],\\n        [  65,   55],\\n        [  17,  -79],\\n        [ -61,   35],\\n        [  22,   63],\\n        [ -90,  -11],\\n        [ -97,  -38],\\n        [ -66,   76],\\n        [ -53,  -33],\\n        [  46,   54],\\n        [ -83,   69],\\n        [ -36,  -49],\\n        [   9,  -83],\\n        [  94,  -15],\\n        [  74,   -2],\\n        [  16,  -39],\\n        [ -13,   70],\\n        [  32,  -79],\\n        [  41,  -90],\\n        [  -9,  -90],\\n        [ -11, -100],\\n        [  29,   16],\\n        [ -62,   79],\\n        [ -81,   49],\\n        [  60,   -8],\\n        [  58,   96],\\n        [ -46,   89],\\n        [ -97,  -77],\\n        [ -48,  -62],\\n        [  36,   38],\\n        [  58,   47],\\n        [ -27,  -29],\\n        [  28,   99],\\n        [  56,  -74],\\n        [ -49,  -91],\\n        [ -20,   54],\\n        [ -10,   78],\\n        [  -4,   54],\\n        [  15,  -45],\\n        [ -12,  -34],\\n        [ -41,   59]]))",
    0.0008
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00096
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00191
  ]
}