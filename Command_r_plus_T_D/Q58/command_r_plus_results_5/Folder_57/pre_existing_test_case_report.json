{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  27,   93],\\n        [  75,   58],\\n        [-100,   81],\\n        [ -14,  -88],\\n        [  11,  -90],\\n        [  99,   57],\\n        [ -14,    7],\\n        [  54,  -31],\\n        [ -33,  -82],\\n        [  79,   -5],\\n        [  58,   44],\\n        [  59,   10],\\n        [  11,  -62],\\n        [ -84,   94],\\n        [  54,  -32],\\n        [  64,   74],\\n        [ -21,   -1],\\n        [  13,  -78],\\n        [  -7,  -44],\\n        [ -43,    5],\\n        [  24,  -30],\\n        [ -98,   45],\\n        [ -93,   39],\\n        [ -78,   79],\\n        [  43,  -83],\\n        [ -18,   27],\\n        [ -80,   50],\\n        [  54,   41],\\n        [ -47,  -27],\\n        [ -98,  -27],\\n        [ -63,   37],\\n        [ -95,  -81],\\n        [ -46,  -93],\\n        [ -15,   50],\\n        [ -68,   50],\\n        [   1,   41],\\n        [  67,   99],\\n        [ -17,   98],\\n        [ -36,  -97],\\n        [ -86,  -92],\\n        [  85,   71],\\n        [ -25,  -36],\\n        [  94,    9],\\n        [  -8,  -16],\\n        [ -72,   52],\\n        [  19,  -22]]))",
    0.0009
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.001
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00211
  ]
}