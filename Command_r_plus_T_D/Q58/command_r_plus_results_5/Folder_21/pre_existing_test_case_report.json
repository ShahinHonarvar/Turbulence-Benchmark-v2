{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00043
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 92,  -4,   6,  56,  74, -28,  36,  12,   5,  57,  -6,  36, -94,\\n          53, -39,   8, -73,  72,  68,   2, -83, -18, -35,   3,  50, -77,\\n         -66, -58, -53, -48, -15, -93, 100,  16,  22, -35,   1,  53, -69,\\n          54,  58,  10,  38,  92, -19, -85,   2,  67, -28, -86,  34, -71,\\n         100, -12,  78,  88,  -5, -22, -43, -71, -34, -54,  42, -88, -14,\\n          11,   7, -66, -46, -30,   5, -47,  31,  34,  40,  33,  14, -99,\\n          81,  25, -52, -12,  74,   3,  15, -10,  95, -71, -33, -95, -50,\\n          11, -42,  88, -21, -91, -60, -89, -63, -44,  60,  -5,  10, -79,\\n          72,  28,  98,  49, -51, -19, -61, -19,  36,  62, -26,  86,  -1,\\n         -26,  71, -22,  46, -15, -33,  72, -40, -76,  91, -80,  56,  30,\\n          33,  49, -15,  45, -49,   7,  51, -70, -13]]))",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00309
  ]
}