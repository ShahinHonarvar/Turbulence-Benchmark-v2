{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-20, -88],\\n        [-30,  73],\\n        [ 78, -34],\\n        [  9,  82],\\n        [-23, -68],\\n        [-89, -53],\\n        [-16,  58],\\n        [-32, -15],\\n        [ 36,  98],\\n        [ 10, -38],\\n        [ 32, -83],\\n        [-92,  98],\\n        [-88,  82],\\n        [ 98,  55],\\n        [-26,  25],\\n        [ 93, -42],\\n        [ 33,  98],\\n        [ 57,  50],\\n        [  6, -80],\\n        [ 29,   2],\\n        [ 76, -99],\\n        [-41,  10],\\n        [-69, -98],\\n        [ 87, -68],\\n        [ 53, -88],\\n        [-79,  34],\\n        [-29, -88],\\n        [ 89, -73],\\n        [ 90,  98],\\n        [-64, -14],\\n        [ 53, -62],\\n        [ 84, -34],\\n        [ 28,  51],\\n        [ 60,  21],\\n        [-31, -50],\\n        [-78, -39],\\n        [ 87, -16],\\n        [-37,  18],\\n        [-11,  75],\\n        [ 95, -43],\\n        [-27,  99],\\n        [-59,  19],\\n        [  7, -91],\\n        [ -5, -78],\\n        [ 52,  17],\\n        [ 61,  90]]))",
    0.00399
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00636
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00047
  ]
}