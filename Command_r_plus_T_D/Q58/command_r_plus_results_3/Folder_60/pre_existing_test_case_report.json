{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00208
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00452
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -16,  -70],\\n        [ -67,  -94],\\n        [  28,  -63],\\n        [  58,  -23],\\n        [ -84,   85],\\n        [ -76,   96],\\n        [ -40,   80],\\n        [  14,  -82],\\n        [  85,  -58],\\n        [  54,  -16],\\n        [ -52,   44],\\n        [  41,   10],\\n        [ -80,   -6],\\n        [ -26,   70],\\n        [  16,    5],\\n        [  91,   39],\\n        [  83,  -36],\\n        [ -65,  -79],\\n        [ -62,  -52],\\n        [ -34,  -40],\\n        [ -40,  -43],\\n        [ -54,  -45],\\n        [ -27,  -53],\\n        [  62,  -12],\\n        [  89,   20],\\n        [  57,  -20],\\n        [  12, -100],\\n        [ -94,    4],\\n        [  91,  -33],\\n        [ -90,   24],\\n        [ -82,   97],\\n        [  39,   86],\\n        [  31,  -19],\\n        [ -14,  -22],\\n        [ -76,   27],\\n        [ -25,  -23],\\n        [ -84,   44],\\n        [  34,   31],\\n        [  -6,  -42],\\n        [ -40,   39],\\n        [ -60,   18],\\n        [  85,  -16],\\n        [ -15,   56],\\n        [  83,   94]]))",
    0.00709
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.003
  ]
}