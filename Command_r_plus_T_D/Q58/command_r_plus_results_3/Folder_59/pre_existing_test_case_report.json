{
  "parameter(s)": [
    76
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00059
  ],
  "test_matrix_of_having_76_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 16,  76],\\n        [ 99, -94],\\n        [  0,   1],\\n        [ -7, -56],\\n        [ 85, -45],\\n        [-17, -53],\\n        [ 15, -76],\\n        [ 44,  53],\\n        [ 64, -94],\\n        [ 54,   2],\\n        [-64, -18],\\n        [ -6, -90],\\n        [ 64,  90],\\n        [ 99, -15],\\n        [  3,  12],\\n        [ 63, -95],\\n        [ -6,  84],\\n        [ 16,  89],\\n        [ 90,  22],\\n        [ 60,  -8],\\n        [ 33, -48],\\n        [ 40,  70],\\n        [-68, -76],\\n        [-65, -49],\\n        [  4,  47],\\n        [-91, -85],\\n        [-13, -74],\\n        [-78,   1],\\n        [ 95,   8],\\n        [-84,  36],\\n        [-93, -19],\\n        [ 15, -38],\\n        [ 56,  98],\\n        [-83, -75],\\n        [-39,  44],\\n        [-95, -36],\\n        [-85, -80],\\n        [ -1,  80]]))",
    0.00087
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 153",
    0.00268
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 153",
    0.00429
  ]
}