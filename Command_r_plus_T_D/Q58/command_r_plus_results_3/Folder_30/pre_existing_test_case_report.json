{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00532
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00049
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-11, -97],\\n        [ 61, 100],\\n        [-62, -12],\\n        [ 47, -46],\\n        [ 65,  62],\\n        [ 93, -77],\\n        [ 75, -94],\\n        [-96, -35],\\n        [-36,  31],\\n        [-18,  47],\\n        [ 19,  78],\\n        [-13,  61],\\n        [ 15, -49],\\n        [-63,  31],\\n        [ -9,  26],\\n        [  2,  -4],\\n        [ 19, -44],\\n        [-49, -84],\\n        [  3, -51],\\n        [ 86,  78],\\n        [ 45,  99],\\n        [  5, -96],\\n        [ 61, -51],\\n        [-67,  57],\\n        [-40, -11],\\n        [ 91,  44],\\n        [-53, -12],\\n        [ 59,  73],\\n        [ 69,  44],\\n        [  2, -80],\\n        [  6,  40],\\n        [-89,  28],\\n        [-24, -57],\\n        [-75, -82],\\n        [ 56, -64],\\n        [  9,  61],\\n        [-60, -74],\\n        [-46, -38],\\n        [-49,  94],\\n        [ 43,  92],\\n        [-83,  52],\\n        [  4,  50],\\n        [-50, -33],\\n        [ 27,  63],\\n        [-38,  29],\\n        [-87, -29],\\n        [-81,  78]]))",
    0.0045
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00107
  ]
}