{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00095
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00405
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.006
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -40,   76,   33,  -83,   -6,   70,   54,   53,   15,  -65,\\n           51,  -78,  -56,   73,  -43,   30,   66,  -15,  -35,   -8,\\n          -12,  -27,  -22,  -93,  -20,   47,   77,   -3,   29,   43,\\n          -43,   21,   95,  -90,   45,  -21,  -67,   83,   91,  -19,\\n          -78,   45,   -7,   54,   49,  -33,  -19,   26,  -18,   73,\\n          -64,   79,   78,  -38,   -7,   21,  -82,   39,   64,  -87,\\n           61,   24,  -46,   29,   79,    4,   40,  -45,  -57,   -6,\\n          -27,  -22,   91,   47,   -9,   14, -100,  -15,   86,   78,\\n           58,  -33,    6,   -7,   86,   38,  -88,   54,   62,  -51,\\n           73,   30,   -4,  -70,  -84,  -18,  -61,   -7,   63,   65,\\n           63,    8,  -86,   63,   96,    4,  -78,  -72,  -16,   95,\\n           25,   93,   -1,   22,  -41,   -7,  -90,   13,  -41,  -73,\\n          -55,   30,  -92,  -95,   15,  -97,   87,    1,  -49,   -8,\\n          -76,   96,   69,   24,   -6,    1,  -65,  -70,  -13,   15,\\n           66,  -23,  -38,   19,   74,   60,  -12,    0,   29,   90,\\n           83,  -73,  -69,  -21,   93,  -65,  -92,  -16,  -36]]))",
    0.00111
  ]
}