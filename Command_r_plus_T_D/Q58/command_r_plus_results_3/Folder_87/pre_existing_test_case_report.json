{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00074
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00591
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  9, -43],\\n        [-72,  72],\\n        [ -9, -67],\\n        [-33,  72],\\n        [-55, -55],\\n        [-41, -43],\\n        [ -3,  -8],\\n        [-58,  61],\\n        [-24, -12],\\n        [ 72, -97],\\n        [-35, -62],\\n        [ 49,  34],\\n        [ 58,  35],\\n        [-44,  39],\\n        [ 20, 100],\\n        [ 44, -63],\\n        [-88, -92],\\n        [ 26,  44],\\n        [-95,   1],\\n        [ 34, -28],\\n        [ 27,  81],\\n        [ 88,  20],\\n        [ 70,  32],\\n        [ 94, -77],\\n        [  0, -41],\\n        [-80, -29],\\n        [-17,  -2],\\n        [-58,  90],\\n        [ 18,  56],\\n        [-95,   4],\\n        [-29,  19],\\n        [-68, -79],\\n        [ 13, -18],\\n        [-15,  95],\\n        [ 81,  29],\\n        [ 77,  45],\\n        [ -4,  66],\\n        [  8,  80],\\n        [-45,  63],\\n        [-96,  40],\\n        [ 26,  88],\\n        [-62,  85],\\n        [ 89,   9],\\n        [-60, -64],\\n        [-68,  14],\\n        [ 31,  93],\\n        [ 95,  95],\\n        [ 16, -78]]))",
    0.00117
  ]
}