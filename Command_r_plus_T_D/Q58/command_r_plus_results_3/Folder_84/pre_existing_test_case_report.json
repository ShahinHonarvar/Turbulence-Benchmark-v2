{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.00102
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -46,   89,   34,  -87,   54,  -44,  -68,   48,   25,  -84,\\n          -74,  -42,   -5, -100,   37,  -34,  -49,  -25,    1,   97,\\n          -21,   29,   94,   -6,  -76,  -22,  -35,   41,   85,  -48,\\n           -3,   72,  -78,  -12,  -12,   75,   84,  -29,   94,   59,\\n           81,   71,    2,   16,  -25,  -59,   95,   -9,    6,  -15,\\n           82,  -73,  -55,  -82,   45,   19,   16,  -73,   97,  -44,\\n           50,  -19,  -51,  -31,   56,   -1,  -53,   43,  -80,  -78,\\n          -89,  -87,  -56,   85,   16,   19,   13,   96,   96,  -74,\\n           56,    1,  -85,   83,   -2,  -12,  -53,  -41,  -98,  -42,\\n          -20,   99,   88,   22,  -33,  -12,  -66,   49,   53,   20,\\n          -72,  -10,   -6,  -27,   92,  -59,  -79,   88,   12,   89,\\n           79,  -96,   56,   29,   34,   82,  -67,   89,  -69,  -99,\\n           93,  -39,   26,    5,   11,   72,   98]]))",
    0.00118
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 255",
    0.00221
  ]
}