{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00065
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00132
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  35,   36],\\n        [ -28,  -57],\\n        [ -22,  -21],\\n        [  12,   -3],\\n        [ -65,  -23],\\n        [  41,   76],\\n        [ -58,  -20],\\n        [ -64,  -95],\\n        [  -1,  -28],\\n        [ -17, -100],\\n        [ -64,  -11],\\n        [ -29,  -40],\\n        [ -85,  -43],\\n        [ -66,  -94],\\n        [ -17,   44],\\n        [   2,  -10],\\n        [  62,  -77],\\n        [  43,    8],\\n        [ -96,   17],\\n        [ -70,  -48],\\n        [  98,   57],\\n        [  65,   31],\\n        [  40,   13],\\n        [  61,   23],\\n        [ -52,   -5],\\n        [ -38,   23],\\n        [ -80,  -51],\\n        [ -59,  -64],\\n        [  28,   33],\\n        [   3,  -98],\\n        [ -97,  -61],\\n        [   3,   17],\\n        [ -65,  -48],\\n        [  49,  -23],\\n        [ -40,  -29],\\n        [ -15,   48],\\n        [  58,  -10],\\n        [  65,   90],\\n        [  77,   26],\\n        [ -80,    0]]))",
    0.00432
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00232
  ]
}