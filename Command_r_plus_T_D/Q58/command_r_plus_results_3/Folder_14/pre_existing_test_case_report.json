{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00135
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -35,  -13],\\n        [ -39, -100],\\n        [   7,   -9],\\n        [   9,   65],\\n        [  59,  -78],\\n        [  27,  -16],\\n        [  66,  -63],\\n        [  61,   -9],\\n        [  91,   19],\\n        [ -77,  -61],\\n        [ -33,   21],\\n        [ -15,  -87],\\n        [ -79,   13],\\n        [  -2,   90],\\n        [ -38,  -76],\\n        [ -41,   96],\\n        [  83,   42],\\n        [  90,    8],\\n        [  19,  -78],\\n        [  75,   36],\\n        [  28,   82],\\n        [ -53,  -77],\\n        [ -79,  -62],\\n        [ -78,  -71],\\n        [  46,   94],\\n        [  71,  -31],\\n        [  10,  -82],\\n        [ -90,  -95],\\n        [   1,    5],\\n        [ -74,   56],\\n        [ -36,   89],\\n        [  68,  -65],\\n        [ -38,  -94],\\n        [   3,   35],\\n        [  98,   47],\\n        [ -46,  -84],\\n        [  11,  -21],\\n        [  23,  -13],\\n        [ -12,  -75],\\n        [  17,  -82],\\n        [ -75,   14],\\n        [  65,   67]]))",
    0.00509
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00737
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00649
  ]
}