{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.0012
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.0006
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -66,  -89, -100,   48,   86,   32,   28,   75,  -62,  -23,\\n          -63,   -8,   71,   16,   60,   70,   -2,   51,   25,   61,\\n            8,   23,  -95,  -14,  -45,   99,    3,   40,  -91,   93,\\n           12,  -95,   11,   -2,  -87,   75,  -39,   16,  -28,  -60,\\n           72,   23,  -53,  -40,  -53,  -11,  -12,  -73,    5,   38,\\n          -58,  -95,   -2,  -80,   59,  -31,  -32,   13,  -91,   50,\\n          -66,  -25,  -66,  -54,    6,   36,  -69,  -46,  -35,   13,\\n           31,  -12,  -62,  -48,  -17,   34,   67,  -81,   31,  -42,\\n          -38,   89,   50,  -11,   82,  -28,    4,  -30,    5,   77,\\n           14,  -57,   92,  -83,  -40,  -22,  -81,  -94,  -95,  -14,\\n          -66,   62,  -53,    9,   29,   97,   11,   53,   68,  -81,\\n           51,   27,   37,  -32,   23,   24,  -45,  -55,   54,   45,\\n           70,   70,  -58,  -91,   85,  -51,   77,   -7,  -97,    5,\\n           -6,  -98,  -83,  -94,   31,   95,   25,   99,  -95]]))",
    0.00103
  ]
}