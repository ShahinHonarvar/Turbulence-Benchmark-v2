{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -20,   63],\\n        [ -40,    9],\\n        [ -26,    0],\\n        [  99,   -7],\\n        [ -66,   48],\\n        [ -81,   10],\\n        [  95,   24],\\n        [  33,  -40],\\n        [  71,   48],\\n        [ -18,  -82],\\n        [ -73,   -5],\\n        [ -67,    3],\\n        [  61,   62],\\n        [  95,   53],\\n        [ 100,  -29],\\n        [  53,  -61],\\n        [  59,  -23],\\n        [  69,   -9],\\n        [  50, -100],\\n        [ -74,  -99],\\n        [  61,   52],\\n        [  84,  -68],\\n        [ -14,  -32],\\n        [ -30,   53],\\n        [  58,   37],\\n        [ -59,   92],\\n        [  -8,   99],\\n        [ -15,   54],\\n        [  66,  -45],\\n        [   6,  -18],\\n        [  26,  -36],\\n        [  48,   43],\\n        [  13,   54],\\n        [ -57,  -61],\\n        [ -41,  -93],\\n        [ -44,   85],\\n        [  14,   47],\\n        [ -73,   70],\\n        [ -69,   -6],\\n        [ -81,   -6],\\n        [ -37,   20],\\n        [ -51,  -80],\\n        [  12,  -64],\\n        [  14,   29],\\n        [ -66,   24],\\n        [  32,   49],\\n        [  22,  -34],\\n        [ -82,    6]]))",
    0.00089
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00115
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00134
  ]
}