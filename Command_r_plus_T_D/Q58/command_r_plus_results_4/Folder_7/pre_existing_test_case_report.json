{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -3,   87,   53,   35,  -93,   95,   42,    1,   43,   97,\\n           12,  -45,   -9,   22,   19,  -51,  -58,  -35,  -47,   -3,\\n            5,   30,   36,   59,  -40,  -24,   -2,    7,   31,  -55,\\n           58,  -50,  -60,   75,   79,  -13,  -39,  -16,   -2,  -72,\\n            3,  -14,  -95,   63,   87,   23,   56,  -89,  -39,    1,\\n           37,   99,  -15,  -99,  -48,   61,   -5,   50,   85,   -8,\\n          -54,  -94,   -5,  -20,  -23,   61,    6,  -66,   79,  -26,\\n         -100,   36,    7,   37, -100,   25,   81,  -33,   78,  -52,\\n          -58,  -29,   40,  -72,  -11,   37,   95,   70,   -4,  -64,\\n          -41,   58,   26,  -49,   77,   79,    1,  -31,  -95,   18,\\n          -24,  -62,    4,  -36,    6,   62,  -51,   -2,   35,  -63,\\n          -71,   27,   79,  -48,  -72,  -80,  -48,  -29,  -51,   77,\\n           80]]))",
    0.00091
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 243",
    0.00743
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.00049
  ]
}