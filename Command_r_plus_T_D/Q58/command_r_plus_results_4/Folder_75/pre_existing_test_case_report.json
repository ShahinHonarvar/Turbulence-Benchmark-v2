{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-19,  49],\\n        [ -4,  60],\\n        [ -8, -99],\\n        [-11, -94],\\n        [-75,   5],\\n        [ 24, -74],\\n        [ 95, -72],\\n        [-79,  71],\\n        [-71,   7],\\n        [ 10,  -6],\\n        [-86, -23],\\n        [  6,  88],\\n        [-69,  -3],\\n        [ 98,  86],\\n        [ 73,  56],\\n        [ 18, -61],\\n        [-95, -33],\\n        [ 96,  58],\\n        [-38,  73],\\n        [ 78,  88],\\n        [  4,  99],\\n        [-86,  93],\\n        [ 52, -38],\\n        [ 50,  91],\\n        [ 56, -49],\\n        [-10,  92],\\n        [ -2, 100],\\n        [ 92, -17],\\n        [ 98, -64],\\n        [ 10,  86],\\n        [ 50, -98],\\n        [ 53, -46],\\n        [-16,   4],\\n        [ 31,  73],\\n        [-24, -94],\\n        [ 50,  95],\\n        [-66, -60],\\n        [ 58,  28],\\n        [-75,  48],\\n        [  9, -37]]))",
    0.00403
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00069
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00121
  ]
}