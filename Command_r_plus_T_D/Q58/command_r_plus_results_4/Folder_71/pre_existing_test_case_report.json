{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-36, -21],\\n        [  5, -70],\\n        [-40, -44],\\n        [ 61, -45],\\n        [ 18, -90],\\n        [ 51, -18],\\n        [-94, -64],\\n        [-92,  60],\\n        [-79,   3],\\n        [  0,  38],\\n        [ -3,  35],\\n        [-13,   1],\\n        [-72, -82],\\n        [ 70,  64],\\n        [ 22,  43],\\n        [-64, -32],\\n        [-46, -48],\\n        [-69, -56],\\n        [-20,  91],\\n        [ 64, -89],\\n        [ 84, -42],\\n        [-28, -93],\\n        [ 26,  -8],\\n        [ 19,  31],\\n        [ 93, -97],\\n        [ 86,  41],\\n        [ 45, -21],\\n        [ 25, -58],\\n        [ -7,  67],\\n        [-82, -27],\\n        [-77,  58],\\n        [ 76,  44],\\n        [-22,  86],\\n        [ 33, -28],\\n        [ 10, -40],\\n        [-49,  62],\\n        [-60,  98],\\n        [ 17,  76],\\n        [ 20,  17]]))",
    0.01164
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.02053
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00456
  ]
}