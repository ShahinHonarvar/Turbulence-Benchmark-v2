{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00044
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-54,  54],\\n        [-32, -52],\\n        [-66,  50],\\n        [-74,  74],\\n        [ 83, -22],\\n        [ 36, -14],\\n        [-21, -20],\\n        [ 31, -76],\\n        [ 33, -30],\\n        [ 21,  23],\\n        [ 53, -33],\\n        [-52,  -4],\\n        [ 21, -26],\\n        [-69,  83],\\n        [ 34, -64],\\n        [ 58, -53],\\n        [-42, -55],\\n        [ 91, -81],\\n        [-92, -62],\\n        [ 42,  25],\\n        [ 50,  76],\\n        [ 10,  61],\\n        [-93,  64],\\n        [-91,  94],\\n        [ -4, -76],\\n        [ 58, -23],\\n        [-27,  10],\\n        [-99, -46],\\n        [ 49,  48],\\n        [  5, -52],\\n        [ 63, -99],\\n        [-92,   5],\\n        [  2,  39],\\n        [ 92, -18],\\n        [-43,  29],\\n        [-16,  76],\\n        [ 18,  54],\\n        [ -8,  -8],\\n        [-65, -70],\\n        [-88, -79],\\n        [ -6, -95],\\n        [100,  -2]]))",
    0.00086
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.0021
  ]
}