{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00481
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00291
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  18,  -66,  -24,  -39,    2,  -12,   -1,  -21,   93,  -28,\\n          -38,  -94,  -17,   87,  -19,  -97,  -14,   22,  -54,  -64,\\n           -4,  -24,   -6,   -6,   -6,  -84,  -85,   35,   72,   56,\\n          -72,   -9,   19,  -83,  -71,   42,   -2,  -49,   74,  -30,\\n          -31,  -34,  -18,  -89,  -49,  -29,   39,   -4,  -10,   38,\\n           96,    2,   62,  -10,   -4,   86,   56,   21,  -62,   56,\\n           58,   -7,   21,  -14,   99,   42,   45,    2,   91,   30,\\n           81,  -85,    5,   91,  -16,  -26,   -2,   11,  -13,  -32,\\n          -90,  -52,   64,  -54,   79,  -87,   74,  -42,   79,  -61,\\n           73,  -33,   41,  -26,  -82,    3,  -70,  -96,   46,   61,\\n           65,  -99,   66,  -15,   32,   52,   70,   71,   54,  -99,\\n           15,    9,  -81,  -97,  -23,  -96,   -8,   73,  -76,  -95,\\n          -38,   36,   57,   27,   64,   -5,   84,   33,   95,   17,\\n           70,    0,   29,   34,  -15,  -59,  -42,   21,  -91,  -47,\\n            5,   21,  -84,   81,  -70,   -3,   22,   55,  -55,   15,\\n          -66,   84,  -55,   93,  -57,  -97,  -18, -100,  -47]]))",
    0.00104
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.01437
  ]
}