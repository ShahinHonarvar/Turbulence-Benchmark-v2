{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00268
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-23,  32],\\n        [ 79,   4],\\n        [ 50, -90],\\n        [ 27, -41],\\n        [-87,  96],\\n        [-25,  -7],\\n        [ -7, -73],\\n        [-46, -32],\\n        [-46,  94],\\n        [ -4, -94],\\n        [ 38, -19],\\n        [-39, -30],\\n        [-82,  -5],\\n        [-40,  71],\\n        [-48, -20],\\n        [ 53, -89],\\n        [-82, -96],\\n        [-25, -69],\\n        [ 81,  63],\\n        [-58,  84],\\n        [-32,  77],\\n        [  9, -43],\\n        [  9,  70],\\n        [-64,  84],\\n        [-44, -76],\\n        [-27, -43],\\n        [  0, -80],\\n        [ 26, -78],\\n        [ 25, -12],\\n        [ 76,  46],\\n        [ 21,  75],\\n        [ 53, -41],\\n        [ 80,   4],\\n        [-74, -42],\\n        [ 80,  22],\\n        [-56,  72],\\n        [-89,  82],\\n        [ 81, -73],\\n        [ 73,  14],\\n        [ 60, -25],\\n        [ 26,  57],\\n        [ 81,  95],\\n        [ 69,  49],\\n        [-93,  58],\\n        [-45, -35],\\n        [-62,  41],\\n        [-96,  46]]))",
    0.00185
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00523
  ]
}