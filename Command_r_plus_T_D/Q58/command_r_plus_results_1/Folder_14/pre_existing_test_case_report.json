{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00043
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 11,  42],\\n        [-96,  48],\\n        [-49,  16],\\n        [-80, -65],\\n        [ 99, -15],\\n        [  0,  19],\\n        [-77,  73],\\n        [ -3, -34],\\n        [-59, -36],\\n        [ 96, -47],\\n        [ 67, -52],\\n        [ 20,   9],\\n        [ 95, -31],\\n        [-83, -54],\\n        [-80,  56],\\n        [-42,  42],\\n        [ 39,  87],\\n        [ 90, -35],\\n        [-97,  85],\\n        [  2,  97],\\n        [-12,  -1],\\n        [ 19,  29],\\n        [-69,  72],\\n        [ 71,  96],\\n        [ 81, -78],\\n        [-48, -84],\\n        [ -5, -84],\\n        [-78, -94],\\n        [ 81, -45],\\n        [ 45,  91],\\n        [ 22, -30],\\n        [ 44,  20],\\n        [ 46, -24],\\n        [ 96,  85],\\n        [-52, -78],\\n        [-72,  62],\\n        [ 73, -20],\\n        [ 99,  98],\\n        [-63,  71],\\n        [-74,  66],\\n        [-79,  90],\\n        [ 50,  20]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00503
  ]
}