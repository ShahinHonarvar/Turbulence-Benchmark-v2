{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 27,  87,  -8,  77, -48,  26, -66,  57, -32,  86, -49,  24,  81,\\n           0,  95,  38, -35,   4,  -3,  14,  91, -50, -54,  82,  26,  98,\\n          96,  87, -36, -22, -70, -97,  41, -76,  52,  94, -65,   2, -57,\\n         -95,  70, -23,  61,   7,  69,  18,  82,  73, -42,  71,  17,  64,\\n          27,  92, -40,  50,  15,  94, -41,  29, -71, -33, -31, -74,  25,\\n          74, -65, -13,  47,  94, -45,  -2, -51, -95, -39,  63, -44, -81,\\n         -90, -62,  98, -71, -45,  89, -68,  46,  45,  62, -56, -96,  98,\\n          64, -91,  48,  33,  83,  91,  40,  80, 100, -47, -34,  73,  59,\\n         -59,  89,  36, -72, -26,  20, -86,  65, -87,  97, -91, -69,  58,\\n          61, -81,  41, -80, -62, -71, -53, -83, -98, -63,  -9, -70, -67,\\n         -98]]))",
    0.01253
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00659
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00558
  ]
}