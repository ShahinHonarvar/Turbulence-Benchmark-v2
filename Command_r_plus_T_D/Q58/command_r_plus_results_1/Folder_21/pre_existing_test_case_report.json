{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00227
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 31, -94,  84, -15,  38,  20,   3, -41,  -8,  95, -55,  71, -22,\\n           5,  22, -34,  95, -94,  61,  50,  46,  -3, -28,  12, -55, -84,\\n         -29,  32,  21,  -4, -72,  91, -69,  37,  34, -86, -53,  59,  81,\\n         -14, -80, -32,  13, -51, -45,   9,  49,  44, -10,  20,  88,  49,\\n          75,  33, -69,  53, -18,  47,  51,  86,  -5, -92, -20,  44, -99,\\n          41,  -4, -78, -12,  66,  91,   7, -67, -76, -59, -23, -76,  84,\\n         -28,  30, -18, -78, -38, -37, -72,  -2,  39, -51, -71, -78,  38,\\n          -8,  77,  37, -46,  96, -40,  70,  31, -63, -43, -43,  30, -67,\\n          90,  47, -96, -20, -69, -15,  53,   6, -87, -55,  25,  45,  61,\\n         -57, -47, -86,   7,  13,  60, -73,   4,  19, -92, -97, -36, -43,\\n           6,  97,  69,  20, -26,  -5,  67, -53,  26]]))",
    0.00089
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00558
  ]
}