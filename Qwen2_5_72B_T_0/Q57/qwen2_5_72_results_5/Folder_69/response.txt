ChatCompletion(id='chatcmpl-0bb15c1852d348ddb335d9f994901897', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices_with_sum(mat, target_sum, current_sum, row, col, submatrix, result):\n        rows, cols = mat.shape\n        if row >= rows or col >= cols:\n            return\n        current_sum += mat[row, col]\n        submatrix.append(mat[row, col])\n        if current_sum == target_sum:\n            result.append(np.array(submatrix).reshape(-1, 1))\n        elif current_sum < target_sum:\n            find_submatrices_with_sum(mat, target_sum, current_sum, row + 1, col, submatrix.copy(), result)\n            find_submatrices_with_sum(mat, target_sum, current_sum, row, col + 1, submatrix.copy(), result)\n    \n    def get_all_submatrices(mat, target_sum):\n        rows, cols = mat.shape\n        result = []\n        for start_row in range(rows):\n            for start_col in range(cols):\n                find_submatrices_with_sum(mat, target_sum, 0, start_row, start_col, [], result)\n        return result\n    \n    return get_all_submatrices(matrix, 752)\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730510320, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=252, prompt_tokens=138, total_tokens=390, estimated_cost=0.0001491))