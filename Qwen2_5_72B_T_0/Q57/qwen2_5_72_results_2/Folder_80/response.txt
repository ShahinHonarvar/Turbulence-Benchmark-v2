ChatCompletion(id='chatcmpl-b2c3c9477ed44562a5d3bc1e1a4ac614', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices_with_sum(mat, target_sum, current_sum, row, col, submatrix, result):\n        if row >= mat.shape[0] or col >= mat.shape[1]:\n            return\n        current_sum += mat[row][col]\n        submatrix.append(mat[row][col])\n        if current_sum == target_sum:\n            result.append(np.array(submatrix).reshape(-1, 1))\n        elif current_sum < target_sum:\n            find_submatrices_with_sum(mat, target_sum, current_sum, row + 1, col, submatrix.copy(), result)\n            find_submatrices_with_sum(mat, target_sum, current_sum, row, col + 1, submatrix.copy(), result)\n    \n    def get_all_submatrices(matrix):\n        rows, cols = matrix.shape\n        submatrices = []\n        for start_row in range(rows):\n            for start_col in range(cols):\n                for end_row in range(start_row + 1, rows + 1):\n                    for end_col in range(start_col + 1, cols + 1):\n                        submatrices.append(matrix[start_row:end_row, start_col:end_col])\n        return submatrices\n\n    target_sum = 245\n    all_submatrices = get_all_submatrices(matrix)\n    result = []\n    for submatrix in all_submatrices:\n        if np.sum(submatrix) == target_sum:\n            result.append(submatrix)\n    return result\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730508244, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=321, prompt_tokens=138, total_tokens=459, estimated_cost=0.00017669999999999999))