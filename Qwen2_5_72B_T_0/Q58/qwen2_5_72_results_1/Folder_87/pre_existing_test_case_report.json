{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  25,   94],\\n        [ -52,  -35],\\n        [ -45,  -64],\\n        [  95,  -99],\\n        [ -71,  -85],\\n        [  64,   38],\\n        [  -1,  -16],\\n        [ -96,  -19],\\n        [ -97,  -63],\\n        [  50,   33],\\n        [ -37,   31],\\n        [  30,  -40],\\n        [ -46,  -95],\\n        [ -99,   51],\\n        [  -8,   55],\\n        [  68,   38],\\n        [  51,  -89],\\n        [  76,  -74],\\n        [ -50,   -8],\\n        [  75,  -21],\\n        [ -96,   92],\\n        [ -51,  -23],\\n        [ -16,  -10],\\n        [  60,   -4],\\n        [  99,  -16],\\n        [ -51,  -20],\\n        [ -14,  -22],\\n        [ -68,   50],\\n        [ -78,  -34],\\n        [  65,  -60],\\n        [  85,  -23],\\n        [  34,   40],\\n        [ -34,   -5],\\n        [ -15,  -21],\\n        [ -13,  -77],\\n        [ -55,   39],\\n        [ -98,  -70],\\n        [  96,  -79],\\n        [ -75,   71],\\n        [  -2,   42],\\n        [  27,   75],\\n        [  76,   56],\\n        [  78,  -58],\\n        [   7,   76],\\n        [ -87,   73],\\n        [ -37,  -12],\\n        [-100,  -53],\\n        [  75,   47]]))",
    0.00059
  ]
}