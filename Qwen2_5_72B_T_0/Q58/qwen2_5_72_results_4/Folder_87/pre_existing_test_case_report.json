{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  45,   14],\\n        [  -6,  -91],\\n        [  23,   73],\\n        [ -89,   70],\\n        [ -64,   47],\\n        [ -77,   29],\\n        [  36,   71],\\n        [  44,   99],\\n        [  16,  -72],\\n        [-100,    5],\\n        [ -84,  -78],\\n        [  79,  -38],\\n        [  96,  -61],\\n        [  67,   -3],\\n        [ -84,   -8],\\n        [ -18,  -13],\\n        [ -45,   24],\\n        [  40,   23],\\n        [ -60,   -4],\\n        [ -58,   73],\\n        [  66,  -20],\\n        [ -90,  -25],\\n        [  97,  100],\\n        [   7,   56],\\n        [  86,  -48],\\n        [   6,   64],\\n        [   2,   74],\\n        [ -74,  -96],\\n        [ -20,   39],\\n        [ -90,  -90],\\n        [  67,   88],\\n        [ -97,  -22],\\n        [  52,  -23],\\n        [  89,   41],\\n        [  49,  -30],\\n        [  74,   -3],\\n        [  50,   52],\\n        [  53,    8],\\n        [  79,  -56],\\n        [  41,   79],\\n        [  25,  -19],\\n        [ -87,   93],\\n        [  99,  -23],\\n        [  99,   82],\\n        [ -57,  -27],\\n        [  -7,  -61],\\n        [ -19,   53],\\n        [ -49,  -14]]))",
    0.00058
  ]
}