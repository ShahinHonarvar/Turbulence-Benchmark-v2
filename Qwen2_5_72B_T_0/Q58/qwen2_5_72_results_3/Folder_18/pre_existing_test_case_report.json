{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00039
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 28, -87],\\n        [ 10,  95],\\n        [ -6,  -6],\\n        [ 88, -21],\\n        [-43,  94],\\n        [ 77,  32],\\n        [ 18, -92],\\n        [ 90, -97],\\n        [ 61, -64],\\n        [  4,  42],\\n        [-38,  70],\\n        [-20,  19],\\n        [-59, -54],\\n        [ 88, -93],\\n        [-54, -86],\\n        [ 61, -27],\\n        [ 17,  54],\\n        [-82, -60],\\n        [-41, -51],\\n        [-83,  39],\\n        [100,  81],\\n        [-29,   4],\\n        [ 20, -51],\\n        [-45, -29],\\n        [ 24,  80],\\n        [ 94, -69],\\n        [  8, -20],\\n        [-70, -32],\\n        [ 22, -84],\\n        [ 73, -10],\\n        [ 64,  98],\\n        [ 77,  29],\\n        [-44, -78],\\n        [ 17, -73],\\n        [-58, -86],\\n        [-85,  98],\\n        [ 98,  13],\\n        [  5, -79],\\n        [-38,  41],\\n        [ -4, -66],\\n        [ 46,  70],\\n        [-33,  -4],\\n        [ 17,  33],\\n        [  0, -92],\\n        [ 82,  12],\\n        [-64, -86],\\n        [-97, 100],\\n        [-15,   1],\\n        [ -6,  -6],\\n        [-18,   5],\\n        [ 78,  73],\\n        [-40, -47]]))",
    0.00063
  ]
}