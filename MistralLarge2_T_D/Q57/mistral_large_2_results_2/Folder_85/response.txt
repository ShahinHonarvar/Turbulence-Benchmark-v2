id='d4f0d58eefef4543a072669ee5eeb320' object='chat.completion' model='mistral-large-latest' usage=UsageInfo(prompt_tokens=142, completion_tokens=373, total_tokens=515) created=1730475698 choices=[ChatCompletionChoice(index=0, message=AssistantMessage(content='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    submatrices = []\n\n    def find_submatrices(start_row, start_col, current_sum, current_submatrix):\n        if current_sum == -87:\n            submatrices.append(current_submatrix)\n            return\n        if current_sum < -87 or start_row >= rows or start_col >= cols:\n            return\n\n        for i in range(start_row, rows):\n            for j in range(start_col, cols):\n                new_submatrix = current_submatrix + [(i, j)]\n                find_submatrices(i, j + 1, current_sum + matrix[i, j], new_submatrix)\n\n    for i in range(rows):\n        for j in range(cols):\n            find_submatrices(i, j, 0, [])\n\n    result = []\n    for submatrix in submatrices:\n        submatrix_rows = [coord[0] for coord in submatrix]\n        submatrix_cols = [coord[1] for coord in submatrix]\n        min_row, max_row = min(submatrix_rows), max(submatrix_rows)\n        min_col, max_col = min(submatrix_cols), max(submatrix_cols)\n        result.append(matrix[min_row:max_row+1, min_col:max_col+1].tolist())\n\n    return result\n```', tool_calls=None, prefix=False, role='assistant'), finish_reason='stop')]