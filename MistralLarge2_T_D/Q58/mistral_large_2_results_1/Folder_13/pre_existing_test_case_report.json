{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -49,  -37,   78,  -38,  -89,  -47,  -43,   99,   84,  -75,\\n           98,   61,   58,   85,  -34,  -30,  -22,   59,   79,   30,\\n           58,  -80,   47,  -81,  -71,   17,   82,   51,   25,  -14,\\n           89,   39,   69,  -98,   94,   54,  -73,   13,  -49,  -54,\\n           93,   31,   43,   74,   89,   57,  -35,  -48,   68,    7,\\n            4,   39,  -61,  -99,  -29,   15,  -77,  -62,  -50,  -63,\\n           96,   67,   66,   14,  -93,  -89,  -32,   65,  -87,   17,\\n          -92,   48,   39,  -23,  -91,  -27,   85,   -7,  -21,  -53,\\n           11,    6,   82,   31,   81,   74,    0,   16,  -62,   31,\\n          -37,  -16,   69,    8,   88,  -30,   47,   -5,   15,   27,\\n          -72,  -49,   21,  -51,    0,  -28,   44,   -5,   88,   76,\\n           58,   72,  -56,   36,   89,   55,  -14,   39,   70,   88,\\n           67,  -46,  -56,  -42,   29,    0,  -99,  -63,   79,  -81,\\n          -83,  -80,   69,   89,  -86,  -39,  -23,   76,   83,   -3,\\n           -6,  -35,  -72,   59,   94,  -65,  -90,  -73,  -64,  -24,\\n           31,   -7,   77,    7,   39,   50,   98,   37,    0,   57,\\n          -53,   76,   14,  100,  -32,  -77,  -97,   65,  -62,   39,\\n           57,  -22,  -85,  -16, -100]]))",
    0.00078
  ]
}