id='57ae2a1cd3ee4e7a9459b731eb407794' object='chat.completion' model='mistral-large-latest' usage=UsageInfo(prompt_tokens=134, completion_tokens=398, total_tokens=532) created=1730478685 choices=[ChatCompletionChoice(index=0, message=AssistantMessage(content='```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    n = 103\n\n    def count_submatrices(r, c):\n        if r < 0 or c < 0:\n            return 0\n        return prefix_sum[r, c] - (prefix_sum[r - 1, c] if r > 0 else 0) - (prefix_sum[r, c - 1] if c > 0 else 0) + (prefix_sum[r - 1, c - 1] if r > 0 and c > 0 else 0)\n\n    prefix_sum = np.zeros((rows + 1, cols + 1), dtype=int)\n    for r in range(rows):\n        for c in range(cols):\n            prefix_sum[r + 1, c + 1] = prefix_sum[r, c + 1] + prefix_sum[r + 1, c] - prefix_sum[r, c] + matrix[r, c]\n\n    count = 0\n    for r1 in range(rows):\n        for c1 in range(cols):\n            for r2 in range(r1, rows):\n                for c2 in range(c1, cols):\n                    if count_submatrices(r2, c2) - count_submatrices(r1 - 1, c2) - count_submatrices(r2, c1 - 1) + count_submatrices(r1 - 1, c1 - 1) == n:\n                        count += 1\n\n    return count\n```', tool_calls=None, prefix=False, role='assistant'), finish_reason='stop')]