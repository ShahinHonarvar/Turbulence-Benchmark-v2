{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_8_2.py::test_list_of_single_number", "location": ["tests55_8_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_8_2.py": 1, "Folder_8": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011351200009812601, "start": 1738561392.5542777, "stop": 1738561392.5543919, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1b199b19a9be46e39feef188f7ccd4e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_8_2.py::test_list_of_single_number", "location": ["tests55_8_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_8_2.py": 1, "Folder_8": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00011853999967570417, "start": 1738561392.5545516, "stop": 1738561392.5546706, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1b199b19a9be46e39feef188f7ccd4e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_8_2.py::test_list_of_single_number", "location": ["tests55_8_2.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_8_2.py": 1, "Folder_8": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.61539995437488e-05, "start": 1738561392.5549688, "stop": 1738561392.5550454, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1b199b19a9be46e39feef188f7ccd4e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_8_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_8_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_8_2.py": 1, "Folder_8": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.866499800002202e-05, "start": 1738561392.5557494, "stop": 1738561392.5558286, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1b199b19a9be46e39feef188f7ccd4e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_8_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_8_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_8_2.py": 1, "Folder_8": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q55/dolphin2_9_2_results_2/Folder_8/tests55_8_2.py", "lineno": 21, "message": "assert (1 == 3)\n +  where 1 = <built-in method count of list object at 0x76073f87b640>([-41])\n +    where <built-in method count of list object at 0x76073f87b640> = [[1, -41], [1, -41, 1], [-41], [-41, 1], []].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -41, 1, -41, 1, -41]", "        result = lists_with_product_equal_n(input_list)", "        if -41 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -41 == 1:", "            assert result.count([-41]) == 6 and result.count([1, -41]) == 6 and result.count([-41, 1]) == 6 and result.count([1, -41, 1]) == 6", "        else:", ">           assert result.count([-41]) == 3 and result.count([1, -41]) == 3 and result.count([-41, 1]) == 3 and result.count([1, -41, 1]) == 3", "E           assert (1 == 3)", "E            +  where 1 = <built-in method count of list object at 0x76073f87b640>([-41])", "E            +    where <built-in method count of list object at 0x76073f87b640> = [[1, -41], [1, -41, 1], [-41], [-41, 1], []].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/dolphin2_9_2_results_2/Folder_8/tests55_8_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, -41, 1, -41, 1, -41]", "        result = lists_with_product_equal_n(input_list)", "        if -41 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif -41 == 1:", "            assert result.count([-41]) == 6 and result.count([1, -41]) == 6 and result.count([-41, 1]) == 6 and result.count([1, -41, 1]) == 6", "        else:", ">           assert result.count([-41]) == 3 and result.count([1, -41]) == 3 and result.count([-41, 1]) == 3 and result.count([1, -41, 1]) == 3", "E           assert (1 == 3)", "E            +  where 1 = <built-in method count of list object at 0x76073f87b640>([-41])", "E            +    where <built-in method count of list object at 0x76073f87b640> = [[1, -41], [1, -41, 1], [-41], [-41, 1], []].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/dolphin2_9_2_results_2/Folder_8/tests55_8_2.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q55/dolphin2_9_2_results_2/Folder_8/tests55_8_2.py", "lineno": 21, "message": "assert (1 == 3)\n +  where 1 = <built-in method count of list object at 0x76073f87b640>([-41])\n +    where <built-in method count of list object at 0x76073f87b640> = [[1, -41], [1, -41, 1], [-41], [-41, 1], []].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00026610900022205897, "start": 1738561392.555933, "stop": 1738561392.5561993, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1b199b19a9be46e39feef188f7ccd4e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_8_2.py::test_presence_of_duplicates_in_result", "location": ["tests55_8_2.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_8_2.py": 1, "Folder_8": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.006899977568537e-05, "start": 1738561392.564946, "stop": 1738561392.5650163, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1b199b19a9be46e39feef188f7ccd4e8", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
