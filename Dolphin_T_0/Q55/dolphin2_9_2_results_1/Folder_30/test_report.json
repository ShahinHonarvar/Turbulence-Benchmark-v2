{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests55_30_1.py::test_list_of_single_number", "location": ["tests55_30_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_30_1.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.38299999688752e-05, "start": 1738561336.6579974, "stop": 1738561336.6580913, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f94e23f7ac79490cae82c1521069081f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_1.py::test_list_of_single_number", "location": ["tests55_30_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_30_1.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.690300091984682e-05, "start": 1738561336.6582193, "stop": 1738561336.6583064, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f94e23f7ac79490cae82c1521069081f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_1.py::test_list_of_single_number", "location": ["tests55_30_1.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_30_1.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.9314999816706404e-05, "start": 1738561336.65853, "stop": 1738561336.6585896, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f94e23f7ac79490cae82c1521069081f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_30_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_30_1.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.525100176688284e-05, "start": 1738561336.6599066, "stop": 1738561336.6600022, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f94e23f7ac79490cae82c1521069081f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_30_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_30_1.py": 1, "Folder_30": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q55/dolphin2_9_2_results_1/Folder_30/tests55_30_1.py", "lineno": 21, "message": "assert (2 == 3)\n +  where 2 = <built-in method count of list object at 0x7f469cc15bc0>([99])\n +    where <built-in method count of list object at 0x7f469cc15bc0> = [[], [], [99, 1], [99, 1, 99], [99, 1], [99, 1, 99], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 99, 1, 99, 1, 99]", "        result = lists_with_product_equal_n(input_list)", "        if 99 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 99 == 1:", "            assert result.count([99]) == 6 and result.count([1, 99]) == 6 and result.count([99, 1]) == 6 and result.count([1, 99, 1]) == 6", "        else:", ">           assert result.count([99]) == 3 and result.count([1, 99]) == 3 and result.count([99, 1]) == 3 and result.count([1, 99, 1]) == 3", "E           assert (2 == 3)", "E            +  where 2 = <built-in method count of list object at 0x7f469cc15bc0>([99])", "E            +    where <built-in method count of list object at 0x7f469cc15bc0> = [[], [], [99, 1], [99, 1, 99], [99, 1], [99, 1, 99], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/dolphin2_9_2_results_1/Folder_30/tests55_30_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 99, 1, 99, 1, 99]", "        result = lists_with_product_equal_n(input_list)", "        if 99 == 0:", "            assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "            [1, 0, 1, 0, 1]) == 3 and result.count([1, 0, 1, 0, 1, 0]) == 3 and result.count([0, 1, 0, 1, 0, 1]) == 3", "        elif 99 == 1:", "            assert result.count([99]) == 6 and result.count([1, 99]) == 6 and result.count([99, 1]) == 6 and result.count([1, 99, 1]) == 6", "        else:", ">           assert result.count([99]) == 3 and result.count([1, 99]) == 3 and result.count([99, 1]) == 3 and result.count([1, 99, 1]) == 3", "E           assert (2 == 3)", "E            +  where 2 = <built-in method count of list object at 0x7f469cc15bc0>([99])", "E            +    where <built-in method count of list object at 0x7f469cc15bc0> = [[], [], [99, 1], [99, 1, 99], [99, 1], [99, 1, 99], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/dolphin2_9_2_results_1/Folder_30/tests55_30_1.py", "lineno": 21, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q55/dolphin2_9_2_results_1/Folder_30/tests55_30_1.py", "lineno": 21, "message": "assert (2 == 3)\n +  where 2 = <built-in method count of list object at 0x7f469cc15bc0>([99])\n +    where <built-in method count of list object at 0x7f469cc15bc0> = [[], [], [99, 1], [99, 1, 99], [99, 1], [99, 1, 99], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033041000278899446, "start": 1738561336.6601162, "stop": 1738561336.6604471, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f94e23f7ac79490cae82c1521069081f", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_30_1.py::test_presence_of_duplicates_in_result", "location": ["tests55_30_1.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_30_1.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.540999963064678e-05, "start": 1738561336.669601, "stop": 1738561336.669697, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f94e23f7ac79490cae82c1521069081f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
