{
  "parameter(s)": [
    3,
    "ascending"
  ],
  "test_strings_of_size_equal_to_3": [
    "passed",
    "",
    9e-05
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 4 == 3\n +  where 4 = len(['2', '5', 'E', '~'])\n +    where ['2', '5', 'E', '~'] = return_n_greatest_chars('5E~2')",
    0.00019
  ]
}