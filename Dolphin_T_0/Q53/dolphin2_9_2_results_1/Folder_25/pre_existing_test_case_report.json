{
  "parameter(s)": [
    38
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  ', '  a', '  a ', '  a  ', '  a  a', '  a  a ', ...}\n +  where {'  ', '  a', '  a ', '  a  ', '  a  a', '  a  a ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.01408
  ],
  "test_string_of_similar_chars_of_length_38": [
    "failed",
    "AssertionError: assert {'aa', 'aaa',...aaaaaaa', ...} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaaa'\n  'aaa'\n  'aaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaa'\n  'aaaaa'...\n  \n  ...Full output truncated (70 lines hidden), use '-vv' to show",
    0.00072
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'ab', 'abc', 'abcd', 'abcde', 'abcdef', 'abcdefa', ...}\n +  where {'ab', 'abc', 'abcd', 'abcde', 'abcdef', 'abcdefa', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.01442
  ]
}