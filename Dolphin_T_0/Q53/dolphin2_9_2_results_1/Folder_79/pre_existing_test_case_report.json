{
  "parameter(s)": [
    17
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  a  a  a  a  ', '  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  ', ...}\n +  where {'  a  a  a  a  a  ', '  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00131
  ],
  "test_string_of_similar_chars_of_length_17": [
    "failed",
    "AssertionError: assert set() == {'aaaaaaaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaa'}\n  + set()",
    0.00048
  ],
  "test_string_of_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%', ...}\n +  where {'%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%', ...} = palindrome_of_length_at_least_n('a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%')",
    0.00034
  ]
}