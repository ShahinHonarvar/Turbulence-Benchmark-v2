{
  "parameter(s)": [
    48
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', ...}\n +  where {'  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00505
  ],
  "test_string_of_similar_chars_of_length_48": [
    "failed",
    "AssertionError: assert {'AAAAAAAAAAA...AAAAAAAAAAAA'} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the left set:\n  'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n  + {'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'}",
    0.00056
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'                                                ', '                                                 ', '                                                  ', '                                                   ', '                                                    ', '                                                     ', ...}\n +  where {'                                                ', '                                                 ', '                                                  ', '                                                   ', '                                                    ', '                                                     ', ...} = palindrome_of_length_at_least_n('                                                                                                ')",
    0.00038
  ]
}