{
  "parameter(s)": [
    24
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00015
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  ', ...}\n +  where {'  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  ', '  A  A  A  A  A  A  A  A  A  A  A  A  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00112
  ],
  "test_string_of_similar_chars_of_length_24": [
    "failed",
    "AssertionError: assert {'AAAAAAAAAAA...AAAAAAAAAAAA'} == {'aaaaaaaaaaaaaaaaaaaaaaaa'}\n  Extra items in the left set:\n  'AAAAAAAAAAAAAAAAAAAAAAA'\n  'AAAAAAAAAAAAAAAAAAAAAAAA'\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaa'}\n  + {'AAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAAAAAAAAAAAAAAAAAAAA'}",
    0.00033
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'                       ', '                        ', '                         ', '                          ', '                           ', '                            ', ...}\n +  where {'                       ', '                        ', '                         ', '                          ', '                           ', '                            ', ...} = palindrome_of_length_at_least_n('                                                ')",
    0.00022
  ]
}