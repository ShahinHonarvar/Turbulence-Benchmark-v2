{
  "parameter(s)": [
    41
  ],
  "test_string_of_similar_chars_of_length_41": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_similar_chars_of_length_greater_than_41": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', ...}\n +  where {'  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00748
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcde', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabc', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcd', ...}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcde', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdef', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefa', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabc', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcd', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00787
  ],
  "test_string_of_punctuations_and_letters": [
    "failed",
    "AssertionError: assert not {'%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', ...}\n +  where {'%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%', '%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a', ...} = palindrome_of_length_at_least_n('a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%a%')",
    0.0004
  ]
}