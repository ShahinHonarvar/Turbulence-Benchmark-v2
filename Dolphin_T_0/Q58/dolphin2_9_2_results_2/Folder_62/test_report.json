{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_2.py::test_matrix_of_one_integer", "location": ["tests58_62_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00034211299862363376, "start": 1738561781.851096, "stop": 1738561781.8514383, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bef459ed58a54643bdd8b2d78b79aa17", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_one_integer", "location": ["tests58_62_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005545409985643346, "start": 1738561781.851708, "stop": 1738561781.852263, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bef459ed58a54643bdd8b2d78b79aa17", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_one_integer", "location": ["tests58_62_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.09560006018728e-05, "start": 1738561781.8526547, "stop": 1738561781.852736, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bef459ed58a54643bdd8b2d78b79aa17", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_having_186_integers", "location": ["tests58_62_2.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.753899939823896e-05, "start": 1738561781.8539374, "stop": 1738561781.8540351, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bef459ed58a54643bdd8b2d78b79aa17", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_having_186_integers", "location": ["tests58_62_2.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -97],\\n        [  44,   -5],\\n        [  92,  -64],\\n        [  19,  -92],\\n        [  -9,  -75],\\n        [ -99,   59],\\n        [  20,  -19],\\n        [  96,  -86],\\n        [  89,   96],\\n        [  21,  -12],\\n        [  23,   65],\\n        [  -4,   51],\\n        [ -89,  -52],\\n        [  98,  -29],\\n        [ -96,   32],\\n        [  27,  100],\\n        [ -12,   30],\\n        [ -43,   11],\\n        [ -12,   17],\\n        [  68,  -38],\\n        [ -63,  -52],\\n        [  77,  -23],\\n        [ -42,   26],\\n        [ -19,  -23],\\n        [  80,   61],\\n        [ -89,  -60],\\n        [  49,   23],\\n        [ -79,  -93],\\n        [  33,    5],\\n        [ -70,  -74],\\n        [  20,  -11],\\n        [ -95,  -30],\\n        [ -27,   54],\\n        [ -45,   44],\\n        [  72,   83],\\n        [  50,  -20],\\n        [ -38,  -55],\\n        [  25,  -81],\\n        [   5,  -51],\\n        [  34,   72],\\n        [  39,   12],\\n        [  78,   -9],\\n        [  74,   53],\\n        [ -85,   63],\\n        [ -84,   -6],\\n        [  77,   72],\\n        [  94,   56],\\n        [  88,  -65],\\n        [  51,    7],\\n        [  13, -100],\\n        [  84,  -57],\\n        [ -75,   13],\\n        [  54,  -39],\\n        [-100,  -95],\\n        [  20,    5],\\n        [  44,  -21],\\n        [ -54,  -78],\\n        [ -61,  -59],\\n        [-100,  -38],\\n        [ -10,  -44],\\n        [ -46,    7],\\n        [ -12,   74],\\n        [ -68,   90],\\n        [  11,  -85],\\n        [  42,   27],\\n        [  15,  -89],\\n        [ -23,  -14],\\n        [ -23,   77],\\n        [ -43,  -51],\\n        [ -65,  -52],\\n        [ -80,   47],\\n        [  44,   19],\\n        [  30,   52],\\n        [ -83,  -51],\\n        [  45,  -24],\\n        [ -81,  -41],\\n        [  68,  -93],\\n        [  -3,  -11],\\n        [ -95,    0],\\n        [ -69,   60],\\n        [  50,   37],\\n        [  -4,   29],\\n        [  53,  -38],\\n        [   8,  -49],\\n        [ -44,    6],\\n        [  45,  -83],\\n        [  14,  -37],\\n        [  77,   40],\\n        [  31,    6],\\n        [ 100,   93],\\n        [ -40,   71],\\n        [  55,  -35],\\n        [ -26,  -13]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -97],\\n        [  44,   -5],\\n        [  92,  -64],\\n        [  19,  -92],\\n        [  -9,  -75],\\n        [ -99,   59],\\n        [  20,  -19],\\n        [  96,  -86],\\n        [  89,   96],\\n        [  21,  -12],\\n        [  23,   65],\\n        [  -4,   51],\\n        [ -89,  -52],\\n        [  98,  -29],\\n        [ -96,   32],\\n        [  27,  100],\\n        [ -12,   30],\\n        [ -43,   11],\\n        [ -12,   17],\\n        [  68,  -38],\\n        [ -63,  -52],\\n        [  77,  -23],\\n        [ -42,   26],\\n        [ -19,  -23],\\n        [  80,   61],\\n        [ -89,  -60],\\n        [  49,   23],\\n        [ -79,  -93],\\n        [  33,    5],\\n        [ -70,  -74],\\n        [  20,  -11],\\n        [ -95,  -30],\\n        [ -27,   54],\\n        [ -45,   44],\\n        [  72,   83],\\n        [  50,  -20],\\n        [ -38,  -55],\\n        [  25,  -81],\\n        [   5,  -51],\\n        [  34,   72],\\n        [  39,   12],\\n        [  78,   -9],\\n        [  74,   53],\\n        [ -85,   63],\\n        [ -84,   -6],\\n        [  77,   72],\\n        [  94,   56],\\n        [  88,  -65],\\n        [  51,    7],\\n        [  13, -100],\\n        [  84,  -57],\\n        [ -75,   13],\\n        [  54,  -39],\\n        [-100,  -95],\\n        [  20,    5],\\n        [  44,  -21],\\n        [ -54,  -78],\\n        [ -61,  -59],\\n        [-100,  -38],\\n        [ -10,  -44],\\n        [ -46,    7],\\n        [ -12,   74],\\n        [ -68,   90],\\n        [  11,  -85],\\n        [  42,   27],\\n        [  15,  -89],\\n        [ -23,  -14],\\n        [ -23,   77],\\n        [ -43,  -51],\\n        [ -65,  -52],\\n        [ -80,   47],\\n        [  44,   19],\\n        [  30,   52],\\n        [ -83,  -51],\\n        [  45,  -24],\\n        [ -81,  -41],\\n        [  68,  -93],\\n        [  -3,  -11],\\n        [ -95,    0],\\n        [ -69,   60],\\n        [  50,   37],\\n        [  -4,   29],\\n        [  53,  -38],\\n        [   8,  -49],\\n        [ -44,    6],\\n        [  45,  -83],\\n        [  14,  -37],\\n        [  77,   40],\\n        [  31,    6],\\n        [ 100,   93],\\n        [ -40,   71],\\n        [  55,  -35],\\n        [ -26,  -13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -97],\\n        [  44,   -5],\\n        [  92,  -64],\\n        [  19,  -92],\\n        [  -9,  -75],\\n        [ -99,   59],\\n        [  20,  -19],\\n        [  96,  -86],\\n        [  89,   96],\\n        [  21,  -12],\\n        [  23,   65],\\n        [  -4,   51],\\n        [ -89,  -52],\\n        [  98,  -29],\\n        [ -96,   32],\\n        [  27,  100],\\n        [ -12,   30],\\n        [ -43,   11],\\n        [ -12,   17],\\n        [  68,  -38],\\n        [ -63,  -52],\\n        [  77,  -23],\\n        [ -42,   26],\\n        [ -19,  -23],\\n        [  80,   61],\\n        [ -89,  -60],\\n        [  49,   23],\\n        [ -79,  -93],\\n        [  33,    5],\\n        [ -70,  -74],\\n        [  20,  -11],\\n        [ -95,  -30],\\n        [ -27,   54],\\n        [ -45,   44],\\n        [  72,   83],\\n        [  50,  -20],\\n        [ -38,  -55],\\n        [  25,  -81],\\n        [   5,  -51],\\n        [  34,   72],\\n        [  39,   12],\\n        [  78,   -9],\\n        [  74,   53],\\n        [ -85,   63],\\n        [ -84,   -6],\\n        [  77,   72],\\n        [  94,   56],\\n        [  88,  -65],\\n        [  51,    7],\\n        [  13, -100],\\n        [  84,  -57],\\n        [ -75,   13],\\n        [  54,  -39],\\n        [-100,  -95],\\n        [  20,    5],\\n        [  44,  -21],\\n        [ -54,  -78],\\n        [ -61,  -59],\\n        [-100,  -38],\\n        [ -10,  -44],\\n        [ -46,    7],\\n        [ -12,   74],\\n        [ -68,   90],\\n        [  11,  -85],\\n        [  42,   27],\\n        [  15,  -89],\\n        [ -23,  -14],\\n        [ -23,   77],\\n        [ -43,  -51],\\n        [ -65,  -52],\\n        [ -80,   47],\\n        [  44,   19],\\n        [  30,   52],\\n        [ -83,  -51],\\n        [  45,  -24],\\n        [ -81,  -41],\\n        [  68,  -93],\\n        [  -3,  -11],\\n        [ -95,    0],\\n        [ -69,   60],\\n        [  50,   37],\\n        [  -4,   29],\\n        [  53,  -38],\\n        [   8,  -49],\\n        [ -44,    6],\\n        [  45,  -83],\\n        [  14,  -37],\\n        [  77,   40],\\n        [  31,    6],\\n        [ 100,   93],\\n        [ -40,   71],\\n        [  55,  -35],\\n        [ -26,  -13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -40,  -97],\\n        [  44,   -5],\\n        [  92,  -64],\\n        [  19,  -92],\\n        [  -9,  -75],\\n        [ -99,   59],\\n        [  20,  -19],\\n        [  96,  -86],\\n        [  89,   96],\\n        [  21,  -12],\\n        [  23,   65],\\n        [  -4,   51],\\n        [ -89,  -52],\\n        [  98,  -29],\\n        [ -96,   32],\\n        [  27,  100],\\n        [ -12,   30],\\n        [ -43,   11],\\n        [ -12,   17],\\n        [  68,  -38],\\n        [ -63,  -52],\\n        [  77,  -23],\\n        [ -42,   26],\\n        [ -19,  -23],\\n        [  80,   61],\\n        [ -89,  -60],\\n        [  49,   23],\\n        [ -79,  -93],\\n        [  33,    5],\\n        [ -70,  -74],\\n        [  20,  -11],\\n        [ -95,  -30],\\n        [ -27,   54],\\n        [ -45,   44],\\n        [  72,   83],\\n        [  50,  -20],\\n        [ -38,  -55],\\n        [  25,  -81],\\n        [   5,  -51],\\n        [  34,   72],\\n        [  39,   12],\\n        [  78,   -9],\\n        [  74,   53],\\n        [ -85,   63],\\n        [ -84,   -6],\\n        [  77,   72],\\n        [  94,   56],\\n        [  88,  -65],\\n        [  51,    7],\\n        [  13, -100],\\n        [  84,  -57],\\n        [ -75,   13],\\n        [  54,  -39],\\n        [-100,  -95],\\n        [  20,    5],\\n        [  44,  -21],\\n        [ -54,  -78],\\n        [ -61,  -59],\\n        [-100,  -38],\\n        [ -10,  -44],\\n        [ -46,    7],\\n        [ -12,   74],\\n        [ -68,   90],\\n        [  11,  -85],\\n        [  42,   27],\\n        [  15,  -89],\\n        [ -23,  -14],\\n        [ -23,   77],\\n        [ -43,  -51],\\n        [ -65,  -52],\\n        [ -80,   47],\\n        [  44,   19],\\n        [  30,   52],\\n        [ -83,  -51],\\n        [  45,  -24],\\n        [ -81,  -41],\\n        [  68,  -93],\\n        [  -3,  -11],\\n        [ -95,    0],\\n        [ -69,   60],\\n        [  50,   37],\\n        [  -4,   29],\\n        [  53,  -38],\\n        [   8,  -49],\\n        [ -44,    6],\\n        [  45,  -83],\\n        [  14,  -37],\\n        [  77,   40],\\n        [  31,    6],\\n        [ 100,   93],\\n        [ -40,   71],\\n        [  55,  -35],\\n        [ -26,  -13]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008541090028302278, "start": 1738561781.8543193, "stop": 1738561781.8551738, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bef459ed58a54643bdd8b2d78b79aa17", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_having_186_integers", "location": ["tests58_62_2.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013661900084116496, "start": 1738561781.8869166, "stop": 1738561781.8870537, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bef459ed58a54643bdd8b2d78b79aa17", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
