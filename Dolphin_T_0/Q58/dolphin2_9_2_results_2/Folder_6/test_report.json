{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017615400065551512, "start": 1738561734.7287045, "stop": 1738561734.7288816, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e32215d99d33427696bbf57506695d07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024262199804070406, "start": 1738561734.7291043, "stop": 1738561734.7293475, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e32215d99d33427696bbf57506695d07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_one_integer", "location": ["tests58_6_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012453700037440285, "start": 1738561734.729759, "stop": 1738561734.7298844, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e32215d99d33427696bbf57506695d07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016910100021050312, "start": 1738561734.7482786, "stop": 1738561734.7484484, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e32215d99d33427696bbf57506695d07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -82,  -92],\\n        [   6,   59],\\n        [ -11,  -64],\\n        [  51,   20],\\n        [ -20,  -23],\\n        [  68,   34],\\n        [ -17,   69],\\n        [ -32,   -5],\\n        [ -28,  -53],\\n        [ -64,   21],\\n        [ -78,   93],\\n        [  93,   94],\\n        [ -81,  -48],\\n        [  87,   40],\\n        [  -3,   85],\\n        [  69,   -1],\\n        [ -24,   89],\\n        [ -21,   87],\\n        [  20,    6],\\n        [  97,  -96],\\n        [  26,   98],\\n        [  88,   67],\\n        [  67,  -75],\\n        [  20,   59],\\n        [ -21,    5],\\n        [  87,  -91],\\n        [  27,   95],\\n        [ -62,  -30],\\n        [ -24,  -66],\\n        [ -56,   52],\\n        [ -19,    9],\\n        [ -49,  -96],\\n        [ -32,  -81],\\n        [ -84,  -55],\\n        [ -16,  -15],\\n        [ -52,  -25],\\n        [ -80,   66],\\n        [  20,   99],\\n        [ -38,   -5],\\n        [  92,  -98],\\n        [ -55,   70],\\n        [  66,   13],\\n        [ -10,   46],\\n        [  87,  -95],\\n        [ -45, -100],\\n        [  93,   89],\\n        [  -8,  -86],\\n        [   8,   12],\\n        [ -20, -100],\\n        [ 100,   -4],\\n        [  -1,   74],\\n        [ -44,   91],\\n        [-100,   67],\\n        [  73,    8],\\n        [ -66,   32],\\n        [  62,   -5],\\n        [ -98,  -98],\\n        [ -15,   88],\\n        [  15,   44],\\n        [ -40,   52],\\n        [  96,    7]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -82,  -92],\\n        [   6,   59],\\n        [ -11,  -64],\\n        [  51,   20],\\n        [ -20,  -23],\\n        [  68,   34],\\n        [ -17,   69],\\n        [ -32,   -5],\\n        [ -28,  -53],\\n        [ -64,   21],\\n        [ -78,   93],\\n        [  93,   94],\\n        [ -81,  -48],\\n        [  87,   40],\\n        [  -3,   85],\\n        [  69,   -1],\\n        [ -24,   89],\\n        [ -21,   87],\\n        [  20,    6],\\n        [  97,  -96],\\n        [  26,   98],\\n        [  88,   67],\\n        [  67,  -75],\\n        [  20,   59],\\n        [ -21,    5],\\n        [  87,  -91],\\n        [  27,   95],\\n        [ -62,  -30],\\n        [ -24,  -66],\\n        [ -56,   52],\\n        [ -19,    9],\\n        [ -49,  -96],\\n        [ -32,  -81],\\n        [ -84,  -55],\\n        [ -16,  -15],\\n        [ -52,  -25],\\n        [ -80,   66],\\n        [  20,   99],\\n        [ -38,   -5],\\n        [  92,  -98],\\n        [ -55,   70],\\n        [  66,   13],\\n        [ -10,   46],\\n        [  87,  -95],\\n        [ -45, -100],\\n        [  93,   89],\\n        [  -8,  -86],\\n        [   8,   12],\\n        [ -20, -100],\\n        [ 100,   -4],\\n        [  -1,   74],\\n        [ -44,   91],\\n        [-100,   67],\\n        [  73,    8],\\n        [ -66,   32],\\n        [  62,   -5],\\n        [ -98,  -98],\\n        [ -15,   88],\\n        [  15,   44],\\n        [ -40,   52],\\n        [  96,    7]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -82,  -92],\\n        [   6,   59],\\n        [ -11,  -64],\\n        [  51,   20],\\n        [ -20,  -23],\\n        [  68,   34],\\n        [ -17,   69],\\n        [ -32,   -5],\\n        [ -28,  -53],\\n        [ -64,   21],\\n        [ -78,   93],\\n        [  93,   94],\\n        [ -81,  -48],\\n        [  87,   40],\\n        [  -3,   85],\\n        [  69,   -1],\\n        [ -24,   89],\\n        [ -21,   87],\\n        [  20,    6],\\n        [  97,  -96],\\n        [  26,   98],\\n        [  88,   67],\\n        [  67,  -75],\\n        [  20,   59],\\n        [ -21,    5],\\n        [  87,  -91],\\n        [  27,   95],\\n        [ -62,  -30],\\n        [ -24,  -66],\\n        [ -56,   52],\\n        [ -19,    9],\\n        [ -49,  -96],\\n        [ -32,  -81],\\n        [ -84,  -55],\\n        [ -16,  -15],\\n        [ -52,  -25],\\n        [ -80,   66],\\n        [  20,   99],\\n        [ -38,   -5],\\n        [  92,  -98],\\n        [ -55,   70],\\n        [  66,   13],\\n        [ -10,   46],\\n        [  87,  -95],\\n        [ -45, -100],\\n        [  93,   89],\\n        [  -8,  -86],\\n        [   8,   12],\\n        [ -20, -100],\\n        [ 100,   -4],\\n        [  -1,   74],\\n        [ -44,   91],\\n        [-100,   67],\\n        [  73,    8],\\n        [ -66,   32],\\n        [  62,   -5],\\n        [ -98,  -98],\\n        [ -15,   88],\\n        [  15,   44],\\n        [ -40,   52],\\n        [  96,    7]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_2/Folder_6/tests58_6_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -82,  -92],\\n        [   6,   59],\\n        [ -11,  -64],\\n        [  51,   20],\\n        [ -20,  -23],\\n        [  68,   34],\\n        [ -17,   69],\\n        [ -32,   -5],\\n        [ -28,  -53],\\n        [ -64,   21],\\n        [ -78,   93],\\n        [  93,   94],\\n        [ -81,  -48],\\n        [  87,   40],\\n        [  -3,   85],\\n        [  69,   -1],\\n        [ -24,   89],\\n        [ -21,   87],\\n        [  20,    6],\\n        [  97,  -96],\\n        [  26,   98],\\n        [  88,   67],\\n        [  67,  -75],\\n        [  20,   59],\\n        [ -21,    5],\\n        [  87,  -91],\\n        [  27,   95],\\n        [ -62,  -30],\\n        [ -24,  -66],\\n        [ -56,   52],\\n        [ -19,    9],\\n        [ -49,  -96],\\n        [ -32,  -81],\\n        [ -84,  -55],\\n        [ -16,  -15],\\n        [ -52,  -25],\\n        [ -80,   66],\\n        [  20,   99],\\n        [ -38,   -5],\\n        [  92,  -98],\\n        [ -55,   70],\\n        [  66,   13],\\n        [ -10,   46],\\n        [  87,  -95],\\n        [ -45, -100],\\n        [  93,   89],\\n        [  -8,  -86],\\n        [   8,   12],\\n        [ -20, -100],\\n        [ 100,   -4],\\n        [  -1,   74],\\n        [ -44,   91],\\n        [-100,   67],\\n        [  73,    8],\\n        [ -66,   32],\\n        [  62,   -5],\\n        [ -98,  -98],\\n        [ -15,   88],\\n        [  15,   44],\\n        [ -40,   52],\\n        [  96,    7]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009889319990179501, "start": 1738561734.7485988, "stop": 1738561734.7495883, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e32215d99d33427696bbf57506695d07", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_2.py::test_matrix_of_having_122_integers", "location": ["tests58_6_2.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_2.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012139700265834108, "start": 1738561734.7686176, "stop": 1738561734.76874, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "e32215d99d33427696bbf57506695d07", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
