{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001070200014510192, "start": 1738562079.2228744, "stop": 1738562079.2229817, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1fbbbdcecdcb4d75b4a8dbc4e439df28", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001323649994446896, "start": 1738562079.2231321, "stop": 1738562079.2232647, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1fbbbdcecdcb4d75b4a8dbc4e439df28", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.728700100211427e-05, "start": 1738562079.2235372, "stop": 1738562079.2236047, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1fbbbdcecdcb4d75b4a8dbc4e439df28", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.011799945961684e-05, "start": 1738562079.2251525, "stop": 1738562079.2252328, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1fbbbdcecdcb4d75b4a8dbc4e439df28", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -94],\\n        [ -12,  -58],\\n        [ -52,  -10],\\n        [  12,  -22],\\n        [ -14,  -91],\\n        [  72,   89],\\n        [ -41,   80],\\n        [  42,   59],\\n        [  84,  -85],\\n        [  50,    0],\\n        [   4,  -99],\\n        [ -36,  -26],\\n        [ -89,   93],\\n        [ -95,   12],\\n        [  37,  -35],\\n        [  19,   67],\\n        [  68,  -41],\\n        [ -37,   47],\\n        [  31,  -47],\\n        [  70,   34],\\n        [ -26,   33],\\n        [  86,   86],\\n        [  62,   65],\\n        [ -80,   89],\\n        [  32,    6],\\n        [ -17, -100],\\n        [ -99,  -64],\\n        [  75,  -30],\\n        [  46,  -76],\\n        [  45,   78],\\n        [  -7,  -76],\\n        [  87,   34],\\n        [ -81,  -46],\\n        [ -20,   92],\\n        [  26,  -55],\\n        [  42,   16],\\n        [ -11,   74],\\n        [ -28,  -71],\\n        [ -62,  -60],\\n        [  12,    8],\\n        [-100,   13],\\n        [  70,  -46],\\n        [ -24,  -32],\\n        [  13,   24],\\n        [ -30,   76],\\n        [ -26,  -34],\\n        [  29,    8],\\n        [ -87,  -38],\\n        [  35,   33],\\n        [  97,   66],\\n        [ -60,  -85],\\n        [  93,  -72],\\n        [   2,    2],\\n        [  71,  -12],\\n        [  79,   64],\\n        [  28,   29],\\n        [  46,   42],\\n        [ -35,   46],\\n        [ -84,   24],\\n        [ -84,   94]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -94],\\n        [ -12,  -58],\\n        [ -52,  -10],\\n        [  12,  -22],\\n        [ -14,  -91],\\n        [  72,   89],\\n        [ -41,   80],\\n        [  42,   59],\\n        [  84,  -85],\\n        [  50,    0],\\n        [   4,  -99],\\n        [ -36,  -26],\\n        [ -89,   93],\\n        [ -95,   12],\\n        [  37,  -35],\\n        [  19,   67],\\n        [  68,  -41],\\n        [ -37,   47],\\n        [  31,  -47],\\n        [  70,   34],\\n        [ -26,   33],\\n        [  86,   86],\\n        [  62,   65],\\n        [ -80,   89],\\n        [  32,    6],\\n        [ -17, -100],\\n        [ -99,  -64],\\n        [  75,  -30],\\n        [  46,  -76],\\n        [  45,   78],\\n        [  -7,  -76],\\n        [  87,   34],\\n        [ -81,  -46],\\n        [ -20,   92],\\n        [  26,  -55],\\n        [  42,   16],\\n        [ -11,   74],\\n        [ -28,  -71],\\n        [ -62,  -60],\\n        [  12,    8],\\n        [-100,   13],\\n        [  70,  -46],\\n        [ -24,  -32],\\n        [  13,   24],\\n        [ -30,   76],\\n        [ -26,  -34],\\n        [  29,    8],\\n        [ -87,  -38],\\n        [  35,   33],\\n        [  97,   66],\\n        [ -60,  -85],\\n        [  93,  -72],\\n        [   2,    2],\\n        [  71,  -12],\\n        [  79,   64],\\n        [  28,   29],\\n        [  46,   42],\\n        [ -35,   46],\\n        [ -84,   24],\\n        [ -84,   94]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -94],\\n        [ -12,  -58],\\n        [ -52,  -10],\\n        [  12,  -22],\\n        [ -14,  -91],\\n        [  72,   89],\\n        [ -41,   80],\\n        [  42,   59],\\n        [  84,  -85],\\n        [  50,    0],\\n        [   4,  -99],\\n        [ -36,  -26],\\n        [ -89,   93],\\n        [ -95,   12],\\n        [  37,  -35],\\n        [  19,   67],\\n        [  68,  -41],\\n        [ -37,   47],\\n        [  31,  -47],\\n        [  70,   34],\\n        [ -26,   33],\\n        [  86,   86],\\n        [  62,   65],\\n        [ -80,   89],\\n        [  32,    6],\\n        [ -17, -100],\\n        [ -99,  -64],\\n        [  75,  -30],\\n        [  46,  -76],\\n        [  45,   78],\\n        [  -7,  -76],\\n        [  87,   34],\\n        [ -81,  -46],\\n        [ -20,   92],\\n        [  26,  -55],\\n        [  42,   16],\\n        [ -11,   74],\\n        [ -28,  -71],\\n        [ -62,  -60],\\n        [  12,    8],\\n        [-100,   13],\\n        [  70,  -46],\\n        [ -24,  -32],\\n        [  13,   24],\\n        [ -30,   76],\\n        [ -26,  -34],\\n        [  29,    8],\\n        [ -87,  -38],\\n        [  35,   33],\\n        [  97,   66],\\n        [ -60,  -85],\\n        [  93,  -72],\\n        [   2,    2],\\n        [  71,  -12],\\n        [  79,   64],\\n        [  28,   29],\\n        [  46,   42],\\n        [ -35,   46],\\n        [ -84,   24],\\n        [ -84,   94]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  41,  -94],\\n        [ -12,  -58],\\n        [ -52,  -10],\\n        [  12,  -22],\\n        [ -14,  -91],\\n        [  72,   89],\\n        [ -41,   80],\\n        [  42,   59],\\n        [  84,  -85],\\n        [  50,    0],\\n        [   4,  -99],\\n        [ -36,  -26],\\n        [ -89,   93],\\n        [ -95,   12],\\n        [  37,  -35],\\n        [  19,   67],\\n        [  68,  -41],\\n        [ -37,   47],\\n        [  31,  -47],\\n        [  70,   34],\\n        [ -26,   33],\\n        [  86,   86],\\n        [  62,   65],\\n        [ -80,   89],\\n        [  32,    6],\\n        [ -17, -100],\\n        [ -99,  -64],\\n        [  75,  -30],\\n        [  46,  -76],\\n        [  45,   78],\\n        [  -7,  -76],\\n        [  87,   34],\\n        [ -81,  -46],\\n        [ -20,   92],\\n        [  26,  -55],\\n        [  42,   16],\\n        [ -11,   74],\\n        [ -28,  -71],\\n        [ -62,  -60],\\n        [  12,    8],\\n        [-100,   13],\\n        [  70,  -46],\\n        [ -24,  -32],\\n        [  13,   24],\\n        [ -30,   76],\\n        [ -26,  -34],\\n        [  29,    8],\\n        [ -87,  -38],\\n        [  35,   33],\\n        [  97,   66],\\n        [ -60,  -85],\\n        [  93,  -72],\\n        [   2,    2],\\n        [  71,  -12],\\n        [  79,   64],\\n        [  28,   29],\\n        [  46,   42],\\n        [ -35,   46],\\n        [ -84,   24],\\n        [ -84,   94]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006562070011568721, "start": 1738562079.225326, "stop": 1738562079.2259827, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1fbbbdcecdcb4d75b4a8dbc4e439df28", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012563599739223719, "start": 1738562079.2700422, "stop": 1738562079.2701683, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "1fbbbdcecdcb4d75b4a8dbc4e439df28", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
