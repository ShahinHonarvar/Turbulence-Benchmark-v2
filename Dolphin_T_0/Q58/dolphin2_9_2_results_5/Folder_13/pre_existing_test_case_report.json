{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  40,  -75,   20,  -88,   10,  -30,   36,  -68,  -85,   25,\\n           11,   88,  -15,    5,  -80,    9,   66,   20,    9,   21,\\n           19,   36,  -64,  -10,  -43,   22,    1,   25,   62,  -37,\\n          -74,  -51,   68,   -5,  -98,   45,    2,  -62,  -94,  -27,\\n           96,  -27,  -56,  -44,  -46,  -96,   30,   35,  -14,  -53,\\n           70,  -64,  -33,   70,   14,   63,  -81,   92,   30,  -31,\\n           84,  -30,  -81,   92,  -20,  -99,  -42,   11,   -6,  -39,\\n          -60,   18,   81,   42,  -14,   31,   61,   47,   84,  -11,\\n            4,   16,  -23,   50,  -43,   47,  -70,  -91,  -42,  -28,\\n           63,   55,  -26,   19,  -74,  -23,   -9,  -94,  -84,  -89,\\n          -51,   82,   96,   83,  -76,   80,   57,   35,   88,   85,\\n          -87,   77,  -13,   21,    3,   91,   41,  -26,  -75,  -99,\\n           73,   88,   -7,  -26,    8,   94,   30,  -83,  -68,   25,\\n          -39,   43,   30,   81,  -35,   -4,  -69,   41,   16,   25,\\n           36,   70,   28,   67,  -26,  -57,  -56,  -12,  -36,   44,\\n           84,    5,  -34,   70,   73,   74,   43,  -38,  -96,  -23,\\n          -48,   67,  -29,   34,  -39,   31,   40,  -12,  -73,   80,\\n         -100,  -78,  -24,  -92,  -12]]))",
    0.00095
  ]
}