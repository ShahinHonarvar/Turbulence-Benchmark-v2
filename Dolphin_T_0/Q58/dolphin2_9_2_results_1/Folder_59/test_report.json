{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016647599841235206, "start": 1738561692.4477925, "stop": 1738561692.44796, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47de012765234db0b2778b86a3b8b2fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002265129987790715, "start": 1738561692.448176, "stop": 1738561692.448403, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47de012765234db0b2778b86a3b8b2fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011200600056326948, "start": 1738561692.448801, "stop": 1738561692.4489136, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47de012765234db0b2778b86a3b8b2fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014686299982713535, "start": 1738561692.4513175, "stop": 1738561692.451465, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "47de012765234db0b2778b86a3b8b2fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  38,   13],\\n        [ -12,   81],\\n        [  -6,   49],\\n        [ -19,    3],\\n        [ -51,   43],\\n        [   3,  -26],\\n        [  45,  -48],\\n        [  52,   68],\\n        [  42,  -80],\\n        [ -11,   94],\\n        [  67,   50],\\n        [  10,  -23],\\n        [   9,  -37],\\n        [ -26,    9],\\n        [  -5,  -49],\\n        [  29,  -13],\\n        [  -4,  -71],\\n        [ -15,   82],\\n        [  20,  -77],\\n        [  46,   40],\\n        [ -59,   -7],\\n        [ -85,   98],\\n        [   0,   89],\\n        [  97,   21],\\n        [ -79,  -33],\\n        [ -89,   85],\\n        [ -56,  -10],\\n        [  45, -100],\\n        [  84,  -48],\\n        [ -63,  -95],\\n        [  29,  -43],\\n        [  67,   68],\\n        [ -24,  -64],\\n        [ -32,  -14],\\n        [  80,   89],\\n        [  27,  -74],\\n        [ -51,    0],\\n        [ 100,   68]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  38,   13],\\n        [ -12,   81],\\n        [  -6,   49],\\n        [ -19,    3],\\n        [ -51,   43],\\n        [   3,  -26],\\n        [  45,  -48],\\n        [  52,   68],\\n        [  42,  -80],\\n        [ -11,   94],\\n        [  67,   50],\\n        [  10,  -23],\\n        [   9,  -37],\\n        [ -26,    9],\\n        [  -5,  -49],\\n        [  29,  -13],\\n        [  -4,  -71],\\n        [ -15,   82],\\n        [  20,  -77],\\n        [  46,   40],\\n        [ -59,   -7],\\n        [ -85,   98],\\n        [   0,   89],\\n        [  97,   21],\\n        [ -79,  -33],\\n        [ -89,   85],\\n        [ -56,  -10],\\n        [  45, -100],\\n        [  84,  -48],\\n        [ -63,  -95],\\n        [  29,  -43],\\n        [  67,   68],\\n        [ -24,  -64],\\n        [ -32,  -14],\\n        [  80,   89],\\n        [  27,  -74],\\n        [ -51,    0],\\n        [ 100,   68]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  38,   13],\\n        [ -12,   81],\\n        [  -6,   49],\\n        [ -19,    3],\\n        [ -51,   43],\\n        [   3,  -26],\\n        [  45,  -48],\\n        [  52,   68],\\n        [  42,  -80],\\n        [ -11,   94],\\n        [  67,   50],\\n        [  10,  -23],\\n        [   9,  -37],\\n        [ -26,    9],\\n        [  -5,  -49],\\n        [  29,  -13],\\n        [  -4,  -71],\\n        [ -15,   82],\\n        [  20,  -77],\\n        [  46,   40],\\n        [ -59,   -7],\\n        [ -85,   98],\\n        [   0,   89],\\n        [  97,   21],\\n        [ -79,  -33],\\n        [ -89,   85],\\n        [ -56,  -10],\\n        [  45, -100],\\n        [  84,  -48],\\n        [ -63,  -95],\\n        [  29,  -43],\\n        [  67,   68],\\n        [ -24,  -64],\\n        [ -32,  -14],\\n        [  80,   89],\\n        [  27,  -74],\\n        [ -51,    0],\\n        [ 100,   68]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  38,   13],\\n        [ -12,   81],\\n        [  -6,   49],\\n        [ -19,    3],\\n        [ -51,   43],\\n        [   3,  -26],\\n        [  45,  -48],\\n        [  52,   68],\\n        [  42,  -80],\\n        [ -11,   94],\\n        [  67,   50],\\n        [  10,  -23],\\n        [   9,  -37],\\n        [ -26,    9],\\n        [  -5,  -49],\\n        [  29,  -13],\\n        [  -4,  -71],\\n        [ -15,   82],\\n        [  20,  -77],\\n        [  46,   40],\\n        [ -59,   -7],\\n        [ -85,   98],\\n        [   0,   89],\\n        [  97,   21],\\n        [ -79,  -33],\\n        [ -89,   85],\\n        [ -56,  -10],\\n        [  45, -100],\\n        [  84,  -48],\\n        [ -63,  -95],\\n        [  29,  -43],\\n        [  67,   68],\\n        [ -24,  -64],\\n        [ -32,  -14],\\n        [  80,   89],\\n        [  27,  -74],\\n        [ -51,    0],\\n        [ 100,   68]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010655139994923957, "start": 1738561692.4516141, "stop": 1738561692.45268, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "47de012765234db0b2778b86a3b8b2fc", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016524799866601825, "start": 1738561692.4839675, "stop": 1738561692.4841337, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "47de012765234db0b2778b86a3b8b2fc", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
