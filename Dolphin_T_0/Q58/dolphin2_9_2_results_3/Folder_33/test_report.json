{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_33_3.py::test_matrix_of_one_integer", "location": ["tests58_33_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_3.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003937210021831561, "start": 1738561830.2674472, "stop": 1738561830.2678416, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00c2044ac956414cb8897981f22a0d9f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_3.py::test_matrix_of_one_integer", "location": ["tests58_33_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_3.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040320900006918237, "start": 1738561830.268109, "stop": 1738561830.2685125, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00c2044ac956414cb8897981f22a0d9f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_3.py::test_matrix_of_one_integer", "location": ["tests58_33_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_33_3.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.221299867727794e-05, "start": 1738561830.2688148, "stop": 1738561830.2688973, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00c2044ac956414cb8897981f22a0d9f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_3.py::test_matrix_of_having_118_integers", "location": ["tests58_33_3.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_3.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002686570005607791, "start": 1738561830.269926, "stop": 1738561830.2701952, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00c2044ac956414cb8897981f22a0d9f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_3.py::test_matrix_of_having_118_integers", "location": ["tests58_33_3.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_3.py": 1, "Folder_33": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_3/Folder_33/tests58_33_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   -2],\\n        [ -50,   14],\\n        [-100,   88],\\n        [ -43,  -47],\\n        [ -49,  -46],\\n        [  12,   -6],\\n        [ -77,  -10],\\n        [  13,  -99],\\n        [ -62,   16],\\n        [ -21,   86],\\n        [  18,  -16],\\n        [ -48,  -86],\\n        [  67,  -84],\\n        [  74,  -98],\\n        [ -39,    6],\\n        [  26,   97],\\n        [  25,   15],\\n        [  28,  -26],\\n        [   5,   57],\\n        [  -3,   10],\\n        [ -84,  -27],\\n        [  43,   14],\\n        [  88,   45],\\n        [  93,  100],\\n        [  26,  -80],\\n        [  27,   79],\\n        [  89,    2],\\n        [ -13,    6],\\n        [ -18,  -72],\\n        [  94,   93],\\n        [ -50,   48],\\n        [ -79,  -58],\\n        [ -85,  -36],\\n        [ -46,   92],\\n        [ -92,   51],\\n        [  69,    6],\\n        [  46,  -51],\\n        [  59,  -27],\\n        [ -72,  -78],\\n        [  15,   62],\\n        [  45,  -33],\\n        [  -6,  -72],\\n        [  72,   93],\\n        [  56,   58],\\n        [  77,   27],\\n        [ -52,    6],\\n        [  26,    7],\\n        [  11,   20],\\n        [  18,   54],\\n        [ -61,   91],\\n        [ -74,  -52],\\n        [ -66,   73],\\n        [ -42,  -11],\\n        [ -85,   69],\\n        [  51,   -7],\\n        [  71,   98],\\n        [  98,  -60],\\n        [ -79,   40],\\n        [ -66,   35]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   -2],\\n        [ -50,   14],\\n        [-100,   88],\\n        [ -43,  -47],\\n        [ -49,  -46],\\n        [  12,   -6],\\n        [ -77,  -10],\\n        [  13,  -99],\\n        [ -62,   16],\\n        [ -21,   86],\\n        [  18,  -16],\\n        [ -48,  -86],\\n        [  67,  -84],\\n        [  74,  -98],\\n        [ -39,    6],\\n        [  26,   97],\\n        [  25,   15],\\n        [  28,  -26],\\n        [   5,   57],\\n        [  -3,   10],\\n        [ -84,  -27],\\n        [  43,   14],\\n        [  88,   45],\\n        [  93,  100],\\n        [  26,  -80],\\n        [  27,   79],\\n        [  89,    2],\\n        [ -13,    6],\\n        [ -18,  -72],\\n        [  94,   93],\\n        [ -50,   48],\\n        [ -79,  -58],\\n        [ -85,  -36],\\n        [ -46,   92],\\n        [ -92,   51],\\n        [  69,    6],\\n        [  46,  -51],\\n        [  59,  -27],\\n        [ -72,  -78],\\n        [  15,   62],\\n        [  45,  -33],\\n        [  -6,  -72],\\n        [  72,   93],\\n        [  56,   58],\\n        [  77,   27],\\n        [ -52,    6],\\n        [  26,    7],\\n        [  11,   20],\\n        [  18,   54],\\n        [ -61,   91],\\n        [ -74,  -52],\\n        [ -66,   73],\\n        [ -42,  -11],\\n        [ -85,   69],\\n        [  51,   -7],\\n        [  71,   98],\\n        [  98,  -60],\\n        [ -79,   40],\\n        [ -66,   35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_3/Folder_33/tests58_33_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_118_integers():", "        if 118 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(118 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(118)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   -2],\\n        [ -50,   14],\\n        [-100,   88],\\n        [ -43,  -47],\\n        [ -49,  -46],\\n        [  12,   -6],\\n        [ -77,  -10],\\n        [  13,  -99],\\n        [ -62,   16],\\n        [ -21,   86],\\n        [  18,  -16],\\n        [ -48,  -86],\\n        [  67,  -84],\\n        [  74,  -98],\\n        [ -39,    6],\\n        [  26,   97],\\n        [  25,   15],\\n        [  28,  -26],\\n        [   5,   57],\\n        [  -3,   10],\\n        [ -84,  -27],\\n        [  43,   14],\\n        [  88,   45],\\n        [  93,  100],\\n        [  26,  -80],\\n        [  27,   79],\\n        [  89,    2],\\n        [ -13,    6],\\n        [ -18,  -72],\\n        [  94,   93],\\n        [ -50,   48],\\n        [ -79,  -58],\\n        [ -85,  -36],\\n        [ -46,   92],\\n        [ -92,   51],\\n        [  69,    6],\\n        [  46,  -51],\\n        [  59,  -27],\\n        [ -72,  -78],\\n        [  15,   62],\\n        [  45,  -33],\\n        [  -6,  -72],\\n        [  72,   93],\\n        [  56,   58],\\n        [  77,   27],\\n        [ -52,    6],\\n        [  26,    7],\\n        [  11,   20],\\n        [  18,   54],\\n        [ -61,   91],\\n        [ -74,  -52],\\n        [ -66,   73],\\n        [ -42,  -11],\\n        [ -85,   69],\\n        [  51,   -7],\\n        [  71,   98],\\n        [  98,  -60],\\n        [ -79,   40],\\n        [ -66,   35]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dolphin2_9_2_results_3/Folder_33/tests58_33_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q58/dolphin2_9_2_results_3/Folder_33/tests58_33_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   -2],\\n        [ -50,   14],\\n        [-100,   88],\\n        [ -43,  -47],\\n        [ -49,  -46],\\n        [  12,   -6],\\n        [ -77,  -10],\\n        [  13,  -99],\\n        [ -62,   16],\\n        [ -21,   86],\\n        [  18,  -16],\\n        [ -48,  -86],\\n        [  67,  -84],\\n        [  74,  -98],\\n        [ -39,    6],\\n        [  26,   97],\\n        [  25,   15],\\n        [  28,  -26],\\n        [   5,   57],\\n        [  -3,   10],\\n        [ -84,  -27],\\n        [  43,   14],\\n        [  88,   45],\\n        [  93,  100],\\n        [  26,  -80],\\n        [  27,   79],\\n        [  89,    2],\\n        [ -13,    6],\\n        [ -18,  -72],\\n        [  94,   93],\\n        [ -50,   48],\\n        [ -79,  -58],\\n        [ -85,  -36],\\n        [ -46,   92],\\n        [ -92,   51],\\n        [  69,    6],\\n        [  46,  -51],\\n        [  59,  -27],\\n        [ -72,  -78],\\n        [  15,   62],\\n        [  45,  -33],\\n        [  -6,  -72],\\n        [  72,   93],\\n        [  56,   58],\\n        [  77,   27],\\n        [ -52,    6],\\n        [  26,    7],\\n        [  11,   20],\\n        [  18,   54],\\n        [ -61,   91],\\n        [ -74,  -52],\\n        [ -66,   73],\\n        [ -42,  -11],\\n        [ -85,   69],\\n        [  51,   -7],\\n        [  71,   98],\\n        [  98,  -60],\\n        [ -79,   40],\\n        [ -66,   35]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.013614321000204654, "start": 1738561830.2702954, "stop": 1738561830.2839105, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00c2044ac956414cb8897981f22a0d9f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_33_3.py::test_matrix_of_having_118_integers", "location": ["tests58_33_3.py", 28, "test_matrix_of_having_118_integers"], "keywords": {"test_matrix_of_having_118_integers": 1, "__wrapped__": 1, "tests58_33_3.py": 1, "Folder_33": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012107099973945878, "start": 1738561830.3011436, "stop": 1738561830.3012652, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00c2044ac956414cb8897981f22a0d9f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
