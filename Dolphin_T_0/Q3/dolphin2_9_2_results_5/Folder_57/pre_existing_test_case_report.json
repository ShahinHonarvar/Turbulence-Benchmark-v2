{
  "parameter(s)": [
    27,
    55
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    5e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [54, 56, 58, 60, 62, 64, ...] == [56, 58, 60, 62, 64, 66, ...]\n  At index 0 diff: 54 != 56\n  Left contains one more item: 112\n  Full diff:\n    [\n  +  54,\n     56,\n     58,...\n  \n  ...Full output truncated (28 lines hidden), use '-vv' to show",
    0.00063
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [27, 28, 29, 30, 31, 32, ...] == [28, 29, 30, 31, 32, 33, ...]\n  At index 0 diff: 27 != 28\n  Left contains one more item: 56\n  Full diff:\n    [\n  +  27,\n     28,\n     29,...\n  \n  ...Full output truncated (28 lines hidden), use '-vv' to show",
    0.00054
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 30 == ((55 - 27) + 1)\n +  where 30 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}