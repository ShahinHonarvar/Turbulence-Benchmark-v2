{
  "parameter(s)": [
    70,
    84
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    5e-05
  ],
  "test_even_range": [
    "failed",
    "assert [140, 142, 14...148, 150, ...] == [142, 144, 14...150, 152, ...]\n  At index 0 diff: 140 != 142\n  Left contains one more item: 170\n  Full diff:\n  - [142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170]\n  + [140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170]\n  ?  +++++",
    0.00066
  ],
  "test_large_range": [
    "failed",
    "assert [70, 71, 72, 73, 74, 75, ...] == [71, 72, 73, 74, 75, 76, ...]\n  At index 0 diff: 70 != 71\n  Left contains one more item: 85\n  Full diff:\n  - [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85]\n  + [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85]\n  ?  ++++",
    0.00091
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 16 == ((84 - 70) + 1)\n +  where 16 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}