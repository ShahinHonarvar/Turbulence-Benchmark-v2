{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests52_90_4.py::test_string_of_many_chars", "location": ["tests52_90_4.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011599800200201571, "start": 1738561181.510106, "stop": 1738561181.5102227, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5f33f51981845dfacec7be6a4d238f1", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_90_4.py::test_string_of_many_chars", "location": ["tests52_90_4.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001205930020660162, "start": 1738561181.5104039, "stop": 1738561181.510525, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5f33f51981845dfacec7be6a4d238f1", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_90_4.py::test_string_of_many_chars", "location": ["tests52_90_4.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.785599907743745e-05, "start": 1738561181.510812, "stop": 1738561181.5108805, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c5f33f51981845dfacec7be6a4d238f1", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_90_4.py::test_string_of_spaces", "location": ["tests52_90_4.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.639100269647315e-05, "start": 1738561181.5112822, "stop": 1738561181.511369, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5f33f51981845dfacec7be6a4d238f1", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_90_4.py::test_string_of_spaces", "location": ["tests52_90_4.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q52/dolphin2_9_2_results_4/Folder_90/tests52_90_4.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (318 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_nreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/dolphin2_9_2_results_4/Folder_90/tests52_90_4.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (318 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_nreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/dolphin2_9_2_results_4/Folder_90/tests52_90_4.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q52/dolphin2_9_2_results_4/Folder_90/tests52_90_4.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.03271543300070334, "start": 1738561181.5114694, "stop": 1738561181.5441856, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5f33f51981845dfacec7be6a4d238f1", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_90_4.py::test_string_of_spaces", "location": ["tests52_90_4.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.123500058194622e-05, "start": 1738561181.5524678, "stop": 1738561181.5525594, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c5f33f51981845dfacec7be6a4d238f1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
