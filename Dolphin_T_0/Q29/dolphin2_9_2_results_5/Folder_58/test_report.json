{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests29_58_5.py::test_list_of_ones", "location": ["tests29_58_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_58_5.py": 1, "Folder_58": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.757800216902979e-05, "start": 1738552246.3137515, "stop": 1738552246.3138497, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "59961e19bc6343568302a928f35ea153", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_58_5.py::test_list_of_ones", "location": ["tests29_58_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_58_5.py": 1, "Folder_58": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q29/dolphin2_9_2_results_5/Folder_58/tests29_58_5.py", "lineno": 10, "message": "assert None == 1\n +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_ones():", "        list_of_ones = [1 for _ in range(0, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_ones) == 1", "E       assert None == 1", "E        +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/dolphin2_9_2_results_5/Folder_58/tests29_58_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_ones():", "        list_of_ones = [1 for _ in range(0, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_ones) == 1", "E       assert None == 1", "E        +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/dolphin2_9_2_results_5/Folder_58/tests29_58_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q29/dolphin2_9_2_results_5/Folder_58/tests29_58_5.py", "lineno": 10, "message": "assert None == 1\n +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023573900034534745, "start": 1738552246.3139794, "stop": 1738552246.3142157, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "59961e19bc6343568302a928f35ea153", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_58_5.py::test_list_of_ones", "location": ["tests29_58_5.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_58_5.py": 1, "Folder_58": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010276600005454384, "start": 1738552246.3228, "stop": 1738552246.3229032, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "59961e19bc6343568302a928f35ea153", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
