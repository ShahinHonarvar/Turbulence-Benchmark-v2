{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests29_60_3.py::test_list_of_ones", "location": ["tests29_60_3.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_60_3.py": 1, "Folder_60": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012730900016322266, "start": 1738551661.4338794, "stop": 1738551661.4340067, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2c00f507d024711b6cae485091df352", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_60_3.py::test_list_of_ones", "location": ["tests29_60_3.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_60_3.py": 1, "Folder_60": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q29/dolphin2_9_2_results_3/Folder_60/tests29_60_3.py", "lineno": 10, "message": "assert None == 1\n +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_ones():", "        list_of_ones = [1 for _ in range(0, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_ones) == 1", "E       assert None == 1", "E        +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/dolphin2_9_2_results_3/Folder_60/tests29_60_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_ones():", "        list_of_ones = [1 for _ in range(0, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_ones) == 1", "E       assert None == 1", "E        +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/dolphin2_9_2_results_3/Folder_60/tests29_60_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q29/dolphin2_9_2_results_3/Folder_60/tests29_60_3.py", "lineno": 10, "message": "assert None == 1\n +  where None = gcf_two_nums([1, 1, 1, 1, 1, 1, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00029072200049995445, "start": 1738551661.4341984, "stop": 1738551661.4344893, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2c00f507d024711b6cae485091df352", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_60_3.py::test_list_of_ones", "location": ["tests29_60_3.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_60_3.py": 1, "Folder_60": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011713899948517792, "start": 1738551661.4452267, "stop": 1738551661.4453444, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e2c00f507d024711b6cae485091df352", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
