{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_14_2.py::test_compare_length_of_strings", "location": ["tests30_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001792259281501174, "start": 1730760896.4802046, "stop": 1730760896.4803846, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001667030155658722, "start": 1730760896.4802446, "stop": 1730760896.4804122, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_string_of_length_one", "location": ["tests30_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019260891713202, "start": 1730760896.4802065, "stop": 1730760896.4804, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_2.py::test_compare_length_of_strings", "location": ["tests30_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016230298206210136, "start": 1730760896.4806402, "stop": 1730760896.480803, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_compare_length_of_strings", "location": ["tests30_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.095509838312864e-05, "start": 1730760896.481089, "stop": 1730760896.4811702, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_result", "location": ["tests30_14_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.228502701967955e-05, "start": 1730760896.4826345, "stop": 1730760896.482717, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_result", "location": ["tests30_14_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 40, "message": "AssertionError: assert 251 == (21 + 1)\n +  where 251 = len(' Yuip75tPxI1CKLys6vAX  uip75tPxI1CKLys6vAX  ip75tPxI1CKLys6vAX  p75tPxI1CKLys6vAX  75tPxI1CKLys6vAX  5tPxI1CKLys6vAX  tPxI1CKLys6vAX  PxI1CKLys6vAX  xI1CKLys6vAX  I1CKLys6vAX  1CKLys6vAX  CKLys6vAX  KLys6vAX  Lys6vAX  ys6vAX  s6vAX  6vAX  vAX  AX  X  ')\n +  and   21 = len('Yuip75tPxI1CKLys6vAX ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 251 == (21 + 1)", "E        +  where 251 = len(' Yuip75tPxI1CKLys6vAX  uip75tPxI1CKLys6vAX  ip75tPxI1CKLys6vAX  p75tPxI1CKLys6vAX  75tPxI1CKLys6vAX  5tPxI1CKLys6vAX  tPxI1CKLys6vAX  PxI1CKLys6vAX  xI1CKLys6vAX  I1CKLys6vAX  1CKLys6vAX  CKLys6vAX  KLys6vAX  Lys6vAX  ys6vAX  s6vAX  6vAX  vAX  AX  X  ')", "E        +  and   21 = len('Yuip75tPxI1CKLys6vAX ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 251 == (21 + 1)", "E        +  where 251 = len(' Yuip75tPxI1CKLys6vAX  uip75tPxI1CKLys6vAX  ip75tPxI1CKLys6vAX  p75tPxI1CKLys6vAX  75tPxI1CKLys6vAX  5tPxI1CKLys6vAX  tPxI1CKLys6vAX  PxI1CKLys6vAX  xI1CKLys6vAX  I1CKLys6vAX  1CKLys6vAX  CKLys6vAX  KLys6vAX  Lys6vAX  ys6vAX  s6vAX  6vAX  vAX  AX  X  ')", "E        +  and   21 = len('Yuip75tPxI1CKLys6vAX ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 40, "message": "AssertionError: assert 251 == (21 + 1)\n +  where 251 = len(' Yuip75tPxI1CKLys6vAX  uip75tPxI1CKLys6vAX  ip75tPxI1CKLys6vAX  p75tPxI1CKLys6vAX  75tPxI1CKLys6vAX  5tPxI1CKLys6vAX  tPxI1CKLys6vAX  PxI1CKLys6vAX  xI1CKLys6vAX  I1CKLys6vAX  1CKLys6vAX  CKLys6vAX  KLys6vAX  Lys6vAX  ys6vAX  s6vAX  6vAX  vAX  AX  X  ')\n +  and   21 = len('Yuip75tPxI1CKLys6vAX ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023408595006912947, "start": 1730760896.482796, "stop": 1730760896.4830303, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_length_of_result", "location": ["tests30_14_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011823989916592836, "start": 1730760896.4921358, "stop": 1730760896.4922547, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_2.py::test_string_of_length_one", "location": ["tests30_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 8, "message": "AssertionError: assert ' ' == '  '\n  Strings contain only whitespace, escaping them using repr()\n  - '  '\n  ?   -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == ' ' + ' '", "E       AssertionError: assert ' ' == '  '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '  '", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == ' ' + ' '", "E       AssertionError: assert ' ' == '  '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '  '", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 8, "message": "AssertionError: assert ' ' == '  '\n  Strings contain only whitespace, escaping them using repr()\n  - '  '\n  ?   -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00039504398591816425, "start": 1730760896.4806983, "stop": 1730760896.481094, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_2.py::test_string_of_length_one", "location": ["tests30_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014447607100009918, "start": 1730760896.4931784, "stop": 1730760896.4933238, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError: assert 251250 == (2 * 1000)\n +  where 251250 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 251250 == (2 * 1000)", "E        +  where 251250 = lenwhereinsert_before_character('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')", "E        +  and   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 251250 == (2 * 1000)", "E        +  where 251250 = lenwhere '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ' = insert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_14/tests30_14_2.py", "lineno": 18, "message": "AssertionError: assert 251250 == (2 * 1000)\n +  where 251250 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.003361508948728442, "start": 1730760896.480669, "stop": 1730760896.484031, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018359709065407515, "start": 1730760896.5051513, "stop": 1730760896.505336, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "285e7db3355a4625bdc5b23d84573e70", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
