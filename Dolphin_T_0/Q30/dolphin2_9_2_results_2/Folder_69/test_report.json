{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_69_2.py::test_string_of_length_one", "location": ["tests30_69_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016921106725931168, "start": 1730761051.264642, "stop": 1730761051.264812, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_69_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016396900173276663, "start": 1730761051.2646577, "stop": 1730761051.2648225, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_69_2.py::test_compare_length_of_strings", "location": ["tests30_69_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001797960139811039, "start": 1730761051.2646418, "stop": 1730761051.2648222, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_2.py::test_compare_length_of_strings", "location": ["tests30_69_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017923000268638134, "start": 1730761051.2650833, "stop": 1730761051.265263, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_2.py::test_compare_length_of_strings", "location": ["tests30_69_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011048000305891037, "start": 1730761051.2656271, "stop": 1730761051.2657382, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_2.py::test_length_of_result", "location": ["tests30_69_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012881401926279068, "start": 1730761051.2674904, "stop": 1730761051.2676196, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_69_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 18, "message": "AssertionError: assert 2001 == (2 * 1000)\n +  where 2001 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 2001 == (2 * 1000)", "E        +  where 2001 = len('P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P P')", "E        +    whereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 2001 == (2 * 1000)", "E        +  where 2001 = lenwhereinsert_before_character('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')", "E        +  and   1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 18, "message": "AssertionError: assert 2001 == (2 * 1000)\n +  where 2001 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003502719337120652, "start": 1730761051.265072, "stop": 1730761051.265423, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_69_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_69_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010123790707439184, "start": 1730761051.2753868, "stop": 1730761051.2754889, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_69_2.py::test_length_of_result", "location": ["tests30_69_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('PxQsEvFfMwCO5VmU4h0lD P')\n +  and   21 = len('xQsEvFfMwCO5VmU4h0lD ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('PxQsEvFfMwCO5VmU4h0lD P')", "E        +  and   21 = len('xQsEvFfMwCO5VmU4h0lD ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 23 == (21 + 1)", "E        +  where 23 = len('PxQsEvFfMwCO5VmU4h0lD P')", "E        +  and   21 = len('xQsEvFfMwCO5VmU4h0lD ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 40, "message": "AssertionError: assert 23 == (21 + 1)\n +  where 23 = len('PxQsEvFfMwCO5VmU4h0lD P')\n +  and   21 = len('xQsEvFfMwCO5VmU4h0lD ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003256979398429394, "start": 1730761051.2677488, "stop": 1730761051.268075, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_2.py::test_length_of_result", "location": ["tests30_69_2.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016301695723086596, "start": 1730761051.276832, "stop": 1730761051.2769957, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_69_2.py::test_string_of_length_one", "location": ["tests30_69_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 8, "message": "AssertionError: assert 'P P' == 'P '\n  - P \n  + P P\n  ?   +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'P' + ' '", "E       AssertionError: assert 'P P' == 'P '", "E         - P ", "E         + P P", "E         ?   +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'P' + ' '", "E       AssertionError: assert 'P P' == 'P '", "E         - P ", "E         + P P", "E         ?   +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_2/Folder_69/tests30_69_2.py", "lineno": 8, "message": "AssertionError: assert 'P P' == 'P '\n  - P \n  + P P\n  ?   +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035948806907981634, "start": 1730761051.2650669, "stop": 1730761051.2654269, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_69_2.py::test_string_of_length_one", "location": ["tests30_69_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_69_2.py": 1, "Folder_69": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001070989528670907, "start": 1730761051.2802463, "stop": 1730761051.2803543, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "418239c15ba343d7be971a50ebcc228c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
