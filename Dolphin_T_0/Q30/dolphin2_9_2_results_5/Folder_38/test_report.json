{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_38_5.py::test_string_of_length_one", "location": ["tests30_38_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012885697651654482, "start": 1730762004.72657, "stop": 1730762004.7266994, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_38_5.py::test_compare_length_of_strings", "location": ["tests30_38_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001005280064418912, "start": 1730762004.726468, "stop": 1730762004.7265687, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_38_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_38_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017039000522345304, "start": 1730762004.7266998, "stop": 1730762004.7268708, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_38_5.py::test_compare_length_of_strings", "location": ["tests30_38_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('epdqUuTMrZQz49bO7aXAX')\n +  and   21 = len('epdqUuTMrZQz49bO7a6A6')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'X'", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('epdqUuTMrZQz49bO7aXAX')", "E        +  and   21 = len('epdqUuTMrZQz49bO7a6A6')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'X'", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('epdqUuTMrZQz49bO7aXAX')", "E        +  and   21 = len('epdqUuTMrZQz49bO7a6A6')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('epdqUuTMrZQz49bO7aXAX')\n +  and   21 = len('epdqUuTMrZQz49bO7a6A6')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019203894771635532, "start": 1730762004.7267299, "stop": 1730762004.7269223, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_38_5.py::test_string_of_length_one", "location": ["tests30_38_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 8, "message": "AssertionError: assert '6' == '6X'\n  - 6X\n  + 6"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'X'", ">       assert insert_before_character(s) == '6' + 'X'", "E       AssertionError: assert '6' == '6X'", "E         - 6X", "E         + 6"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'X'", ">       assert insert_before_character(s) == '6' + 'X'", "E       AssertionError: assert '6' == '6X'", "E         - 6X", "E         + 6"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 8, "message": "AssertionError: assert '6' == '6X'\n  - 6X\n  + 6"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000241823960095644, "start": 1730762004.726902, "stop": 1730762004.7271442, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_38_5.py::test_string_of_length_one", "location": ["tests30_38_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010237004607915878, "start": 1730762004.735898, "stop": 1730762004.736001, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_38_5.py::test_compare_length_of_strings", "location": ["tests30_38_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011511193588376045, "start": 1730762004.735715, "stop": 1730762004.7358308, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_38_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_38_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'X' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'X' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_38/tests30_38_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035526102874428034, "start": 1730762004.7271218, "stop": 1730762004.7274778, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_38_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_38_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_38_5.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001150339376181364, "start": 1730762004.7404191, "stop": 1730762004.740535, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f125c07f66fa49b1b967c853c44b63de", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
