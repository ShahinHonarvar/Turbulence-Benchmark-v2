{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_60_5.py::test_compare_length_of_strings", "location": ["tests30_60_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012432201765477657, "start": 1730762100.9490585, "stop": 1730762100.949183, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_60_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_60_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014232692774385214, "start": 1730762100.949159, "stop": 1730762100.9493017, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_60_5.py::test_string_of_length_one", "location": ["tests30_60_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016734004020690918, "start": 1730762100.9492352, "stop": 1730762100.949403, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_60_5.py::test_compare_length_of_strings", "location": ["tests30_60_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 1\n +  where 21 = len('Zo4WXi3jvmBqTLRHdVseC')\n +  and   1 = len('C')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'C'", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 1", "E        +  where 21 = len('Zo4WXi3jvmBqTLRHdVseC')", "E        +  and   1 = len('C')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'C'", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 1", "E        +  where 21 = len('Zo4WXi3jvmBqTLRHdVseC')", "E        +  and   1 = len('C')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 1\n +  where 21 = len('Zo4WXi3jvmBqTLRHdVseC')\n +  and   1 = len('C')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024346006102859974, "start": 1730762100.9493964, "stop": 1730762100.9496403, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_60_5.py::test_compare_length_of_strings", "location": ["tests30_60_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001100699882954359, "start": 1730762100.9589138, "stop": 1730762100.9590247, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_60_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_60_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 18, "message": "AssertionError: assert 1 == (2 * 1000)\n +  where 1 = len('C')\n +    where 'C' = insert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'C' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1 == (2 * 1000)", "E        +  where 1 = len('C')", "E        +    where 'C' = insert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'C' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1 == (2 * 1000)", "E        +  where 1 = len('C')", "E        +    where 'C' = insert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 18, "message": "AssertionError: assert 1 == (2 * 1000)\n +  where 1 = len('C')\n +    where 'C' = insert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002448080340400338, "start": 1730762100.949513, "stop": 1730762100.9497583, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_60_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_60_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012576708104461432, "start": 1730762100.9589012, "stop": 1730762100.9590278, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_60_5.py::test_string_of_length_one", "location": ["tests30_60_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 8, "message": "AssertionError: assert 'P' == 'PC'\n  - PC\n  + P"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'C'", ">       assert insert_before_character(s) == 'P' + 'C'", "E       AssertionError: assert 'P' == 'PC'", "E         - PC", "E         + P"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'C'", ">       assert insert_before_character(s) == 'P' + 'C'", "E       AssertionError: assert 'P' == 'PC'", "E         - PC", "E         + P"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_5/Folder_60/tests30_60_5.py", "lineno": 8, "message": "AssertionError: assert 'P' == 'PC'\n  - PC\n  + P"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000317792990244925, "start": 1730762100.949631, "stop": 1730762100.9499493, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_60_5.py::test_string_of_length_one", "location": ["tests30_60_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_60_5.py": 1, "Folder_60": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019919301848858595, "start": 1730762100.9621527, "stop": 1730762100.9623532, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "00b5a88e813d4191bf829594e8ba8eaa", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
