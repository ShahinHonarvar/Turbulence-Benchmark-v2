{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_14_1.py::test_string_of_length_one", "location": ["tests30_14_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017787201795727015, "start": 1730760463.4796267, "stop": 1730760463.4798055, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018230697605758905, "start": 1730760463.4796267, "stop": 1730760463.4798095, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_1.py::test_compare_length_of_strings", "location": ["tests30_14_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019220099784433842, "start": 1730760463.4796457, "stop": 1730760463.4798386, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_1.py::test_string_of_length_one", "location": ["tests30_14_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001533810282126069, "start": 1730760463.4800687, "stop": 1730760463.480223, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_1.py::test_compare_length_of_strings", "location": ["tests30_14_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001972370082512498, "start": 1730760463.4801424, "stop": 1730760463.4803402, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_1.py::test_string_of_length_one", "location": ["tests30_14_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.493801578879356e-05, "start": 1730760463.4805732, "stop": 1730760463.480659, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_1.py::test_compare_length_of_strings", "location": ["tests30_14_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001232960494235158, "start": 1730760463.4807389, "stop": 1730760463.4808626, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_1.py::test_large_string_of_only_specified_character", "location": ["tests30_14_1.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001411740668118, "start": 1730760463.4832535, "stop": 1730760463.483395, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_1.py::test_length_of_result", "location": ["tests30_14_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017489795573055744, "start": 1730760463.483573, "stop": 1730760463.4837487, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = lenwhere '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ' = insert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 2999 == (2 * 1000)", "E        +  where 2999 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 18, "message": "AssertionError: assert 2999 == (2 * 1000)\n +  where 2999 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ')\n +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00046052003744989634, "start": 1730760463.4800696, "stop": 1730760463.4805307, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_14_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015554600395262241, "start": 1730760463.493909, "stop": 1730760463.4940658, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_14_1.py::test_large_string_of_only_specified_character", "location": ["tests30_14_1.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 13, "message": "AssertionError: assert '            ...             ' == '            ...             '\n  Strings contain only whitespace, escaping them using repr()\nn  \n  ...Full output truncated (3 lines hidden), use '-vv' to show"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_before_character(s) == (' ' + ' ') * 1000", "E       AssertionError: assert '            ...             ' == '            ...             '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ...", "E         ", "E         ...Full output truncated (3 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert insert_before_character(s) == (' ' + ' ') * 1000", "E       AssertionError: assert '            ...             ' == '            ...             '", "E         Strings contain only whitespace, escaping them using reprull output truncated (3 lines hidden), use '-vv' to show"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 13, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 13, "message": "AssertionError: assert '            ...             ' == '            ...             '\n  Strings contain only whitespace, escaping them using repr()\nn  \n  ...Full output truncated (3 lines hidden), use '-vv' to show"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020892960019409657, "start": 1730760463.483533, "stop": 1730760463.485623, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_1.py::test_large_string_of_only_specified_character", "location": ["tests30_14_1.py", 10, "test_large_string_of_only_specified_character"], "keywords": {"test_large_string_of_only_specified_character": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011768995318561792, "start": 1730760463.4984558, "stop": 1730760463.498574, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_14_1.py::test_length_of_result", "location": ["tests30_14_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 40, "message": "AssertionError: assert 42 == (21 + 1)\n +  where 42 = len('h I O T 2 E 7 u U z e B y Z 6 J b j W X   ')\n +  and   21 = len('hIOT2E7uUzeByZ6JbjWX ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 42 == (21 + 1)", "E        +  where 42 = len('h I O T 2 E 7 u U z e B y Z 6 J b j W X   ')", "E        +  and   21 = len('hIOT2E7uUzeByZ6JbjWX ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", "        count = s.count(' ')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 42 == (21 + 1)", "E        +  where 42 = len('h I O T 2 E 7 u U z e B y Z 6 J b j W X   ')", "E        +  and   21 = len('hIOT2E7uUzeByZ6JbjWX ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_14/tests30_14_1.py", "lineno": 40, "message": "AssertionError: assert 42 == (21 + 1)\n +  where 42 = len('h I O T 2 E 7 u U z e B y Z 6 J b j W X   ')\n +  and   21 = len('hIOT2E7uUzeByZ6JbjWX ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000369322020560503, "start": 1730760463.4839344, "stop": 1730760463.4843047, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_14_1.py::test_length_of_result", "location": ["tests30_14_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020842603407800198, "start": 1730760463.5062058, "stop": 1730760463.5064158, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw1", "testrun_uid": "688932edf6a0467daa4ff1f6869eaa96", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
