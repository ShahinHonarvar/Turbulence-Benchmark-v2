{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_2_1.py::test_compare_length_of_strings", "location": ["tests30_2_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011250702664256096, "start": 1730760386.1309862, "stop": 1730760386.1310992, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_2_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_2_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016328401397913694, "start": 1730760386.1311355, "stop": 1730760386.1312995, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_2_1.py::test_compare_length_of_strings", "location": ["tests30_2_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013408600352704525, "start": 1730760386.1312764, "stop": 1730760386.1314108, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_2_1.py::test_compare_length_of_strings", "location": ["tests30_2_1.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.608502008020878e-05, "start": 1730760386.131637, "stop": 1730760386.1317036, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_2_1.py::test_string_of_length_one", "location": ["tests30_2_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013737508561462164, "start": 1730760386.1310656, "stop": 1730760386.131204, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_2_1.py::test_length_of_result", "location": ["tests30_2_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013764004688709974, "start": 1730760386.133402, "stop": 1730760386.1335404, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_2_1.py::test_string_of_length_one", "location": ["tests30_2_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 8, "message": "AssertionError: assert 'C' == 'ZC'\n  - ZC\n  + C"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'C'", ">       assert insert_before_character(s) == 'Z' + 'C'", "E       AssertionError: assert 'C' == 'ZC'", "E         - ZC", "E         + C"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'C'", ">       assert insert_before_character(s) == 'Z' + 'C'", "E       AssertionError: assert 'C' == 'ZC'", "E         - ZC", "E         + C"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 8, "message": "AssertionError: assert 'C' == 'ZC'\n  - ZC\n  + C"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002617069985717535, "start": 1730760386.1314178, "stop": 1730760386.1316803, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_2_1.py::test_string_of_length_one", "location": ["tests30_2_1.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011414999607950449, "start": 1730760386.1405375, "stop": 1730760386.1406531, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_2_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_2_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 18, "message": "AssertionError: assert 1999 == (2 * 1000)\n +  where 1999 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'C' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1999 == (2 * 1000)", "E        +  where 1999 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = 'C' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1999 == (2 * 1000)", "E        +  where 1999 = lenwhereinsert_before_character('CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC')", "E        +  and   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 18, "message": "AssertionError: assert 1999 == (2 * 1000)\n +  where 1999 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00035953905899077654, "start": 1730760386.1315353, "stop": 1730760386.1318953, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_2_1.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_2_1.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011651602108031511, "start": 1730760386.1442392, "stop": 1730760386.1443565, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_2_1.py::test_length_of_result", "location": ["tests30_2_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 40, "message": "AssertionError: assert 41 == (21 + 2)\n +  where 41 = len('vZVZGZ7ZeZwZBZkZcZpZxZbZSZnZuZlZUZgZCZtZC')\n +  and   21 = len('vVG7ewBkcpxbSnulUgCtC')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'C'", "        returned_string = insert_before_character(s)", "        count = s.count('C')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 41 == (21 + 2)", "E        +  where 41 = len('vZVZGZ7ZeZwZBZkZcZpZxZbZSZnZuZlZUZgZCZtZC')", "E        +  and   21 = len('vVG7ewBkcpxbSnulUgCtC')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_result():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + 'C'", "        returned_string = insert_before_character(s)", "        count = s.count('C')", ">       assert len(returned_string) == len(s) + count", "E       AssertionError: assert 41 == (21 + 2)", "E        +  where 41 = len('vZVZGZ7ZeZwZBZkZcZpZxZbZSZnZuZlZUZgZCZtZC')", "E        +  and   21 = len('vVG7ewBkcpxbSnulUgCtC')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 40, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q30/dolphin2_9_2_results_1/Folder_2/tests30_2_1.py", "lineno": 40, "message": "AssertionError: assert 41 == (21 + 2)\n +  where 41 = len('vZVZGZ7ZeZwZBZkZcZpZxZbZSZnZuZlZUZgZCZtZC')\n +  and   21 = len('vVG7ewBkcpxbSnulUgCtC')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00041213189251720905, "start": 1730760386.1336594, "stop": 1730760386.134072, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_2_1.py::test_length_of_result", "location": ["tests30_2_1.py", 34, "test_length_of_result"], "keywords": {"test_length_of_result": 1, "tests30_2_1.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010995299089699984, "start": 1730760386.1479478, "stop": 1730760386.1480587, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "5e876b48704548b2bbdc11844bbcc40b", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
