{
  "parameter(s)": [
    10,
    100
  ],
  "test_large_range": [
    "passed",
    "",
    0.00018
  ],
  "test_smallest_is_in_range": [
    "passed",
    "",
    0.00021
  ],
  "test_unsorted_large_range": [
    "failed",
    "assert 45 == -911\n +  where 45 = find_second_smallest_num([540, 1099, 909, -934, -983, 736, ...])",
    0.00083
  ],
  "test_fixed_list_in_the_range": [
    "failed",
    "assert 11 == 1\n +  where 11 = find_second_smallest_num([-1, -2, -3, -4, -5, -6, ...])",
    0.00036
  ],
  "test_reversed_range": [
    "failed",
    "assert None == -89\n +  where None = find_second_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00035
  ]
}