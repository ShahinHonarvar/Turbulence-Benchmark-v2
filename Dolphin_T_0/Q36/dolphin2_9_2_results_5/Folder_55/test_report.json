{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests36_55_5.py::test_repeat_char", "location": ["tests36_55_5.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_55_5.py": 1, "Folder_55": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.96339988685213e-05, "start": 1738554653.2048154, "stop": 1738554653.2049055, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2dbf6225db4f430cb36cec05c0a058ad", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_55_5.py::test_repeat_char", "location": ["tests36_55_5.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_55_5.py": 1, "Folder_55": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q36/dolphin2_9_2_results_5/Folder_55/tests36_55_5.py", "lineno": 9, "message": "AssertionError: assert not 'mmmmmmm'\n +  where 'mmmmmmm' = filter_chars('mmmmmmm')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (5 + 2)", "        if 'Y' < 'm' < 's':", ">           assert not filter_chars(s)", "E           AssertionError: assert not 'mmmmmmm'", "E            +  where 'mmmmmmm' = filter_chars('mmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/dolphin2_9_2_results_5/Folder_55/tests36_55_5.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (5 + 2)", "        if 'Y' < 'm' < 's':", ">           assert not filter_chars(s)", "E           AssertionError: assert not 'mmmmmmm'", "E            +  where 'mmmmmmm' = filter_chars('mmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/dolphin2_9_2_results_5/Folder_55/tests36_55_5.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q36/dolphin2_9_2_results_5/Folder_55/tests36_55_5.py", "lineno": 9, "message": "AssertionError: assert not 'mmmmmmm'\n +  where 'mmmmmmm' = filter_chars('mmmmmmm')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014673899931949563, "start": 1738554653.2050288, "stop": 1738554653.205176, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2dbf6225db4f430cb36cec05c0a058ad", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_55_5.py::test_repeat_char", "location": ["tests36_55_5.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_55_5.py": 1, "Folder_55": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.915900252759457e-05, "start": 1738554653.21327, "stop": 1738554653.2133598, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2dbf6225db4f430cb36cec05c0a058ad", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
