Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        ├── If
        │   ├── Compare
        │   │   ├── Call
        │   │   │   ├── Name
        │   │   │   │   └── Load
        │   │   │   └── Call
        │   │   │       ├── Name
        │   │   │       │   └── Load
        │   │   │       └── Name
        │   │   │           └── Load
        │   │   ├── NotEq
        │   │   └── Call
        │   │       ├── Name
        │   │       │   └── Load
        │   │       └── Name
        │   │           └── Load
        │   └── Return
        │       └── List
        │           └── Load
        ├── Assign
        │   ├── Name
        │   │   └── Store
        │   └── ListComp
        │       ├── Subscript
        │       │   ├── Name
        │       │   │   └── Load
        │       │   ├── Slice
        │       │   │   ├── Name
        │       │   │   │   └── Load
        │       │   │   └── BinOp
        │       │   │       ├── Name
        │       │   │       │   └── Load
        │       │   │       ├── Add
        │       │   │       └── Constant
        │       │   └── Load
        │       └── comprehension
        │           ├── Name
        │           │   └── Store
        │           └── Call
        │               ├── Name
        │               │   └── Load
        │               └── BinOp
        │                   ├── Call
        │                   │   ├── Name
        │                   │   │   └── Load
        │                   │   └── Name
        │                   │       └── Load
        │                   ├── Sub
        │                   └── Constant
        └── Return
            └── Name
                └── Load
