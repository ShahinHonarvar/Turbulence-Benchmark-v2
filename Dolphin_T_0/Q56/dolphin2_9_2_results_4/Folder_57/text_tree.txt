Root
└── Module
    └── FunctionDef
        ├── arguments
        │   └── arg
        ├── If
        │   ├── BoolOp
        │   │   ├── Or
        │   │   ├── Compare
        │   │   │   ├── Call
        │   │   │   │   ├── Name
        │   │   │   │   │   └── Load
        │   │   │   │   └── Call
        │   │   │   │       ├── Name
        │   │   │   │       │   └── Load
        │   │   │   │       └── Name
        │   │   │   │           └── Load
        │   │   │   ├── NotEq
        │   │   │   └── Call
        │   │   │       ├── Name
        │   │   │       │   └── Load
        │   │   │       └── Name
        │   │   │           └── Load
        │   │   └── Compare
        │   │       ├── Call
        │   │       │   ├── Name
        │   │       │   │   └── Load
        │   │       │   └── Name
        │   │       │       └── Load
        │   │       ├── Lt
        │   │       └── Constant
        │   └── Return
        │       └── List
        │           └── Load
        ├── Assign
        │   ├── Name
        │   │   └── Store
        │   └── Call
        │       ├── Name
        │       │   └── Load
        │       └── Name
        │           └── Load
        └── Return
            └── ListComp
                ├── Subscript
                │   ├── Name
                │   │   └── Load
                │   ├── Slice
                │   │   ├── Name
                │   │   │   └── Load
                │   │   └── BinOp
                │   │       ├── Name
                │   │       │   └── Load
                │   │       ├── Add
                │   │       └── Constant
                │   └── Load
                └── comprehension
                    ├── Name
                    │   └── Store
                    └── Call
                        ├── Name
                        │   └── Load
                        └── BinOp
                            ├── Name
                            │   └── Load
                            ├── Sub
                            └── Constant
