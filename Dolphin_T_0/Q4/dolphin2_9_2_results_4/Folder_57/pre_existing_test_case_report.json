{
  "parameter(s)": [
    18,
    37
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "assert [40, 42, 44, 46, 48, 50, ...] == [40, 42, 44, 46, 48, 50, ...]\n  Left contains one more item: 76\n  Full diff:\n  - [40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74]\n  + [40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76]\n  ?                                                                        ++++",
    0.00071
  ],
  "test_large_range": [
    "failed",
    "assert [20, 21, 22, 23, 24, 25, ...] == [20, 21, 22, 23, 24, 25, ...]\n  Left contains one more item: 38\n  Full diff:\n  - [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n  + [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]\n  ?                                                                        ++++",
    0.00114
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 19 == ((37 - 18) - 1)\n +  where 19 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}