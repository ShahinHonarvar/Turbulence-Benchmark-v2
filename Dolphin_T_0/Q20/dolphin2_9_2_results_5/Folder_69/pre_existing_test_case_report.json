{
  "parameter(s)": [
    17,
    39,
    91
  ],
  "test_unsorted_large_range": [
    "passed",
    "",
    0.00012
  ],
  "test_n_th_smallest_is_in_range": [
    "passed",
    "",
    0.00013
  ],
  "test_float_numbers": [
    "failed",
    "assert 7.416198487095663 == 7.483314773547883\n +  where 7.416198487095663 = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00024
  ],
  "test_reversed_range": [
    "failed",
    "assert -46 == -45\n +  where -46 = find_n_th_smallest_num([-100, -99, -98, -97, -96, -95, ...])",
    0.00018
  ],
  "test_large_range": [
    "failed",
    "assert 54 == 55\n +  where 54 = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00148
  ]
}