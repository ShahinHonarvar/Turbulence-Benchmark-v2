{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests32_70_4.py::test_string_of_length_one", "location": ["tests32_70_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_70_4.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017767799727153033, "start": 1738553093.921569, "stop": 1738553093.9217474, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1f3baa98a1af4d809795094bcc6e046a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_string_of_length_one", "location": ["tests32_70_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_70_4.py": 1, "Folder_70": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q32/dolphin2_9_2_results_4/Folder_70/tests32_70_4.py", "lineno": 8, "message": "AssertionError: assert 'VV' == 'PV'\n  \n  - PV\n  + VV"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'P'", ">       assert insert_after_character(s) == 'P' + 'V'", "E       AssertionError: assert 'VV' == 'PV'", "E         ", "E         - PV", "E         + VV"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_4/Folder_70/tests32_70_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'P'", ">       assert insert_after_character(s) == 'P' + 'V'", "E       AssertionError: assert 'VV' == 'PV'", "E         ", "E         - PV", "E         + VV"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_4/Folder_70/tests32_70_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q32/dolphin2_9_2_results_4/Folder_70/tests32_70_4.py", "lineno": 8, "message": "AssertionError: assert 'VV' == 'PV'\n  \n  - PV\n  + VV"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003846710023935884, "start": 1738553093.9219658, "stop": 1738553093.9223514, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1f3baa98a1af4d809795094bcc6e046a", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_70_4.py::test_string_of_length_one", "location": ["tests32_70_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_70_4.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010417700104881078, "start": 1738553093.9324093, "stop": 1738553093.932514, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "1f3baa98a1af4d809795094bcc6e046a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
