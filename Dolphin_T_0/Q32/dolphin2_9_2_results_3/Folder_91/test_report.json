{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests32_91_3.py::test_string_of_length_one", "location": ["tests32_91_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_91_3.py": 1, "Folder_91": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011966799866058864, "start": 1738552945.8843129, "stop": 1738552945.8844326, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "224be546b7e74f0fbd49b215893ba66d", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_91_3.py::test_string_of_length_one", "location": ["tests32_91_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_91_3.py": 1, "Folder_91": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q32/dolphin2_9_2_results_3/Folder_91/tests32_91_3.py", "lineno": 8, "message": "AssertionError: assert '00' == 'a0'\n  \n  - a0\n  + 00"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'a'", ">       assert insert_after_character(s) == 'a' + '0'", "E       AssertionError: assert '00' == 'a0'", "E         ", "E         - a0", "E         + 00"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_91/tests32_91_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'a'", ">       assert insert_after_character(s) == 'a' + '0'", "E       AssertionError: assert '00' == 'a0'", "E         ", "E         - a0", "E         + 00"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/dolphin2_9_2_results_3/Folder_91/tests32_91_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dolphin_T_0/Q32/dolphin2_9_2_results_3/Folder_91/tests32_91_3.py", "lineno": 8, "message": "AssertionError: assert '00' == 'a0'\n  \n  - a0\n  + 00"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028631500026676804, "start": 1738552945.8845775, "stop": 1738552945.8848643, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "224be546b7e74f0fbd49b215893ba66d", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_91_3.py::test_string_of_length_one", "location": ["tests32_91_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_91_3.py": 1, "Folder_91": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001265800019609742, "start": 1738552945.8945801, "stop": 1738552945.8947077, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "224be546b7e74f0fbd49b215893ba66d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
