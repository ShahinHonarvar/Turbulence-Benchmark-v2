{
  "parameter(s)": [
    2,
    8
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [6, 8, 10, 12, 14, 16, ...] == [8, 10, 12, 14, 16]\n  At index 0 diff: 6 != 8\n  Left contains 2 more items, first extra item: 16\n  Full diff:\n  - [8, 10, 12, 14, 16]\n  + [6, 8, 10, 12, 14, 16, 18]\n  ?  +++                 ++++",
    0.00049
  ],
  "test_large_range": [
    "failed",
    "assert [3, 4, 5, 6, 7, 8, ...] == [4, 5, 6, 7, 8]\n  At index 0 diff: 3 != 4\n  Left contains 2 more items, first extra item: 8\n  Full diff:\n  - [4, 5, 6, 7, 8]\n  + [3, 4, 5, 6, 7, 8, 9]\n  ?  +++             +++",
    0.00054
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 7 == ((8 - 2) - 1)\n +  where 7 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00022
  ]
}