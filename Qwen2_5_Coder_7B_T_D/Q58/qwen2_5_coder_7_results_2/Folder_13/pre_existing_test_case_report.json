{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 97,  32, -94,  -9, -77, -54,  79,  30, -28, -35,   2,  86, -20,\\n         -87,   5, -65,  90,  46, -12, -14,  68,  26,  -2,  70,  30, -47,\\n          27,  56,  83, -55,  19,   7, -44,  50,  36,  71,  82,  -6,  35,\\n         -36,  15,  17,  58, -24, -73, -85,  -9, -65, -19,  27, -14,  -7,\\n          -4,  20,   2,  96,  28,  11, -27,  87,  16,  57,  80,   0, -13,\\n          -4,  59, -94,   2, -91, -13,  60, -96,  47, -10, -98, -34,  87,\\n         -58, -54, -52,  27, -64,  38,  46, -76,  55,   9,   0, -25, -40,\\n         -73, -31, -96,  -9,  23, -74,  88,  71, -83, -72, -73,  31,  92,\\n         -60,  50, -15,  64,  78, -19, -39, -83,  76, -16, -78, -40, -82,\\n          17, -57,  14,  45,  -5,  69, -68,  45,  27, -33,  55, -79, -31,\\n         -90,  40,  -3, 100,  73, -34,   2,  16, -57,  99, -38,  96, -63,\\n          60,  -6,  32, -16, -38,  42,  40, -97,  75, -49, -27, -46, -77,\\n          48, -45,  53,  78, -77, -86,  75,  59,  78,  24,  73, -16,  98,\\n          47,  57, -87,  51, -15, -57]]))",
    0.035
  ]
}