{
  "parameter(s)": [
    38,
    52
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00019
  ],
  "test_range_size": [
    "passed",
    "",
    0.00013
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00012
  ],
  "test_even_range": [
    "failed",
    "assert [78, 80, 82, 84, 86, 88, ...] == [80, 82, 84, 86, 88, 90, ...]\n  At index 0 diff: 78 != 80\n  Left contains one more item: 104\n  Full diff:\n  - [80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104]\n  + [78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104]\n  ?  ++++",
    0.00062
  ],
  "test_large_range": [
    "failed",
    "assert [39, 40, 41, 42, 43, 44, ...] == [40, 41, 42, 43, 44, 45, ...]\n  At index 0 diff: 39 != 40\n  Left contains one more item: 52\n  Full diff:\n  - [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n  + [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n  ?  ++++",
    0.00084
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 14 == ((52 - 38) - 1)\n +  where 14 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00036
  ]
}