{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00038
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 56,  -2],\\n        [-77,  48],\\n        [  1, -34],\\n        [-88, -77],\\n        [ 64, -51],\\n        [-97, -81],\\n        [-29, -44],\\n        [-36, -25],\\n        [-67,  -3],\\n        [ 85, -66],\\n        [-66,  30],\\n        [-48, -40],\\n        [-82,  13],\\n        [-87,  36],\\n        [-28, -90],\\n        [ 43, -19],\\n        [ 26, -39],\\n        [ 58, -21],\\n        [ 35, -33],\\n        [-64, -18],\\n        [ 56, -74],\\n        [-51,  94],\\n        [-49,  68],\\n        [-91, -72],\\n        [-36, -32],\\n        [ 33, -58],\\n        [ 67, -91],\\n        [-37,  61],\\n        [ 48,   0],\\n        [ -8, -55],\\n        [ 74, -62],\\n        [ 31, -43],\\n        [ 47, -44],\\n        [-65,  68],\\n        [-74, -37],\\n        [-69, -57],\\n        [-65,  36],\\n        [-90, -42],\\n        [-19,  46],\\n        [ 24,  47],\\n        [  4,  86],\\n        [ 66,  74],\\n        [-42, -72],\\n        [ 68,  91],\\n        [ 83, -29],\\n        [-97, -71],\\n        [ 34, -61],\\n        [-27, -97]]))",
    0.00062
  ]
}