{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00408
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -64,  -16,   12, -100,  -47,  -41,  -29,   14,  -91,   -9,\\n           71,  -95,  -62,   57,  -46,   21,   75,   76,   18,  -59,\\n            2,   70,  -11,   13,  -41,  -35,  -82,   52,    0,  -10,\\n           -4,  -89,   21,   51,   21,  -85,  -99,   15,   31,  -79,\\n           90,   43,   32,  -35,  -89,  -93,  -11,   51,   -1,   71,\\n          -15,    1,  -83,  -44,    2,  -46,   -8,   86,  -27,   85,\\n          -17,  -46,   82,  -99,  -90,   60,    2,  -67,   73,  -63,\\n           26,  -59,   15,  -58,  -30,   11,   29,   57,   75,   89,\\n           15,    6,   68,    5,  -29,   27,  -58,  -10,   29,   69,\\n           92, -100,  -68,   98,  -54,  -41,   56,   96,   86,   99,\\n          -29,   62,   83,   16,   26,    7,  -39,  -72,   19,   10,\\n          -95,    1,  -32,   64,  -15,  -11,  -93,   33,  -25,  -38,\\n           77,  -45,  -60,   33,   70,  -46,  -89,   95,    1,   38,\\n          -33,  -83,  -58,   86,  -65,  -33,  -29,   69,  -82,  -61,\\n            2,   30,   58,    8,  -20,  -39,  -29,   42,  -54,   -7,\\n           96,   20,  -37,   29,   11,   88,  -30,    8, -100]]))",
    0.00135
  ]
}