{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 48,  49],\\n        [ 86,  78],\\n        [ 11,  89],\\n        [-64,  -4],\\n        [-39, -78],\\n        [ 55, -87],\\n        [ 49,   7],\\n        [-49,   9],\\n        [-11,  21],\\n        [-63,  76],\\n        [ 87,  36],\\n        [ 88,  21],\\n        [-98, -28],\\n        [  6, -64],\\n        [-78,  31],\\n        [-43,  72],\\n        [ 56,  94],\\n        [ 76, -90],\\n        [ -5,  53],\\n        [-71,  37],\\n        [ 99, -81],\\n        [ 37, -41],\\n        [ 76,  29],\\n        [ 70, -12],\\n        [-85,  69],\\n        [ 38,  78],\\n        [ 25,  44],\\n        [ 89,  73],\\n        [-26,  -9],\\n        [ 44, -92],\\n        [-18, -47],\\n        [-40, -53],\\n        [ 59,  57],\\n        [-89,   0],\\n        [ 76,  95],\\n        [ 85,  23],\\n        [-20,   1],\\n        [ 29,  80],\\n        [ 91, -55],\\n        [-76, -60],\\n        [-44,  89],\\n        [-15, -24],\\n        [-95,  30],\\n        [ 20,  55],\\n        [-18, -41],\\n        [ 86, -20],\\n        [ 39,  92],\\n        [ 56, -27]]))",
    0.00104
  ]
}