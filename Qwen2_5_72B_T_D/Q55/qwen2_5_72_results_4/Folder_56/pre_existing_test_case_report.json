{
  "parameter(s)": [
    -65
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00013
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00013
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00012
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-65], [-65,...65, -65], ...] == [[-65], [-65]...], [-65], ...]\n  At index 1 diff: [-65, -65] != [-65]\n  Left contains 72 more items, first extra item: [-65]\n  Full diff:\n    [\n     [-65],\n  -  [-65],\n  ?      -...\n  \n  ...Full output truncated (215 lines hidden), use '-vv' to show",
    0.00754
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 0 == 3)\n +  where 3 = <built-in method count of list object at 0x759cb0099c80>([-65])\n +    where <built-in method count of list object at 0x759cb0099c80> = [[-65], [-65, 1], [-65, 1, -65], [-65, 1, -65, 1], [-65, 1, -65, 1, -65], [], ...].count\n +  and   0 = <built-in method count of list object at 0x759cb0099c80>([1, -65])\n +    where <built-in method count of list object at 0x759cb0099c80> = [[-65], [-65, 1], [-65, 1, -65], [-65, 1, -65, 1], [-65, 1, -65, 1, -65], [], ...].count",
    0.00041
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 65 == -65\n +  where 65 = <built-in function prod>([-65, -1])\n +    where <built-in function prod> = math.prod",
    0.00032
  ]
}