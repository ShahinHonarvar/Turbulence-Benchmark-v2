ChatCompletion(id='chatcmpl-f0a46ed3941249b7b64f840181dc5435', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices(matrix, target_sum, curr_sum, row, col, curr_matrix, result):\n        if row >= matrix.shape[0] or col >= matrix.shape[1] or curr_sum > target_sum:\n            return\n        curr_matrix[row][col] = matrix[row, col]\n        curr_sum += matrix[row][col]\n        if curr_sum == target_sum:\n            result.append(np.array(curr_matrix, dtype=np.int32))\n        find_submatrices(matrix, target_sum, curr_sum, row+1, col, curr_matrix+np.zeros_like(curr_matrix, dtype=np.int32), result)\n        find_submatrices(matrix, target_sum, curr_sum, row, col+1, curr_matrix+np.zeros_like(curr_matrix, dtype=np.int32), result)\n\n    target_sum = -3\n    result = []\n    for start_row in range(matrix.shape[0]):\n        for start_col in range(matrix.shape[1]):\n            find_submatrices(matrix, target_sum, 0, start_row, start_col, np.zeros_like(matrix, dtype=np.int32), result)\n    return result\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730663785, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=252, prompt_tokens=136, total_tokens=388, estimated_cost=0.0001484))