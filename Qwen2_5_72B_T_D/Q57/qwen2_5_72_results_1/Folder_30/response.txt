ChatCompletion(id='chatcmpl-0eae5ef62e2340be8a0ceb825019b211', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices(matrix, target_sum, current_sum, row, col, rows, cols, submatrix, result):\n        if current_sum == target_sum:\n            result.append(submatrix)\n            return\n        if current_sum > target_sum or row >= rows or col >= cols:\n            return\n        \n        find_submatrices(matrix, target_sum, current_sum, row + 1, col, rows, cols, submatrix, result)\n        find_submatrices(matrix, target_sum, current_sum, row, col + 1, rows, cols, submatrix, result)\n        \n        new_submatrix = matrix[row:row + len(submatrix) + 1, col:col + len(submatrix[0]) + 1]\n        if new_submatrix.size > 0 and new_submatrix.shape[0] == submatrix.shape[0] + 1 and new_submatrix.shape[1] == submatrix.shape[1] + 1:\n            find_submatrices(matrix, target_sum, current_sum + new_submatrix[-1, -1], row, col, rows, cols, new_submatrix, result)\n    \n    rows, cols = matrix.shape\n    result = []\n    for i in range(rows):\n        for j in range(cols):\n            find_submatrices(matrix, 21, matrix[i, j], i, j, rows, cols, matrix[i, j].reshape(1, 1), result)\n    return [r.tolist() for r in result]\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730663383, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=329, prompt_tokens=137, total_tokens=466, estimated_cost=0.00017955000000000003))