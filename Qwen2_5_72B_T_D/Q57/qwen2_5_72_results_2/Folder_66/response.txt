ChatCompletion(id='chatcmpl-ec2491036900466ca1a41cbfa0f40ae3', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices_with_sum(mat, target_sum, current_sum, row, col, rows, cols, result, path):\n        if current_sum == target_sum:\n            result.append(path)\n            return\n        if row >= rows or col >= cols:\n            return\n        if current_sum + mat[row][col] <= target_sum:\n            find_submatrices_with_sum(mat, target_sum, current_sum + mat[row][col], row, col + 1, rows, cols, result, path + [(row, col)])\n            find_submatrices_with_sum(mat, target_sum, current_sum + mat[row][col], row + 1, col, rows, cols, result, path + [(row, col)])\n        find_submatrices_with_sum(mat, target_sum, current_sum, row, col + 1, rows, cols, result, path)\n        find_submatrices_with_sum(mat, target_sum, current_sum, row + 1, col, rows, cols, result, path)\n\n    def get_submatrix_elements(matrix, coordinates):\n        submatrix_elements = []\n        row_min = min([x[0] for x in coordinates])\n        row_max = max([x[0] for x in coordinates])\n        col_min = min([x[1] for x in coordinates])\n        col_max = max([x[1] for x in coordinates])\n        for i in range(row_min, row_max + 1):\n            for j in range(col_min, col_max + 1):\n                if (i, j) in coordinates:\n                    submatrix_elements.append(matrix[i][j])\n        return submatrix_elements\n\n    if not isinstance(matrix, np.ndarray) or len(matrix.shape) != 2:\n        return []\n    result = []\n    rows, cols = matrix.shape\n    find_submatrices_with_sum(matrix, 99, 0, 0, 0, rows, cols, result, [])\n    final_result = [get_submatrix_elements(matrix, res) for res in result]\n    return final_result\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730664304, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=444, prompt_tokens=137, total_tokens=581, estimated_cost=0.00022555000000000003))