ChatCompletion(id='chatcmpl-5345c766e1f9441999f7802a285d2db6', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices_with_sum(mat, target_sum, current_row, current_col, current_sum, current_submatrix, submatrices):\n        rows, cols = mat.shape\n        if current_row >= rows or current_col >= cols:\n            return\n        current_sum += mat[current_row, current_col]\n        current_submatrix.append(mat[current_row, current_col])\n        if current_sum == target_sum:\n            submatrices.append(current_submatrix.copy())\n        elif current_sum < target_sum:\n            find_submatrices_with_sum(mat, target_sum, current_row + 1, current_col, current_sum, current_submatrix, submatrices)\n            find_submatrices_with_sum(mat, target_sum, current_row, current_col + 1, current_sum, current_submatrix, submatrices)\n        current_submatrix.pop()\n        find_submatrices_with_sum(mat, target_sum, current_row + 1, current_col, 0, [], submatrices)\n        find_submatrices_with_sum(mat, target_sum, current_row, current_col + 1, 0, [], submatrices)\n\n    target_sum = 411\n    submatrices = []\n    find_submatrices_with_sum(matrix, target_sum, 0, 0, 0, [], submatrices)\n    return submatrices\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730665399, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=294, prompt_tokens=138, total_tokens=432, estimated_cost=0.0001659))