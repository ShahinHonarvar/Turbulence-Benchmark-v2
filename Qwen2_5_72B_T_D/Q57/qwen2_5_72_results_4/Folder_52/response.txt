ChatCompletion(id='chatcmpl-c50a6f502fa84777944946b4744991be', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    def find_submatrices(row, col, target_sum, current_sum, path, result):\n        if row > matrix.shape[0] or col > matrix.shape[1]:\n            return\n        current_sum += matrix[row, col]\n        path.append(matrix[row, col])\n        if current_sum == target_sum:\n            result.append(path.copy())\n        if current_sum < target_sum:\n            find_submatrices(row + 1, col, target_sum, current_sum, path, result)\n            find_submatrices(row, col + 1, target_sum, current_sum, path, result)\n        path.pop()\n    \n    def get_all_submatrices():\n        submatrices = []\n        for i in range(matrix.shape[0]):\n            for j in range(matrix.shape[1]):\n                find_submatrices(i, j, 100, 0, [], submatrices)\n        return submatrices\n    \n    all_submatrices = get_all_submatrices()\n    filtered_submatrices = [submatrix for submatrix in all_submatrices if np.sum(submatrix) == 100]\n    return filtered_submatrices\n```', refusal=None, role='assistant', function_call=None, tool_calls=None, name=None))], created=1730665286, model='Qwen/Qwen2.5-72B-Instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=256, prompt_tokens=138, total_tokens=394, estimated_cost=0.0001507))