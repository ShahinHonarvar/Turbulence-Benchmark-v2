{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00054
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,    9],\\n        [  49,  -99],\\n        [ -87,  -85],\\n        [ -42,  -23],\\n        [ -92,   87],\\n        [  56,  -85],\\n        [  43,  -36],\\n        [  -4,  -81],\\n        [ -68,   -3],\\n        [ -42,  -81],\\n        [ -68,   70],\\n        [ -72,  -81],\\n        [  89,  -69],\\n        [  61,   -5],\\n        [ -62,   19],\\n        [-100,   52],\\n        [ -35,   78],\\n        [  72,   24],\\n        [  18,   14],\\n        [  57,  -47],\\n        [  54,   46],\\n        [ -71,   38],\\n        [  96,   -9],\\n        [  65,   -1],\\n        [ -76,  -26],\\n        [  70,   28],\\n        [  -6,   -9],\\n        [ -40,   88],\\n        [  -2,   26],\\n        [  26,   41],\\n        [ -28,   53],\\n        [  30,  -27],\\n        [  20,   55],\\n        [ -95,   93],\\n        [  67,  -48],\\n        [  38,   11],\\n        [  29,   92],\\n        [   8,   23],\\n        [  92,  -95],\\n        [  99,   48],\\n        [ -37,   97],\\n        [ -13,   23],\\n        [ -26,  -41],\\n        [ -63,  -28],\\n        [ -74,  -81]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00146
  ]
}