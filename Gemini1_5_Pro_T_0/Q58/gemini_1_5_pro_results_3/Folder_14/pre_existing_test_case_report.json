{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00367
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-29,  31],\\n        [-54,  30],\\n        [-24, -53],\\n        [  9,  39],\\n        [ 10,   7],\\n        [ 22,  -9],\\n        [-77,   6],\\n        [ 28, -22],\\n        [-92,  65],\\n        [ 92,   2],\\n        [ 21, -28],\\n        [ -9,   2],\\n        [ 33, -28],\\n        [-33,  45],\\n        [-15,  63],\\n        [  2,  61],\\n        [-38, -61],\\n        [ -7,  67],\\n        [ 37,  71],\\n        [ 30, -78],\\n        [ 30, -13],\\n        [ -9,  -2],\\n        [-33, -40],\\n        [-75, -76],\\n        [ 44,  14],\\n        [ 41, -29],\\n        [ 44,   3],\\n        [-87,  50],\\n        [-26, -50],\\n        [-20,  26],\\n        [ 56,   8],\\n        [-82, -46],\\n        [ -5,  83],\\n        [-66,  34],\\n        [-82, -59],\\n        [ 71, -83],\\n        [-79, -26],\\n        [ 37, -20],\\n        [ 26,  87],\\n        [ 52,  64],\\n        [ 54, -90],\\n        [ 83,  78]]))",
    0.01568
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00048
  ]
}