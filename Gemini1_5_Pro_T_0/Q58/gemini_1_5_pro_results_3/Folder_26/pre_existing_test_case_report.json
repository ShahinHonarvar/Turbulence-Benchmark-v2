{
  "parameter(s)": [
    115
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 231",
    0.00119
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 231",
    0.00228
  ],
  "test_matrix_of_having_115_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  84,   88,  -30,  -13,  -86,   11,  -25,  -41,  -31,  -13,\\n          -38,  -48,  -23, -100,   31,   19,   -9,   97,  -15,  -81,\\n          -86,  -69,  -26,  -30,   21,   67,  -29,   85,  -40,  -53,\\n          -16,  -84,  -78,   97,   83,   93,   30,  -86,  -72,  -89,\\n           61,   58,  -65,  -73,  -48,   52,  -41,  -27,  -44,   14,\\n          -10,  -97, -100,   42,   13,   52,  -96,   -9,   99,   95,\\n          -11,  -68,  -50,   22,   43,  -47,   92,   -4,  -64,   62,\\n           79,  -92,  -73,  -42,  -92,  -55, -100,    6,  -35,  -76,\\n          -86,   98,   59,  -44,   94,   34,  -78,   79,  -43,  -24,\\n           49,   15,   26,  -20,  -50,   -7,   44,   23,   -7,  -34,\\n          -86,  -12,  -95,  -70,   20,   32,   21,   88,  -86,   39,\\n           24,  -31,  -76,   28,   56]]))",
    0.00312
  ]
}