{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00372
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  52,  -64],\\n        [  39,   82],\\n        [  -5,  -21],\\n        [ -61,   48],\\n        [ -90,  -21],\\n        [  51,   21],\\n        [ -61,   83],\\n        [ -14,  -87],\\n        [   5,  -10],\\n        [ -80,  100],\\n        [ -14,  -69],\\n        [ -56,  -99],\\n        [  25,  -26],\\n        [ -95,    2],\\n        [ -99,   76],\\n        [  65,   64],\\n        [ -27,  -13],\\n        [   0,  -30],\\n        [ -23,  -14],\\n        [ -49,   72],\\n        [ -36,    1],\\n        [ -55,  -63],\\n        [-100,  -18],\\n        [  55,  -88],\\n        [ -37,  -18],\\n        [  13,   22],\\n        [  89,   13],\\n        [ -26,   -6],\\n        [ -78,    7],\\n        [ -73,  -18],\\n        [  59,  -24],\\n        [  13,  -72],\\n        [  13,   88],\\n        [ -29,   -2],\\n        [ -71,   89],\\n        [ -36,  -87],\\n        [ -50,  -48],\\n        [ -64,   12],\\n        [  40,   85],\\n        [  68,  -94]]))",
    0.00413
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00518
  ]
}