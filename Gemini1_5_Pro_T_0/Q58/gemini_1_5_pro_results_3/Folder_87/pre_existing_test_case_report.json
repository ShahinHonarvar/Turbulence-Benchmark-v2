{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-87,  32],\\n        [ 50,  18],\\n        [-65,  38],\\n        [ 53, -43],\\n        [ 40, -10],\\n        [-98,  47],\\n        [-34,   0],\\n        [-97,  34],\\n        [-63,  -4],\\n        [  2,  32],\\n        [-84,  84],\\n        [ 75, -51],\\n        [-79, -76],\\n        [ 63, -67],\\n        [-50,  -9],\\n        [ -3,  45],\\n        [ 76,  47],\\n        [-12,  72],\\n        [ 31, -86],\\n        [-74,  99],\\n        [-88,  -1],\\n        [ 93,  58],\\n        [ 41,  88],\\n        [-78,  47],\\n        [-91,  11],\\n        [  9,  23],\\n        [-66, -38],\\n        [ 64,  19],\\n        [ 61, -86],\\n        [ 12,   9],\\n        [ 55,  74],\\n        [ 11,  42],\\n        [ 24,  22],\\n        [ 85, -25],\\n        [-73, -88],\\n        [-39,  24],\\n        [-76,  52],\\n        [ -5,  67],\\n        [-23, -28],\\n        [-95,  45],\\n        [-50,  47],\\n        [ 66,  34],\\n        [  3,  56],\\n        [ 14, -19],\\n        [-13,   6],\\n        [-23, -34],\\n        [-90, -77],\\n        [ 14,  56]]))",
    0.0015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00143
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00122
  ]
}