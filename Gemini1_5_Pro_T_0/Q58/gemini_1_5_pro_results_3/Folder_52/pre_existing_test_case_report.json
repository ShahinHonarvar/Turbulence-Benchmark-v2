{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -90,  -52,   80,  -88,  -46,   44,   59,   -4,   97,   90,\\n           92,  -10,   45,  -15,    4,  -59,   78,  -96,   15,  -25,\\n          -78,   18,  -14,  -59,    4, -100,  -68,  -85,  -34,   25,\\n          -55,  -51,  -91,  -62,   41,   69,  -54,  -60,  -45,  -98,\\n           12,  -30,  -89,  -39,   19,   48,  -44,   27,  -37,   27,\\n            5,  -15,  -64,  -71,  -71,   29,  -97,   43,   97,   10,\\n           63,  -20,  -74,   68,   -4,  100,   40,  -71,  -44,  -51,\\n           38,   86,  -26,   47,  100,  -63,  -16,   -1,   32,   12,\\n            4,   15,   94,   -7,   57,   53,   92,   19,   20,  -80,\\n           45,  -90,   42,   16,  -26, -100,    0,  -41,  -56,  -92,\\n           88,  -31,   17,  -73,  -66,  -41,    0,   38,  -30,   -2,\\n          -32,   49,  -12,   61,  -47,   52,   59,   -7,  -90,  -83,\\n          -96,  -97,  -25,  -87,   87,  -73,   90,  -14,   57,  -43,\\n            8,  -89,   30,  -26,   48,  -17,   97,  -58,   63,   32,\\n          -85,   63,  -36,   61,  -87,   96,   92]]))",
    0.00093
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.0005
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00109
  ]
}