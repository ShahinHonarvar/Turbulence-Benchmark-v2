{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00138
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-17, -28],\\n        [-89,  85],\\n        [-16, -53],\\n        [-58, -91],\\n        [ 96,  42],\\n        [ 92, -89],\\n        [-71,   6],\\n        [ 85, -39],\\n        [-85,  60],\\n        [ -1, -84],\\n        [ 35,  -7],\\n        [ 92,  52],\\n        [-83,  38],\\n        [ 73,  35],\\n        [ 44,  64],\\n        [  7, -52],\\n        [ 29,  18],\\n        [ 41, -59],\\n        [-98,  50],\\n        [ 14, -63],\\n        [ 85,  47],\\n        [ 39,  27],\\n        [-27, -61],\\n        [ 59,  93],\\n        [-51,  14],\\n        [-27,  82],\\n        [ 23, -60],\\n        [-60,  43],\\n        [-62,  -4],\\n        [ 95,  80],\\n        [ 39, -25],\\n        [-33, -40],\\n        [ 57,  92],\\n        [-86,  53],\\n        [ 80, -98],\\n        [ 89,  85],\\n        [ 85, -17],\\n        [-89,   1],\\n        [ 14, -96],\\n        [ 25, -72],\\n        [  6,  42],\\n        [-75,  61],\\n        [-33,  30],\\n        [-58, -62],\\n        [ 26, -56],\\n        [ 60,  93]]))",
    0.01283
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00046
  ]
}