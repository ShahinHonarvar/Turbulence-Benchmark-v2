{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00047
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 60, -92, -82,  33, -79, -26, -40, -39,  44, -50, -39,  43,  10,\\n         -85, -51,  83,  68,  25,  45, -85, -26, -40,  61,  80,  84, -20,\\n          57,   6, -64, -16,   1,  96, -28, -58,  47,  67,  29,  95, -94,\\n           6,  83, -70,   4, -51, -13, -55,  40, -16,  78,  -8, -95, -92,\\n          80, -40, -78,  39, -64, -88, -82, -82,  11, -48,  32,  81,   4,\\n         -99, -32,  83,  32,  64,  16,  35, -83, -74, -63,  42, -40,  21,\\n          26,  99, -75,  13, -48,  40, -54,  63,  -4,  64,  36, -22, -38,\\n         -32,  -8, -58,  62, -57,  65, -13, -75, -76,  79,  95,  90,  38,\\n         -97, -26, -19, -24, -44,  40, -30,  62, -76,  15,  81,  29,  96,\\n         -77, -74, -26, -54,   3, -53, -39,  67, -92,  61,  71,  -9, -69,\\n          32, -30,  35,  99,  -9,   5,  14,  44,  73,  73,   4,   1,  83,\\n         -42, -26, -31,  91, -13, -29,  27, -12,   9, -25, -33,  70, -13,\\n         -17,   3, -49, -24, -31,  49,  -1, -93,  48,  59,  26,  20, -77,\\n           7,  46,  62, -41, -75,  86,  19,  62, -49,  27,  23,  83,  -8,\\n          45,   5,  22]]))",
    0.00102
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.01644
  ]
}