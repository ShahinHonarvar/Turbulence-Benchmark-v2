{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00049
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 69,  24,  23, -50, -29,  43, -34, -36,  64,  14,  76, -82, -52,\\n          29, -61, -93, -62, -18,  23,  97,  28,  67, -44,   3,  12, -20,\\n         -89, -19,  11,   7,  50,  -4, -86,  48,  10, -80,  97, 100,  63,\\n          35,   3,  93,  28,  37,  38,  51, -83,  -3, -95,   9,  66,  80,\\n         -21,  63, -39, -55,  17,  43,  53, -83,  67,  26, -91,  89,  44,\\n         -10, -49,  51, -44, -78,   8, -84,  22, -17, -36, -22, -82,  27,\\n          65,  25,  57, -17,  85,  58, -89,   3,  30, -83, -42,  -2, -70,\\n         -45,  91,  76, -22, -71,  32, -45, -55,  62,  84, -48,  15,  80,\\n          96,   6,  50,   2, -10,  11,  73,   5,  98,  16, -50, -32,  72,\\n         -34,  91,  69, -75,  21,   0, -40, -60,   2,  12,  93,  12,  94,\\n         -76, -93, -94, -97,  46,  43, -14, -65, -97,  -4, -76, -15,  96,\\n          84, -75, -63,  41,  97,  21, -84,  40,  57,  14, -91, -58,  97,\\n          29, -48, -44, -73,  66, -58,  13,  48,  92,  14, -54,  55,  51,\\n         -92,   2,  -3,  36]]))",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.01403
  ]
}