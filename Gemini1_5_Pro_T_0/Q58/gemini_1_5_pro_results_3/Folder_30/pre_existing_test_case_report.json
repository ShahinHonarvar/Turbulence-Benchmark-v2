{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00046
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00084
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  69,   59],\\n        [   3,   66],\\n        [  20,   41],\\n        [   9,  -86],\\n        [  74,   50],\\n        [ -33,    4],\\n        [  40,  100],\\n        [ -68,  -67],\\n        [   6,  -43],\\n        [ -41,  -81],\\n        [ -82,  -95],\\n        [   6,  -81],\\n        [ -33,    0],\\n        [ -82,  -17],\\n        [ -44,  -23],\\n        [ -23,   16],\\n        [  -1,   87],\\n        [ -56,   43],\\n        [ -33,   80],\\n        [  38,   64],\\n        [  43,   93],\\n        [  11,    3],\\n        [  15,  -50],\\n        [ -14,  -53],\\n        [ -41,  -87],\\n        [ -57,  -45],\\n        [  37,   68],\\n        [ -67,  -94],\\n        [  -2,  -41],\\n        [  98,  -70],\\n        [ -20,   49],\\n        [-100,   20],\\n        [  -5,  -80],\\n        [  37,  -56],\\n        [ -17,  -11],\\n        [ -89,   50],\\n        [ -95,   96],\\n        [ -55,  -45],\\n        [ -52,   24],\\n        [  37,  -28],\\n        [  68,    8],\\n        [ -57,  -79],\\n        [ -32,  -88],\\n        [ -78,  -67],\\n        [  33,   33],\\n        [  24,   17],\\n        [ -93,  -53]]))",
    0.00942
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00576
  ]
}