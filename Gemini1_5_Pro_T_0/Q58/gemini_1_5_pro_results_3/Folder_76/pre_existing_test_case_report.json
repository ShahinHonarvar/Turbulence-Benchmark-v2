{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -12,   47,   67,  -16,   72,   88,    2,  -60,  -71,   25,\\n           65,   -1,   90,  -45,   -1,  -45,    6,  -20,   20,   84,\\n           98,  -62,  -77,  -64,  -85,  -80,   15,   12,   98,  -97,\\n           48,   21,   58,  -33,   -9,   13,   21,   57,  -79,   12,\\n           10,   80,  -16,   50,  -84,   69,  -48,   41,   -3,   76,\\n          -76,   65,   -4,   91,   91,  -63,  -71,   37,   -8,   19,\\n           53,   -1,   -5,  -11,   -7,   97,   44,  -80,   87,   10,\\n           -6,   89,   95,    7,   93,   69,   66,  -49,   40,  -45,\\n           76,   15,  -75,   30,   30,   48,  -79,   61,    9,  -77,\\n           32,   52,  -61,  -99,  -44,  -73,   90,   11,  -40,   15,\\n          -96,   93,  -29,  -86,  -26,  -62,  -19,  -19,  -29,  -14,\\n          -92,   34,   24,   11,  -56,   20,  -44,  -70,   25,   13,\\n           90,   88,  -49,  -81,   54,   58,   45,  -81,   62,   66,\\n          -95,   70,   37,   98,   71,  -92,  -59,  -18,  -13,  -41,\\n           50,   41,  -46,  -22,  -53,    4,   50,   76,  -65,  -24,\\n          -19,   29,   92,  -56,   58,   69, -100,  -26,    0]]))",
    0.00097
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.0031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00768
  ]
}