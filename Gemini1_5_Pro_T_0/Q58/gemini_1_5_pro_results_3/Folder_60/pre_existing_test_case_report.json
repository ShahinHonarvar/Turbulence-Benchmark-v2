{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00419
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0007
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -90,   -7],\\n        [ -89,   33],\\n        [ -52,   66],\\n        [ -12,   75],\\n        [  96,   80],\\n        [  87,   74],\\n        [ -26,  -26],\\n        [ -94,   65],\\n        [ -41,  -90],\\n        [ -82,   70],\\n        [ -46,    2],\\n        [ -65,  -58],\\n        [ -77,  -10],\\n        [ -13,    7],\\n        [  -2,    3],\\n        [ -62,   26],\\n        [ -19,  -20],\\n        [  72,   43],\\n        [  51,   59],\\n        [  67,    3],\\n        [ -51,  -85],\\n        [  97,   60],\\n        [ -57,  -24],\\n        [ -62,   82],\\n        [  84,  -73],\\n        [   5,  -16],\\n        [  50,  -10],\\n        [ -13,   45],\\n        [  40,   95],\\n        [ -29,  -78],\\n        [  70,   59],\\n        [ -84,  -82],\\n        [  67,   80],\\n        [  99,  -23],\\n        [-100,  -57],\\n        [  -3,   75],\\n        [ -67,   18],\\n        [  32,  -67],\\n        [  76,  -95],\\n        [  -4,   38],\\n        [ -44,  100],\\n        [  71,  -35],\\n        [   2,  -61],\\n        [  -7,   -3]]))",
    0.00938
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00596
  ]
}