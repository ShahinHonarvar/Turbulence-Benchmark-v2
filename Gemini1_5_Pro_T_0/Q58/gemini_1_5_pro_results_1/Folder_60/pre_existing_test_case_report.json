{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00183
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00046
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-59,  32],\\n        [-39,  16],\\n        [100, -91],\\n        [-63,  62],\\n        [-19, -43],\\n        [  0, -86],\\n        [-52, -49],\\n        [-18, -12],\\n        [-58,  20],\\n        [ 40,  65],\\n        [ 56,  99],\\n        [-15, -13],\\n        [-15,  68],\\n        [-72,  21],\\n        [-17,   5],\\n        [ 48,  17],\\n        [-93,  42],\\n        [-63,  16],\\n        [ -7,  23],\\n        [-22, -95],\\n        [ 10,  81],\\n        [ 54,  12],\\n        [-92,  89],\\n        [-72, -61],\\n        [ 64, -72],\\n        [ 52, -84],\\n        [-43,  60],\\n        [ 82, -56],\\n        [-88,  85],\\n        [ 57,  -3],\\n        [  2,  22],\\n        [-94,  24],\\n        [-63, -86],\\n        [-67,  35],\\n        [-96, -59],\\n        [ 49,  75],\\n        [ -2,  15],\\n        [-37, 100],\\n        [ 73,  44],\\n        [ 14,  16],\\n        [-25,  84],\\n        [-33,  14],\\n        [ 68,  54],\\n        [-78,  31]]))",
    0.00111
  ]
}