{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 99,  85, -23,  -8, -48,  -6, -15, -63, -16, -52,  44, -11, -78,\\n         -19,  15, -20, -60,  75, -59,   0, -50, -25,   0,  32,  14, -77,\\n          -3, -35,  48, -50,  17,  96, -55, -90,  81,   8,  -9, -57,   8,\\n          84, -47,  20, -12,  28,  63,  75, -64, -26, -24, -99, -98, -53,\\n         -73,  97,  24, -50,   5,   7, -41, -77,  23, -12, -78,  41,  54,\\n         -63,  35,  69, -64,  97, -99, -31,   4,   1,  73, -33,  44, -47,\\n          37, -32,  74, -89,   8, -85, -75,  94,  72,  33, -80,  50, -66,\\n         -15, 100,  73,  60, -71,  81,  -7,  93, -27, -31,  60, -39,  -3,\\n          42, -61, -46,  53,   2, 100,  28, 100, -24,  59, -50,  81, -74,\\n         -76, -55, -85, -12, -85, -83,   0, -68,  30,  87,  47, -39, -39,\\n          43]]))",
    0.00406
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00055
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00121
  ]
}