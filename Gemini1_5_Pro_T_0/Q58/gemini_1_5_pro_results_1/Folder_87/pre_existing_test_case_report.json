{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00238
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-34,  29],\\n        [-44, -82],\\n        [ 45, -10],\\n        [-86,  83],\\n        [ 40, 100],\\n        [ 62, -69],\\n        [-45,  45],\\n        [-32, -13],\\n        [-51,  99],\\n        [-75, -90],\\n        [-79,  14],\\n        [ 58,  45],\\n        [ 52,  32],\\n        [ 44, -94],\\n        [-42,   0],\\n        [ 79,  88],\\n        [ 50,  97],\\n        [-12,  70],\\n        [ 85, -43],\\n        [-21, -78],\\n        [-50, -56],\\n        [-22,  63],\\n        [ 64,  24],\\n        [-90, -97],\\n        [-83, -98],\\n        [ -9,  89],\\n        [ 15,  99],\\n        [ 12,   4],\\n        [-95,  67],\\n        [-15,  74],\\n        [ 32,  59],\\n        [ 95,  92],\\n        [-27, -35],\\n        [ 59,  37],\\n        [-66,  68],\\n        [ 70,  28],\\n        [ 28, -76],\\n        [ 65, -42],\\n        [-11,  78],\\n        [-88,  -2],\\n        [-68, -93],\\n        [-14,  65],\\n        [ 50, -52],\\n        [-16,  81],\\n        [ 46,  82],\\n        [-79, -85],\\n        [ 87, -26],\\n        [-86,   8]]))",
    0.00418
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00392
  ]
}