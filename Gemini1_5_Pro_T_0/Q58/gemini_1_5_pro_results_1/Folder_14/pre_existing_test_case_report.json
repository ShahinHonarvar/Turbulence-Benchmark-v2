{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   9,  -17],\\n        [ -75,   -7],\\n        [  49,   37],\\n        [ -33,  -99],\\n        [  10,  -24],\\n        [ -36,   46],\\n        [  89,  -99],\\n        [  38,  -81],\\n        [  -8,   -8],\\n        [ -78,   47],\\n        [ -17,   27],\\n        [  40,   76],\\n        [  -9,  -79],\\n        [ -39,  -69],\\n        [  -6,  -54],\\n        [  -4,  -83],\\n        [ -42,  -50],\\n        [  68,  -24],\\n        [ -20,  -57],\\n        [ -49,   20],\\n        [  47,  -77],\\n        [-100,   28],\\n        [  50,  -76],\\n        [ -12,   61],\\n        [  17,  -43],\\n        [  14,   95],\\n        [  30,   41],\\n        [  61,  -56],\\n        [  17,  -92],\\n        [  21,   95],\\n        [ -82,  -68],\\n        [ -58,    6],\\n        [ -23,   27],\\n        [ -42,    1],\\n        [  42,  -90],\\n        [  88,  100],\\n        [  85,  -83],\\n        [ -76,  -64],\\n        [ -45,  -70],\\n        [ -31,   -4],\\n        [ -27,  -25],\\n        [ -15,   44]]))",
    0.00334
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.0004
  ]
}