{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.001
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00121
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00057
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  31,  -67],\\n        [  33,  -43],\\n        [ -14,  -43],\\n        [ -52,  -61],\\n        [  31,  -41],\\n        [  13,   42],\\n        [  42,   89],\\n        [  31,   69],\\n        [ -10,  -15],\\n        [  39,   89],\\n        [  52,   94],\\n        [ -63, -100],\\n        [ -79,   56],\\n        [  62,   92],\\n        [ -24,   80],\\n        [ -48,  -59],\\n        [  71,    1],\\n        [ -70,  -28],\\n        [ -87,  -69],\\n        [  93,   -9],\\n        [  52,    2],\\n        [  32,   99],\\n        [  46,   54],\\n        [ -54,  -27],\\n        [ -30,  -56],\\n        [ -90,  -17],\\n        [  60,   31],\\n        [  13,  -19],\\n        [  71,  -92],\\n        [  -8,   97],\\n        [  84,  -15],\\n        [ -18,   88],\\n        [  71,   81],\\n        [  54,   27],\\n        [  -4,  -50],\\n        [   5,  -68],\\n        [  25,  -82],\\n        [  82,   55],\\n        [  13,   92]]))",
    0.00083
  ]
}