{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00103
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00106
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-41,  31],\\n        [100,  43],\\n        [ 30, -23],\\n        [ 70, -64],\\n        [ 44,  67],\\n        [ -3,  61],\\n        [ 17, -74],\\n        [-38,  83],\\n        [ 31, -69],\\n        [-24,  92],\\n        [ 66, -73],\\n        [-74, -85],\\n        [ 88,  10],\\n        [ 46, -62],\\n        [-91,  -4],\\n        [ 46, -81],\\n        [ 27, -38],\\n        [ 27, -33],\\n        [-53, -78],\\n        [ 84, -37],\\n        [-94,  20],\\n        [ 41, -20],\\n        [ 20,  62],\\n        [ 77, -51],\\n        [-54,  59],\\n        [-22,  38],\\n        [-93, -98],\\n        [ 11, -58],\\n        [-92, -38],\\n        [-98, -21],\\n        [ 76, -44],\\n        [-19,   2],\\n        [-32,  -8],\\n        [-19,  90],\\n        [-13, -54],\\n        [-40,  27],\\n        [ 52, -49],\\n        [-97, -37],\\n        [ 17,  60],\\n        [-67,   4],\\n        [-65, -17],\\n        [ -2,   1],\\n        [ 50,  74],\\n        [ -5, -23],\\n        [ 19,  22]]))",
    0.00075
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00088
  ]
}