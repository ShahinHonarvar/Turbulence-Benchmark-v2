{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -93,  -27],\\n        [  23,   39],\\n        [  35,   45],\\n        [  -3,   38],\\n        [  57,   63],\\n        [  96,   50],\\n        [  -4,  -21],\\n        [  81,  -31],\\n        [  66,  -55],\\n        [ -68,   12],\\n        [ -17,   59],\\n        [  94,  -72],\\n        [  30,  -74],\\n        [ -82,   68],\\n        [ -87,   92],\\n        [ -86,   95],\\n        [  26,  -52],\\n        [ -21,  -62],\\n        [  45,   33],\\n        [ -71,  -79],\\n        [ -15,  -78],\\n        [ -12,  -33],\\n        [  87,   46],\\n        [ -63,   33],\\n        [  23,  -16],\\n        [ -53,  -39],\\n        [ -11,   85],\\n        [   0,  -47],\\n        [  48,   93],\\n        [ -78,  -85],\\n        [  35,  -77],\\n        [  41,   65],\\n        [  49,   78],\\n        [  44,   70],\\n        [ -69,  -85],\\n        [  69,   19],\\n        [  96,   65],\\n        [-100,   18],\\n        [ -48,  -37],\\n        [  66,   33]]))",
    0.00714
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00149
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00414
  ]
}