{
  "parameter(s)": [
    191
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00031
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 383",
    0.00663
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 383",
    0.00986
  ],
  "test_matrix_of_having_191_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 30, -52, -85, -14,  84,  83, -23, -78,  21,  73, -35, -44, -65,\\n          88,   1, -94, -82,  31,  90,  89,  83, -73, -48, -21, -37, -18,\\n          43, -16,  10,  64, -33,  20, -90, -40, -45,  99,   2, -42,  62,\\n         -86,  98, -20,  52,  94,  27,  50,  -9, -86, -69, -15, -75,  30,\\n         -75, -76, -87,  36,  25,  80,  62,  79, -79,  45, -67,  14, -81,\\n         -56, -24,  99, -15,   9,  60,  37,  38,  35, -27,  47,  -1, -38,\\n          48,  74,  90,  37, -68, -30, -12, -11,  30,  36, -26, -15, -61,\\n         -37, -70,  22, -45, -31,  -9, -23, -73, -38, -39, -57, -53, -59,\\n          82,  23,  87, -53, -16,  42,  44, -40,  84,  33,  66, -56, -68,\\n          39, -51,  16, -67, -29,  -3,  94,  58, -95,  26, -75,  13, -21,\\n           2,   7,   8,  90, -70,  -1, -11, -78, -41, 100,  43, -42, -54,\\n         -66,  91,  86,  40, -45, -40,  40,  12, -71,   1, -55,   9,  70,\\n          95, -14,  50,  15,  57,  74,  36, -61,  34, -52, -44, -88, -10,\\n          83,  72,   3, -44,  95, 100, -60,  -1,  55, -61, -74,  42,  14,\\n          97, -15, -26,  62,  36, -43, -63, -24,  25]]))",
    0.00105
  ]
}