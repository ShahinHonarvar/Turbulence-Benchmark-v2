{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  6, -64],\\n        [ 63,  51],\\n        [ 36, -80],\\n        [-92,  13],\\n        [-47, -24],\\n        [-83,  74],\\n        [ 13,  16],\\n        [-63, -76],\\n        [ 42,  52],\\n        [-46, -37],\\n        [ 19,  61],\\n        [-66,  87],\\n        [-34, -84],\\n        [ -1,  81],\\n        [ 53, -62],\\n        [ 17,  75],\\n        [-97,  83],\\n        [ 17, -97],\\n        [-40, -20],\\n        [-85,  86],\\n        [-72,  -9],\\n        [-44, -24],\\n        [-90, -34],\\n        [-45, -57],\\n        [ 14, -38],\\n        [-14,  53],\\n        [ 10,  49],\\n        [-32, -76],\\n        [ 92, -69],\\n        [ 98,  22],\\n        [ 48,   1],\\n        [ 51,  59],\\n        [ 37, -42],\\n        [ 78,  41],\\n        [-26,  45],\\n        [-53,  18],\\n        [-96,  51],\\n        [-39, -25],\\n        [-99,  86],\\n        [ 56,   9],\\n        [-17, -17],\\n        [ 48,  48],\\n        [ 64,  65],\\n        [-45,  87],\\n        [ -8,  47],\\n        [-88, -57]]))",
    0.00103
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00043
  ]
}