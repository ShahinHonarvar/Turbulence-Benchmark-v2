{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.001
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.0062
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  77,   57,  -47,  -60,   18,   98,  -73,  -86,  -30,  -96,\\n           -5,  -13,  -99,  -75,   72,  -13,  -30,  -19,   36,  -30,\\n          -81,  -51,   -1,    6,   78,   48,  -53,   47,  -90,   23,\\n           40,  -32,  -58,   35,  -53,   84,  -88,  -64,    4,  -18,\\n           66,   18,   31,  -68,  -11,  -31,  -80,  -64,   28,   24,\\n           47,   -6, -100,   35,   -6,   71,   76,  -45,   15,  -26,\\n           55,   67,  -73,  -30,   23,   30,   56,   22,   23,  -11,\\n          -82,   38,   63,   20,  -58,   58,  -31,  -32,   86,  -14,\\n           77,   25,   75,   32,   55,   84,   67,   -2,  -46,   16,\\n           41,   84,   22,  -69,  -80,   -9,   -5,   78,   49,   55,\\n          -40,   -2,   23,   13,  -61,   21,  -58,  -12,   72,  -93,\\n           83,   55,   19,  -44,   77,   90,  -22,  -17,  -42,   36,\\n          -92,  -56,  -55,  -94,   37,   51,  -86,   66,   26,   33,\\n           31,   11,  -48,  -55,  -93,  -79,   69,  -93,   28]]))",
    0.00084
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00046
  ]
}