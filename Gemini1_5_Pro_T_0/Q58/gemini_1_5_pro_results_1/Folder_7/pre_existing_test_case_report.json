{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00262
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -30,   94,   75,  -65,  -98,  -42,   60,  -40,  -37,\\n            6,   96,   62,   47,  -95,   33,  -59,  -34,   78,   85,\\n          -37,   51,  -12,  -25,  -23,   21,   89,   64,   18,   83,\\n          -18,   85,  -97,  -45,    3,  -85,  -26,    6,   61,   48,\\n          -11,  -53,  -89,  -42,  -95,  -41,   56,   90,   60,  -85,\\n          -79,  -46,  -41,   -1,   84,  -99,  -94,   53,    0,  -92,\\n          -43,  -17,   12,    5,  -70,  -87,   -3,  -72,  -98,   25,\\n          -75, -100,   -8,   35,  -48,  -63, -100,   33,  -43,   74,\\n           30,  -55,    3,   96,  -55,   88,   59,   63,  -52,   95,\\n           86,   34,  -92,   87,  -40,  -32,  -17,   29,  -42,  -60,\\n           49,  -75,  -36,   96,  -21,   -3,   60,   -3,  -72,  -54,\\n           -3,   77,  -38,    3,  -21,  100,  -92,  -32,  -66,  -41,\\n           65]]))",
    0.00235
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.00179
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 243",
    0.00789
  ]
}