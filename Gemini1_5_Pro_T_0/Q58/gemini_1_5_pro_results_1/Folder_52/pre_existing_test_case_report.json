{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00047
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 90, -70, -97,  38,  -4, -81, -13, -60,  -3,  21,  54,  21,  98,\\n         -44, -17,  92, -69,  63,  75, -20, 100,  35,  94,  69, -57, -18,\\n          78, -49, -21, -62,  97, -84,  -6, -76,  84, -21, -37, -85, -38,\\n         -39, -29,   2,  33,  97, -12, -62, -48,  22, -44,  16,  57,  58,\\n         -68, -68, -82,   2, -43, 100, -93,  66,  58, -37,  92, -32, -85,\\n         -18,  28, -87, -29,  61, -43, -66, -24,  36, -57, -60,  12, -69,\\n         -58, -46,  63, -95,  30,  80,  15, -21,  54,  12, -62, -96, -46,\\n          24, -37, 100,  54,  17, -26,  75,  38,   6, -58, -52,  46, -38,\\n         -61,  91,  41, -53,  -4, -20, -76, -78,  34,  17, -89, -15,  45,\\n         -99,   3,  79,  31, -51, -29,  80,  54, -72,  52, 100,  19, -44,\\n          18, -49, -23,  14, -45, -59, -12,  63,   2,  25,  45,  21, -90,\\n         -15, -74,  58, -36]]))",
    0.00323
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00244
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00612
  ]
}