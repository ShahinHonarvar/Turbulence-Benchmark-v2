{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00084
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-95,  50],\\n        [  3,  33],\\n        [ 89, -12],\\n        [-72, -38],\\n        [ 64, -33],\\n        [-41,  36],\\n        [ 73, -56],\\n        [  3, -70],\\n        [-81,  65],\\n        [ 17,  90],\\n        [ 22, -32],\\n        [ 94, -84],\\n        [ 41, -53],\\n        [-33,  27],\\n        [ 54,  80],\\n        [ 14,  52],\\n        [ 46,  14],\\n        [ 58,  93],\\n        [ 83, -84],\\n        [-59, -57],\\n        [-21,  18],\\n        [ 97, -15],\\n        [ 37,  51],\\n        [-40,  57],\\n        [ 94, -13],\\n        [-22, -60],\\n        [  5, -72],\\n        [-97, -70],\\n        [-41, -32],\\n        [-96,   9],\\n        [-14, -12],\\n        [ -5, -71],\\n        [ 95,  58],\\n        [ 23,  92],\\n        [ 31, -28],\\n        [ 25,  25],\\n        [-61,  56],\\n        [ 73,  -4],\\n        [ 25, -86],\\n        [-70, -63],\\n        [  2,  16],\\n        [ 19,   6],\\n        [-69,  24],\\n        [-52, -28]]))",
    0.00095
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00384
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00297
  ]
}