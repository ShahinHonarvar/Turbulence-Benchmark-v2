{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00055
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-88,  10],\\n        [ 64, -20],\\n        [ 82, -82],\\n        [ 65,  14],\\n        [ 39, -89],\\n        [-39,  75],\\n        [-52,  -9],\\n        [ 86, -21],\\n        [-93,  64],\\n        [-16,  59],\\n        [ 11,  93],\\n        [ 16,  39],\\n        [ 29,  17],\\n        [ 38,  79],\\n        [-15,   9],\\n        [ 95, -46],\\n        [  5,  77],\\n        [-62, -97],\\n        [-82, -51],\\n        [-22, -46],\\n        [-42,  31],\\n        [-59, -50],\\n        [ 96, -45],\\n        [ 24,  -9],\\n        [ 58, -99],\\n        [  3, -71],\\n        [-59, -64],\\n        [-41, -25],\\n        [  4, -74],\\n        [ 97,  33],\\n        [ 81,  50],\\n        [-93, -29],\\n        [ 84, -31],\\n        [-93,  72],\\n        [-85,  62],\\n        [ 64,  61],\\n        [ -3, -12],\\n        [-54,  64],\\n        [-89, -56],\\n        [-68,  -2],\\n        [ 89,  91],\\n        [ 44, -42],\\n        [-39, -29],\\n        [-52,  34],\\n        [ 74, -45],\\n        [100,  35],\\n        [ 69,  85],\\n        [-36,  16]]))",
    0.00223
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00197
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00533
  ]
}