{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -31,   35,  -63,   61,   29,   66,   11,   43,  -17,  -21,\\n          -67,   85,   24,  -59,   55,  -40,  -88,  -93,   33,   79,\\n          -16,  -46,  -63,  -33,  -10,   57,   13,  -57,    9,  -80,\\n          -88,   99,   52,  -66,  -84,   73,  -24,  -41,  -23,   95,\\n          -87,  -83,   -6,   60,    8,  -52,   16,   82,  -27,  -88,\\n          -14,  -10,  -75,    1,  -88,  -34,  -40,  -71,  -91,   65,\\n           79,  -46,   35,  -94,   -9,   94,   79,  -69,  -76,  -74,\\n           -4,  -24,  -82,  -13,   22,  -40,   56,   45,  -35,  -67,\\n           64,   29,  -42,  -96,   33,  -18,   29,   48,  -33,   40,\\n          -55,   63,   70,  -87,   19,  -90,  -92,  -97,  -93,  -98,\\n            7,  -56,   90,  -46,  -72,  -92,  -45,   53,  -52,   40,\\n          -67,  -95,  -30,  -41,    2,  -56,  -66,   38,   51,  -58,\\n           25,   79,   89,   89,   -2,  -39,  -78,   39,    3,   22,\\n           75,  -38,  -60,   51,   86,  -40,  -54,   16,   75,   12,\\n          -99,  -29,   31,  -88,   -8,  -76,  -69,  -37,  -62, -100,\\n          -70,  -46,  -33,   23,   -1,    5,   62,   25,  -35,   82,\\n          -13,    1,  -25,  -74,   60,  -44,   91,   47,  -57,  -53,\\n          -25,   81,   89,  -66,  -66]]))",
    0.00419
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00113
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00664
  ]
}