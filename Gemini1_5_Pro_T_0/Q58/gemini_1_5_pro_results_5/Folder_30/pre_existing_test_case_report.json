{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00131
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00237
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-77,  73],\\n        [-96,  10],\\n        [-90,  27],\\n        [-45,  95],\\n        [-89,  27],\\n        [ 56, -56],\\n        [ 20,   1],\\n        [-93,  22],\\n        [ 42, -68],\\n        [-81,  92],\\n        [-87, -97],\\n        [ 46,  29],\\n        [-98,  98],\\n        [ -8, -32],\\n        [ 38, -87],\\n        [-55, -10],\\n        [-43,  83],\\n        [ 79,  -5],\\n        [-29, -63],\\n        [ 22,  99],\\n        [ 64,  18],\\n        [-69,  81],\\n        [-97,  31],\\n        [ -1,  15],\\n        [  1, -13],\\n        [-61,  81],\\n        [ 78,  19],\\n        [-30, -91],\\n        [ 99,  84],\\n        [ 78,   5],\\n        [-24, -84],\\n        [-29, -23],\\n        [-60,  21],\\n        [ 40, -22],\\n        [ -8,   5],\\n        [-69,  13],\\n        [ 41,  34],\\n        [-86,  42],\\n        [-10,  77],\\n        [ 79, -86],\\n        [ 86, -33],\\n        [-41, -21],\\n        [-96, -17],\\n        [-28, -52],\\n        [-79, -30],\\n        [ 76,  -3],\\n        [  9, -59]]))",
    0.00972
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00698
  ]
}