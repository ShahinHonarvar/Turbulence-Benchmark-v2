{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00077
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00166
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-46, -61, -20,  30,  37, -12, -13,  54,  59,  11,  59,  -3,  78,\\n          74,  82, -61, -93, -78,  51, -36,  32, -96, -61,  49,  22,  36,\\n         -16,   6,   4, -63,  92,  80,  41, -46,  12, -76,  75,  86, -83,\\n          15, -79, -62, -87, -71, -26,  26, -71, -81,  42, -86,  87, -29,\\n          -7, -46,  82,  31,  47, -43,   8,  96,  35, -71, -51, -11, -31,\\n         -34, -80,  53,  10, -77,  17, -94,  -4,  50,  65, -47,  -6, -83,\\n         -49, -49, -20, -91,  74, -38, -81,  10,  35,  18,  77, -51, -18,\\n          34,   0,  59,  82, -46, -40, -61,   4, -80, -40,  50,  46,  64,\\n          98,  -8, -87, -19,  85,  13, -11, -25, -86,  77, -37, -16,  13,\\n         -94,  10, -15, -76,  33, -44,  14,  90,   9, -61,  70,  29, -62,\\n          74, -18, -80,  19,  82,  61, -50, -23, -47]]))",
    0.00602
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00677
  ]
}