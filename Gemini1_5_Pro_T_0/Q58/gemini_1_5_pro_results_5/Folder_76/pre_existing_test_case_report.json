{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00151
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00044
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  48,  -95,   88,    6,  -27,  -10,  -25,  -49,  -54,   41,\\n          -37,   15,  -53,  -22,  -72,  -82,   84,   92,  -42,  -55,\\n          -41,   25,  -53,   68,  -68,   27,   19,  -43,   48,   39,\\n           55,   20,   93,  -86,  -27,   -5,   57,   34,  -67,   55,\\n          -48,   85,  -65,   96,   63,  -17,  -79,   45,   65,  -83,\\n           65,  -39,   21,   61,    8,  -23,   89,  -94,   70,   48,\\n           58, -100,   35,    4,    8,  -60,  -80,   44,   19,   28,\\n           -1,   60,   85,   -4,  -19,   62,   89,  -32,  -55,   50,\\n           20,  -96,   66,  -24,   22,  -91,   39,  -56,   -7,   61,\\n          -65,   33,  -63,  -42,  -85,    9,  -83,   50,   80,   72,\\n           45,   70,   29,   70,   22,   54,  -20,  -99,   38,   49,\\n           67,   93,  -95,   79,  -26,   42,  -27,   24,   89,  -50,\\n           89,  -11,   69,  -86,  -92,  -28,   17,   78,   82,  -82,\\n          -77,   53,  -35,   95,  -50,   89,   99,  -55,    6,  -88,\\n           70,  -77,  -39,   -1,  -26, -100,   -1,  -17, -100,    1,\\n          -26,  -94,   64,   12,   86,   41,    7,  -11,   75]]))",
    0.00425
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00125
  ]
}