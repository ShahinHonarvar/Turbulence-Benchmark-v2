{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00123
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-70,  61],\\n        [ 41,  77],\\n        [ 72,   2],\\n        [-60, -29],\\n        [-44, -84],\\n        [  7,  84],\\n        [ 41,  49],\\n        [ 35, -37],\\n        [-74,  62],\\n        [ 89,  77],\\n        [-94,  13],\\n        [ 88, -52],\\n        [  6, -64],\\n        [ 18, -31],\\n        [-87,  32],\\n        [ 68,  64],\\n        [ 45,  93],\\n        [-83, -96],\\n        [-80,  17],\\n        [-33, -74],\\n        [ 27, -35],\\n        [ 80, -18],\\n        [ 24,  45],\\n        [-10, -16],\\n        [-67, -61],\\n        [  0,  98],\\n        [ 99,  47],\\n        [-80,  73],\\n        [ 72, -92],\\n        [-52, -44],\\n        [ 60,  61],\\n        [-76,  89],\\n        [-66,  87],\\n        [-33, -48],\\n        [-39,  90],\\n        [-21, -90],\\n        [ 54,  82],\\n        [-52, -33],\\n        [ 68,  65],\\n        [ 58,  73],\\n        [-60, -49],\\n        [ 50,  97]]))",
    0.00205
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00049
  ]
}