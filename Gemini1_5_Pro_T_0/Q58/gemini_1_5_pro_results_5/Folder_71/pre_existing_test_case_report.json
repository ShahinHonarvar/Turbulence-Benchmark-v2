{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,   15],\\n        [  -7,  -33],\\n        [ -83,  -95],\\n        [ -55,   99],\\n        [  98,  -91],\\n        [ -77,  -48],\\n        [ -63,   50],\\n        [  76,  -50],\\n        [  12,  -58],\\n        [ -40,   62],\\n        [  47,  -59],\\n        [ -71,   41],\\n        [  20,  -32],\\n        [  68, -100],\\n        [  71,   54],\\n        [ -50,  -61],\\n        [  -2,  -19],\\n        [  74,   50],\\n        [  41,   50],\\n        [ -99,  -44],\\n        [  17,   58],\\n        [ -58,  -69],\\n        [ -44,  -37],\\n        [  16,   57],\\n        [  99,   24],\\n        [  37,    5],\\n        [ -31,   33],\\n        [ -20,   83],\\n        [  70,   43],\\n        [ -93,   27],\\n        [ -74,    7],\\n        [ -59,   -9],\\n        [  49,  -21],\\n        [  95,  -36],\\n        [  71,  -86],\\n        [  95,  -83],\\n        [  16,  -44],\\n        [ -37,   84],\\n        [ -65,    5]]))",
    0.00077
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00311
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00042
  ]
}