{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00442
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00075
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00043
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16,  92],\\n        [ 67, -88],\\n        [-74,  10],\\n        [ 81,  19],\\n        [ 51,  23],\\n        [  3,  32],\\n        [-94,  52],\\n        [ 53, -20],\\n        [  4,  46],\\n        [ 28,  29],\\n        [ 73, -47],\\n        [-41, -92],\\n        [ 34, -80],\\n        [ -6, -61],\\n        [ 57,  62],\\n        [ 91, -80],\\n        [ 90,  42],\\n        [-65,  70],\\n        [-20,  -5],\\n        [ -7,  47],\\n        [ 86,  -7],\\n        [ 50,  28],\\n        [-85, -13],\\n        [ 26, -10],\\n        [-69,  93],\\n        [  9,  51],\\n        [ 65, -12],\\n        [-40,  78],\\n        [-42,  86],\\n        [ 33,  -9],\\n        [-96,  30],\\n        [-61, -90],\\n        [ 29, -69],\\n        [ 89, -15],\\n        [ -7,  81],\\n        [-47,  -3],\\n        [-76, -76],\\n        [ 35,  58],\\n        [  5, -46],\\n        [-38, -55]]))",
    0.01046
  ]
}