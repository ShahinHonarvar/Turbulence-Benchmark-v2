{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00031
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 15,  17,  35, -59,  62,  -8, -17,  -3,  64, -95,  37,  72,  30,\\n         -14,  95, -89,  18, -31, -41, -88, -95,  18, -14,  45, -97, -84,\\n         -35,  62,  18, -47, -74, -63, -20, -38,  81, -38,  57, -67,  43,\\n          83,  41, -38,  61, -80,  26,  15,   5,  92, -81,  45,  67,  -7,\\n         -26, -53, -21,  13, -53,  92, -84, -21, -89, -59,  88, -79, -82,\\n          98, -33,   5, -45,  -6,  20,  40, -99, -14,   5,  73,  20, -25,\\n          21,   6,  -4, -28, -23,  55, -69,  61, -72, -21, -73, -68, -15,\\n          27,  25,   0, -16,  47, -90,  21,   8,  70, -64,  48, -43, -36,\\n         -37,  84, -41,   0, -25,  25, -94,  61, -20, -85,  34, -98,  69,\\n          42,  49,  38,  80]]))",
    0.0008
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.00247
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 243",
    0.0048
  ]
}