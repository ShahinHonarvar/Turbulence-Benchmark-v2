{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00038
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -48,   60],\\n        [  15,   91],\\n        [   7,  -16],\\n        [  54,    3],\\n        [  31,   88],\\n        [  78,   71],\\n        [  69,   40],\\n        [  98,  -52],\\n        [ -67,    4],\\n        [  54,  -40],\\n        [  11,  -23],\\n        [ -58,   49],\\n        [ -73,  -12],\\n        [ -88,   39],\\n        [ -30,  -17],\\n        [ -16,   75],\\n        [ -98,   39],\\n        [  -6,   82],\\n        [ -70,   78],\\n        [ -82,   60],\\n        [ -17,  -38],\\n        [-100,   61],\\n        [ -55,   22],\\n        [  13,  -51],\\n        [ -40,   33],\\n        [ -75,  -87],\\n        [  57,  -82],\\n        [ -27,  -27],\\n        [ -59,   39],\\n        [  -3,   30],\\n        [  46,  -71],\\n        [  88,  -90],\\n        [  94,  -53],\\n        [   9,   14],\\n        [   1,  -39],\\n        [  29,   60],\\n        [   8,    8],\\n        [  43,   -2],\\n        [  -4,  -29],\\n        [ -26,  -77],\\n        [ -15,  -26],\\n        [ -82,   28],\\n        [  77,   80],\\n        [  92,  -63],\\n        [ -44,   16]]))",
    0.00085
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.0034
  ]
}