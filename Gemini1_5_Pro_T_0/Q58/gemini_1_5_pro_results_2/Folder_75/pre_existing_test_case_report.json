{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00042
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 54, -19],\\n        [ 51, -38],\\n        [-52,  43],\\n        [ 89, -26],\\n        [ 97,  94],\\n        [ -4, -66],\\n        [-41, 100],\\n        [  9, -21],\\n        [ 21,  46],\\n        [-64,  -7],\\n        [-26, -23],\\n        [-12,  78],\\n        [-60,  75],\\n        [ 88,  36],\\n        [-25,  65],\\n        [-91,  38],\\n        [ 28, -43],\\n        [ 72,  93],\\n        [-95,  74],\\n        [ 19, -89],\\n        [ 49, -93],\\n        [-37, -89],\\n        [ -5,  -6],\\n        [ 89, -30],\\n        [ 29,  32],\\n        [ 97, -95],\\n        [-93,  18],\\n        [ 70, -92],\\n        [ 34,  32],\\n        [ 85, -67],\\n        [ 83, -55],\\n        [ 49,  69],\\n        [-41,  92],\\n        [ 35, -52],\\n        [ 27,  81],\\n        [-78,  98],\\n        [ 68, -40],\\n        [ 21,  39],\\n        [-80,  30],\\n        [ 31,  86]]))",
    0.00404
  ]
}