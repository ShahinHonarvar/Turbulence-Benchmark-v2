{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00024
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 56,  27, -41,  28, -25,  42, -44, -34,  56, -13,  31, -75, -58,\\n          73,  84, -95,  64, -48,  72, -24,  78,  40, -72,  26,  23,  -5,\\n         -17,  54, -33,  66, -42,   3,   1,  65,  80,  98, -57,  36,   7,\\n         -58,  41, -26,  39, -36,  84,  68, -16,  49,  97,  11, -56,  76,\\n          10,  29,   8,  47, -39,  89,  96,  65,  87, -13,  24,  -7, -37,\\n         -28,  75,  -6, -67, -95, -38, -29, -19, -25,  80,  40, -70, -63,\\n          87, -73,  74,  99, -57,  44,   9, -66,  32, -72,  50, -46, -24,\\n          18, -55,  33,  23,  46,  43, -29,  -7,  39, -95,  32, -82,  83,\\n           4, -21,  38,  49, -35,  41,  -5,  86,  28, -95, -14, -63, -65,\\n         -97,  44, -40, -14,  31,  64, -85, -78, -38, -47,  77,  97, -24,\\n         -10,  82,  64,   7,  16,  18,  93, -65,  97, -28, -92,  24, -32,\\n         -40,  87, -29,  52,   1,  35,  36, -49, -25, -35,   8, -25, -70,\\n          72, -74, -70]]))",
    0.00555
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00292
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00162
  ]
}