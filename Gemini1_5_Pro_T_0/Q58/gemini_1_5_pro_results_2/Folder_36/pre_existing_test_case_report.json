{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   2,   17,  -84,  -95,   40,   46,   69,   19,   71,  -81,\\n           45,   31,  -54,  -19,   72,   90,   29,  -57,   18,   74,\\n           20,   48,   73,  -35,  -92,    6,   72,  -36,  -51,  -97,\\n           69,  -44,  -85,  -40,   36,   47,   82,  -76,  -94,   62,\\n           15,  -95,   -9,   91,   -7,  -25,  -32,   17,  -30,  -73,\\n          -26,   98,   54,   42,   25,  -49,   -9,  -18,   86,  -95,\\n          -24,  -21,   58,    2,  -72,   -8,  -68,  -82,  -27,   93,\\n          -10,  -77,  -35,  -55,  -64,   49,  -62,   99,   73,  -32,\\n           16,    3,  -43,  -59,  -78,  -39,   85,   27,  -16,   40,\\n           34,  -58,   -5,  -82,  100,   63,  -60,   23, -100,   33,\\n          -90,   32,   37,  -14,  -26,   87,  -88,   77,  -23,   29,\\n           27,  -10,  -27,  -35,  -25,   22,  -89,   99,  -33,   20,\\n          -72,    1,  -38,  -36,   92,  -75,  -52,   -7,  -64,  -35,\\n         -100]]))",
    0.00102
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00584
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00584
  ]
}