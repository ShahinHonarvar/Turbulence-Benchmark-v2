{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00057
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.0013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.0005
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  61,  -24,  -36,  -10,   71,   92,   64,   46,  -15,    9,\\n           21,   61,   68,   13,   41,   -7,  -69, -100,  -13,  -73,\\n          -15,   74,   31,  -88,   87,   73,  -20,   65,   -7,  -72,\\n           31,  -15,   42,   51,   83,  -24,   87,   82,   34,  -23,\\n          -91,   62,   34,   59,  -34,  -95,   63,  -33,   24,   50,\\n           65,  -45,   45,   94,    9,    6,   48,   13,  -55,   89,\\n           67,  -91,   92,   20,   65,  -11,  -96,    2,   30,   -5,\\n          -33,  -79,   90,   78,   52,   10,  -17,  -17,  -33,  -31,\\n          -48,   46,   88,   53,    9,  -63,  -98,   71,   80,   48,\\n          -80,  -97,  -24,  -31,  -47,  -72,   30,  -51,   -2,   71,\\n           79,  -35,   60,   47,   41,  -94,  -29,    7,  -44,   -8,\\n           38,  -99,   45,  -63,  -11,  -16,   86,  -15,  -24,   92,\\n           30,   23,   -1,   35,  -73,  -92,  -29,  -48,  -92,  -46,\\n          -76,  -46,   65,  -58,   12,  -43,   50,   71,  -90]]))",
    0.0008
  ]
}