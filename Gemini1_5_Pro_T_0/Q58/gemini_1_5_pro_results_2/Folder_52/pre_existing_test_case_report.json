{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0009
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.0005
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-82,  46,  81,  91,  84, -54,  21,  28, -75,  76,  93,  61,  56,\\n          41, -80,  22, -33, -56,  15,   5,  22, -11, -90,  23,  -5, -17,\\n         -75, -96, -47, -87,  69,  92, -23,  25, -15,  66,   3, -11,  -4,\\n         -59, -28,  20, -65,  84, -99,  71,  16,   9, -35, -66, -75,   6,\\n          98,  86,  51, -15,  86,  -9, -79,  99,  35,  61,  10, -74, -62,\\n         -35,   7,  74,  63,  82,  88,  29, -49,  81, -56,  96,  90,  22,\\n          24, -72,  71,  57, -96,   3, -44,  48, -48, -48, -45,  91, -68,\\n          48, -87, -28,   0, -90,  36,  92,  93, -20,  32,  85,  61,  20,\\n          42,  98, -16,  18,   3,  93,  13, -64,  46, -31,  12, -68,  94,\\n          24, -74,  59, -14, -48,  49,  19,  84, -47,  99,  59, -78,  25,\\n          -3, -96,  10,  79,  26, -87, -14,  91,  37, 100,  92, -29,  -2,\\n          45, -48,  30, -26]]))",
    0.00098
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00477
  ]
}