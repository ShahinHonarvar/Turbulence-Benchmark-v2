{
  "parameter(s)": [
    179
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_179_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  55, -100,   56,  -18,  -31,   42,   93,   12,    9,   -9,\\n          -86,  -34,   69,  -17,    1,   70,   98,  -62,  -39,  -95,\\n           81,  -82,   25,   98,  -87,   47,   65,  -66,  -39,  -82,\\n           66,   81,  -51,   35, -100,  -88,  -54,   55,  -83,   93,\\n          -77,   -1,  -37,  -94,  -25,   41,   29,    9,   28,  -95,\\n          -49,   98, -100,  -96,  -17,   44,   85,   -1,   39,   -5,\\n           -4,  -49,  -83,   49,  -26,   91,   99,  -21,  -11,  -48,\\n          -21,  -35,   58,   13,  -75,   26,  -50,  -99,   17,   23,\\n           33,   31,  -11,   91,   61,  -17,  -46,  -47,  -42,   56,\\n           18,  -41,    4,  -20,  -83,  -61,   35,   70,  -59,   68,\\n           84,   63,  -71,  -14,   89,  -70,  -58,  -81,   67,  -50,\\n           62,   38,   32,  -94, -100,  -21,  -30,  -95,   62,   26,\\n          -22,  -99,  -29,   42,  -40,   57,  -77,   29,  -59,   -7,\\n           42,  -40,  -80,  -71,  -13,  -16,   41,  -28,   56,  -63,\\n           18,   92,  -74,   68,    9,   20,   21,  -37,   95,   70,\\n           97,    9,  -43,   45,  -18,   59,   48,    3,  -23,  -84,\\n            0,  -65,  -50,    6,  -83,   40,  -38,   93,   85,  -42,\\n          -81,  -15,   46,  -31,  -89,   87,   -8,  -44,   61]]))",
    0.0025
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 359",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 359",
    0.00152
  ]
}