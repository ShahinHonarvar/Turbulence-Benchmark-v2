{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.01324
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0108
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 18, -38],\\n        [-85, -48],\\n        [ 18, -22],\\n        [ -1,  58],\\n        [ 54, -18],\\n        [-86,  51],\\n        [-33,  15],\\n        [-62, -39],\\n        [  0, -16],\\n        [-67,  32],\\n        [ 14,  47],\\n        [ 85, -47],\\n        [ 55,  37],\\n        [-31,  51],\\n        [-59, -17],\\n        [ 96,  22],\\n        [ 84,  50],\\n        [100,  91],\\n        [ 84,  81],\\n        [-15,  93],\\n        [-28, -68],\\n        [ -1, -55],\\n        [ 59, -50],\\n        [ 17, -69],\\n        [-90, -23],\\n        [ 67,   9],\\n        [ 47, -45],\\n        [-40,  36],\\n        [ 74,  19],\\n        [ 86, -77],\\n        [ 66, -38],\\n        [-28, -69],\\n        [-29,  81],\\n        [-16,   3],\\n        [-20,  31],\\n        [-61,  73],\\n        [ 91,  60],\\n        [-78,  58],\\n        [-74, -27],\\n        [-62, -66],\\n        [ 15, -40],\\n        [-83, -71],\\n        [ 88, -95],\\n        [-80, -87]]))",
    0.00623
  ]
}