{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00199
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-63, -19],\\n        [ 32, -23],\\n        [-35, -17],\\n        [-62, -58],\\n        [ 42, -40],\\n        [-50,  70],\\n        [ 54,   6],\\n        [-18,  85],\\n        [-29, -96],\\n        [  8,  42],\\n        [ 30, -11],\\n        [-61, -85],\\n        [ 55,  57],\\n        [ 98, -71],\\n        [ 88,   9],\\n        [-11, -37],\\n        [ 63, -72],\\n        [  9, -51],\\n        [-86,  33],\\n        [ 71,  85],\\n        [ 41,  96],\\n        [ 31, -67],\\n        [-57, -45],\\n        [ -3, -73],\\n        [-95,  81],\\n        [ 13, -19],\\n        [ 53,  39],\\n        [ 28,   4],\\n        [ 99, -96],\\n        [ 44, -90],\\n        [ 87,  27],\\n        [ 60,  77],\\n        [-52, -73],\\n        [ 61, -41],\\n        [ -2,  77],\\n        [  5,  61],\\n        [-48,  -8],\\n        [-92,  22],\\n        [ 92,  64],\\n        [-88, -19],\\n        [-55,  -4],\\n        [-54,  85]]))",
    0.00442
  ]
}