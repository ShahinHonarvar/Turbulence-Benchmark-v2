{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00041
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  53,   56],\\n        [ -10,   67],\\n        [ -42,    8],\\n        [  28,  -62],\\n        [  54,  -18],\\n        [  22,   67],\\n        [ -91,   49],\\n        [  63,  -12],\\n        [  26,   77],\\n        [  72,   98],\\n        [ -59,   41],\\n        [  -9,  -68],\\n        [ -22,  -33],\\n        [ -20,   15],\\n        [  89,  -32],\\n        [ -88,   30],\\n        [  66,   21],\\n        [  83,   -6],\\n        [   2,   71],\\n        [ -30,   13],\\n        [ -63,  -39],\\n        [  22,   16],\\n        [  18,   49],\\n        [ -28,   -8],\\n        [  11,   24],\\n        [ -37,  -20],\\n        [ -14,  -36],\\n        [   7,   44],\\n        [ -71,  -35],\\n        [  64,  -36],\\n        [  76,   62],\\n        [ -10,   94],\\n        [  71,   41],\\n        [  59,  -56],\\n        [  31,   36],\\n        [  39,   87],\\n        [-100,  -18],\\n        [ -52,   40],\\n        [  36,   43],\\n        [  75,  -70],\\n        [ -35,   41],\\n        [ -49,  -26],\\n        [ -57,  -79],\\n        [  90,   65],\\n        [ -38,   41],\\n        [ -92,   38],\\n        [ -31,  -32],\\n        [ -49,  -20]]))",
    0.00084
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00514
  ]
}