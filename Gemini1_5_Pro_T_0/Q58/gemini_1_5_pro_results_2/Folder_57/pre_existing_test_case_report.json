{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.01113
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-100,   95],\\n        [ -70,  -74],\\n        [  14,  -75],\\n        [ -76,   23],\\n        [ -64,  -81],\\n        [ -71,  -70],\\n        [ -24,   53],\\n        [ -75,  -22],\\n        [ -46,   -1],\\n        [ -80,    9],\\n        [ -11,   -3],\\n        [ -58,  -10],\\n        [ -48,   14],\\n        [  46,  -46],\\n        [  63,   38],\\n        [ -53,  -89],\\n        [  84,   40],\\n        [ -39,   80],\\n        [ -40,  -94],\\n        [ -95,   19],\\n        [  84,  -57],\\n        [  40,   50],\\n        [ -75,    2],\\n        [ -14,  -17],\\n        [ -48,   24],\\n        [ -77,  -56],\\n        [  50,  -15],\\n        [  58,  -33],\\n        [  67,   79],\\n        [  -6,   65],\\n        [  29,   94],\\n        [  95,   20],\\n        [ -47,   77],\\n        [ -93,  -86],\\n        [ -35,   38],\\n        [ -12,   47],\\n        [ -94,  -16],\\n        [-100,   -2],\\n        [  17,    5],\\n        [  57,  -83],\\n        [ -60,   26],\\n        [  84,   78],\\n        [  28,   41],\\n        [  61,  -79],\\n        [ -67,  -66],\\n        [  57,   76]]))",
    0.01191
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00403
  ]
}