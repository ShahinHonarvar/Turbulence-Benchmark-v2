{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00059
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -21, -99,  -2, -23, -76,  11,  -1, -45, -35, -97, -57, -55,\\n         -94,  75, -53, -72, -97,  70,  88, -82,  77,  21,  36,  46,  -5,\\n          32, -36,  -6, -66,  -3, -59,   7,  20, -74, -87,  79,  51, -77,\\n         -97, -78,  69,   0,  50, -47,  63,  66,  71, -51, -51, -32,  53,\\n          46,   8,  -9,  86,  90,  38,  87,  34,  99, -47, -61, -71, -48,\\n         -94, -84,  50, -38, -42, -18, -15, -43,  20,  91,  -5,   2,  68,\\n          12, 100,  46, -66,  90,  77,  29, -15, -35, -70,   5,  40, -23,\\n          35, -32, -89, -77,  48, -66, -68,  22, -18, -18,  14, -79,  18,\\n          -6, -64, -97,   2,  34,  50,  81, -84, -80,  -8,  91,  35, -72,\\n          61,  16, -60,  18,  56,  36,  12, -19, -41,  -9, -49,  47,  95,\\n         -58,  82, -98,  54, -33,  10, -50,  84,  66]]))",
    0.00091
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00637
  ]
}