{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00026
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  52,   93,  -35,   79,   85,  -90,  -66,   85,   84,   70,\\n          -32,   36,   -7,    9,   78,   39,  -33,   93,   96,   78,\\n           20,   -9,   68,   66,   -3,   71,  -57,   80,   27,   -6,\\n           22,   30,  -83,  -65,  -91,   63,    9,  -15,    7,  -66,\\n           34,   52,  -82,   28,  -95,   36,   11,  -94,   61,   63,\\n          -76,  -96,   37,  -88,  -26,   95,   75,  -10,  -25,  -81,\\n           50,   38,  -76,   79,   89,  -71,   22,   57,  -36,   14,\\n           75,   52,  -81,  -74,   43,   -7,   29,   61,  -50,   43,\\n          -27,  -70,   39,    8,    9,   89,   33,    4,   35,   21,\\n          -12,    3,  -21,  -70,  -28,   50,   96,  -93,   -3,  -57,\\n          -47,  -48,   77,  -57,  -62,  -72,  -63,  -93,  -62,   -9,\\n           35,  -51,  -85,  -66,  -16,  -64,  -87,   49,   96,  -48,\\n           97,   87,   94, -100,   52,   99,  -51,  -67,   53,   86,\\n          -34,  -57,  -75,   89,   44,   38,  -71,  -69,   20,   57,\\n           22,  -67,   68,  -85,   28,  -10,   31,   17,  -16,   46,\\n            4,   41,  -20,  -90,   91,  -31,   43,   99,  -84]]))",
    0.00108
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00563
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00053
  ]
}