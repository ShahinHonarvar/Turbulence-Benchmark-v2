{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00052
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.01235
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-55, -57,  88,  85, -43, -81, -57,   2, -87,  14,  -3, -90, -47,\\n          93,  30, -16, -16, 100, 100, -70,  15,  87, -69,  -3,  53, -59,\\n         -74,  49,  21,  21, -89,  50, -59, -42, -56, -39, -51, -41, -31,\\n          11, -11, -53, -73,  17,  53,   4, -40, -45, -96, -79,  93,  93,\\n           3,  47,  58, -37, -41,  79, -76,   6, -37,   7,  -1, -48,  -4,\\n          92,  26,   8, -28, -28,  59, -22, -57,   1, -53, -85,  85, -95,\\n         -71,  58, -51, -64, -59, -78, -66, -74, -79, -33,  27,  24, -13,\\n          98, -12, -20,  70,  49,  14,  -1,  79, -82, -99, -33,  53,  54,\\n          80, -21,  97,  68,  25,  83, -96, -26,  41,   3, -48,  37, -73,\\n          45,  82,   3, -97, -67,  93,   9, -65,  31,  -9, -57, -56,  94,\\n         100]]))",
    0.00087
  ]
}