{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.0001
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 40, -10],\\n        [ 23, -11],\\n        [-56,  81],\\n        [ 15,   3],\\n        [-18,  36],\\n        [ 98,  66],\\n        [-33,  -2],\\n        [ 76,  82],\\n        [ 40,  16],\\n        [-36,  64],\\n        [ 40,  -4],\\n        [ 29,  66],\\n        [ 61, -94],\\n        [-40,  79],\\n        [ 29,  61],\\n        [ 41, -27],\\n        [-39,  27],\\n        [-96, -10],\\n        [-22, -55],\\n        [-30,  64],\\n        [ 84, -80],\\n        [-75, -61],\\n        [-25, -32],\\n        [-90, -18],\\n        [ 32, -54],\\n        [-74, -80],\\n        [ 49, -15],\\n        [ 61,  65],\\n        [-53,  30],\\n        [-31, -44],\\n        [-70,  57],\\n        [ 47, -41],\\n        [-63, -60],\\n        [  9,  21],\\n        [ 23,  29],\\n        [ 95,  37],\\n        [  6, -16],\\n        [-23, -89],\\n        [-93,  53],\\n        [ 46, -63],\\n        [ 86, -42],\\n        [-27,  24]]))",
    0.00191
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00038
  ]
}