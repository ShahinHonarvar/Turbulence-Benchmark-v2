{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00653
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00038
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94, -63],\\n        [-36,  13],\\n        [-48,  21],\\n        [ 15,   7],\\n        [ 85, -35],\\n        [ 65,  61],\\n        [ 15, -50],\\n        [ -2,  -9],\\n        [ 46,  49],\\n        [-93,  61],\\n        [-17, -22],\\n        [-61,   8],\\n        [-23,  50],\\n        [-60, -67],\\n        [-15, -55],\\n        [-24, -39],\\n        [ 71, -58],\\n        [-46,  31],\\n        [ 78,  83],\\n        [ 96,  26],\\n        [ -1,  44],\\n        [ -4,  33],\\n        [-28,  86],\\n        [-49,  52],\\n        [-10,  96],\\n        [-15, -95],\\n        [ -4, -57],\\n        [-24,  25],\\n        [-68, -54],\\n        [ -8, -44],\\n        [ 52,  75],\\n        [ 69,  22],\\n        [-54,  15],\\n        [-13,  97],\\n        [-50,  69],\\n        [ 94,  44],\\n        [ 11,  79],\\n        [-78,  47],\\n        [-18,  28],\\n        [-73,  -1],\\n        [ 54, -54],\\n        [  9,   8],\\n        [100, -91],\\n        [-96, -68],\\n        [ 73,  39],\\n        [ 92,  55],\\n        [ 87,  47],\\n        [ 96,  -4]]))",
    0.00418
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00128
  ]
}