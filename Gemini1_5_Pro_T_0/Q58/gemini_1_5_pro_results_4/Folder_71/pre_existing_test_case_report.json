{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  4,   2],\\n        [ 42,   2],\\n        [-32,   7],\\n        [-27,  94],\\n        [ 62,  50],\\n        [-81,  -7],\\n        [ 43, -28],\\n        [  7,  73],\\n        [-84,   6],\\n        [100,  -3],\\n        [ 51,  20],\\n        [-28, -41],\\n        [ 95, -32],\\n        [-65, -77],\\n        [ 32, -93],\\n        [ 77, -44],\\n        [-68,  29],\\n        [ -9,  21],\\n        [ 41, -90],\\n        [ 72, -18],\\n        [-57, -37],\\n        [ 28,   1],\\n        [ -6, -75],\\n        [-66,  81],\\n        [ 54, -75],\\n        [ 40, -57],\\n        [ 76, -16],\\n        [  9, -38],\\n        [ 43,  38],\\n        [ 35, -77],\\n        [ -2,  37],\\n        [ 25, -84],\\n        [ 59,  -3],\\n        [-31,  63],\\n        [-71,  56],\\n        [-82,  22],\\n        [ -7, -91],\\n        [ 26,  24],\\n        [ 39,  26]]))",
    0.00599
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00061
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00086
  ]
}