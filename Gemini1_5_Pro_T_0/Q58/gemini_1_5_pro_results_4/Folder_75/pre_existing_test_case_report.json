{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 34,  -4],\\n        [-47,  91],\\n        [ 89, -23],\\n        [ 72,   6],\\n        [ 74,  16],\\n        [ 31,  -4],\\n        [-34,  50],\\n        [ -4, -85],\\n        [ 70,  19],\\n        [ 10,  -6],\\n        [  0, -97],\\n        [-65, -65],\\n        [-42,  74],\\n        [-78, -64],\\n        [ 49, -12],\\n        [ -5, -45],\\n        [ 67,  65],\\n        [-52, 100],\\n        [-69,  57],\\n        [ 71, -20],\\n        [100, -84],\\n        [  3,  62],\\n        [-81, 100],\\n        [-66, -32],\\n        [  1,  93],\\n        [-60,  80],\\n        [ 66, -72],\\n        [ 82,  -2],\\n        [-49,  82],\\n        [ 14,  97],\\n        [-85, -25],\\n        [-14, -65],\\n        [-77,  83],\\n        [-85, -89],\\n        [ 45, -47],\\n        [ 24,  41],\\n        [  8,  -9],\\n        [ 96, -28],\\n        [-49,  85],\\n        [ 75, -92]]))",
    0.00409
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00204
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00611
  ]
}