{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests32_14_2.py::test_string_of_length_one", "location": ["tests32_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001647559693083167, "start": 1730690897.1033838, "stop": 1730690897.1035495, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001873769797384739, "start": 1730690897.1035037, "stop": 1730690897.1036916, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_2.py::test_compare_length_of_strings", "location": ["tests32_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020940706599503756, "start": 1730690897.103579, "stop": 1730690897.1037893, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_2.py::test_compare_length_of_strings", "location": ["tests32_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_0/Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('dItOhR1HXqugxF8Jjk5a ')\n +  and   21 = len('dItOhR1HXqugxF8Jjk5a ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('dItOhR1HXqugxF8Jjk5a ')", "E        +  and   21 = len('dItOhR1HXqugxF8Jjk5a ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, 20))", "        s = s + ' '", "        returned_string = insert_after_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('dItOhR1HXqugxF8Jjk5a ')", "E        +  and   21 = len('dItOhR1HXqugxF8Jjk5a ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_0/Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('dItOhR1HXqugxF8Jjk5a ')\n +  and   21 = len('dItOhR1HXqugxF8Jjk5a ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032095296774059534, "start": 1730690897.104113, "stop": 1730690897.1044347, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_2.py::test_compare_length_of_strings", "location": ["tests32_14_2.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012215599417686462, "start": 1730690897.1168163, "stop": 1730690897.1169395, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw1>"}
{"nodeid": "tests32_14_2.py::test_string_of_length_one", "location": ["tests32_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_0/Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 8, "message": "AssertionError: assert ' ' == '  '\n  Strings contain only whitespace, escaping them using repr()\n  - '  '\n  ?   -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + ' '", "E       AssertionError: assert ' ' == '  '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '  '", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_after_character(s) == ' ' + ' '", "E       AssertionError: assert ' ' == '  '", "E         Strings contain only whitespace, escaping them using repr()", "E         - '  '", "E         ?   -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_0/Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 8, "message": "AssertionError: assert ' ' == '  '\n  Strings contain only whitespace, escaping them using repr()\n  - '  '\n  ?   -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003423179732635617, "start": 1730690897.1037889, "stop": 1730690897.1041317, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_2.py::test_string_of_length_one", "location": ["tests32_14_2.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00021630397532135248, "start": 1730690897.1247218, "stop": 1730690897.124939, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_0/Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_after_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_after_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_after_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Gemma_2_27B_T_0/Q32/gemma_2_27_results_2/Folder_14/tests32_14_2.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')\n +    whereinsert_after_charactern +  and   1000 = len('                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003769929753616452, "start": 1730690897.1040184, "stop": 1730690897.1043963, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw2>"}
{"nodeid": "tests32_14_2.py::test_length_of_large_string_of_only_specified_character", "location": ["tests32_14_2.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests32_14_2.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017643393948674202, "start": 1730690897.1261606, "stop": 1730690897.1263378, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "a861eb3f412242b6a75e3d79a4f492ce", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
