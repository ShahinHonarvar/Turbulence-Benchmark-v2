{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 60,  28],\\n        [ 13, -42],\\n        [-82,  73],\\n        [-87, -36],\\n        [ -8,  90],\\n        [ 39,  -6],\\n        [ 79,  67],\\n        [-46, -94],\\n        [-58,  11],\\n        [ 14, -27],\\n        [-58,  42],\\n        [ 20,  11],\\n        [-72,  20],\\n        [-86, -88],\\n        [ 24,  45],\\n        [ 49, -70],\\n        [-91, -52],\\n        [ 69, -31],\\n        [-20, -67],\\n        [-24,  66],\\n        [-55,  47],\\n        [-68,  49],\\n        [ 26, -33],\\n        [-76, -46],\\n        [  3,  77],\\n        [ 41, -18],\\n        [ 95,  89],\\n        [ 46,  50],\\n        [ 73,   6],\\n        [ 12,  17],\\n        [ 45,  12],\\n        [  2,  79],\\n        [ 42,  -1],\\n        [-70, -38],\\n        [-51,   4],\\n        [ 37,  25],\\n        [ 71,  94],\\n        [ 87,  35],\\n        [ 39, -91],\\n        [ 91, -29],\\n        [ 55, -31],\\n        [-42,  -4],\\n        [ -8,  20],\\n        [-37,  94],\\n        [ 73,  70],\\n        [-34, -64],\\n        [ 83, -10],\\n        [-70,  17]]))",
    0.00102
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00033
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00077
  ]
}