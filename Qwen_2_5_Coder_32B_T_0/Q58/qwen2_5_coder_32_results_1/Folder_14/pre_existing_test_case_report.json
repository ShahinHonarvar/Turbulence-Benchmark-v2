{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00036
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 42,  26],\\n        [ 90,  76],\\n        [ 49,  94],\\n        [ 72, -56],\\n        [-93, -48],\\n        [ 30, -22],\\n        [ 26, -44],\\n        [ 43,  88],\\n        [-14,  94],\\n        [ 57, -33],\\n        [-16,  67],\\n        [ 38,  31],\\n        [ 50,  43],\\n        [ 60,   9],\\n        [ 41, -63],\\n        [-34,  42],\\n        [-85,  90],\\n        [ 85,  76],\\n        [ 32,  43],\\n        [-68, -34],\\n        [-15,  51],\\n        [ -6, -51],\\n        [-56,  65],\\n        [ 84,  94],\\n        [ 99,  93],\\n        [ -3,  25],\\n        [ 80,   4],\\n        [ 81, -13],\\n        [ 96, -39],\\n        [ 31, -17],\\n        [ 79,  57],\\n        [-61,  80],\\n        [ 63,  40],\\n        [-42,  75],\\n        [  3,  17],\\n        [-49,  74],\\n        [ 21, -41],\\n        [  8,  -6],\\n        [ 44, -74],\\n        [-99,  56],\\n        [-56,  99],\\n        [ -4, -40]]))",
    0.00065
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00107
  ]
}