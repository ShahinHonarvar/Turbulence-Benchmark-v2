{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    7e-05
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -66,    1,  -40,   26,   91,   96,   87,  -50,   41,  -24,\\n           90,  -21,  -87,  -88,   -2,  -13,   67,  -37,   -1,   38,\\n          -90,  -40,  -32,   47,   12,  -51,  -75,  -10,   71,   -3,\\n            9,  -80,   83,   41,   60,   63,   23,   22,   39,   10,\\n           23,   24,   49,   99,   77,   88,  -21,  -21,  -89,  -49,\\n          -83,  -35,   58,   68,  -42,   86,   -5,  -16,   87,   -7,\\n           14,  -67,  -69,   -8,  -18,   89,   45,  -35,  -20,   95,\\n           83, -100,  -17,  -61,   40,  -74,   11,  -44,   11,   45,\\n           60,   26,   43,  -42,   25,   12,   21,   -4,   15,   52,\\n          -61,   73,    7,   28,   50,  -97,   56,   80,  -80,   48,\\n          -30,  -87,   50,  -70,  -11,  -50,   -4,   73,  -24,   82,\\n           56,   42,  -17,   34,   96,  -42,  -68,   21,  -36,  -72,\\n           43,   81,   58,   85,   63,  -33,  -78,  -49,  -78,   20,\\n          -61,   19,  -70,   22,   23,   85,   59,   37,  -90,  -63,\\n          -14,  -30,    8,   -9,  -75,  -56,   63,  -13,   83,  -97,\\n          -91,   94,   18,  -50,  -39,  -51,   26,    5,   67]]))",
    0.00122
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.01948
  ]
}