{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 76,  35,  24,  13,  16,  90,  44,  90,  93,  96, -49,  42,  80,\\n           5, -32,  -4,  -7, -12, -92,  66,   7,  65, -53,  27, -84, -44,\\n         -96,  51, -40, -71,  16,  71,  96,  72, -86, -70, -73,  93, -85,\\n         -60,  37,  14, -32,  -9, -48,   3,  81,  68,  80,  62, -22, -13,\\n          67,  37,  -6,  79,  94, -11,  23,  78,  20,  66, -40, -38, -53,\\n         -70,  66,  27, -98,  19,  36,  27, -74,  11,  41,  20, -71,  71,\\n         -67, -96,   4,  66, -18,   0, -67,  98,  33,  74,  15, -22,  -2,\\n         -92, -74, -53,  64, -72,  89,   8,  85,  42,  99,   5,   6,   2,\\n         -45,  12, -81,  26,  83, 100,  53,   0, -48, -78,  53, -91, -82,\\n         -58,  -7,  50, -60, -51,  85,  51,  36, -37, -68, -81,   4,  93,\\n         -36,  70,  68,  55,  33,   7, -10,  36, -84]]))",
    0.00195
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00124
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.0009
  ]
}