{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00608
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 37, -14],\\n        [-25,  38],\\n        [-34,  -4],\\n        [ 46, -87],\\n        [ 18, -40],\\n        [-81, -12],\\n        [-35,  42],\\n        [ 48,  66],\\n        [  0, -82],\\n        [ 30, -95],\\n        [-99, -13],\\n        [-26, -37],\\n        [ 84,  13],\\n        [-62,  37],\\n        [-93,  32],\\n        [-33,  43],\\n        [-54, -49],\\n        [-23, -44],\\n        [-74, -99],\\n        [-34, -65],\\n        [ 87,  48],\\n        [  4,  39],\\n        [  3, -56],\\n        [-43,  59],\\n        [-11, -91],\\n        [-94,   0],\\n        [ 20, -96],\\n        [100, -48],\\n        [ 32,  20],\\n        [ 56,  89],\\n        [ 41, -92],\\n        [-50,  49],\\n        [-42, -22],\\n        [ 35,  39],\\n        [-72,  51],\\n        [ 52, -68],\\n        [ 81,  42],\\n        [-59,  36],\\n        [-12, -34],\\n        [-89, -48],\\n        [-86,  49],\\n        [-91,  74],\\n        [ 94,  29],\\n        [ 58,  56]]))",
    0.00097
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.01271
  ]
}