{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16, -40],\\n        [ 27, -56],\\n        [-77, -83],\\n        [ 21, -45],\\n        [ 40, -78],\\n        [-51, -85],\\n        [-24,   0],\\n        [ 78,  -6],\\n        [ 11, -72],\\n        [ 82,  38],\\n        [-83, -84],\\n        [-23, -71],\\n        [ 96, -40],\\n        [-94,  13],\\n        [ -5,  13],\\n        [ 97,  28],\\n        [-77,  57],\\n        [ 57, -17],\\n        [ 51, -79],\\n        [-96,  18],\\n        [-48, -28],\\n        [ 79,  84],\\n        [ 43,  57],\\n        [ 21, -56],\\n        [ 80,  67],\\n        [ -6, -10],\\n        [ 30,  63],\\n        [ -7,  69],\\n        [-25,   3],\\n        [-37, -31],\\n        [ 53,   6],\\n        [ 63,  63],\\n        [-33, -33]]))",
    0.00119
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.0003
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 133",
    0.00061
  ]
}