{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00033
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  48,  -93,   82,  -24,  -44,  -79,  -48,  -29,  -91,  -53,\\n           53,  -39,   83,   18,   11,   91,    1,  -15,  -48,   78,\\n           81,   18,   59,   96,  -71,  -48,  -22,  -62,   37,   50,\\n          -82,  -61,   59,   86,  -93,   36,  -21,  -77,   23,  -69,\\n          -37,  -18,  -44,   37,   98,   -3,   26,  -64,  -14,  -65,\\n           11,   84,   28,   91,  -16,   78,   35,   78,  -78,  -96,\\n           21,  -23,  -99,  -26,   89,   57,  -90,   66,   38,  -83,\\n           27,  -90,  -68,    5,  -35,    5,   89,  -60,  -12,   64,\\n          -28,   49,    3,  -65,  -61,  -67,  -62,   72,   59,   86,\\n           21,   39,   82,  -51,   91,  -47,   85,   26,  -89,  -66,\\n            8,  -23,   37,   39,   14,  -41,  -26,   25,  -62,  -88,\\n          -77,   20,   93,  -49,    0,  -41,   58,  -13, -100,   81,\\n          -63,    9,   69,   63,  -55,    7,  -16,  -17,   41,   20,\\n          -48,   22,   70,   24,   18,   64,   13,   39,   -7,   91,\\n           12,  -74,   34,  -25,  -78,   -5,   15]]))",
    0.00071
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00092
  ]
}