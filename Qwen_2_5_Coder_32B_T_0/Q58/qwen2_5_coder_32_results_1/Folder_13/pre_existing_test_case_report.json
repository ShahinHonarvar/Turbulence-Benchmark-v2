{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00033
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -93,  -81,  -47,  -62,  -23,   25,   42,  -50,  -77,   88,\\n          -17,  -85,   65,   44,  -46,   38,  -80,  -58,   31,   36,\\n           68,  -98,   45,    2,  -49,   95,   13,   17,  -28,   21,\\n          -80,    4,   65,   -2,   99,   64,    9,   54,   -3,  -76,\\n           -5,  -94,  -75,   31,   11,   35,   31,   27,   80,  -21,\\n           72,   19,   97,    5,   98,  -12,  -21,  -39,  -45,  -96,\\n            9,   54,   79,   24,  -66,  -70,  -15,  -67,   -8,    2,\\n          -95,  -67,  -19,   35,  -13,  -89,  -78,  -90,   51,   55,\\n           65,   25,  -32,   62,  -32,   71,   -4,   82,   74,  -96,\\n           91,   58,  -69,   18,  -66,   32,  -27,   90,   50,   56,\\n           49,   36,  -78,   94,   30,   94,   98,  -33,  -67,   22,\\n           34,   35,   -2,    3,  -17,  -17,  -17,  -98,  -76,   25,\\n          -35,  -94,   43,   95,   27,  -31,   53,  -76,    1,   75,\\n           64,   73,  -75,   98,   89,   23,  -62,   61,  -23,   35,\\n          -15,   50,  -67,  -91,   30,   85,   13,   70,   21,    2,\\n            4,   52,   77,  -79,   34,  -38,  -57, -100,  -21,   77,\\n           51,   88,   37,   41,  -46,  -38,   20,   41,  -64,   81,\\n          -80,  -82,   39,   28,  -28]]))",
    0.00073
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00107
  ]
}