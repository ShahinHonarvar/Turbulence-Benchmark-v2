{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00031
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,   63],\\n        [  87,   10],\\n        [ -97,  -55],\\n        [  11,  -42],\\n        [ -76,  -12],\\n        [  57,   84],\\n        [  42,    3],\\n        [  95,  -27],\\n        [  40,  -63],\\n        [   3,   56],\\n        [ -12,   96],\\n        [   4,   96],\\n        [  77,  -79],\\n        [  51,  -54],\\n        [ -65,   79],\\n        [ -56,  -18],\\n        [  65,  -87],\\n        [ 100,   61],\\n        [ -95,  -11],\\n        [ -83,  -83],\\n        [  92,   58],\\n        [  24,  -91],\\n        [ -67,  -32],\\n        [  51,  -52],\\n        [ -45,   12],\\n        [ -60,  -22],\\n        [ -23,   57],\\n        [  62,  -85],\\n        [  48,  -45],\\n        [  12, -100],\\n        [ -35,   92],\\n        [ -96,  -43],\\n        [  90,  -52],\\n        [ -22,  -13],\\n        [  -1,   -1],\\n        [ -72,  -78],\\n        [  65,   59],\\n        [ -59,   51],\\n        [  62,  -10],\\n        [  64,  -23],\\n        [  59,  -44],\\n        [ -18,   26],\\n        [  -6,  -96],\\n        [  97,   49],\\n        [  44,   32],\\n        [  61,   56],\\n        [ -36,   47]]))",
    0.00113
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00075
  ]
}