{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00034
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 77,  78],\\n        [-26,  -2],\\n        [ -3,   7],\\n        [ 77, -68],\\n        [ 43,  53],\\n        [ 28, -96],\\n        [-57, -41],\\n        [  8, -32],\\n        [-64, -15],\\n        [ 69, -41],\\n        [-57,  56],\\n        [  2,  83],\\n        [ 24, -35],\\n        [ 78,  62],\\n        [-43,  44],\\n        [-41, -90],\\n        [-76, -45],\\n        [ 12,  -7],\\n        [-38,  41],\\n        [ 81,  54],\\n        [-93, -98],\\n        [ 56, -75],\\n        [ 20, -70],\\n        [ 53,  15],\\n        [ 50, -91],\\n        [-42,  68],\\n        [-30, -32],\\n        [ 56,  26],\\n        [-22,  14],\\n        [ 92,  76],\\n        [ 29,  59],\\n        [ 11, -27],\\n        [-80, -29],\\n        [ 88, -42],\\n        [-29,  76],\\n        [ 97,  20],\\n        [-49,  36],\\n        [ 32, -70],\\n        [  8,  78],\\n        [ 54, -70]]))",
    0.00066
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00069
  ]
}