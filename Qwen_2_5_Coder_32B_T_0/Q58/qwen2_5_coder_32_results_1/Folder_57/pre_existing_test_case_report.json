{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 62, 100],\\n        [ -7, -52],\\n        [ -3,  89],\\n        [ 82, -56],\\n        [-88, -63],\\n        [ 38,  19],\\n        [ 65,  69],\\n        [-53, -87],\\n        [ 53, -10],\\n        [-73,  78],\\n        [ 10, -26],\\n        [ 90,  41],\\n        [ 73,  15],\\n        [ 15,  49],\\n        [ 70,  98],\\n        [ 92,  77],\\n        [-79, -62],\\n        [-81,  93],\\n        [ -4, -38],\\n        [ 76,  -1],\\n        [-52,  33],\\n        [-77, -15],\\n        [  7, -38],\\n        [-61, -43],\\n        [-85, -64],\\n        [ 20, -26],\\n        [-36,  38],\\n        [ 27, -28],\\n        [-95, -65],\\n        [ 10, -39],\\n        [  5, -78],\\n        [-87, -91],\\n        [ 71,  -5],\\n        [-51, -92],\\n        [ 73,  19],\\n        [  2, -29],\\n        [ 56,  45],\\n        [ 59, -73],\\n        [ 72, -58],\\n        [ 72,  55],\\n        [ 66,  86],\\n        [ 14, 100],\\n        [  2, -64],\\n        [-48,  72],\\n        [ 78,  72],\\n        [-46, -86]]))",
    0.00069
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00043
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.0009
  ]
}