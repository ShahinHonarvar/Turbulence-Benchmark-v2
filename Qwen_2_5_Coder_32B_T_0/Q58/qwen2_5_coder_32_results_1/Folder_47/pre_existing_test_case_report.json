{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00078
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -71,   50],\\n        [ -53, -100],\\n        [ -10,  -14],\\n        [  77,  -22],\\n        [ -76,  -47],\\n        [  -5,   24],\\n        [   6,   51],\\n        [  13,    2],\\n        [ -65,   16],\\n        [ -93,   16],\\n        [ -79,   19],\\n        [ -25,   56],\\n        [ -51,  -27],\\n        [  92,   70],\\n        [  17,   41],\\n        [ -99,  -77],\\n        [ -78,  -63],\\n        [  30,  -62],\\n        [  55,    9],\\n        [  44,  -98],\\n        [  89,   46],\\n        [ -68,  -60],\\n        [ -30,   37],\\n        [  66,  -68],\\n        [  51,   50],\\n        [ -64,  -58],\\n        [ -86,  -37],\\n        [ -54,  -77],\\n        [  69,  -83],\\n        [ -57,  -65],\\n        [ -19,  -73],\\n        [  78,    9],\\n        [ -39,    8],\\n        [ -63,   96],\\n        [  42,  -56],\\n        [ -12,  -28],\\n        [ -63,   54],\\n        [   1,  -47],\\n        [  26,  -57],\\n        [ -85,  -29],\\n        [  36,   96],\\n        [  93,  -95],\\n        [ -88,  -78],\\n        [  10,   19],\\n        [  67,   21]]))",
    0.00069
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00424
  ]
}