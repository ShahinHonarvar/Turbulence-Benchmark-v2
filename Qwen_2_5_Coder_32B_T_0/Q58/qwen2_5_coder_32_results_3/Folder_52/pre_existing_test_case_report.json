{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00035
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00111
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  48,  -21,  -25,  -40,   85,  -41,   14,  -23,   78,   -8,\\n           -2,   83,  -24,  -94,   42,  -84,   86,  -20,  -92,  -55,\\n          -97,   62,   17,   40,   92,    9,   86,  -12,   40,    7,\\n           -2,  -44,  -55,   61,  -82,  -16,   -5,  -94,    3,   52,\\n          -12,  -26,   36,  -62,  -64,   76,  -30,   15,  -73,  -43,\\n           24,   86,  -12,  -42,   53,  -14,   23,   19,   27,  -43,\\n           14,   14,   47,  -44,  -33,  -67,  -61,  -25,   80,  -16,\\n          -34,   43,  -68,   21,   55,   31,  -35,  -10,   62,  -38,\\n           30,  -57,  -69,   85,   91,   70,  -53,   49,  -24,   71,\\n           56,   87,  100,  -80,  100,   18,  -94,   65,   46,  -10,\\n           72,   76,  -73,   -9,   63,   11,  -94,  -36,   93,  -20,\\n           23,   99,  -41,  -40,   82,  -17,  -80,  -33,   -3,  -42,\\n           56,   42,  -13, -100,  -89,  -48,  -85,  -16,   18,  -74,\\n           42,   29,  -38,  -81,    7,   73,   75,   30,   43,  -18,\\n          -91,   58,   50,   79,  -13,    7,   47]]))",
    0.00084
  ]
}