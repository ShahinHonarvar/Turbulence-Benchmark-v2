{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00073
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-49, -46],\\n        [ 28,  17],\\n        [-33,  64],\\n        [ 17, -97],\\n        [ -5,  10],\\n        [ 64, -53],\\n        [-86,   6],\\n        [-93,  48],\\n        [  3,  81],\\n        [ 87,  57],\\n        [ 99, -49],\\n        [-33, -77],\\n        [-15, -24],\\n        [ 58, -34],\\n        [ 31,  38],\\n        [ 33, -47],\\n        [ 64,   7],\\n        [-23, -67],\\n        [-99,  65],\\n        [ 30,  59],\\n        [-28,  47],\\n        [-78,   9],\\n        [ 20, -20],\\n        [ 53, -15],\\n        [-50,  71],\\n        [-51, -66],\\n        [ 23,  76],\\n        [ 65, -76],\\n        [ 55,  99],\\n        [ 79,  27],\\n        [ 65,  77],\\n        [ 20, -56],\\n        [-20, -29],\\n        [ 51,  25],\\n        [-87,  87],\\n        [ 20, -66],\\n        [-96,  97],\\n        [ 33, -46],\\n        [-22, -90],\\n        [ 36, -15],\\n        [-23, -72],\\n        [-33, -15],\\n        [ 25, -25],\\n        [ 76,  43],\\n        [-27,  77]]))",
    0.00065
  ]
}