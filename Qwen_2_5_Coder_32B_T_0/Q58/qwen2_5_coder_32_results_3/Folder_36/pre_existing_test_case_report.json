{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00035
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,    7,   96,   69,  -40,  -30, -100,   64,   18,    8,\\n          -12,  -12,  -60,   73,   96,  -14,  -92,   11,  -21,  -67,\\n          -67,    2,   19,   83,   61,   23,  -63,   44,  -94,  -46,\\n           28,  -37,   58,    3,  -33,  -32,  -13,  -51,   55,   24,\\n          -70,  -92,   38,   29,  -41,   85,  -45,  -67,   41,  100,\\n          -29,   50,  -41,  -94,   20,   46,   16,  -51,   99,  -68,\\n          -54,  -75,   74,  -87,   55,  -33,   37,   -4,   53,   62,\\n           -7,   38,   80,   85,   18,   90,  -23,  -18,  -91,   60,\\n           50,  -17,   65,  -41,    2,   20,  -49,   -6,    0,   77,\\n           11,  -97,  -24,   46,   31,   -6,  -21,  -10,  -28,  -95,\\n          -33,   73,  -14,  -35,   34,  -14,   -1,  -57,  -15,  -75,\\n           43,  -55,  -81,   12,   -4,   64,   -3,    6,  -20,   87,\\n            8,    9,  -99,   64,   10,  -70,  -85, -100,  -31,   65,\\n           92]]))",
    0.00303
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00088
  ]
}