{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 21,  55],\\n        [ 12, -21],\\n        [-20, -93],\\n        [ 11,  86],\\n        [-68, -71],\\n        [-61,  -3],\\n        [-83,  74],\\n        [  1,  95],\\n        [ 27,  76],\\n        [ 19, -75],\\n        [-21, -59],\\n        [ -3,  61],\\n        [-46,  11],\\n        [-41, -25],\\n        [-22, -13],\\n        [-32,   4],\\n        [ 50, -43],\\n        [-36, -96],\\n        [-68,  98],\\n        [-79, -97],\\n        [-74,  15],\\n        [-54,  97],\\n        [-91,  -8],\\n        [ 46, -73],\\n        [ 41,  84],\\n        [ 13, -78],\\n        [  5,   8],\\n        [-96,  14],\\n        [-50, -78],\\n        [-68,  53],\\n        [ -3,  70],\\n        [-79,  80],\\n        [ -3,  57],\\n        [ 89, -58],\\n        [ 88, -42],\\n        [-99, -43],\\n        [ 96,  12],\\n        [-14,  83],\\n        [ 42, -66],\\n        [-42,  -3],\\n        [-94,  78],\\n        [-44, -90],\\n        [ 81,  29],\\n        [-24,   5],\\n        [-62, -89],\\n        [  6, -88],\\n        [ 45,  87],\\n        [  0,  63]]))",
    0.00146
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00056
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00107
  ]
}