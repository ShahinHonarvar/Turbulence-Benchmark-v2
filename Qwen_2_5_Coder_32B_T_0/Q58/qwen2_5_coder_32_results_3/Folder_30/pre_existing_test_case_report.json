{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 18, -57],\\n        [ -1,  18],\\n        [-12,  44],\\n        [-77,  68],\\n        [ 54, -84],\\n        [ 86,  54],\\n        [ 15,  63],\\n        [ -2, -31],\\n        [  1, -81],\\n        [-70, -58],\\n        [-74,  57],\\n        [-97,  90],\\n        [ -3, -19],\\n        [-36,  98],\\n        [-78,  10],\\n        [-73,  83],\\n        [ 77,  98],\\n        [ 27,  92],\\n        [ 16, -29],\\n        [-46,  88],\\n        [-12,  50],\\n        [ 17, -27],\\n        [  7,  69],\\n        [-40,  10],\\n        [-25, -95],\\n        [-24,  82],\\n        [-26,  97],\\n        [  2, -55],\\n        [ 31,  85],\\n        [ 69,  93],\\n        [ 47,  57],\\n        [-86, -30],\\n        [-59, -72],\\n        [ -3,  97],\\n        [-96,  91],\\n        [ 12, -39],\\n        [-82,  44],\\n        [ 64, -11],\\n        [-91,  55],\\n        [ 72, -95],\\n        [ 59,  12],\\n        [ 70,  37],\\n        [-98,  23],\\n        [-32, -61],\\n        [ 63,  58],\\n        [ 70,  43],\\n        [-65,  -4]]))",
    0.0017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00145
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00088
  ]
}