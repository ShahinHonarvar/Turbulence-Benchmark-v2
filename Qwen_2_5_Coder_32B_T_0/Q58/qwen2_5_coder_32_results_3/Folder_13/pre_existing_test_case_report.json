{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  49,  -81,    2,   21,   94,  -66,  -79,   85,   10,  -25,\\n           44,  -92,   92,  -61, -100,   85,   25,  -71,  -98,   45,\\n          -84,   74,  -50,  -69,   57,   42,  100,   78,   30,   92,\\n          -95,  -21,   88,   30,   71,  -90,   66,   39,    8,   99,\\n           60,   90,    3,   14,   92,   35,  -13,  -63,  -78,  -10,\\n          -43,   -3,    7,   34,  -20,    8,  -81,  -63,  -76,   29,\\n           -4,   57,  -31,  -49,   70,  -85,   90,   26,  -49,    8,\\n          -21,    0,    5,   36,   65,   16,    4,   -8,   97,   50,\\n            3,  -88,   57,   -1,  -71,  -32,   35,   97,   35,  -33,\\n          -93,   49,   -8,   91,  -66,  -93,  -63,   -3,   27,   76,\\n           26,   15,   -9,   14,    4,  -49,  -26,  -35,   54,   42,\\n           13,   16,   28,  -89,   19,  -22,   -4,  -82,  -49,    0,\\n           38,    8,  -28,   87,  -76,    6,    1,  -27,   82,  -91,\\n          -53,  -63,  -36,  -16,    2,  -45,    8,  -93,   -4,   97,\\n          -18,  -36,    9,  -76,   62,   31,   75,   23,  -74,   95,\\n           14,  -26,   45,   11,  -27,   31,   50,  -67,  -24,  100,\\n           61,  -32,   46,  -88,   25,  -38,   32,   74,  -62,   99,\\n          -54,  -63,  -47,   53,  -66]]))",
    0.00068
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00037
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00113
  ]
}