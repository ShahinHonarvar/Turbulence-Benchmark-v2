{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00037
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00147
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 12,  86, -43,  21, -15,  16,  -2,  22,  53,  37,  80,  37, -77,\\n         -51,  34, -24,   4,  61,  63, -70,  18, -99, -40, -32, -20, -13,\\n         -89, -78,  45,  67,  -5,  17,  79, -93,  77, -91, -10, -87, -89,\\n          19,  30,  12, -68,   3,  39, -22,  14,  23, -48,  19, -49, -47,\\n         -28,  23,  92,  89, -87,  10, -16,   9,  66, -42,  37,  83, -48,\\n         -33,  28,   4,  21,  50, -95,   1, -66,  53,  -3, -94, -46, -39,\\n         -15,  80, -27, -40,  50,  72,  64,  27, -59,  82, -65, -82,  -9,\\n          28, -50,  80,  96, -65,  11,  -2, -59, -77,  53, -47,  60, -48,\\n         -65, -58,  71, -93, -85, -99,  85,  32, -25, -36,  75, -23,  21,\\n           0,  59, -82,  77,  85, -76, -11, -84, -67,  -4, -98, -27,  87,\\n         -79, -65,  20,  -3,  37, -55,  47,  95,  15]]))",
    0.00067
  ]
}