{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -87,  -90],\\n        [ -23,   19],\\n        [  50,  -56],\\n        [ -58,  -50],\\n        [ -25,   28],\\n        [  37,   60],\\n        [  27,  -38],\\n        [ -57,   36],\\n        [  39,  -57],\\n        [   2,  -10],\\n        [  96,  -46],\\n        [ -59,   67],\\n        [ -33,   52],\\n        [ -37,  -54],\\n        [  14,  -99],\\n        [ -89,    5],\\n        [ -50,  -64],\\n        [  93,   10],\\n        [ -59,  -51],\\n        [ -18,    1],\\n        [ -33,  -60],\\n        [ -20,  -63],\\n        [  95,   75],\\n        [ -63,   76],\\n        [ -45,   41],\\n        [  87,  -93],\\n        [  39,    2],\\n        [ -46,   84],\\n        [ -73,  -36],\\n        [ -13,   78],\\n        [  72,   49],\\n        [ -68,  -46],\\n        [   0,  -54],\\n        [   0,  -77],\\n        [  90,  -66],\\n        [ -87,   68],\\n        [ -36,   63],\\n        [ -96,  -39],\\n        [ -56, -100],\\n        [  72,  -20]]))",
    0.00065
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00079
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00208
  ]
}