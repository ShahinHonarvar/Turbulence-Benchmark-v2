{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.0012
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  51,   64],\\n        [ -40,   69],\\n        [ -99,  -42],\\n        [ -92,  -43],\\n        [ -22,   25],\\n        [ -59,    5],\\n        [ -31,  -56],\\n        [  97,   40],\\n        [-100,   72],\\n        [  56,  -91],\\n        [  28,    1],\\n        [ -12,  -77],\\n        [  37,   84],\\n        [  46,  -74],\\n        [ -57,   17],\\n        [ -45,  -64],\\n        [ -77,   32],\\n        [  -6,   15],\\n        [  17,    9],\\n        [  31,  -70],\\n        [  36,   90],\\n        [ -91,   -6],\\n        [  48,   -1],\\n        [  11,  -14],\\n        [ -54,   -6],\\n        [ -49,   16],\\n        [  64,   78],\\n        [  86,   46],\\n        [  96,   48],\\n        [ -78,   -4],\\n        [ -15,   -8],\\n        [  44,  -49],\\n        [ -79,  -88],\\n        [ -30,   78],\\n        [  -9,   33],\\n        [ -34,  -71],\\n        [ -48,  -77],\\n        [ -35,  -54],\\n        [  46,   99],\\n        [  54,  -76],\\n        [   7,  -87],\\n        [  26,   51],\\n        [ -52,  -24],\\n        [  82,   76],\\n        [ -40,   19],\\n        [  40,   79]]))",
    0.0007
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00079
  ]
}