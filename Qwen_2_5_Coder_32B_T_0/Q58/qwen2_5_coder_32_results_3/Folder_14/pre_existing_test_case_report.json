{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00034
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 87, -48],\\n        [100,  81],\\n        [-90, -24],\\n        [-10, -96],\\n        [-73, -40],\\n        [ 51,  45],\\n        [ 33, -76],\\n        [ 56, -59],\\n        [-48, -61],\\n        [-76, 100],\\n        [-84,  43],\\n        [-48, -96],\\n        [ 51, -85],\\n        [ -2, -17],\\n        [-78,  82],\\n        [ 71,  14],\\n        [ 93, -60],\\n        [-47, -75],\\n        [ 51, -66],\\n        [-44,  -7],\\n        [  6,  93],\\n        [  5, -32],\\n        [ 54,  55],\\n        [ 60, -13],\\n        [ 31, -16],\\n        [-76,  22],\\n        [-85,  -7],\\n        [  9, -80],\\n        [-12,  73],\\n        [ 90,  58],\\n        [ 63,   7],\\n        [ 79,  95],\\n        [ 49,   9],\\n        [ 36,  17],\\n        [ 75,  29],\\n        [ 28, -21],\\n        [-59,   5],\\n        [-91, -94],\\n        [ 73, -89],\\n        [ 56, -51],\\n        [-58, -81],\\n        [100, -63]]))",
    0.00074
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00072
  ]
}