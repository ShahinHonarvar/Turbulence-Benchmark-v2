{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00033
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  87,  -99],\\n        [  11,  -36],\\n        [  76,   15],\\n        [  -5,   -6],\\n        [  37,   -6],\\n        [ -42,   -4],\\n        [ -36,   25],\\n        [  49,  -61],\\n        [ -45,   23],\\n        [ -63,   87],\\n        [ -13, -100],\\n        [  99,  -61],\\n        [ -68,  -34],\\n        [ -28,   43],\\n        [   6,   45],\\n        [  -8,  -29],\\n        [  18,   27],\\n        [  -8,  -60],\\n        [ -27,  -24],\\n        [ -98,   11],\\n        [ -53,   68],\\n        [  94,   61],\\n        [ -69,  -37],\\n        [ -99,  -87],\\n        [ -19,   78],\\n        [-100,  -73],\\n        [  29,   95],\\n        [  74,   45],\\n        [ -80,   96],\\n        [  75,   27],\\n        [  71,    5],\\n        [ -54,   39],\\n        [ -31,   84],\\n        [  56,   15],\\n        [ -12,   -5],\\n        [ -76,   -6],\\n        [ -47,  -70],\\n        [ -52,   13],\\n        [  62,   -7],\\n        [ -51,  -50],\\n        [  -6,   -6],\\n        [  73,  -28],\\n        [  45,  -43],\\n        [ -74,   -1],\\n        [ -61,   50],\\n        [ -50,   64],\\n        [  -2,   89],\\n        [ -90,  -67]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00076
  ]
}