{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00204
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 23,  34],\\n        [-60,  96],\\n        [-17,  97],\\n        [-31, -36],\\n        [ 35,  24],\\n        [-58,  76],\\n        [  1,  44],\\n        [-28,  33],\\n        [ 90,  84],\\n        [-80, -43],\\n        [ 46, -59],\\n        [ 35, -54],\\n        [-92,  22],\\n        [-53, -85],\\n        [ 10,  89],\\n        [ 73, -21],\\n        [ -9,  50],\\n        [ 45,  39],\\n        [-53,  28],\\n        [ 81,  64],\\n        [-75, -45],\\n        [-18,  33],\\n        [ 98, -39],\\n        [ 81, -82],\\n        [-51, -60],\\n        [ -5, -70],\\n        [-36, -80],\\n        [-64, -23],\\n        [ 57,  50],\\n        [ 37,  13],\\n        [-48, -70],\\n        [ 72, -37],\\n        [ 93, -33],\\n        [-66, -37],\\n        [-30,  62],\\n        [ 95, -70],\\n        [ 42, -21],\\n        [ -6,  -8],\\n        [ 53, -10],\\n        [ 45, -81],\\n        [-81,  95],\\n        [-58,  23],\\n        [ 88,  88],\\n        [-76,  93],\\n        [-37, -82],\\n        [ 95,  34]]))",
    0.00479
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00078
  ]
}