{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00041
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-64, -70],\\n        [  2,   4],\\n        [-67, -64],\\n        [ 59, -51],\\n        [ -7,  92],\\n        [-99,  67],\\n        [ 20,  85],\\n        [ 34,  31],\\n        [-55, -32],\\n        [ 56,   7],\\n        [-47,  12],\\n        [-46, -81],\\n        [-52,  86],\\n        [ 75,  -8],\\n        [ 68, -90],\\n        [-56,  18],\\n        [ 77,  81],\\n        [-35,  -9],\\n        [-66, -51],\\n        [-35,  33],\\n        [ 58,  59],\\n        [-53,  41],\\n        [ 48, -47],\\n        [ 16, -16],\\n        [ 19, -29],\\n        [-27,  55],\\n        [-44,  98],\\n        [-10, -80],\\n        [-17,  31],\\n        [ 77,  66],\\n        [-41, -51],\\n        [ 64, -98],\\n        [-89, -91],\\n        [ 44, -12],\\n        [ 32, -75],\\n        [-41, -82],\\n        [ -6,  28],\\n        [ 41,  83],\\n        [ 95,  -9]]))",
    0.00064
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00069
  ]
}