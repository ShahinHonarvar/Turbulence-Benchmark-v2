{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00808
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-29,  -1],\\n        [ 70, -78],\\n        [ 87,  74],\\n        [-51, -91],\\n        [ -4, -76],\\n        [  2, -97],\\n        [ 87, -19],\\n        [-65, -45],\\n        [ 21,  59],\\n        [ 81,  77],\\n        [ 12, -44],\\n        [ 63,  -5],\\n        [ 14, -88],\\n        [ -6,  64],\\n        [ -5,  27],\\n        [-99,   9],\\n        [ 35, -69],\\n        [ -5,  87],\\n        [ 66,  10],\\n        [  7, 100],\\n        [-85,  83],\\n        [-79, -90],\\n        [-55, -71],\\n        [  8,  15],\\n        [ 95,  45],\\n        [ 64,  26],\\n        [-48,  -8],\\n        [-25,  76],\\n        [ 91,  28],\\n        [-34,  58],\\n        [-52, -37],\\n        [-26,  56],\\n        [-17,  27],\\n        [ 94,  30],\\n        [-43, -68],\\n        [-48, -56],\\n        [ 67,  77],\\n        [  3, -66],\\n        [ 72,  17],\\n        [ 33, -46],\\n        [-10, -89],\\n        [-97, -57],\\n        [-56,   2],\\n        [ 92, -89]]))",
    0.00095
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0095
  ]
}