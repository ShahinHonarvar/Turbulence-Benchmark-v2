{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  44,   89],\\n        [  58,  -46],\\n        [  60,  -23],\\n        [  19,  -40],\\n        [ -26,  -39],\\n        [  18,   88],\\n        [ -24,   33],\\n        [  45,   74],\\n        [  87,   60],\\n        [  27,   88],\\n        [ -16,  -53],\\n        [ -62,   -5],\\n        [  39,   86],\\n        [  54,   78],\\n        [  11,   27],\\n        [ -73,   33],\\n        [  63,   58],\\n        [  62,   75],\\n        [ -54,  -55],\\n        [ -91,   47],\\n        [ -22,   13],\\n        [  68,  -92],\\n        [ -75,  -20],\\n        [-100,  -13],\\n        [ -33,  -17],\\n        [ -79,  -31],\\n        [ -26,  -25],\\n        [  50,   42],\\n        [ -39,    9],\\n        [  64,  -94],\\n        [ -92,    3],\\n        [  79,  -23],\\n        [  44,   62],\\n        [ -50,  -59],\\n        [ -95,  -32],\\n        [ -22,  -31],\\n        [ -39,   52],\\n        [  15,  -39],\\n        [ -79,   20],\\n        [ -28,  -99]]))",
    0.00062
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00029
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00071
  ]
}