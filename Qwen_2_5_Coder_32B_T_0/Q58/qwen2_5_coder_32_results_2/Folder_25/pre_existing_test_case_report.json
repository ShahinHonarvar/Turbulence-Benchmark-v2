{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 133",
    0.00076
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.00032
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 10,   1],\\n        [ 23,   2],\\n        [ 88, -28],\\n        [-86, -10],\\n        [ 13, -84],\\n        [ 85, -90],\\n        [ 62,  94],\\n        [-81,  78],\\n        [ 85,  16],\\n        [-16, -17],\\n        [-41, -89],\\n        [  8,  26],\\n        [-74, -96],\\n        [-69, -91],\\n        [ 39,  19],\\n        [ 47, -42],\\n        [ 24, -91],\\n        [ 43,  13],\\n        [-10, -47],\\n        [-62,  59],\\n        [ -6, 100],\\n        [-42, -49],\\n        [ 20,  81],\\n        [ 56,  18],\\n        [ 57, -13],\\n        [-56, -82],\\n        [-61,  43],\\n        [-43,   1],\\n        [-37,  45],\\n        [ -3, -35],\\n        [ -9,  -9],\\n        [  5, -24],\\n        [-73,  68]]))",
    0.00059
  ]
}