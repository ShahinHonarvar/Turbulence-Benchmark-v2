{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 99,  18],\\n        [-98, -47],\\n        [  6,  53],\\n        [-39, -15],\\n        [ 13,  56],\\n        [ 64,  94],\\n        [-32,  98],\\n        [-46, -13],\\n        [ 17,  25],\\n        [ 98,  85],\\n        [-29, -38],\\n        [-90,  90],\\n        [-94, -37],\\n        [ 80, -47],\\n        [ 47,  24],\\n        [-26, -44],\\n        [-77, -44],\\n        [ 34, -55],\\n        [ 47, -92],\\n        [ 85,   8],\\n        [ 45,  30],\\n        [ 60, -67],\\n        [ 21, -54],\\n        [-70, -86],\\n        [-49, -60],\\n        [ -6,  12],\\n        [ 63,  59],\\n        [-35,  -2],\\n        [-67, -14],\\n        [ 93, -89],\\n        [-91,  27],\\n        [ 65, -59],\\n        [-45,  12],\\n        [-31,   1],\\n        [ 73, -84],\\n        [ 50,  36],\\n        [-84,  87],\\n        [-28,  58],\\n        [-59, -61],\\n        [-73,  44],\\n        [-43,  80],\\n        [ 53, -45],\\n        [ 56, -82],\\n        [ 95, -56],\\n        [ 84, -48]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00103
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00035
  ]
}