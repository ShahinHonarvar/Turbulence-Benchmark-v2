{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00038
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  82,    5],\\n        [  30,  -15],\\n        [  35,   11],\\n        [  -8,   82],\\n        [  87,   66],\\n        [  20,   86],\\n        [  70,  100],\\n        [ -51,  -44],\\n        [  45,  -24],\\n        [  41,  -54],\\n        [  68,  -19],\\n        [ -83,  -38],\\n        [  16,  -32],\\n        [ -60,  -35],\\n        [ -75,   71],\\n        [-100,  -48],\\n        [  -9,  -99],\\n        [  13,   71],\\n        [ -34,   86],\\n        [ -14,  -36],\\n        [ -21,   16],\\n        [  26,   97],\\n        [ -35,   11],\\n        [  58,   27],\\n        [  -2,   87],\\n        [  35,   52],\\n        [ -48,  -34],\\n        [ -24,  -56],\\n        [ -66,  -23],\\n        [  13,  -31],\\n        [  95,  -29],\\n        [ -67,   41],\\n        [ -31,  -47],\\n        [ -64,   64],\\n        [  32,  -10],\\n        [-100,   98],\\n        [   5,  -73],\\n        [   4,   52],\\n        [ -56,   88],\\n        [  46,   35],\\n        [ -87,   38],\\n        [ -98,   19],\\n        [   4,   83],\\n        [  58,  -45],\\n        [ -31,  -58],\\n        [  63,  -32],\\n        [ -77,  -80]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00077
  ]
}