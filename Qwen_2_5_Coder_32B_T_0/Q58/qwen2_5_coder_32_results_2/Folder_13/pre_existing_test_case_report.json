{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 25,   1, 100,  94,  34,  77,   5,  11,  -2, -19, -35,  -9, -53,\\n          16, -26,  88, -20, -95, -38,  24,  61,  26, -80, -59, -64, -51,\\n         -71, -41,  18, -99, -56,  -5,  28, -81, -46,  -5,  47, -73, -70,\\n          67, -66, -43,  46,   5, 100,  25, -95, -45,   5,  26, -82,  46,\\n          34,  86,  81,  39, -88, -30, -84,  87,  48,  -3,   4,  98,  11,\\n          61,  21,  48, -99, -61, -16, -27,  30, -88,  21,  73, -15, -22,\\n         -78, -29,  98,   5, -64,  64, -25, -33,  65, -70, -82,  36,  62,\\n         -59,  36,   4, -67,  45,  35, -53,  53, -11, -15,  92,  75,  13,\\n         -25,  22,   9, -74,  50,  70, -15, -24,  20,  47, -80,  57, -60,\\n          22,  79, -16, -26,  64,  77,  70, -94,  91, -65, -79,  52, -18,\\n          -4, -38,  12, -57,  94, -10, -50,  36,   9,  79,   9,  77, -83,\\n          38, -27,  59,  41,  -6,  26,  33,  -4, -89,  94, -63, -24, -77,\\n          35,  43, -43, -48, -51,   0,  34, -32, -18, -74, -94, -79,   9,\\n         -46, -61,  -1, -47,  23,  71]]))",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00106
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00038
  ]
}