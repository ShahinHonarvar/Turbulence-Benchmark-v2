{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.00035
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  46,   -7,   79,   69,  -14,  -83,   -9,  -18,  -93,  -24,\\n          -63,  -32,  -82,  -15,  -73,  -70,  -97,  -47,  -85,   65,\\n           51,   31,    0,   68,  -51,  -34,  -99,   83,   25,  -41,\\n          -67,  -48,   55,   76,  -30,   40,   63,   60,   64,   38,\\n          -62,  -61,   -8,   87,  -44,  -33,  -52,   15,   61,  -70,\\n           59,   27,  -58,   89,  -42,  -23,  -87,   17,  -84,   69,\\n           -1,  -45,   -8,  -33,  -56,   44,   47,  -19,  -63,   15,\\n          -85,  -78,   67,   74,   14,   63,  -94,  -72,   64,  -34,\\n           60,   -3,    3,   25,   58,  -50,  -67,  -25,  -42,   85,\\n          -24,  -93,   80,  -58,  -21,  -37, -100,   76,  -92,   86,\\n           30,   44,  -35,   44,  -95,   25,  -18,  -81,   50,   -5,\\n           41,   -2,   56,   30,  -29,   11,   86,  -28,   -1,   72,\\n           -9]]))",
    0.00065
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 243",
    0.00087
  ]
}