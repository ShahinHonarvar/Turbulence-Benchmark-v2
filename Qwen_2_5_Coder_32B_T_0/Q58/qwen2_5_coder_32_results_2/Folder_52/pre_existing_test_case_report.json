{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00036
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  45,  -35,  -68,  -18,   36,   98,   69,  -26,   59,    9,\\n          -91,  -67,   -9,   91,   26,   22,   -3,   82,  -38,  -24,\\n           64,   32,  -94,   97,   97,   28,   85,   76,   93,  -30,\\n           -3,   20,  -94,   18,  -10,  -86,  -35,   93,   -1,  -66,\\n           71,   12,  -86,   68,  -52,    2,   32,   86,   95,  -79,\\n           21,   98,   86,    8,  -21,  -57,  -51,   72,   73,    1,\\n          -44,   17,   45,   83,  -95, -100,   50,   40,  -49,   14,\\n           57,  -28,  -10,  -67,  -82,   94,   -2,   15,  -45,  -85,\\n          -65,   -3,  -26,   -7,   65,    8,  -16,  -61,   99,   52,\\n          -99,   93,  -77,  -10,  -93,  -61,  -79,  -40,  -81,   83,\\n          -18,   18,   26,  -32,  -86,   17,    1,  -36,  -37,   66,\\n           15,   59,  -47,  -26,  -95,   23,  -16,  -63,   45,   67,\\n           67,   -7,  -58,  -29,   68,   38,   63,   48,  -72,    6,\\n          -10,  -32,   33,  -70,   93,  -79,   84,  -83,   32,  -27,\\n           92,   35,  -44,  -14,  -83,  -45,  -43]]))",
    0.00069
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00093
  ]
}