{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.0023
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-33,  34],\\n        [-81, -37],\\n        [-29, -98],\\n        [ 33, -87],\\n        [ 40,  85],\\n        [-21,  85],\\n        [-92,  56],\\n        [-96,  88],\\n        [ 60,  14],\\n        [-62, -59],\\n        [  2,  69],\\n        [ 63,  39],\\n        [ 26, -23],\\n        [ 80, -84],\\n        [-69,  53],\\n        [-39,  90],\\n        [-68,  -6],\\n        [  9,  33],\\n        [ 77, -98],\\n        [-37, -61],\\n        [  7,  49],\\n        [ 58,  56],\\n        [ 94,  20],\\n        [-42, -41],\\n        [-25,  91],\\n        [-59, -29],\\n        [-20, -86],\\n        [ 12,  -1],\\n        [-92,  63],\\n        [ 62,   7],\\n        [-13,  -3],\\n        [-90, -35],\\n        [ 18,  21],\\n        [-42, -50],\\n        [ 61, -54],\\n        [ 43, -28],\\n        [-80, -10],\\n        [ 64, -81],\\n        [-18,  20],\\n        [-32, -88],\\n        [ 83, -60],\\n        [ 26,  31]]))",
    0.00071
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00046
  ]
}