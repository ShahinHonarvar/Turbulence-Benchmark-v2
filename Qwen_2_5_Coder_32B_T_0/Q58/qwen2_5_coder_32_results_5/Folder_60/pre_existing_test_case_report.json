{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0028
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.01549
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-31,  63],\\n        [-51, -63],\\n        [-58,  37],\\n        [ 19, -40],\\n        [ 31, -41],\\n        [ 97,  18],\\n        [  7, -76],\\n        [ 54, -80],\\n        [  3,  96],\\n        [ 75,  42],\\n        [ 61,  36],\\n        [ 49,  70],\\n        [ 35,  62],\\n        [ 42,  90],\\n        [ 90, -21],\\n        [-50,  99],\\n        [ 72,  25],\\n        [ 57, -52],\\n        [-49, -19],\\n        [ 64, -83],\\n        [  6, -43],\\n        [ 54, -39],\\n        [ 21,  21],\\n        [-38,  40],\\n        [ 20,  64],\\n        [-93,  81],\\n        [ 21, -52],\\n        [-47, -82],\\n        [-18,  36],\\n        [ 94,  22],\\n        [-41,  93],\\n        [-19, -96],\\n        [-14,  50],\\n        [  0,  92],\\n        [ 93,  98],\\n        [-85,  33],\\n        [ 22,  -5],\\n        [-73, -57],\\n        [-15, -86],\\n        [-42, -26],\\n        [-89,  85],\\n        [-99,  -8],\\n        [-92, -31],\\n        [ 85, -87]]))",
    0.00091
  ]
}