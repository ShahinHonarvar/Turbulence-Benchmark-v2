{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -4,  -14],\\n        [  19,   92],\\n        [  82,  -72],\\n        [  64,   90],\\n        [ -38,  -41],\\n        [ -24,  -76],\\n        [ -73,   17],\\n        [  31,   43],\\n        [ -68,    1],\\n        [  28,  -31],\\n        [  74,  -46],\\n        [ -18,  -18],\\n        [  33,  -83],\\n        [ -82,   -3],\\n        [   9,  -12],\\n        [ -28,   77],\\n        [ -56,   -4],\\n        [  85,   72],\\n        [  87,   16],\\n        [  48,  -32],\\n        [-100,   63],\\n        [ -57,   15],\\n        [  68,  -54],\\n        [  96,   28],\\n        [ -90,  -68],\\n        [  45,   11],\\n        [  91,   93],\\n        [ -90,  -28],\\n        [ -45,  -49],\\n        [ -34,  -89],\\n        [  52,  -74],\\n        [ -30,   21],\\n        [ -51,   98],\\n        [   8,  -21],\\n        [  -9,  -57],\\n        [  14,   90],\\n        [  46,   41],\\n        [  74,  -75],\\n        [ -47,  -61],\\n        [  15,   -4],\\n        [  75,   88],\\n        [ -34,    3],\\n        [  69,   27],\\n        [  62,  -80],\\n        [ -85,   80],\\n        [  50,  -80],\\n        [  83,   47],\\n        [ -48,  -24]]))",
    0.00073
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00034
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00078
  ]
}