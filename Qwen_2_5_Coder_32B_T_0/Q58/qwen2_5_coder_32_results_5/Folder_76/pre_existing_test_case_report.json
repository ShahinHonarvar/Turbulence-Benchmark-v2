{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    9e-05
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-15,  29, -91,  77, -67,  12, -97,  36,  34,  75,  18,   3,  41,\\n         -89,  89,  81, -69,  72,  61, -61, -94, -74, -13, -55, -54, -86,\\n         -95, -38,  58, -27, -43,  56, -94,   0, -73, -81,  90, -45,  -3,\\n          19, -43,  85, -20,  73, -86, -22, -85,  69, -42, -74, -48,  57,\\n          53,  75, -29, -15,  64,  16,  50,  98,  62,  38, -11, -19,  13,\\n          65, -27,  66, -72,  88, -63, -81,   2,  29,  93, -62, -21,  42,\\n          90,  99, -57, -10, -68, -24,  48,  62,  72, -43,  40,  45,  14,\\n          19,  31,  95,  98, -45,  74,  90,  96, -46,  81, -13, -80,  80,\\n          31, -29, -20,  -5,  70, -13,  56,  53,  45, -99,  23,  57,  96,\\n         -61,  18,  -3,  35,  94, -52, 100, -33, -51, -48,  19,  88,  23,\\n          24, -60,  -6, -24,  38, -35,  69,  98,  66, -71,  26,  81,  81,\\n         -97, -71, -72,  61,  -7, -18, -68,  97, -42,  38,  33,  -3, -21,\\n          35,  59,  56]]))",
    0.00504
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.01442
  ]
}