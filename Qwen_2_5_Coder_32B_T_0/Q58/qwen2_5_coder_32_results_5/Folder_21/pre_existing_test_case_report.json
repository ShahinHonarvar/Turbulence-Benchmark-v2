{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00032
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -98,   49,   65,   51,   33,   99,  -68,   50,  -84,  -46,\\n           32,   34,  -83,   26,  -91,  -32,  -51,   38,  -61,  -48,\\n          -89,  -86,  -85,   63,   -4,  -23,   86,   45,  -54,  -69,\\n           93,  -30,  -83,  -59,   42,  -26,  -23,  -51,   22,   80,\\n           34,   66,   21,   12,   13,   97,  -27,  -88,  -12,   10,\\n           50,   11,   27,  -23,  -33,  -87,  -84,  -75,   11,   14,\\n          -70,    2,  -13,   54,   94,  -83,   85,   91,   14,  -46,\\n          -99,   25,   19,  -21,   96,  -73,   27,  -48,  -18,  -30,\\n           -5,   38,  -45,   68,   68,  -50,   42,  -88,  -63,  -19,\\n           35,  -59,   43,   18,  -44,  -53,   86,   24,  -70,   48,\\n           95,   88,   42,   44,   39,   52,  -68,  -17,  -94,   35,\\n           21,   21, -100,  -13,   15,  -41,  -36,   27,  -88,   -4,\\n          -91,  -23,  -28,   -5,  -80,  -55,   28,   68,   78,  -90,\\n           70,   98,  -69,   17,   33,  -75,   31,  -44,    0]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00091
  ]
}