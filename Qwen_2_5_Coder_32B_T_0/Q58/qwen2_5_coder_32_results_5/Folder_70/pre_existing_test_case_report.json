{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -34,   63,   22,   17,   13,  -16,  -27,   68,  -80,  -77,\\n           87,   89,   11,   59,  -46,  -32,  -86,  -74,  100,   95,\\n           -3,  -71,   32,  -71,  -65,  -26,   88,  -26,  -33,   73,\\n           23,  -35,  -18,   82,   -3,   80,   72,  -83,  -26,    0,\\n           84,  -99,   81,   93,  -24,  -33,  -37,   32,  -17,  -21,\\n          100,  -50,   90,   76,   83,  -13,  -49,  -74,   87,   56,\\n          -36,   59,   22,   52,  -96,   26,    1,   -7,   72,  -41,\\n           49,   49,  -50,   70,   20,   27,   37,   89,   37,  -24,\\n           48,   69,  -23,    0,   17,  -26,   92,  -47,  -69,  -72,\\n          -24,   85,   71,   62,   25,  -14,  -18,  -45,   21,   36,\\n           -3,  -90,   87,  -95,   64,    1,   12,   30,   76,   76,\\n           67,   26,  -83,  -64,  -71,  -74,   52,   50,  -72,   24,\\n           89,  -36,   90, -100,   46,  -73,  -66,  -74,  -72,    9,\\n          -93,   80,  -41,  -57,   87,  -70,   53,   22,  -90,   89,\\n           90,   91,  -91,   -2,  -45,  -73,  -77,   87,  -96,   95,\\n           -5,    7,  -68,  -95,  -17,  -71,   20,  -46,   55,  -28,\\n           65,   82,  -48,   69,   24,   67,   51,   68,  -26,   92,\\n           -1,  -79,   65]]))",
    0.00059
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.0005
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.00077
  ]
}