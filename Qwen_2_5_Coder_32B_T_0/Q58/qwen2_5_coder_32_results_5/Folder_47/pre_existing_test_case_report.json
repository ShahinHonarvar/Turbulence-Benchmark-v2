{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -62,   28],\\n        [ -64,   93],\\n        [ -13,  -91],\\n        [  53,   68],\\n        [  40,    7],\\n        [  93,   25],\\n        [ -33,   52],\\n        [  26, -100],\\n        [  87,   63],\\n        [  43,  -24],\\n        [  13,   70],\\n        [ -92,   53],\\n        [  10,  -73],\\n        [  46,  -38],\\n        [  63,  -86],\\n        [  49,  -44],\\n        [  92,  -92],\\n        [ -50,  -92],\\n        [  60,   -5],\\n        [  88,  -89],\\n        [  54,   21],\\n        [ -65,  -93],\\n        [  53,  -55],\\n        [  16,   95],\\n        [  67,  -84],\\n        [  52,  -74],\\n        [ -60,  -63],\\n        [   4,  -11],\\n        [  13,   25],\\n        [   3,  -30],\\n        [  56,   95],\\n        [  56,  -87],\\n        [   8,   91],\\n        [ -17,  -27],\\n        [  75,    4],\\n        [ -10,   77],\\n        [   0,   21],\\n        [ -57,  -99],\\n        [   0,  -61],\\n        [  63,  -26],\\n        [ -54,  -28],\\n        [ -39,  -59],\\n        [ -51,  -91],\\n        [  62,   93],\\n        [  96,  -88]]))",
    0.00072
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00044
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.0008
  ]
}