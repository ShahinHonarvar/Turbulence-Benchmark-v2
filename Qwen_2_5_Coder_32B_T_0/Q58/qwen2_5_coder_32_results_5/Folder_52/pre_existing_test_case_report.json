{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00034
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00092
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  86,   -9,  -44,   47,   74,  -70,  -28,  -68,  -49,  -55,\\n           85,   57,   38,   98,   58,   -4,   35,  -49,    0,  -73,\\n          -36,   34,   28,  -26,   18,   97,   52,  -40,   27,   39,\\n          -13,   83,   77,  -11,  -31,   73,  -24,   -5,   31,   98,\\n           42,   67,   72,  -44,  -94,  -12,  -77,   21,   41,   34,\\n          -18,  -84,   17,   -6,  -34,  -74,  -25,   57,   84,  -97,\\n          -21, -100,   70,  -41,   85,   99,   96,   -9,  -87,   12,\\n           96,  -31,  -51,    9,  -50,  -72,   43,  -55,   57,  -76,\\n           71,   34,   83,  -93,   18,  -20,  -46,   48,  100,   51,\\n          -34,   54,   86,   45,   -4,   75,   44,   89,  100,   48,\\n           49,   26,   87,  -92,   95,   58,  -90,   -6,   41,   73,\\n           70,  -69,  -87,   48,   65,   15,  -79,  -47,   55,  -13,\\n          -40,    8, -100,  -70,  -87,  -96,  -16,  -81,  -85,   92,\\n          -60,   41,  -77,  -90,   65,   21,   79,   19,  -12,  -72,\\n          -10,   -3,  -17,  -78,  -28,   13,    6]]))",
    0.0009
  ]
}