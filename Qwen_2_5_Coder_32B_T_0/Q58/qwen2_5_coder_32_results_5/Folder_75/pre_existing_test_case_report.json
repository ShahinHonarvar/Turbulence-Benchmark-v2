{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00092
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00071
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 77, -44],\\n        [-34, -57],\\n        [ 32, -81],\\n        [-23, -15],\\n        [ 99,   0],\\n        [ 94, -50],\\n        [-21,  47],\\n        [-29, -65],\\n        [-95,  31],\\n        [-56,  43],\\n        [-74, -22],\\n        [-73,  -1],\\n        [ 23,  39],\\n        [ 19, -84],\\n        [ 20, -78],\\n        [  1,  28],\\n        [ 57,  92],\\n        [-65,  18],\\n        [-47, -71],\\n        [-72,  85],\\n        [ 78, -43],\\n        [ 76, -77],\\n        [-24, -64],\\n        [ 27, -68],\\n        [ 11,  81],\\n        [ 31, -75],\\n        [-48, -77],\\n        [-34,  91],\\n        [-52,  41],\\n        [-76,  88],\\n        [ 63, -50],\\n        [ 37, -30],\\n        [-50, -79],\\n        [ 33, -44],\\n        [-39,  37],\\n        [-21, -22],\\n        [-65,  -9],\\n        [  7, -57],\\n        [-26, -97],\\n        [ 71,  68]]))",
    0.00062
  ]
}