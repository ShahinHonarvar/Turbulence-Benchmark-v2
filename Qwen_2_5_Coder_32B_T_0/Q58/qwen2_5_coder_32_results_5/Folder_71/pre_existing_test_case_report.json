{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  23,   43],\\n        [ -85,  -86],\\n        [  42,  -51],\\n        [ -42,   32],\\n        [ -77,   13],\\n        [ -41,   95],\\n        [  10,  -95],\\n        [  23,   -9],\\n        [ -18,   -2],\\n        [  38,  -12],\\n        [ -44,  -80],\\n        [ -43,  -80],\\n        [  15,   88],\\n        [ -68,   34],\\n        [ -27,   46],\\n        [  32,  -98],\\n        [ -38,   28],\\n        [  34,    5],\\n        [ -60,  -32],\\n        [ -88,   -4],\\n        [ -81,  -35],\\n        [ -18,   -4],\\n        [ -39,  -51],\\n        [  98,  -94],\\n        [ -75,   64],\\n        [  90,   43],\\n        [-100,   20],\\n        [ 100,   40],\\n        [ -13,  -77],\\n        [  20,   35],\\n        [ 100,   79],\\n        [ -95,  -28],\\n        [ -30,  -67],\\n        [ -60,   47],\\n        [ -49,   42],\\n        [   2,  -23],\\n        [  14,   48],\\n        [  52,  -32],\\n        [  -6,   80]]))",
    0.00064
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.0003
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.0007
  ]
}