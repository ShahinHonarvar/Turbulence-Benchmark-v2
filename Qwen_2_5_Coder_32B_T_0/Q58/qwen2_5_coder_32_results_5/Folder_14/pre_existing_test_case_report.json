{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  1, -53],\\n        [-35, -49],\\n        [ 15, -56],\\n        [ -7, -12],\\n        [ 60,  93],\\n        [ 75,  93],\\n        [-78,  71],\\n        [ 94, -34],\\n        [-29, -91],\\n        [-26,  24],\\n        [ 19,  42],\\n        [ -8, -16],\\n        [ 36, -73],\\n        [ 39,  21],\\n        [-62, -42],\\n        [  1, -46],\\n        [ 70, -49],\\n        [-53,  35],\\n        [-98, -97],\\n        [ 11,  94],\\n        [ 95,  46],\\n        [ 48,   7],\\n        [-63, -42],\\n        [ 48,  68],\\n        [ 63, -56],\\n        [ 10, -17],\\n        [ 61, -59],\\n        [-83,  35],\\n        [ 12,   1],\\n        [ 36, -76],\\n        [-82, -68],\\n        [ 80,   7],\\n        [-76,  16],\\n        [ -8, -46],\\n        [ -8, -87],\\n        [-10,  23],\\n        [  1, -20],\\n        [ 94, -89],\\n        [-15,  35],\\n        [-15, -35],\\n        [-16, -13],\\n        [-13,  -8]]))",
    0.00073
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00072
  ]
}