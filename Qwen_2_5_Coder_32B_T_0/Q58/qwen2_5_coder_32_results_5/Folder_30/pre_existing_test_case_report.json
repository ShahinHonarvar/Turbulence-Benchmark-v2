{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  2,  52],\\n        [-13,  -7],\\n        [-11,  65],\\n        [  3,  54],\\n        [-85,  76],\\n        [ -5,  39],\\n        [ 81, -12],\\n        [ 38,  97],\\n        [-85,  58],\\n        [ 65, -43],\\n        [  2,  65],\\n        [ 79,  79],\\n        [ 10,  76],\\n        [-79,  53],\\n        [-93,  10],\\n        [-34,  21],\\n        [ 88,  63],\\n        [-29, -32],\\n        [-63,  96],\\n        [-68, -77],\\n        [-29,  92],\\n        [ 28, -72],\\n        [-19,  78],\\n        [-22,  41],\\n        [-29,  18],\\n        [ 49, -46],\\n        [-25, -84],\\n        [-41, -66],\\n        [-32, -87],\\n        [ 57, -42],\\n        [-98, -13],\\n        [  1,  78],\\n        [ 26,  84],\\n        [ 63,  86],\\n        [ 20,   5],\\n        [-29,  75],\\n        [-40, -71],\\n        [ 52, -42],\\n        [-22, -58],\\n        [ 80,  63],\\n        [ 19, -97],\\n        [-27, -53],\\n        [-31,  70],\\n        [-91, -85],\\n        [ 78,  53],\\n        [ 16, -18],\\n        [-33,  38]]))",
    0.00068
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.0004
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00443
  ]
}