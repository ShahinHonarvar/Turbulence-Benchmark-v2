{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00043
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  10,  -65],\\n        [  52,  -82],\\n        [ -33,  -41],\\n        [-100,  -71],\\n        [ -31,  -99],\\n        [  34,  -75],\\n        [  94,   65],\\n        [ -42,  -17],\\n        [  14,   66],\\n        [  31,  -13],\\n        [  20,   20],\\n        [  55,   22],\\n        [  88,  -39],\\n        [  38,  -70],\\n        [  36,   94],\\n        [  29,  -88],\\n        [  83,    6],\\n        [  76,   75],\\n        [ -27,   81],\\n        [ -14,   95],\\n        [ -18,  -70],\\n        [ -92,   67],\\n        [  22,  -34],\\n        [ -26,  -12],\\n        [  19,    6],\\n        [  24,   47],\\n        [  80,  -38],\\n        [ -59,   86],\\n        [   3,   15],\\n        [  68,   39],\\n        [  35,  100],\\n        [  24,   75],\\n        [ -17,   77],\\n        [ -48,  -65],\\n        [ -33,  -41],\\n        [ -47,  -18],\\n        [ -30,  -32],\\n        [  16,  -33],\\n        [ -73,   -2],\\n        [ -70,   77],\\n        [  63,  -80],\\n        [ -23,   24],\\n        [  41,  -77],\\n        [  43,  -45],\\n        [ -56,   51],\\n        [  37,   83]]))",
    0.00371
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00215
  ]
}