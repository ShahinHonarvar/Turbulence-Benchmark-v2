{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00079
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -61,   21],\\n        [ -32,  -59],\\n        [ -42,    7],\\n        [  95,    0],\\n        [  33,   43],\\n        [  14,   83],\\n        [  75,   26],\\n        [ -81,  -10],\\n        [ -74,   17],\\n        [   3,  -23],\\n        [ -25,   83],\\n        [  25,  -85],\\n        [  89,   39],\\n        [  57,   42],\\n        [ -56,  -38],\\n        [ -56,  -97],\\n        [ -96, -100],\\n        [   8,   98],\\n        [  54,  -31],\\n        [  27,  -94],\\n        [ -63,  -62],\\n        [  94,   75],\\n        [  16,  -51],\\n        [ -56,  -40],\\n        [  -1,   68],\\n        [  52,  -52],\\n        [ -50,  -59],\\n        [ -73,  -99],\\n        [ -16,  -97],\\n        [  27,  -80],\\n        [  -1,   -1],\\n        [ -22,  -35],\\n        [-100,   -7],\\n        [  49,  -64],\\n        [ 100,  -24],\\n        [  52,   35],\\n        [ -32,  -36],\\n        [ -35,   12],\\n        [ -25,   20],\\n        [  -4,  -76]]))",
    0.00062
  ]
}