{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    7e-05
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -61,   41,   67,  -35,   43,   75,   93,  -90,   12,   76,\\n          -77,   65,   37,   72,  -76,  -78,  100,  -86,  -72,   -1,\\n           28,  -58,  -85,   52,   26,   -1,  -64,  -15,  -86,   10,\\n          -82,   -6,   16,  -39,   82,  -35,   69,   87,  -86,  -41,\\n           -5,   65,   58,   90,   66,  -82,  -46,   44,  -20,  -95,\\n           23,    2,   30,  -73,  -22,    4,  -58,   27,  -79,   81,\\n          -49,   49,   79,  -16,   54,   10,  -81,  -45,   82,   79,\\n           61,  -93,   34,   -9,  -26,  -87,   27,   91,  -96,    5,\\n          -95,   80,  -84,   -7,  -12,   41,   34,    6,   72,  -91,\\n          100,  -64,   -9,  -11,   33,   77,  -77,   34,    2,   39,\\n          -59, -100,  -11,   -8,  -24,  -77,  -88,  -81,  -59,   63,\\n           21,  -29,   23,   60,  -84,    7,  -84,  -95,  -26,   41,\\n          -74,  -54,   48,   72,  -29,   52,  -12,  -69,  -42,   97,\\n          -54,   77,  -30,   62,  -28,   89,   74,   70,   75,  -54,\\n          -44,  -54,   86,  -90,   -4,  -80,  -58,   42,    7,   43,\\n            4,   91,    4,   94,   95,   83,  -92,   78,   81]]))",
    0.00335
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.01557
  ]
}