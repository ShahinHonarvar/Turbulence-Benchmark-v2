{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00033
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-72,  35],\\n        [-56, -51],\\n        [-37, -93],\\n        [ 73,  -2],\\n        [-43,  38],\\n        [-39,  20],\\n        [ 47, -20],\\n        [-26, -32],\\n        [ 17,  54],\\n        [ 99, -90],\\n        [ 21,  46],\\n        [ 36,  86],\\n        [-55,  18],\\n        [-84, -37],\\n        [-25,  46],\\n        [ 30,  30],\\n        [ 74,  65],\\n        [-35,  70],\\n        [-96,  -6],\\n        [ 87, -28],\\n        [-80,  58],\\n        [ 67, -13],\\n        [-70, -75],\\n        [-36,  47],\\n        [-73,   3],\\n        [-20, -28],\\n        [-63, -74],\\n        [-28,  97],\\n        [ 41, -45],\\n        [-83, -91],\\n        [ 71, -12],\\n        [-58,  91],\\n        [ 64, -51],\\n        [-48,  17],\\n        [-30, -96],\\n        [-16,  10],\\n        [-28,  83],\\n        [ 45,  -2],\\n        [-14, -28],\\n        [-42, -26],\\n        [-95,   0],\\n        [-32,  11],\\n        [-88,  84],\\n        [-54,  49],\\n        [-75,  13]]))",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00406
  ]
}