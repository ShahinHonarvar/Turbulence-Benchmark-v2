{
  "parameter(s)": [
    68
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_68_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-45,  17],\\n        [ 38,  47],\\n        [-59,  82],\\n        [-86,  38],\\n        [-29, -83],\\n        [ -8, -65],\\n        [-97,  81],\\n        [ 27,   2],\\n        [ -6, -24],\\n        [ 82,  71],\\n        [ 83,  14],\\n        [-42, -84],\\n        [-44,   2],\\n        [-23,  18],\\n        [ 73,  -4],\\n        [-22,  22],\\n        [ -9,  47],\\n        [  5, -93],\\n        [  6, -60],\\n        [ 81, -55],\\n        [ 74, -57],\\n        [-36, -15],\\n        [  1, -64],\\n        [ 17, -87],\\n        [-65, -78],\\n        [-72, -18],\\n        [-57, -23],\\n        [ -6,  98],\\n        [-24, -26],\\n        [-13,  33],\\n        [-86, -90],\\n        [  8,  81],\\n        [  7, -60],\\n        [ 28,  32]]))",
    0.00062
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 137",
    0.00031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 137",
    0.00063
  ]
}