{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00345
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 75, -88],\\n        [ -5, -80],\\n        [-70,  78],\\n        [-19, -82],\\n        [-56,  21],\\n        [-69,  61],\\n        [-49, -11],\\n        [-21, -70],\\n        [-37, -65],\\n        [ 41, -63],\\n        [-39,  10],\\n        [-51, -87],\\n        [-81, -12],\\n        [-18,  49],\\n        [ 89, -84],\\n        [-50, -98],\\n        [-93, -33],\\n        [-33, -27],\\n        [ 83,  69],\\n        [-98, -88],\\n        [-53,   5],\\n        [-18,  83],\\n        [-16, -48],\\n        [ -6,  78],\\n        [-41, -69],\\n        [-73, -33],\\n        [-94, -34],\\n        [ 38,  78],\\n        [ 41, -87],\\n        [-27,  47],\\n        [-49,  27],\\n        [-28, -68],\\n        [ 66, -76],\\n        [-38,  21],\\n        [ 80, -50],\\n        [ 90,  90],\\n        [ 20, -38],\\n        [ 33, -15],\\n        [-54,  -6]]))",
    0.00059
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00031
  ]
}