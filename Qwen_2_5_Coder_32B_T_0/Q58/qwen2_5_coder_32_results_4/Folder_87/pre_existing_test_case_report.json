{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00033
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -71,   72],\\n        [ -36,   54],\\n        [ -85,   29],\\n        [ -57,  -16],\\n        [ -30,   80],\\n        [ -70,   55],\\n        [ -66,  -19],\\n        [ -51,  -51],\\n        [  43,   41],\\n        [  94,  -59],\\n        [  74,    0],\\n        [ -74,  100],\\n        [ -89,  -71],\\n        [  10,   85],\\n        [ -46,  -15],\\n        [  46,   17],\\n        [  53,  -68],\\n        [ -42,  -33],\\n        [ -98,   82],\\n        [  68,  -92],\\n        [  87,   95],\\n        [  14,  -50],\\n        [ -40,   87],\\n        [  69,  -54],\\n        [ -82,   26],\\n        [ -78,   40],\\n        [  34,   91],\\n        [ -80,   -7],\\n        [ -40,  -77],\\n        [ -76,   15],\\n        [ -49,   30],\\n        [ -42,  -87],\\n        [  31,   35],\\n        [ -34,   84],\\n        [  98,  -67],\\n        [ -19,  -21],\\n        [-100,   73],\\n        [  41,  -49],\\n        [ -56,   91],\\n        [ -94,   -5],\\n        [ -98,   10],\\n        [  -6,  -59],\\n        [   5,   54],\\n        [ -48,   -5],\\n        [  32,   12],\\n        [ -40,    0],\\n        [ -77,  -53],\\n        [ -10,   51]]))",
    0.00067
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00076
  ]
}