{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.0009
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  27,   93,   52,  -31,   96,    0,  -19,  -22,   82,   -3,\\n           39,  -23,   18,   82,   67,  -48,  -89,   92,  -47,  -37,\\n           44,  -53,   10,   61,   48,  -21,   53,  100,  -54,   71,\\n           97,  -78,    3,  -21,   88,  -45,   71,   58,   46,   37,\\n          -56,  -34,  -24,   15,   46,   43,   89,  -24,   79,  -73,\\n           95,   52,  -54,   96,  -47,  -21,  -21, -100,   22,  -33,\\n           74,   20,    4,   10,  -88,   55,  -21,  -86,  -53,  -33,\\n          -72,   59,  -39,  -47,   34,  -82,   59,   87,   -7,  -85,\\n          -61,  -87,   63,  -47,   15,   58,  -15,   22,   34,   -6,\\n          -25,  -48,  -47,  -61,   -9,   96,   47,   78,  -52,  -34,\\n           35,   60,   -7,  -60,   91,   -1,   74,   84,   50,  -81,\\n           98,   71,   73,  -74,  -43,   83,   52,  -35,  -19,   87,\\n           34,  -37,   26,   81,   28,  -55,   32,   66,  -78,  -30,\\n          -72,  -46,   86,   33,  -12,  -26,    1,   58,  -44,   -7,\\n          -24,  -19,  -99,   87,   -3,   44,   51]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00095
  ]
}