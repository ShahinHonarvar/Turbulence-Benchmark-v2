{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00033
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -7,  -14,  -62,  -45,  -20,  -10,   59,   94,   22,    9,\\n          -49,   28,    6,   58,  100,  -11,  -34,    4,    9,   79,\\n           -3,  -76,  -95,   25,  -19,  -25,   91,    5,  -19,  -88,\\n           77,   65,   88,   91,   -7,   46,   22,  -95,  100,   94,\\n          -17,  -41,   51,  -13,  -18,   60,  -75,   40,    6,    7,\\n           35,   49,  100,  -76,   -4,   -4,  -98,  -56, -100,   77,\\n           95,  -10,   86,   27,  -92,   31,   47,   99,   18,    9,\\n           13,  -51,  -71,   65,  -70,   82,  -92,  -32,   21,   44,\\n           14,   36,  -42,   51,   83,   43,   10,  -15,   -4,   22,\\n          -75,  -98,  -20,   95,   71,  -94,   83,  -59,   22,   64,\\n           50,  -75,  -28,   -9,  -19,   30,   64,  -43,   -8,  -46,\\n           58,   31,  -95,   59,   48,  -69,  -42,   49,   92,  -45,\\n          -13,   47,  -87,  -42,  -69,  -36,   35,   52,   -4,  -89,\\n           76,  -83,   37,  -75,   66,  -52,   68,  -15,  -75]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00091
  ]
}