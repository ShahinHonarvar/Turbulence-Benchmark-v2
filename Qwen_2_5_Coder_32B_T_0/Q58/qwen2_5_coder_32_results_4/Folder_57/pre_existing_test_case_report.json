{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00033
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -69,   86],\\n        [  -4,   17],\\n        [  37,  -17],\\n        [  -2,  -54],\\n        [  10,   -3],\\n        [ -26,  -56],\\n        [  64,  -57],\\n        [  16,   69],\\n        [  67,   94],\\n        [  41,   30],\\n        [-100,   62],\\n        [ -78,   52],\\n        [  42,    5],\\n        [  50,  -61],\\n        [ -29,  -76],\\n        [-100,  -87],\\n        [  69,   11],\\n        [  37,  -86],\\n        [ -17,   36],\\n        [ -23,  -95],\\n        [  95,   68],\\n        [  67,   97],\\n        [   0,  -29],\\n        [  69,  -76],\\n        [ -85,   11],\\n        [ -19,  -46],\\n        [  21,   17],\\n        [ -45,  -97],\\n        [ -27,   15],\\n        [  99,  -17],\\n        [ -96,   -5],\\n        [ -91,   77],\\n        [ -28, -100],\\n        [ -83,    8],\\n        [ -59,   37],\\n        [ -45,   16],\\n        [  82,  -86],\\n        [  64,  -11],\\n        [  87,   46],\\n        [  42,   -2],\\n        [ -37,   70],\\n        [  79,  -25],\\n        [  62,  -71],\\n        [  16,  -13],\\n        [ -77,   63],\\n        [ -25,   40]]))",
    0.00066
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00075
  ]
}