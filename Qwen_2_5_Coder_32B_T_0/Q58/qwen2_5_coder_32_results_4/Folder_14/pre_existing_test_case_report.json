{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -56,   57],\\n        [ 100,  -95],\\n        [  95,   97],\\n        [  14,   -1],\\n        [ -31,  -63],\\n        [ -59,   56],\\n        [  51,   23],\\n        [  95,    0],\\n        [   8,   27],\\n        [  18,  -18],\\n        [  18,  -22],\\n        [   4,  -25],\\n        [ -47,   90],\\n        [ -83,  -58],\\n        [ -66,   74],\\n        [  53,   97],\\n        [ -75,  -92],\\n        [  56,  -70],\\n        [ -71,  -96],\\n        [ -95,  -58],\\n        [ -24,   63],\\n        [  77,  -68],\\n        [ -73,   89],\\n        [  95,  -98],\\n        [  56,   91],\\n        [ -40,  -95],\\n        [ -28,  -99],\\n        [ -95,   61],\\n        [ -78,  -30],\\n        [ -23,  -60],\\n        [  65,  -44],\\n        [  37,  -46],\\n        [ -17,   36],\\n        [-100,  -93],\\n        [ -41,   60],\\n        [  17,  -91],\\n        [ -55,  -16],\\n        [  14,  -84],\\n        [ -83,   54],\\n        [ -44,   56],\\n        [ -36,   65],\\n        [ -49,   35]]))",
    0.00123
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00072
  ]
}