{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00516
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  36,  -99],\\n        [  36,   87],\\n        [   1,  -86],\\n        [ -21,   85],\\n        [  53,   27],\\n        [  44,  -37],\\n        [  58,   81],\\n        [ -18,   80],\\n        [ -56,  -37],\\n        [  98, -100],\\n        [  26,  -54],\\n        [  89,  -76],\\n        [ -99,   44],\\n        [ -20,  -69],\\n        [ -16,   56],\\n        [ -41,  -20],\\n        [  94,    8],\\n        [  32,  -43],\\n        [  74,  -42],\\n        [ -92,   96],\\n        [   2,  -34],\\n        [ -94,  -88],\\n        [ -33,  -24],\\n        [ -60,  -89],\\n        [  48,  -54],\\n        [ -60,   -1],\\n        [  54,  -20],\\n        [  99,  -37],\\n        [ -24,   30],\\n        [  16,   37],\\n        [  88,  -49],\\n        [ -55,  -58],\\n        [  89,   48],\\n        [  52,  -58],\\n        [  -2,  -57],\\n        [  -4,   63],\\n        [ -46,   42],\\n        [  81,   98],\\n        [ -13,  -62],\\n        [ -57,   17],\\n        [ -53,  -93],\\n        [ -57,   52],\\n        [   7, -100],\\n        [ -38,  -73]]))",
    0.00102
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00446
  ]
}