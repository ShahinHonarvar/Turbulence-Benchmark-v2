{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_38_4.py::test_unsorted_large_range", "location": ["tests14_38_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013231998309493065, "start": 1731059297.242286, "stop": 1731059297.242419, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_38_4.py::test_smallest_is_in_range", "location": ["tests14_38_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017302995547652245, "start": 1731059297.2424333, "stop": 1731059297.2426069, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_38_4.py::test_large_range", "location": ["tests14_38_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001948369899764657, "start": 1731059297.2425408, "stop": 1731059297.242736, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_38_4.py::test_unsorted_large_range", "location": ["tests14_38_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 30, "message": "assert [] == -970\n +  where [] = find_second_smallest_num([537, 196, 256, 995, 916, 71, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 51 + 1000)]", "        random.shuffle(initial_list)", "        if 37 == 51:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[37:51 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [] == -970", "E            +  where [] = find_second_smallest_num([537, 196, 256, 995, 916, 71, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 51 + 1000)]", "        random.shuffle(initial_list)", "        if 37 == 51:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[37:51 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [] == -970", "E            +  where [] = find_second_smallest_num([537, 196, 256, 995, 916, 71, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 30, "message": "assert [] == -970\n +  where [] = find_second_smallest_num([537, 196, 256, 995, 916, 71, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014120419509708881, "start": 1731059297.242738, "stop": 1731059297.2441506, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_38_4.py::test_unsorted_large_range", "location": ["tests14_38_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010400393512099981, "start": 1731059297.2580197, "stop": 1731059297.258124, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_38_4.py::test_smallest_is_in_range", "location": ["tests14_38_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 10, "message": "assert [650, 988] in [-506, 543, -537, 924, 14, -163, ...]\n +  where [650, 988] = find_second_smallest_num([-506, 543, -537, 924, 14, -163, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(51 + 2))", "        if 37 == 51:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [650, 988] in [-506, 543, -537, 924, 14, -163, ...]", "E            +  where [650, 988] = find_second_smallest_num([-506, 543, -537, 924, 14, -163, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(51 + 2))", "        if 37 == 51:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [650, 988] in [-506, 543, -537, 924, 14, -163, ...]", "E            +  where [650, 988] = find_second_smallest_num([-506, 543, -537, 924, 14, -163, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 10, "message": "assert [650, 988] in [-506, 543, -537, 924, 14, -163, ...]\n +  where [650, 988] = find_second_smallest_num([-506, 543, -537, 924, 14, -163, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032264599576592445, "start": 1731059297.2428854, "stop": 1731059297.2432084, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_38_4.py::test_smallest_is_in_range", "location": ["tests14_38_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001571269240230322, "start": 1731059297.2623749, "stop": 1731059297.262533, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_38_4.py::test_large_range", "location": ["tests14_38_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 19, "message": "assert [38, 39, 40, 41, 42, 43, ...] == 38\n +  where [38, 39, 40, 41, 42, 43, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(51 + 1) * 1000)]", "        if 37 == 51:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[37 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [38, 39, 40, 41, 42, 43, ...] == 38", "E            +  where [38, 39, 40, 41, 42, 43, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(51 + 1) * 1000)]", "        if 37 == 51:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[37 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [38, 39, 40, 41, 42, 43, ...] == 38", "E            +  where [38, 39, 40, 41, 42, 43, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_38/tests14_38_4.py", "lineno": 19, "message": "assert [38, 39, 40, 41, 42, 43, ...] == 38\n +  where [38, 39, 40, 41, 42, 43, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002708164043724537, "start": 1731059297.243156, "stop": 1731059297.2458649, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_38_4.py::test_large_range", "location": ["tests14_38_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_38_4.py": 1, "Folder_38": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001565309939906001, "start": 1731059297.26759, "stop": 1731059297.2677476, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "fcb2d57877cb46089f2a7eba0ac42e24", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
