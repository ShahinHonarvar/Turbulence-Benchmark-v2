{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_21_4.py::test_smallest_is_in_range", "location": ["tests14_21_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015926093328744173, "start": 1731059233.4861565, "stop": 1731059233.4863162, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_21_4.py::test_large_range", "location": ["tests14_21_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001566130667924881, "start": 1731059233.4862766, "stop": 1731059233.4864337, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_21_4.py::test_unsorted_large_range", "location": ["tests14_21_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017473706975579262, "start": 1731059233.4862301, "stop": 1731059233.4864054, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_21_4.py::test_unsorted_large_range", "location": ["tests14_21_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 30, "message": "assert [-340, -339, -338, -337, -336, -335, ...] == -979\n +  where [-340, -339, -338, -337, -336, -335, ...] = find_second_smallest_num([-666, 474, 880, 1111, -939, -53, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 924 + 1000)]", "        random.shuffle(initial_list)", "        if 661 == 924:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[661:924 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [-340, -339, -338, -337, -336, -335, ...] == -979", "E            +  where [-340, -339, -338, -337, -336, -335, ...] = find_second_smallest_num([-666, 474, 880, 1111, -939, -53, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 924 + 1000)]", "        random.shuffle(initial_list)", "        if 661 == 924:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[661:924 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [-340, -339, -338, -337, -336, -335, ...] == -979", "E            +  where [-340, -339, -338, -337, -336, -335, ...] = find_second_smallest_num([-666, 474, 880, 1111, -939, -53, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 30, "message": "assert [-340, -339, -338, -337, -336, -335, ...] == -979\n +  where [-340, -339, -338, -337, -336, -335, ...] = find_second_smallest_num([-666, 474, 880, 1111, -939, -53, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011862500105053186, "start": 1731059233.4868076, "stop": 1731059233.4879944, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_21_4.py::test_smallest_is_in_range", "location": ["tests14_21_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 10, "message": "assert [817, 822, 823, 827, 833, 834, ...] in [498, 389, -349, 587, 765, -64, ...]\n +  where [817, 822, 823, 827, 833, 834, ...] = find_second_smallest_num([498, 389, -349, 587, 765, -64, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(924 + 2))", "        if 661 == 924:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [817, 822, 823, 827, 833, 834, ...] in [498, 389, -349, 587, 765, -64, ...]", "E            +  where [817, 822, 823, 827, 833, 834, ...] = find_second_smallest_num([498, 389, -349, 587, 765, -64, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(924 + 2))", "        if 661 == 924:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [817, 822, 823, 827, 833, 834, ...] in [498, 389, -349, 587, 765, -64, ...]", "E            +  where [817, 822, 823, 827, 833, 834, ...] = find_second_smallest_num([498, 389, -349, 587, 765, -64, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 10, "message": "assert [817, 822, 823, 827, 833, 834, ...] in [498, 389, -349, 587, 765, -64, ...]\n +  where [817, 822, 823, 827, 833, 834, ...] = find_second_smallest_num([498, 389, -349, 587, 765, -64, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004896980244666338, "start": 1731059233.486567, "stop": 1731059233.4870572, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_21_4.py::test_smallest_is_in_range", "location": ["tests14_21_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001676849788054824, "start": 1731059233.504679, "stop": 1731059233.5048475, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_21_4.py::test_unsorted_large_range", "location": ["tests14_21_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011978892143815756, "start": 1731059233.5046165, "stop": 1731059233.5047371, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_21_4.py::test_large_range", "location": ["tests14_21_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 19, "message": "assert [660, 661, 662, 663, 664, 665, ...] == 662\n +  where [660, 661, 662, 663, 664, 665, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(924 + 1) * 1000)]", "        if 661 == 924:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[661 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [660, 661, 662, 663, 664, 665, ...] == 662", "E            +  where [660, 661, 662, 663, 664, 665, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(924 + 1) * 1000)]", "        if 661 == 924:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[661 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [660, 661, 662, 663, 664, 665, ...] == 662", "E            +  where [660, 661, 662, 663, 664, 665, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_21/tests14_21_4.py", "lineno": 19, "message": "assert [660, 661, 662, 663, 664, 665, ...] == 662\n +  where [660, 661, 662, 663, 664, 665, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.06076050701085478, "start": 1731059233.486802, "stop": 1731059233.5475636, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_21_4.py::test_large_range", "location": ["tests14_21_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010545202530920506, "start": 1731059233.5593715, "stop": 1731059233.559478, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "8d1d293626424aecb529bd267355f191", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
