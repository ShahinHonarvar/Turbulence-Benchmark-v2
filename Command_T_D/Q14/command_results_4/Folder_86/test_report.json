{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_86_4.py::test_unsorted_large_range", "location": ["tests14_86_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.721005335450172e-05, "start": 1731059530.3376126, "stop": 1731059530.3377101, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_86_4.py::test_large_range", "location": ["tests14_86_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016493897419422865, "start": 1731059530.3378444, "stop": 1731059530.33801, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_86_4.py::test_smallest_is_in_range", "location": ["tests14_86_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019161694217473269, "start": 1731059530.3379877, "stop": 1731059530.3381798, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_86_4.py::test_unsorted_large_range", "location": ["tests14_86_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 30, "message": "assert [-967, -966, -965] == 500\n +  where [-967, -966, -965] = find_second_smallest_num([228, 980, -951, -74, 390, -262, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 36 + 1000)]", "        random.shuffle(initial_list)", "        if 33 == 36:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[33:36 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [-967, -966, -965] == 500", "E            +  where [-967, -966, -965] = find_second_smallest_num([228, 980, -951, -74, 390, -262, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 36 + 1000)]", "        random.shuffle(initial_list)", "        if 33 == 36:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[33:36 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [-967, -966, -965] == 500", "E            +  where [-967, -966, -965] = find_second_smallest_num([228, 980, -951, -74, 390, -262, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 30, "message": "assert [-967, -966, -965] == 500\n +  where [-967, -966, -965] = find_second_smallest_num([228, 980, -951, -74, 390, -262, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007449899567291141, "start": 1731059530.3379426, "stop": 1731059530.338688, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_86_4.py::test_unsorted_large_range", "location": ["tests14_86_4.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011327594984322786, "start": 1731059530.3474708, "stop": 1731059530.347585, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_86_4.py::test_large_range", "location": ["tests14_86_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 19, "message": "assert [33, 34, 35] == 34\n +  where [33, 34, 35] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(36 + 1) * 1000)]", "        if 33 == 36:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[33 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [33, 34, 35] == 34", "E            +  where [33, 34, 35] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(36 + 1) * 1000)]", "        if 33 == 36:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[33 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [33, 34, 35] == 34", "E            +  where [33, 34, 35] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 19, "message": "assert [33, 34, 35] == 34\n +  where [33, 34, 35] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001498921075835824, "start": 1731059530.338354, "stop": 1731059530.3398535, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_86_4.py::test_large_range", "location": ["tests14_86_4.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010963494423776865, "start": 1731059530.3507285, "stop": 1731059530.350839, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_86_4.py::test_smallest_is_in_range", "location": ["tests14_86_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 10, "message": "assert [738, 824, 856] in [856, -465, -36, 990, 621, -850, ...]\n +  where [738, 824, 856] = find_second_smallest_num([856, -465, -36, 990, 621, -850, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(36 + 2))", "        if 33 == 36:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [738, 824, 856] in [856, -465, -36, 990, 621, -850, ...]", "E            +  where [738, 824, 856] = find_second_smallest_num([856, -465, -36, 990, 621, -850, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(36 + 2))", "        if 33 == 36:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [738, 824, 856] in [856, -465, -36, 990, 621, -850, ...]", "E            +  where [738, 824, 856] = find_second_smallest_num([856, -465, -36, 990, 621, -850, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_4/Folder_86/tests14_86_4.py", "lineno": 10, "message": "assert [738, 824, 856] in [856, -465, -36, 990, 621, -850, ...]\n +  where [738, 824, 856] = find_second_smallest_num([856, -465, -36, 990, 621, -850, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00034299492835998535, "start": 1731059530.3384678, "stop": 1731059530.3388114, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_86_4.py::test_smallest_is_in_range", "location": ["tests14_86_4.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_86_4.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010527099948376417, "start": 1731059530.353269, "stop": 1731059530.3533747, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d31afc385147490bb0f68d9340d22d0c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
