{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_46_2.py::test_large_range", "location": ["tests14_46_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012514309491962194, "start": 1731058469.3118672, "stop": 1731058469.3119926, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_46_2.py::test_smallest_is_in_range", "location": ["tests14_46_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001624319702386856, "start": 1731058469.3119395, "stop": 1731058469.3121028, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_46_2.py::test_unsorted_large_range", "location": ["tests14_46_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001457879552617669, "start": 1731058469.3119028, "stop": 1731058469.3120492, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_46_2.py::test_smallest_is_in_range", "location": ["tests14_46_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 10, "message": "assert [] in [-250, -272, -339, 276, -785, 93, ...]\n +  where [] = find_second_smallest_num([-250, -272, -339, 276, -785, 93, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(68 + 2))", "        if 13 == 68:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [] in [-250, -272, -339, 276, -785, 93, ...]", "E            +  where [] = find_second_smallest_num([-250, -272, -339, 276, -785, 93, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(68 + 2))", "        if 13 == 68:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           assert [] in [-250, -272, -339, 276, -785, 93, ...]", "E            +  where [] = find_second_smallest_num([-250, -272, -339, 276, -785, 93, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 10, "message": "assert [] in [-250, -272, -339, 276, -785, 93, ...]\n +  where [] = find_second_smallest_num([-250, -272, -339, 276, -785, 93, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003242600942030549, "start": 1731058469.3123593, "stop": 1731058469.312684, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_46_2.py::test_smallest_is_in_range", "location": ["tests14_46_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001076629851013422, "start": 1731058469.3215134, "stop": 1731058469.3216217, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_46_2.py::test_large_range", "location": ["tests14_46_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 19, "message": "assert [13, 14, 15, 16, 17, 18, ...] == 14\n +  where [13, 14, 15, 16, 17, 18, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(68 + 1) * 1000)]", "        if 13 == 68:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[13 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [13, 14, 15, 16, 17, 18, ...] == 14", "E            +  where [13, 14, 15, 16, 17, 18, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(68 + 1) * 1000)]", "        if 13 == 68:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[13 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           assert [13, 14, 15, 16, 17, 18, ...] == 14", "E            +  where [13, 14, 15, 16, 17, 18, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 19, "message": "assert [13, 14, 15, 16, 17, 18, ...] == 14\n +  where [13, 14, 15, 16, 17, 18, ...] = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002390771987847984, "start": 1731058469.312263, "stop": 1731058469.3146539, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_46_2.py::test_large_range", "location": ["tests14_46_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010934798046946526, "start": 1731058469.3238654, "stop": 1731058469.323975, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_46_2.py::test_unsorted_large_range", "location": ["tests14_46_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 30, "message": "assert [] == -958\n +  where [] = find_second_smallest_num([524, 481, 703, 569, -580, 636, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 68 + 1000)]", "        random.shuffle(initial_list)", "        if 13 == 68:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[13:68 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [] == -958", "E            +  where [] = find_second_smallest_num([524, 481, 703, 569, -580, 636, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 68 + 1000)]", "        random.shuffle(initial_list)", "        if 13 == 68:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[13:68 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           assert [] == -958", "E            +  where [] = find_second_smallest_num([524, 481, 703, 569, -580, 636, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q14/command_results_2/Folder_46/tests14_46_2.py", "lineno": 30, "message": "assert [] == -958\n +  where [] = find_second_smallest_num([524, 481, 703, 569, -580, 636, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014208329375833273, "start": 1731058469.3123777, "stop": 1731058469.3137991, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_46_2.py::test_unsorted_large_range", "location": ["tests14_46_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_46_2.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012089090887457132, "start": 1731058469.3297272, "stop": 1731058469.3298492, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3da909462a094321ae94588e3f14d16f", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
