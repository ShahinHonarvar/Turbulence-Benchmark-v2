{
  "parameter(s)": [
    47
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00011
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[47, 47, 47,... 47, 47, ...]] == [[47], [47], ...7], [47], ...]\n  At index 0 diff: [47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47] != [47]\n  Right contains 96 more items, first extra item: [47]\n  Full diff:\n    [\n  -  [47],\n  ?     -\n  +  [47,...\n  \n  ...Full output truncated (296 lines hidden), use '-vv' to show",
    0.02303
  ],
  "test_list_of_single_number": [
    "failed",
    "assert [[47], [47]] == [[47]]\n  Left contains one more item: [47]\n  Full diff:\n  - [[47]]\n  + [[47], [47]]",
    0.00037
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 2209 == 47\n +  where 2209 = <built-in function prod>([47, 47])\n +    where <built-in function prod> = math.prod",
    0.0002
  ]
}