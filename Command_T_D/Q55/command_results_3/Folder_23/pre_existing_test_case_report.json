{
  "parameter(s)": [
    -95
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.0002
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.0003
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.0001
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[-95, -95, -...95, -95, ...]] == [[-95], [-95]...], [-95], ...]\n  At index 0 diff: [-95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95] != [-95]\n  Right contains 51 more items, first extra item: [-95]\n  Full diff:\n    [\n  -  [-95],\n  ?      -\n  +  [-95,...\n  \n  ...Full output truncated (105 lines hidden), use '-vv' to show",
    0.00564
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 81450625 == -95\n +  where 81450625 = <built-in function prod>([-1, -5, -19, -95, -1, -5, ...])\n +    where <built-in function prod> = math.prod",
    0.00024
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (0 == 3)\n +  where 0 = <built-in method count of list object at 0x7d606e32b040>([-95])\n +    where <built-in method count of list object at 0x7d606e32b040> = [[1, -95, 1, -95, 1, -95]].count",
    0.00061
  ]
}