{
  "parameter(s)": [
    76
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00017
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.0001
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[[76, 76, 76...76, 76, ...]]] == [[76], [76], ...6], [76], ...]\n  At index 0 diff: [[76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76]] != [76]\n  Right contains 97 more items, first extra item: [76]\n  Full diff:\n    [\n  -  [76],\n  ?     -\n  +  [[76,...\n  \n  ...Full output truncated (196 lines hidden), use '-vv' to show",
    0.02541
  ],
  "test_list_of_single_number": [
    "failed",
    "assert [[[76]]] == [[76]]\n  At index 0 diff: [[76]] != [76]\n  Full diff:\n  - [[76]]\n  + [[[76]]]\n  ? +      +",
    0.00052
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 1 == 76\n +  where 1 = <built-in function prod>([])\n +    where <built-in function prod> = math.prod",
    0.00021
  ]
}