{
  "parameter(s)": [
    632
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00015
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00015
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00017
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[632, 632, 6...32, 632, ...]] == [[632], [632]...], [632], ...]\n  At index 0 diff: [632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632] != [632]\n  Right contains 32 more items, first extra item: [632]\n  Full diff:\n    [\n  -  [632],\n  ?      -\n  +  [632,...\n  \n  ...Full output truncated (67 lines hidden), use '-vv' to show",
    0.00191
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 0 == 3)\n +  where 3 = <built-in method count of list object at 0x7a8478920540>([632])\n +    where <built-in method count of list object at 0x7a8478920540> = [[1], [632], [1], [632], [1], [632]].count\n +  and   0 = <built-in method count of list object at 0x7a8478920540>([1, 632])\n +    where <built-in method count of list object at 0x7a8478920540> = [[1], [632], [1], [632], [1], [632]].count",
    0.00035
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 64 == 632\n +  where 64 = <built-in function prod>([1, 2, 4, 8])\n +    where <built-in function prod> = math.prod",
    0.00038
  ]
}