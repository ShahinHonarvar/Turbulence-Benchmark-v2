{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests43_42_4.py::test_list_of_non_prime_nums", "location": ["tests43_42_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012546801008284092, "start": 1731122848.0805883, "stop": 1731122848.080714, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_prime_nums_are_odd", "location": ["tests43_42_4.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001756040146574378, "start": 1731122848.0807052, "stop": 1731122848.0808816, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_list_of_primes", "location": ["tests43_42_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013090996071696281, "start": 1731122848.080582, "stop": 1731122848.0807133, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_42_4.py::test_list_of_non_prime_nums", "location": ["tests43_42_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022293208166956902, "start": 1731122848.0809026, "stop": 1731122848.0811257, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_list_of_non_prime_nums", "location": ["tests43_42_4.py", 16, "test_list_of_non_prime_nums"], "keywords": {"test_list_of_non_prime_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.036297418177128e-05, "start": 1731122848.0813565, "stop": 1731122848.0814173, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_list_of_negative_nums", "location": ["tests43_42_4.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.38769706711173e-05, "start": 1731122848.0817072, "stop": 1731122848.0817714, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_prime_nums_are_odd", "location": ["tests43_42_4.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00018970691598951817, "start": 1731122848.0811555, "stop": 1731122848.081346, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_prime_nums_are_odd", "location": ["tests43_42_4.py", 27, "test_prime_nums_are_odd"], "keywords": {"test_prime_nums_are_odd": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011858390644192696, "start": 1731122848.0817258, "stop": 1731122848.0818453, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_result_order", "location": ["tests43_42_4.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012021197471767664, "start": 1731122848.0823665, "stop": 1731122848.0824873, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_list_of_primes", "location": ["tests43_42_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 2\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n  ?                                      ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(43 * 10)]", "            expected_result = list_of_primes[30:43 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E             Right contains one more item: 2", "E             Full diff:", "E             - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "E             ?                                      ---", "E             + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range(43 * 10)]", "            expected_result = list_of_primes[30:43 + 1]", ">           assert find_primes_between_indices(list_of_primes) == expected_result", "E           assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E             Right contains one more item: 2", "E             Full diff:", "E             - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]", "E             ?                                      ---", "E             + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 9, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 2\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n  ?                                      ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004951660521328449, "start": 1731122848.0809038, "stop": 1731122848.0813992, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_42_4.py::test_list_of_primes", "location": ["tests43_42_4.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010361196473240852, "start": 1731122848.0900419, "stop": 1731122848.090146, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw0>"}
{"nodeid": "tests43_42_4.py::test_list_of_negative_nums", "location": ["tests43_42_4.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 2, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(43 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return sorted(filter(lambda x: all((x % y != 0 for y in range(2, int(x ** 0.5) + 1))), lst[30:43]))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 2, "message": "in find_primes_between_indices"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": [">   return sorted(filter(lambda x: all((x % y != 0 for y in range(2, int(x ** 0.5) + 1))), lst[30:43]))", "E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["x", "-31"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_negative_nums():", "        list_of_negative_nums = [i for i in range(-1, -(43 + 1) * 10, -1)]", ">       assert not find_primes_between_indices(list_of_negative_nums)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 25, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return sorted(filter(lambda x: all((x % y != 0 for y in range(2, int(x ** 0.5) + 1))), lst[30:43]))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 2, "message": "in find_primes_between_indices"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": [">   return sorted(filter(lambda x: all((x % y != 0 for y in range(2, int(x ** 0.5) + 1))), lst[30:43]))", "E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"], "reprfuncargs": {"args": [["x", "-31"]]}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q43/command_results_4/Folder_42/generated_answer.py", "lineno": 2, "message": "TypeError: int() argument must be a string, a bytes-like object or a real number, not 'complex'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 9.128497913479805e-05, "start": 1731122848.0818458, "stop": 1731122848.0819373, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_list_of_negative_nums", "location": ["tests43_42_4.py", 22, "test_list_of_negative_nums"], "keywords": {"test_list_of_negative_nums": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.535194840282202e-05, "start": 1731122848.0909407, "stop": 1731122848.0910363, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw1>"}
{"nodeid": "tests43_42_4.py::test_result_order", "location": ["tests43_42_4.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 3\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]\n  ?                                       ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 30 == 43:", "            initial_list = [i for i in range(1, (43 + 1) * 10)]", "            initial_list[30] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 43 - 30 + 1", "            prefix = random.choices(range(1, 1000), k=30)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E                 Right contains one more item: 3", "E                 Full diff:", "E                 - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]", "E                 ?                                       ---", "E                 + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_order():", "        if 30 == 43:", "            initial_list = [i for i in range(1, (43 + 1) * 10)]", "            initial_list[30] = 2", "            assert find_primes_between_indices(initial_list) == [2]", "        else:", "            length = 43 - 30 + 1", "            prefix = random.choices(range(1, 1000), k=30)", "            middle0 = [2] * (length - 1)", "            middle1 = [3]", "            suffix = random.choices(range(1, 1000), k=10)", "            initial_list = prefix + middle0 + middle1 + suffix", "            if \"ascending\" == \"descending\":", "                assert find_primes_between_indices(initial_list) == middle1 + middle0", "            else:", ">               assert find_primes_between_indices(initial_list) == middle0 + middle1", "E               assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]", "E                 Right contains one more item: 3", "E                 Full diff:", "E                 - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]", "E                 ?                                       ---", "E                 + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q43/command_results_4/Folder_42/tests43_42_4.py", "lineno": 53, "message": "assert [2, 2, 2, 2, 2, 2, ...] == [2, 2, 2, 2, 2, 2, ...]\n  Right contains one more item: 3\n  Full diff:\n  - [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]\n  ?                                       ---\n  + [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008032399928197265, "start": 1731122848.0826118, "stop": 1731122848.0834155, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw2>"}
{"nodeid": "tests43_42_4.py::test_result_order", "location": ["tests43_42_4.py", 37, "test_result_order"], "keywords": {"test_result_order": 1, "tests43_42_4.py": 1, "Folder_42": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010246504098176956, "start": 1731122848.0978498, "stop": 1731122848.0979528, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "8e34bc4973a1476fb4e2f79159cf84ee", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
