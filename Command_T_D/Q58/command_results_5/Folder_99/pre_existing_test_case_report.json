{
  "parameter(s)": [
    146
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 293",
    0.00048
  ],
  "test_matrix_of_having_146_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-32,  54],\\n        [-79, -67],\\n        [ 22,   7],\\n        [-57, -37],\\n        [-51,  63],\\n        [ 29,  42],\\n        [ -6,  62],\\n        [ 65,  99],\\n        [-91, -47],\\n        [-20,  -1],\\n        [ 98,  -4],\\n        [-28, -55],\\n        [  8, -48],\\n        [ -3,  99],\\n        [-38,  98],\\n        [ 69, -57],\\n        [-78, -62],\\n        [-69,  30],\\n        [ 42, -23],\\n        [ 27,  73],\\n        [-14, -33],\\n        [ -7,  52],\\n        [ -4,  37],\\n        [ 13,  79],\\n        [-26, -88],\\n        [-67,  85],\\n        [ 53, -13],\\n        [-42,  44],\\n        [  6, -14],\\n        [ 41, -86],\\n        [-96,  66],\\n        [-48,  -4],\\n        [-14,  79],\\n        [ 40, -64],\\n        [ 92,  38],\\n        [ 17,  25],\\n        [-97, -39],\\n        [ 95, -74],\\n        [ 46,  85],\\n        [ 88, -55],\\n        [-87,   0],\\n        [-95, -10],\\n        [ 88,  13],\\n        [  2,   5],\\n        [ 29,  87],\\n        [ 52,  57],\\n        [ 33,  86],\\n        [-24,  27],\\n        [ 95, -61],\\n        [-69,   3],\\n        [-27, -66],\\n        [ 49,  28],\\n        [ 31,  88],\\n        [-46, -60],\\n        [ 54, -39],\\n        [ 86,  -1],\\n        [-88,  41],\\n        [-92, -38],\\n        [-59,  69],\\n        [ 35, -49],\\n        [-72,  52],\\n        [ 17,  89],\\n        [ 81,  84],\\n        [ 50,  -2],\\n        [ 27,  82],\\n        [ 73,   6],\\n        [-17, -13],\\n        [-34, -46],\\n        [-56, -26],\\n        [-53,   2],\\n        [-38,  41],\\n        [ 82,  49],\\n        [-21,  12]]))",
    0.00236
  ],
  "test_vertical_matrix": [
    "failed",
    "ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
    0.0112
  ]
}