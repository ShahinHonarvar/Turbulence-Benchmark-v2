{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_16_5.py::test_horizontal_matrix", "location": ["tests58_16_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017612800002098083, "start": 1731153604.5854492, "stop": 1731153604.585626, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014462205581367016, "start": 1731153604.586382, "stop": 1731153604.5865269, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015705497935414314, "start": 1731153604.5849767, "stop": 1731153604.5851343, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_16_5.py::test_horizontal_matrix", "location": ["tests58_16_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(154)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 154 < 30:", "            num = 4", "        elif 30 <= 154 < 70:", "            num = 3", "        elif 70 <= 154 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/tests58_16_5.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    res = np.zeros(len(nums), dtype=np.int)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/generated_answer.py", "lineno": 4, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(154)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 154 < 30:", "            num = 4", "        elif 30 <= 154 < 70:", "            num = 3", "        elif 70 <= 154 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", ">           output = submatrix_with_n_numbers(m)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/tests58_16_5.py", "lineno": 56, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    res = np.zeros(len(nums), dtype=np.int)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/generated_answer.py", "lineno": 4, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003624481614679098, "start": 1731153604.5864387, "stop": 1731153604.586802, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_16_5.py::test_horizontal_matrix", "location": ["tests58_16_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018697697669267654, "start": 1731153604.6232166, "stop": 1731153604.6234043, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_one_integer():", "        input_matrix = [[154]]", "        input_matrix = np.asmatrix(input_matrix)", "        if 154 == 1:", "            assert submatrix_with_n_numbers(input_matrix) == 1", "        else:", ">           assert not submatrix_with_n_numbers(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/tests58_16_5.py", "lineno": 26, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    res = np.zeros(len(nums), dtype=np.int)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/generated_answer.py", "lineno": 4, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_one_integer():", "        input_matrix = [[154]]", "        input_matrix = np.asmatrix(input_matrix)", "        if 154 == 1:", "            assert submatrix_with_n_numbers(input_matrix) == 1", "        else:", ">           assert not submatrix_with_n_numbers(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/tests58_16_5.py", "lineno": 26, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    res = np.zeros(len(nums), dtype=np.int)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/generated_answer.py", "lineno": 4, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007961238734424114, "start": 1731153604.5867567, "stop": 1731153604.5875533, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_one_integer", "location": ["tests58_16_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016061519272625446, "start": 1731153604.6361907, "stop": 1731153604.6363518, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    res = np.zeros(len(nums), dtype=np.int)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/generated_answer.py", "lineno": 4, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_154_integers():", "        if 154 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(154 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(154)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/tests58_16_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    res = np.zeros(len(nums), dtype=np.int)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_5/Folder_16/generated_answer.py", "lineno": 4, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'int'.", "E           `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"], "reprfuncargs": {"args": [["attr", "'int'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'int'.\n`np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'inf'?"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003935920540243387, "start": 1731153604.5853584, "stop": 1731153604.5857525, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_16_5.py::test_matrix_of_having_154_integers", "location": ["tests58_16_5.py", 28, "test_matrix_of_having_154_integers"], "keywords": {"test_matrix_of_having_154_integers": 1, "__wrapped__": 1, "tests58_16_5.py": 1, "Folder_16": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014788913540542126, "start": 1731153604.652998, "stop": 1731153604.6531465, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "545353c6f2884c27aab2772f2a1bcf89", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
