{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00068
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00037
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-26, -22, -34,   2, -80,  49,   3,  71,  -6,  69,  46,  49, -75,\\n         -20, -58, -48, -78,  -6,  92,  23, -70, -27, -74, -47, -58,  74,\\n         -73, -26,  70, -69, -81,  29,  -2,  62, -38,  26,  65,  44,  60,\\n         -60, -81,  79, -92,  16,  67,  22, -70,  95,  77, -24,  64, -48,\\n          -6,  88, -81,  95,  31,  55,  29, -39, -33, -99, -16, -49, -60,\\n         -15, -92,   5,  67,  87, -51, -69,  15, -82,  20, -58, -24, -81,\\n         -68,  40, -36, -75,  13, -93,  90, -31,  38,  46, -79,  85,  71,\\n         -29,  74, -99,  77, -38,  26,  73, -26, -80,  67,  57, -30, -72,\\n           8,  38, -18,  44, -34,  76,   5,  36,  20, -40,  93, -93, -86,\\n         -30,  36, -28, -47, -68, -25,  95,  43,  39, -47,  94, -78, -16,\\n          96,  21, -41,  55, -29,   4, -33,  38, -43, -55,   6,  59, -88,\\n          81,  31,  90,  69, -84,  23, -74, -85, -37, -18,  -7,  85,  75,\\n          18,  30,   5,  -2,  14,  12, -94, -65,  57,  30, -36,  54,  44,\\n          44, -20, -99, -31,  -3,  62]]))",
    0.00454
  ],
  "test_vertical_matrix": [
    "failed",
    "ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
    0.00468
  ]
}