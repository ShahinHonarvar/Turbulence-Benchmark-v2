{
  "parameter(s)": [
    115
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 231",
    0.00042
  ],
  "test_matrix_of_having_115_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 69, -76, -54, -38, -99, -26, -94, -75, -96, -80, -78,  91,  -8,\\n          -4, -36, -99, -67, -30, -84,  22,   6, -32,  81, -66,  74,  51,\\n         -94, -67, -95,  18,  87,  -2,  61, -79,  -8,  80,  74, -88, -72,\\n         -90, -76,  82, -90, -94, -65, -56, -17,  31, -53, -72, -40,   4,\\n         -27,   4, -70,  60, -92, -48,  92,  92, -52, -98, -38,  60,  49,\\n          63,   9,  30, -57, -28,  96,  66,  74, -49,  68, -78, -60,  45,\\n         -63,  71, -46, -39, -27,  58, -91,  93,  56, -34,  81, -29,  97,\\n         -19,  62, -85,  43,  15,  92,  66,  97,   9,  60, -15,  96, -56,\\n         -49, -60, -61,  23, -87, -93, -91,  86,  30, -31, -29]]))",
    0.00072
  ],
  "test_vertical_matrix": [
    "failed",
    "ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
    0.00126
  ]
}