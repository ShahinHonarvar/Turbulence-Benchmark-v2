{
  "parameter(s)": [
    96
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00044
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  55,  -33],\\n        [  43,   60],\\n        [ -70,  -34],\\n        [ -66,  -91],\\n        [ -33,   98],\\n        [ -12,  -11],\\n        [  90,   28],\\n        [ -69,  -81],\\n        [ -49,   41],\\n        [  62,   59],\\n        [   8,   59],\\n        [ -87,   39],\\n        [  -7,   45],\\n        [-100,  -71],\\n        [ -13,   19],\\n        [ -86,   22],\\n        [  94,  -63],\\n        [ -91,  -99],\\n        [ -81,   -8],\\n        [  61,   39],\\n        [  59,   86],\\n        [  -4,  -74],\\n        [ -16,   33],\\n        [  77,   16],\\n        [ -91,  -98],\\n        [ -97,   55],\\n        [  69,   70],\\n        [  -1,   69],\\n        [ -56,  -15],\\n        [ -66,    3],\\n        [ -35,   -9],\\n        [ -11,  -75],\\n        [-100,  100],\\n        [  83,   81],\\n        [ -54,   37],\\n        [  12,  -51],\\n        [  65,   56],\\n        [  15,  -13],\\n        [ -71,   19],\\n        [ -99,  -56],\\n        [ -78,   71],\\n        [ -58,   29],\\n        [  86,  -90],\\n        [  97,    6],\\n        [ -11,  -80],\\n        [  40,   84],\\n        [  20,  -47],\\n        [ -55,   48]]))",
    0.00101
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[96]]))",
    0.00043
  ]
}