{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00046
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-31,  82],\\n        [-45, -18],\\n        [-89, -84],\\n        [100, -75],\\n        [ 79,  33],\\n        [-78, -56],\\n        [-17, -11],\\n        [-25, -86],\\n        [-81, -39],\\n        [ 75, -52],\\n        [-77, -88],\\n        [ 98, -21],\\n        [-48,  79],\\n        [-43,  20],\\n        [-16,  20],\\n        [-42,  84],\\n        [-89, -86],\\n        [ 58, -71],\\n        [-34,  69],\\n        [ 89,  21],\\n        [-64,  -5],\\n        [-63,  60],\\n        [ 86, -69],\\n        [-17, -79],\\n        [-92,  24],\\n        [ 23, -85],\\n        [ 62, -31],\\n        [ -4, -94],\\n        [-48,  15],\\n        [-20, -91],\\n        [-28,  -4],\\n        [-58,  98],\\n        [-67,  30],\\n        [ 71,  66],\\n        [ 84,  41],\\n        [-94,  40],\\n        [ -9, -30],\\n        [ 20,  20],\\n        [-26,  84],\\n        [ 75, -81]]))",
    0.0006
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 240 == 161",
    0.0011
  ]
}