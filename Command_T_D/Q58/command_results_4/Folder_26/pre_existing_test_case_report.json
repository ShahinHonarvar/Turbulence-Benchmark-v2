{
  "parameter(s)": [
    115
  ],
  "test_matrix_of_having_115_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -60,   27,   17,   79,  -96,   48,  -12,   52,  -42,   33,\\n          -25,   40,  -71,  -90,  -32,  -80,  -17,   91,  -77,   13,\\n           17,    4,  -97,  -43,  -98,  -87,   51,   41,   49,   45,\\n           50,   43,   -5,  -67,  -27,  -76,  -89,   12,  -78,  -71,\\n           20,  -79,   99,  -97,  -35,   42,  -36,  -94,   92,  -46,\\n           58,   95,  -41,   35,   88, -100,  -90,   60,  -53,   32,\\n          -41,   43,   88,   68,   59,  -22,  -91,   40,   48,  -73,\\n           -7,   31,  -96,  -99,   64,   29,   67,  -88,  -31,  -33,\\n           24,   12,  100,   71,  -95,   13,  -64,  -79,  -83,   57,\\n           83,   61,   47,    8,   49,  -58,   20,   29,   33,   -7,\\n          -73,  -35,   84,  -33,  -69,   85,  -20,  -22,  -32,  -91,\\n          -47,  -27,   -9,    6,   62]]))",
    0.00074
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 231",
    0.00045
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[115]]))",
    0.00036
  ]
}