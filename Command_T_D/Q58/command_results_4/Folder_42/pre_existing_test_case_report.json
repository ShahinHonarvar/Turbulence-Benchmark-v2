{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 76,  30, -47,  32,  77,  59,  50,  90, -13,   9, -47,   9,  22,\\n          37,  83,  73,  88,  97,  45, -28,  33, -31, -65,  99, -86, -85,\\n          54, -54, -98, -89,  60,  86,  -9,  86, -42,  18,   3,  82,  80,\\n           0,  83,  86, -21,  59,  28,  72,   4,  12, -96,  27, -40, -24,\\n          89, -34,  70,  89,  94,  65,  66, -50,  35,  63,  73,  67,  86,\\n         -99,  12,  50, -66,  79,  49, -34,  42, -13,  22,   3,  28,  21,\\n           8, -66,  53,  42, -70,  12,  73,  73, -81, -41,  32,  35, -88,\\n         -37,  30, -44, -12,  67,  88, -76,  -2,  19, -37, -49, -81, -38,\\n         -30,  74,  17,  92, -35, -19,  69, -72,  25,  36, -70, -38, -36,\\n          80,   9,  85,  60,  30, -50, -29,  21,  65,  -6, -56,  45, -19,\\n         -54,  51,  73, -33, -66, -34, -62,  54,  56,  30,  67, -55, -45,\\n         -65, -91,  16, -37, -90, -45,   4,  39, -32,  78,  83,  17,  63,\\n         -85, -17,  18,  26, -75,  51,  95,   3,  95, -88,  39,  10,  33,\\n         -54, -89,  65, -12,  30,  86,   3,  90,  46,  98, -96,  46,  58,\\n         -68,  76,  91, -21,  70,  40, -12, -75, -74,  82,  -5]]))",
    0.00097
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 387",
    0.00051
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[193]]))",
    0.00044
  ]
}