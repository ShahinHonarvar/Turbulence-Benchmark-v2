{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-46,  80],\\n        [ 73, -59],\\n        [  5,  96],\\n        [-71,   7],\\n        [ 94,   8],\\n        [ 10,  37],\\n        [-78, -72],\\n        [-73,  -6],\\n        [  9,  77],\\n        [ 53,  64],\\n        [-77,  -9],\\n        [-31,  92],\\n        [-25, -67],\\n        [-68, -91],\\n        [ -7,  84],\\n        [-58,  28],\\n        [-71, -50],\\n        [ 16, -33],\\n        [ 29, -14],\\n        [  3,  56],\\n        [-98,   5],\\n        [-77, -32],\\n        [-54, -41],\\n        [-35,  88],\\n        [ 90,  16],\\n        [-52,  79],\\n        [-40,  81],\\n        [-55,  -5],\\n        [ 25,  -1],\\n        [ 91, -92],\\n        [-85, -57],\\n        [ -2,  54],\\n        [ 74,  65]]))",
    0.00071
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 18 == 133",
    0.00057
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[66]]))",
    0.00042
  ]
}