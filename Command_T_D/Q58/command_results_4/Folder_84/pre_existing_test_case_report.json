{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  33,   54,   32,  -74,   30, -100,   -6,  -83,   58,  -98,\\n          -99,    6,  -51,   87,  -83,  -65,   79,   -4,  -92,   50,\\n          -91,   94,   99,  -53,   35,  -31,  -40,  -50,   -6,  -91,\\n          -17,   36,  -14,  -63,  -35,    8,   52,   14,   92,   89,\\n          -67,   98,   52,   77,  -90,   65,  -31,  -70,  -57,   86,\\n          -70,   98,    3,  -93,  -29,  -22,   55,  -29,  -49,  -80,\\n           -5,  -44,  -47,  -74,  -95,   36,   68,  -92,   62,  -89,\\n           18,   55,   16,    1,   40,   35,  -15,   34,   23,   49,\\n           48,  -39,  -32,   -7,  -52,   48,   38,  -84,   36,   46,\\n          -85,  -16,  -54,  -74,   12,   31,  -53,   21,   -5,   31,\\n          -63,   24,   93,  -55,  -27,  -74,  -89,   36,  -19,   93,\\n           52,  -77,   52,  -24,    9,   26,   14,  -68,   77,   69,\\n          -16,  -22,   13,    2,  -58,   37,   78]]))",
    0.00075
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.00044
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[127]]))",
    0.00048
  ]
}