{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00047
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00099
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-50,  15,  73,  65,  24,  56,  -7, -66,  45, -98, -89, -28,  23,\\n          13, -74,  80, -12, -16,  89,  89,  99, -17, -69, -93, -33,   0,\\n           7, -34,   2, -25, -86,  12,  69,  50, -28,  41, -21,  36, -63,\\n           4,  41,  90, -21,  47, -56, -93, -96, -55, -67, -24, -24,  65,\\n         -54, -41,  81,   6,  28, -83, -78, -22,  65, -49,  47,  32, -74,\\n          92, -65,  -1, -74, -46,  27, -97,  30,  51, -55, -98, -18,   2,\\n         -64, -91, -78, -80,  10,  59,  36,  98, -64, -74,  12,  67,  85,\\n         -57,  94, -25,  29,  29,  23, -47,  98, -99, -87, -32,  97, -39,\\n          67, -62, -77,  37,  56,  76,  29,  81,  -8,  58,  35, -62, -17,\\n          77, -78,  77, -21,  50, -71,  26, -34,  43, -13,  69, -81,  71,\\n         -83, -59,  72, -83, -67,   7, -67,  15, -56,  36,  50,  88, -23,\\n          19,   5, -90,  92]]))",
    0.0008
  ]
}