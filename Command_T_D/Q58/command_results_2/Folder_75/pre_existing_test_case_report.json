{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00101
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00155
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -92,   40],\\n        [ -47,   -5],\\n        [ -84,   63],\\n        [ -97,   -5],\\n        [ -31,  -64],\\n        [ -69,  -60],\\n        [ -99,   37],\\n        [  29,  -72],\\n        [ -65,   97],\\n        [  57,   77],\\n        [ -91,  -60],\\n        [  47,   87],\\n        [  72,  -83],\\n        [ -93,  -39],\\n        [  19,  -60],\\n        [  82,   22],\\n        [  73,  -24],\\n        [ -52,  -62],\\n        [ -97,  -35],\\n        [  89,   34],\\n        [ -90,   67],\\n        [  17,  -48],\\n        [  18,  -19],\\n        [-100,  -27],\\n        [  97,   16],\\n        [  18,  -72],\\n        [ -82,   71],\\n        [  17,   65],\\n        [  78,   97],\\n        [   1,   88],\\n        [  -3,   74],\\n        [ -41,  -16],\\n        [  60,   41],\\n        [ -51,   21],\\n        [ -89,  -13],\\n        [ -76,   41],\\n        [   4,   84],\\n        [ -47,  -65],\\n        [  33,   56],\\n        [  95,  -31]]))",
    0.00069
  ]
}