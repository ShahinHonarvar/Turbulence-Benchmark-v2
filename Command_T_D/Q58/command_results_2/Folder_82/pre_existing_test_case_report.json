{
  "parameter(s)": [
    99
  ],
  "test_matrix_of_having_99_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  23,   47,   84,   60,  -19,  -59,   68,   48,   44,    0,\\n           87,  -88,   22,   73,   44,   89,  -36,  -24,   77,   85,\\n          -37,    9,   91,  -46,  -15,  -65,   58,   32,  -56,   43,\\n          -73,   19,   16,    8,   91,   49,   15,   -8,  -70,  -19,\\n          -61,  -42,  -86,   -8,   67,   -9,   59,  -77,   94,   56,\\n           50,  -21,   86,  -46,  -18,   65,  -81,  -66,   85,  -80,\\n          -16,   87,   14,   86,   13,   80,  -93,  -62,  -28,   60,\\n          -79,  -84,   53,   38,  -37,   21,    7,   48,   65,   16,\\n           58,    3,    5,   72,   58,   57,   58,   49,  -35,   50,\\n            4,  -33,   90,   67,   74, -100,  -94,  -30,  -60]]))",
    0.00072
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 199",
    0.00153
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[99]]))",
    0.00045
  ]
}