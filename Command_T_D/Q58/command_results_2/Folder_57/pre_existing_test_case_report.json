{
  "parameter(s)": [
    92
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00043
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  8,  69],\\n        [-93, -41],\\n        [ 56, -57],\\n        [ -2, -25],\\n        [-80,  98],\\n        [ 84, -22],\\n        [-33, -78],\\n        [-64,  22],\\n        [-48, -44],\\n        [ 49,  41],\\n        [ 59,  10],\\n        [ 18, -73],\\n        [ 96,  94],\\n        [ 39, -47],\\n        [ 80,  33],\\n        [-90, -40],\\n        [ -3,  66],\\n        [ 59, -62],\\n        [ 68, -82],\\n        [ 95, -57],\\n        [ 49,  59],\\n        [-40,  -8],\\n        [-25, -16],\\n        [ 89, -38],\\n        [  0, -25],\\n        [-36,  15],\\n        [ 49, -78],\\n        [ 44, -24],\\n        [ 95,  42],\\n        [ 52, -58],\\n        [ 12, -73],\\n        [ -7,   6],\\n        [ 25, -98],\\n        [-87,  52],\\n        [ 12, -55],\\n        [ 10, -68],\\n        [ 65, -24],\\n        [ 75,  35],\\n        [-38, -68],\\n        [ 65, -44],\\n        [ -5, -94],\\n        [-73,  -2],\\n        [-83, -79],\\n        [-46,  38],\\n        [ 53,  80],\\n        [ 67, -98]]))",
    0.00115
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[92]]))",
    0.00041
  ]
}