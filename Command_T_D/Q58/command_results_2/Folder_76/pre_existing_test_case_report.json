{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00052
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.0016
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94,  43,  16, -54,  82,  36,  -4, -68,  74,  15,  23, -26, -22,\\n          60, -52, -66,  68, -81, -21,  63, -80, -70,  56,  79, -73, -98,\\n          11, -18,  96, -11,   4, -15,  41,  18, -66,  24, -30,  -4,  16,\\n         -16, -77, -15,   7, -31,  85, -67,  21,  23, -56,  65,  92,  16,\\n         -20, -21, -52, -85, -92, -66,  -8,  87,  23, -39, -85, -68, -55,\\n          72, -36,   5,  51,  52, -63,   1,  68,  75,  51,  32, -16,  98,\\n          44,  -5, -51,  42,  84,  28, -71, -63,  34, -86, -80, 100, -49,\\n         -52, -16, -47, -42, -10, -77, -70, -87, -91, -89,  52, -96,  73,\\n          -8, -36, -10, -64,   0, -78,  45,  36, -14, -45, -67,   2, -92,\\n         -61,   7, -26, -93, -62,  78,  92, -50,  -3, -74, -54,  46, -58,\\n         -76, -32, -43,  26,  93,  71,  35,  44,  -8, -91,  95, -47, -94,\\n         -74, -63, -70, -78, -21,  41,  51,   6, -83, -96, -93,  53, -45,\\n         -67,  11, -62]]))",
    0.00094
  ]
}