{
  "parameter(s)": [
    139
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00059
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  70,   66,   -2,  -89,  -75,  -15,   63,    6,  -48,  -63,\\n          -17,  -30,   38,   -7,  -76,   58,   80,  -11,  -77,  -98,\\n          -53,  -51,  -76,  -64,   74,   83,  -50,   20,    6,  -17,\\n           86,   -7,  -27,  -19,  -68,  -11,  -19,  -43,   22,    1,\\n         -100,  -24,   -5,  -45, -100,  -60,    3,  -21,   14,   15,\\n          -67,  -97,   85,   99,  -26,   98,  -76,  -70,  -82,   59,\\n          -32,  -93,  -29,  -29,   61,  -43,   -7,   49,   95,  -52,\\n           94,   52,  -19,  -40,   21,  -59,   86,   -6,  -26,   96,\\n          -40,  100,   33,  -90,   -3,  -70,  -29,   70,  -76,  -95,\\n           54,  -90,  -66,   74,   25,  -99,   -2,  -34,   -9,  -80,\\n          -42,  -67,   51,  -47,  -22,   11,   -5,  -58,  -55,  -45,\\n          -80,  -36,    7,  -67,  -58,  -32,   60,   49,   22,   27,\\n            8,  -59,  -98,  100,  -84,  -83,   47,  -69,   98,  -57,\\n           50,  -69,   58,  -55,  -24,    5,  -39,  -94,   82]]))",
    0.001
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[139]]))",
    0.00039
  ]
}