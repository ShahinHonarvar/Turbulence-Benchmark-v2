{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -82,  -75],\\n        [  89,   31],\\n        [  38,  -47],\\n        [   8,  -99],\\n        [ -42,  -99],\\n        [ -74,  -46],\\n        [  64,  -68],\\n        [ -74,   16],\\n        [ -40,  -87],\\n        [  46,   19],\\n        [  -4,   50],\\n        [  44,  -93],\\n        [ -33,  -84],\\n        [  78,   25],\\n        [ -71,   14],\\n        [  -2,  -89],\\n        [  64,  -39],\\n        [ -30,   39],\\n        [ -63,   18],\\n        [  89,  -81],\\n        [  -3,  -38],\\n        [  75,  -20],\\n        [  54,   70],\\n        [  -1,  -85],\\n        [ -35,  -84],\\n        [  34,  -56],\\n        [ -53,   75],\\n        [  47,  -60],\\n        [ -73,  -61],\\n        [   7,   53],\\n        [  52,   65],\\n        [  30,  -70],\\n        [ -78,  -15],\\n        [ -60,    7],\\n        [ -43,   48],\\n        [-100,   99],\\n        [  28,   -3],\\n        [  48,   83],\\n        [ -32,   23],\\n        [ -26,  -42],\\n        [  92,   16],\\n        [ -36,   72],\\n        [ -33,  -23],\\n        [ -32,  -89],\\n        [  38,   78]]))",
    0.00114
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00044
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00253
  ]
}