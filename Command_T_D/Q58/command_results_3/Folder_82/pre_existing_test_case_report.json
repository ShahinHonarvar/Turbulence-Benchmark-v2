{
  "parameter(s)": [
    99
  ],
  "test_matrix_of_having_99_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 29,  98, -17,  57, -38, -73,  49, -23,  70, -33, -17,  64,  -9,\\n           2, -72,  21,  -7, -90, -42, -45, -55,  21, -60,  33,  79,  86,\\n          26,  10,   0,  81,  63, -11, -70,  27,  64, -94, -38, -18,  67,\\n         -58,  80, -47, -68,  31, -30,  88,  54, -67,  49, -91,  59, -15,\\n         -23,  41, -98,  66,  76, -66,  37, -86,  76,   5,  31,  13, -77,\\n          49, -30,  13, -19,  57, -64,  71,  75, -97,  51, -42, -76,  88,\\n           1, -97,  88,  13,  -8,  86,  57, -41, -47, -10,  66, -50, -92,\\n         -66,   9, -79,  87,  63, -70,  20, -66]]))",
    0.00068
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 199",
    0.00043
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[99]]))",
    0.0005
  ]
}