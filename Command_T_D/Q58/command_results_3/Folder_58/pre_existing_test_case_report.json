{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00251
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 65, -94,  89,   2, -85,  93, -57, -55, -42, -45,  51,  94, -93,\\n          -5, -10, -71, -84, -63, -67,  95, -36, -79,  21,  16,  46, -90,\\n         -24, -24, -69,  15, -48,  14,  20,  53, -22,  22, -33,  80,  91,\\n         -20,  37, -41, -56, -94,  29, -46, -72,   1, -64, -56, -18,  97,\\n         -66, -43, -10,  -7,  54,  39,  -8,  80,  69, -48,  42, -51, -82,\\n         -79,  35,  31,  10,  -5,   2,  27,  15,  50, -92, -67, -74,  51,\\n         -69,  62,  88, -78,  16, -96, -23, -21, -23,  79,  33,  84,  28,\\n          34,  70,  15,  48,  73, -61, -78,  47, -24, -57,  18,  32, -37,\\n           3,  10, -46,   0,   8,  27,   2, -39, -37, -18,  77, -46, -70,\\n         -78, -59, -67,   6,  55, -61,  -3, -69,  30,  50, -54,  86, -50,\\n          42, -47, -74,   5, -97, -75,  35,  98,  17, -68, -83,  81, -66,\\n          91,  39,  17,  14,   6, -98,  23,  65, -74,  40,  90, -20,   6,\\n         -27,  82,  43,  27,  35,  33, -87,  -2, -98, -80, -16,  27,  45,\\n          -2, -47, -16,   9, -61,  44, -33,  27, -94,  -9,  78,  67, -75,\\n          18,  97, -41]]))",
    0.00117
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00143
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.00965
  ]
}