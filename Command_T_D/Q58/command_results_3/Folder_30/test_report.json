{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_30_3.py::test_matrix_of_one_integer", "location": ["tests58_30_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014962907880544662, "start": 1731153118.7555227, "stop": 1731153118.755673, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_3.py::test_matrix_of_having_94_integers", "location": ["tests58_30_3.py", 28, "test_matrix_of_having_94_integers"], "keywords": {"test_matrix_of_having_94_integers": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015621609054505825, "start": 1731153118.755512, "stop": 1731153118.7556686, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_3.py::test_horizontal_matrix", "location": ["tests58_30_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016000797040760517, "start": 1731153118.7555125, "stop": 1731153118.7556734, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_30_3.py::test_matrix_of_one_integer", "location": ["tests58_30_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001722539309412241, "start": 1731153118.7559159, "stop": 1731153118.7560885, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_3.py::test_matrix_of_one_integer", "location": ["tests58_30_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.786601781845093e-05, "start": 1731153118.7564175, "stop": 1731153118.7564957, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_3.py::test_vertical_matrix", "location": ["tests58_30_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.975194603204727e-05, "start": 1731153118.7568905, "stop": 1731153118.7569704, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_3.py::test_matrix_of_having_94_integers", "location": ["tests58_30_3.py", 28, "test_matrix_of_having_94_integers"], "keywords": {"test_matrix_of_having_94_integers": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -11,  -65],\\n        [   3,   63],\\n        [  64,  -96],\\n        [  69,  -28],\\n        [ -48,   65],\\n        [  -3,  -34],\\n        [  59,  -85],\\n        [  42,  -51],\\n        [ -54,   40],\\n        [  -8,   37],\\n        [ -46,  -59],\\n        [ -59,   58],\\n        [ -38,   20],\\n        [  69,  -67],\\n        [ -38,  -30],\\n        [ -70,  -11],\\n        [   2,  -29],\\n        [  70,   24],\\n        [  29,  -11],\\n        [ -81,  -17],\\n        [ -40,   68],\\n        [   0,   11],\\n        [  68,   55],\\n        [-100,  -72],\\n        [  24,  -57],\\n        [  23,   18],\\n        [ -31,    9],\\n        [ -54,   27],\\n        [  -9,   41],\\n        [  71,  -85],\\n        [  -4,   12],\\n        [ -27,  -32],\\n        [   5,  -68],\\n        [  16,   91],\\n        [ -71,  -93],\\n        [  67,  -43],\\n        [ -43,  -63],\\n        [  90,   44],\\n        [  47,   29],\\n        [  82,  -95],\\n        [ -11,  -40],\\n        [  15,    3],\\n        [  76,   49],\\n        [ -58,   26],\\n        [ -36,  -11],\\n        [  58,   64],\\n        [  76,   38]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_94_integers():", "        if 94 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(94 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(94)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -11,  -65],\\n        [   3,   63],\\n        [  64,  -96],\\n        [  69,  -28],\\n        [ -48,   65],\\n        [  -3,  -34],\\n        [  59,  -85],\\n        [  42,  -51],\\n        [ -54,   40],\\n        [  -8,   37],\\n        [ -46,  -59],\\n        [ -59,   58],\\n        [ -38,   20],\\n        [  69,  -67],\\n        [ -38,  -30],\\n        [ -70,  -11],\\n        [   2,  -29],\\n        [  70,   24],\\n        [  29,  -11],\\n        [ -81,  -17],\\n        [ -40,   68],\\n        [   0,   11],\\n        [  68,   55],\\n        [-100,  -72],\\n        [  24,  -57],\\n        [  23,   18],\\n        [ -31,    9],\\n        [ -54,   27],\\n        [  -9,   41],\\n        [  71,  -85],\\n        [  -4,   12],\\n        [ -27,  -32],\\n        [   5,  -68],\\n        [  16,   91],\\n        [ -71,  -93],\\n        [  67,  -43],\\n        [ -43,  -63],\\n        [  90,   44],\\n        [  47,   29],\\n        [  82,  -95],\\n        [ -11,  -40],\\n        [  15,    3],\\n        [  76,   49],\\n        [ -58,   26],\\n        [ -36,  -11],\\n        [  58,   64],\\n        [  76,   38]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_94_integers():", "        if 94 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(94 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(94)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -11,  -65],\\n        [   3,   63],\\n        [  64,  -96],\\n        [  69,  -28],\\n        [ -48,   65],\\n        [  -3,  -34],\\n        [  59,  -85],\\n        [  42,  -51],\\n        [ -54,   40],\\n        [  -8,   37],\\n        [ -46,  -59],\\n        [ -59,   58],\\n        [ -38,   20],\\n        [  69,  -67],\\n        [ -38,  -30],\\n        [ -70,  -11],\\n        [   2,  -29],\\n        [  70,   24],\\n        [  29,  -11],\\n        [ -81,  -17],\\n        [ -40,   68],\\n        [   0,   11],\\n        [  68,   55],\\n        [-100,  -72],\\n        [  24,  -57],\\n        [  23,   18],\\n        [ -31,    9],\\n        [ -54,   27],\\n        [  -9,   41],\\n        [  71,  -85],\\n        [  -4,   12],\\n        [ -27,  -32],\\n        [   5,  -68],\\n        [  16,   91],\\n        [ -71,  -93],\\n        [  67,  -43],\\n        [ -43,  -63],\\n        [  90,   44],\\n        [  47,   29],\\n        [  82,  -95],\\n        [ -11,  -40],\\n        [  15,    3],\\n        [  76,   49],\\n        [ -58,   26],\\n        [ -36,  -11],\\n        [  58,   64],\\n        [  76,   38]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -11,  -65],\\n        [   3,   63],\\n        [  64,  -96],\\n        [  69,  -28],\\n        [ -48,   65],\\n        [  -3,  -34],\\n        [  59,  -85],\\n        [  42,  -51],\\n        [ -54,   40],\\n        [  -8,   37],\\n        [ -46,  -59],\\n        [ -59,   58],\\n        [ -38,   20],\\n        [  69,  -67],\\n        [ -38,  -30],\\n        [ -70,  -11],\\n        [   2,  -29],\\n        [  70,   24],\\n        [  29,  -11],\\n        [ -81,  -17],\\n        [ -40,   68],\\n        [   0,   11],\\n        [  68,   55],\\n        [-100,  -72],\\n        [  24,  -57],\\n        [  23,   18],\\n        [ -31,    9],\\n        [ -54,   27],\\n        [  -9,   41],\\n        [  71,  -85],\\n        [  -4,   12],\\n        [ -27,  -32],\\n        [   5,  -68],\\n        [  16,   91],\\n        [ -71,  -93],\\n        [  67,  -43],\\n        [ -43,  -63],\\n        [  90,   44],\\n        [  47,   29],\\n        [  82,  -95],\\n        [ -11,  -40],\\n        [  15,    3],\\n        [  76,   49],\\n        [ -58,   26],\\n        [ -36,  -11],\\n        [  58,   64],\\n        [  76,   38]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006713471375405788, "start": 1731153118.7559211, "stop": 1731153118.7565932, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_3.py::test_matrix_of_having_94_integers", "location": ["tests58_30_3.py", 28, "test_matrix_of_having_94_integers"], "keywords": {"test_matrix_of_having_94_integers": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018782191909849644, "start": 1731153118.7755322, "stop": 1731153118.7757213, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_3.py::test_horizontal_matrix", "location": ["tests58_30_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 58, "message": "assert 0 == 189"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(94)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 94) + 1", ">           assert output == expected_result", "E           assert 0 == 189"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(94)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 94) + 1", ">           assert output == expected_result", "E           assert 0 == 189"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 58, "message": "assert 0 == 189"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003988719545304775, "start": 1731153118.755937, "stop": 1731153118.7563365, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_30_3.py::test_horizontal_matrix", "location": ["tests58_30_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014084321446716785, "start": 1731153118.7764378, "stop": 1731153118.7765794, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_30_3.py::test_vertical_matrix", "location": ["tests58_30_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'bool_'?"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 94", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", ">           output = submatrix_with_n_numbers(mat)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 77, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    mask = np.zeros(len(arr), dtype=np.bool)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/generated_answer.py", "lineno": 6, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'bool'.", "E           `np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'bool_'?"], "reprfuncargs": {"args": [["attr", "'bool'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 94", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", ">           output = submatrix_with_n_numbers(mat)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/tests58_30_3.py", "lineno": 77, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    mask = np.zeros(len(arr), dtype=np.bool)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q58/command_results_3/Folder_30/generated_answer.py", "lineno": 6, "message": "in submatrix_with_n_numbers"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def __getattr__(attr):", "        # Warn for expired attributes, and return a dummy function", "        # that always raises an exception.", "        import warnings", "        import math", "        try:", "            msg = __expired_functions__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "    ", "            def _expired(*args, **kwds):", "                raise RuntimeError(msg)", "    ", "            return _expired", "    ", "        # Emit warnings for deprecated attributes", "        try:", "            val, msg = __deprecated_attrs__[attr]", "        except KeyError:", "            pass", "        else:", "            warnings.warn(msg, DeprecationWarning, stacklevel=2)", "            return val", "    ", "        if attr in __future_scalars__:", "            # And future warnings for those that will change, but also give", "            # the AttributeError", "            warnings.warn(", "                f\"In the future `np.{attr}` will be defined as the \"", "                \"corresponding NumPy scalar.\", FutureWarning, stacklevel=2)", "    ", "        if attr in __former_attrs__:", ">           raise AttributeError(__former_attrs__[attr])", "E           AttributeError: module 'numpy' has no attribute 'bool'.", "E           `np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.", "E           The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:", "E               https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'bool_'?"], "reprfuncargs": {"args": [["attr", "'bool'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/__init__.py", "lineno": 324, "message": "AttributeError: module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'bool_'?"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006881759036332369, "start": 1731153118.7570648, "stop": 1731153118.7577534, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_3.py::test_vertical_matrix", "location": ["tests58_30_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_30_3.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011585396714508533, "start": 1731153118.7829084, "stop": 1731153118.7830253, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "bbf61cab836244db9c0a4493b021911c", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
