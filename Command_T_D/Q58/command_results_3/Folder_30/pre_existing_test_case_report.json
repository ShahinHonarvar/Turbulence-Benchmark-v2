{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -11,  -65],\\n        [   3,   63],\\n        [  64,  -96],\\n        [  69,  -28],\\n        [ -48,   65],\\n        [  -3,  -34],\\n        [  59,  -85],\\n        [  42,  -51],\\n        [ -54,   40],\\n        [  -8,   37],\\n        [ -46,  -59],\\n        [ -59,   58],\\n        [ -38,   20],\\n        [  69,  -67],\\n        [ -38,  -30],\\n        [ -70,  -11],\\n        [   2,  -29],\\n        [  70,   24],\\n        [  29,  -11],\\n        [ -81,  -17],\\n        [ -40,   68],\\n        [   0,   11],\\n        [  68,   55],\\n        [-100,  -72],\\n        [  24,  -57],\\n        [  23,   18],\\n        [ -31,    9],\\n        [ -54,   27],\\n        [  -9,   41],\\n        [  71,  -85],\\n        [  -4,   12],\\n        [ -27,  -32],\\n        [   5,  -68],\\n        [  16,   91],\\n        [ -71,  -93],\\n        [  67,  -43],\\n        [ -43,  -63],\\n        [  90,   44],\\n        [  47,   29],\\n        [  82,  -95],\\n        [ -11,  -40],\\n        [  15,    3],\\n        [  76,   49],\\n        [ -58,   26],\\n        [ -36,  -11],\\n        [  58,   64],\\n        [  76,   38]]))",
    0.00067
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.0004
  ],
  "test_vertical_matrix": [
    "failed",
    "AttributeError: module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. Did you mean: 'bool_'?",
    0.00069
  ]
}