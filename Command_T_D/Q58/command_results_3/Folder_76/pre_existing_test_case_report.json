{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00041
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -2, -56,  44,  76, -99,  43, -43, -91, -92, -97,  41,  82,  80,\\n         -83,  25,   4,  97, -14, -92,  88,   4,  52,  81, -61,  69,  73,\\n         -50,  42,   2, -89, -60, -59, -49,  58,  -4,  67,  76,  -9, -69,\\n           4,  45,  61,  65,  90, -37,  -2, -80,  89,  31,  55, -82,  81,\\n         -38,  86,  31, -79,  53,  70,  80,  25, -69,   4,  23,  21, -74,\\n           1, -75,  12, -79,  97,  35, -86,   9, -44, -61, -72,  94, -14,\\n          91, -23,  71, -41, -47, -82,  -4, -85, -81, -70,  26, -89,  72,\\n          -5,  -9,  86,  10, -17, -88,  43, -41,  76, -40,  31, 100,  95,\\n          35,  50, -29,  61, -57,  43,  64,   5, -39, -53,  28,  35, -80,\\n         -22, -21, -28,   9, -47,  80, -90, -66, -24,  -2, -81, -64,  86,\\n         -49,   5, -52, -97, -53,   4, -66,  -9,   3, -26,  21,  18, -56,\\n         -97, -71, -23, -31, -27,  16,  41,  28,   9,  18,  56,  29, -87,\\n          12,  36,  40]]))",
    0.00075
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[159]]))",
    0.00035
  ]
}