{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00041
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-14, -55,  99,  37, -41, -32,  26,  15, -28, -34, -66,   0,  98,\\n         -67,  65, 100,  60,  96, -83,  -4,  46, -51,  13, -93,  42, -87,\\n         -29,   7,  93, -60, -21, -43, -35,  75, -55,  -3, -66,  58,  48,\\n         -86,  44,  38, -33,  -3,  98, -95,  20, -48,   6, -68,  98, -74,\\n          35, -45, -71,  21,  92, -53, -48,  14,  96, -89,  80, -30, -73,\\n          44,  99, -89, -55, -40,  50,  32,   9,  44,  83,  28, -12,  48,\\n          -6, -48, -59,  18,  99,  95,  33,  15,  13, -32, -70,  95, -16,\\n         -59, -26, -63,  58,  56,  14, -88, -25, -84, -49, -65,  53, -74,\\n          94,  95,  42,   0, -60, -15, -80,  94,  51,  74, -12,  92,  76,\\n          16,   6,  79,  95, -87, -49,  91,  33,  27,  23, -73, -71, -97,\\n         -94, -42, -46, -59, -35,  94,  15, -77, -12, -63,  77,  19,  82,\\n         -23,  51, -54,  75, -23,  42,  47, -45, -63, -10,  86,   2, -40,\\n         -37,  18,  73, -51,  15,  20,  28, -58,  85,  30,  91, -13, -40,\\n          77, -90, -99,  36]]))",
    0.00072
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.00078
  ]
}