{
  "parameter(s)": [
    99
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_99_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -22,   84,   37,  -67,   42,   89,  -57,   98,  -84,   79,\\n           -6,   94,   37,   79,   -1,   23,   96,   89,   64,  -37,\\n           54,  -30,  -62,    9,   82,  -56,  -15,   59,    9,   35,\\n          -43,  -21,   37,   41,  -17,   62,   23,  -91,   66,  -75,\\n           77,   39,  -59,  -58,   88,  -89,   32,  -93,  -40,   97,\\n          -85,   -4,   97,   47,  -31,  -40,   65,  -73,   86,  -21,\\n           86, -100,   -8,  -83,   71,   11,  -61,    7,    3,  -30,\\n           67,  -51,  -33,  -69,  -12,  -10,   26,  -99,   98,  -63,\\n          -68,  -96,  -30,   96,  -91,  -84,   -7,    5,  -70,  -77,\\n           34,  -58,   63,    6,   92,    3,  -24,  -85,   20]]))",
    0.00072
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 199",
    0.00041
  ],
  "test_vertical_matrix": [
    "failed",
    "ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",
    0.00471
  ]
}