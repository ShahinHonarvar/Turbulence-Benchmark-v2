{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  51,  -88],\\n        [  47,   -3],\\n        [  36,  -93],\\n        [ -70,   49],\\n        [  48,  -62],\\n        [ -65,  -13],\\n        [  91,  -38],\\n        [ -69,   52],\\n        [ -82,  -32],\\n        [  -7,  -84],\\n        [ -63,  -38],\\n        [ -33,   66],\\n        [  13,   21],\\n        [  56,    9],\\n        [ -98,   66],\\n        [ -35,  -86],\\n        [  74,   81],\\n        [  -2,    8],\\n        [  10,   98],\\n        [  40,  -70],\\n        [ -63,  -61],\\n        [ -60,   48],\\n        [   4,  -50],\\n        [  90,   13],\\n        [ -59,   66],\\n        [ -96,   22],\\n        [ -61,   34],\\n        [ -33,  -60],\\n        [ -47,   81],\\n        [  22,  -39],\\n        [ -25,   79],\\n        [  66, -100],\\n        [ -65,  -39],\\n        [ -35,   34],\\n        [ -68,   58],\\n        [  72,   92],\\n        [ -32,  -82],\\n        [ -63,  -32],\\n        [  94,    2]]))",
    0.0021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00036
  ],
  "test_vertical_matrix": [
    "failed",
    "assert -12011 == 157",
    0.00484
  ]
}