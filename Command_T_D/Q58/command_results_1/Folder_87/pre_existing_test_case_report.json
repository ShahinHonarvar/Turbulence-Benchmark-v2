{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.0004
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -9,  36],\\n        [ 62,   8],\\n        [ 50,  59],\\n        [ 13, -93],\\n        [ 16,  28],\\n        [ 46,   1],\\n        [ 66, -77],\\n        [-92,  34],\\n        [-15, -85],\\n        [  3, -18],\\n        [ -8, -58],\\n        [-79, -22],\\n        [ 30,  86],\\n        [ 63, -90],\\n        [-41, -12],\\n        [ 72,  78],\\n        [ 19, -28],\\n        [-25,  12],\\n        [-37,  29],\\n        [-56, -11],\\n        [-18,  -8],\\n        [-85,  76],\\n        [ 68, -89],\\n        [-71, -52],\\n        [-27,  68],\\n        [ 53,  56],\\n        [ 36,  53],\\n        [-56,  -1],\\n        [-27, -98],\\n        [ 30,  46],\\n        [-39,  12],\\n        [ 10,  24],\\n        [-78, -81],\\n        [ 86,  87],\\n        [ 64,  48],\\n        [ 31,  59],\\n        [ 91,  47],\\n        [ 81, -31],\\n        [-55, -55],\\n        [ 41,  35],\\n        [ 19,   0],\\n        [ 57,  28],\\n        [ 87,  -8],\\n        [-25, -70],\\n        [ 63, -16],\\n        [-54, -34],\\n        [ -9, -65],\\n        [ 93,  96]]))",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00556
  ]
}