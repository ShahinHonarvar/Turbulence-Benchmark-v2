{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00058
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 95, -28],\\n        [-27,  46],\\n        [-76, -90],\\n        [ 57,  91],\\n        [ 77,  61],\\n        [-43,  66],\\n        [-35,  84],\\n        [ 40,  26],\\n        [ 26,  33],\\n        [-95,  -5],\\n        [-10,  27],\\n        [-54, -38],\\n        [-72, -47],\\n        [ 23,  44],\\n        [ 53, -33],\\n        [ 26,  16],\\n        [ 53,  46],\\n        [-58,  86],\\n        [-31, -36],\\n        [-32,  25],\\n        [ 46, -24],\\n        [ 26, -58],\\n        [ 43,  47],\\n        [ 58,  86],\\n        [-29, -18],\\n        [ 79, -69],\\n        [ 82,  23],\\n        [-71, -97],\\n        [-21, -62],\\n        [ -6,  96],\\n        [-71, -60],\\n        [ 81,  66],\\n        [  8,  50],\\n        [ 82, -71],\\n        [-40, -59],\\n        [-74, -42],\\n        [ 17, -20],\\n        [-96, -63],\\n        [ 36, -78],\\n        [ 52,   0]]))",
    0.00077
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00079
  ]
}