{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests33_36_2.py::test_compare_lengths_with_large_string", "location": ["tests33_36_2.py", 15, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001279790885746479, "start": 1731104440.879748, "stop": 1731104440.8798764, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests33_36_2.py::test_no_vowels_in_range", "location": ["tests33_36_2.py", 30, "test_no_vowels_in_range"], "keywords": {"test_no_vowels_in_range": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.002792648971081e-05, "start": 1731104440.879622, "stop": 1731104440.879712, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests33_36_2.py::test_repeat_consonant_char", "location": ["tests33_36_2.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012879108544439077, "start": 1731104440.879738, "stop": 1731104440.879867, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_36_2.py::test_repeat_consonant_char", "location": ["tests33_36_2.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 8, "message": "AssertionError: assert not ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm']\n +  where ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_consonant_char():", "        s = 'm' * (949 + 2)", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm']", "E        +  where ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_consonant_char():", "        s = 'm' * (949 + 2)", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm']", "E        +  where ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 8, "message": "AssertionError: assert not ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm']\n +  where ['mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm'] = return_vowels('mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00032877596095204353, "start": 1731104440.8800483, "stop": 1731104440.8803775, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_36_2.py::test_repeat_consonant_char", "location": ["tests33_36_2.py", 5, "test_repeat_consonant_char"], "keywords": {"test_repeat_consonant_char": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.293299470096827e-05, "start": 1731104440.888494, "stop": 1731104440.8885775, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw0>"}
{"nodeid": "tests33_36_2.py::test_no_vowels_in_range", "location": ["tests33_36_2.py", 30, "test_no_vowels_in_range"], "keywords": {"test_no_vowels_in_range": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 35, "message": "AssertionError: assert not ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...]\n +  where ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...] = return_vowels('vxwTcpNnKeSmFLHVSpOhUEBDMWnJgORjhSIKQnYevQXMDHbUqLwjkVIivCuWROFtwqhIyFokrxLQrAsxEdATUoFPbLRTaFkXAdFUzmudEdkhATtGUCZXTlMXurkbkDVwePivwVgrbPJkLDWXEODZREEDrzsFclgviOXwcYAJkADvVKqrwlUiMFxWfjpxczsveZIPbXXWybZcKfzqJAlzdAOoMFamyPXCleIGiPDAaTXfTLcLYdSAmXQpyJDPxgPrdOWKNnTraZupvFUhLLrHytLqbUoshNeEzofvCAcwNoTZVBWgcGbZWrBbeatOGencenqprvLizNSonoguLXqsNKsNIfzfQdUuhwWvGEMPFKqGMCrTVmSDTCXifDUzTnUJVacLTkrAodnrwjNfSuDQRufPpnuzcrvrIpTjnYlYWPudYhGddyjjCnZbFvVsJNLHlgkHlIhOFiDdTYMqNObjvyTndGyHBkTHAFjFDDHqzmcnaCbnOYtohMDGhOeQHXOehxYjHuQIPQMCojHronTcNyovtTuphpTqmsjnaCdNwDqLeLGNQerqUoSKzRuVHxSWjwHjjjkJyeXaYQMBJfKtTSvoePrMddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddLoUHqzYTG')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_no_vowels_in_range():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(604)) + 'd' * (949-604) + ''.join(", "        random.choice(string.ascii_letters) for _ in range(10))", "    ", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...]", "E        +  where ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...] = return_vowels('vxwTcpNnKeSmFLHVSpOhUEBDMWnJgORjhSIKQnYevQXMDHbUqLwjkVIivCuWROFtwqhIyFokrxLQrAsxEdATUoFPbLRTaFkXAdFUzmudEdkhATtGUCZXTlMXurkbkDVwePivwVgrbPJkLDWXEODZREEDrzsFclgviOXwcYAJkADvVKqrwlUiMFxWfjpxczsveZIPbXXWybZcKfzqJAlzdAOoMFamyPXCleIGiPDAaTXfTLcLYdSAmXQpyJDPxgPrdOWKNnTraZupvFUhLLrHytLqbUoshNeEzofvCAcwNoTZVBWgcGbZWrBbeatOGencenqprvLizNSonoguLXqsNKsNIfzfQdUuhwWvGEMPFKqGMCrTVmSDTCXifDUzTnUJVacLTkrAodnrwjNfSuDQRufPpnuzcrvrIpTjnYlYWPudYhGddyjjCnZbFvVsJNLHlgkHlIhOFiDdTYMqNObjvyTndGyHBkTHAFjFDDHqzmcnaCbnOYtohMDGhOeQHXOehxYjHuQIPQMCojHronTcNyovtTuphpTqmsjnaCdNwDqLeLGNQerqUoSKzRuVHxSWjwHjjjkJyeXaYQMBJfKtTSvoePrMddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddLoUHqzYTG')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 35, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_no_vowels_in_range():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(604)) + 'd' * (949-604) + ''.join(", "        random.choice(string.ascii_letters) for _ in range(10))", "    ", ">       assert not return_vowels(s)", "E       AssertionError: assert not ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...]", "E        +  where ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...] = return_vowels('vxwTcpNnKeSmFLHVSpOhUEBDMWnJgORjhSIKQnYevQXMDHbUqLwjkVIivCuWROFtwqhIyFokrxLQrAsxEdATUoFPbLRTaFkXAdFUzmudEdkhATtGUCZXTlMXurkbkDVwePivwVgrbPJkLDWXEODZREEDrzsFclgviOXwcYAJkADvVKqrwlUiMFxWfjpxczsveZIPbXXWybZcKfzqJAlzdAOoMFamyPXCleIGiPDAaTXfTLcLYdSAmXQpyJDPxgPrdOWKNnTraZupvFUhLLrHytLqbUoshNeEzofvCAcwNoTZVBWgcGbZWrBbeatOGencenqprvLizNSonoguLXqsNKsNIfzfQdUuhwWvGEMPFKqGMCrTVmSDTCXifDUzTnUJVacLTkrAodnrwjNfSuDQRufPpnuzcrvrIpTjnYlYWPudYhGddyjjCnZbFvVsJNLHlgkHlIhOFiDdTYMqNObjvyTndGyHBkTHAFjFDDHqzmcnaCbnOYtohMDGhOeQHXOehxYjHuQIPQMCojHronTcNyovtTuphpTqmsjnaCdNwDqLeLGNQerqUoSKzRuVHxSWjwHjjjkJyeXaYQMBJfKtTSvoePrMddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddLoUHqzYTG')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 35, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q33/command_results_2/Folder_36/tests33_36_2.py", "lineno": 35, "message": "AssertionError: assert not ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...]\n +  where ['TcpNnKeSmFLH', 'SpOhUEBDM', 'nJgORjhSIKQn', 'e', 'Q', 'MDHbUqL', ...] = return_vowels('vxwTcpNnKeSmFLHVSpOhUEBDMWnJgORjhSIKQnYevQXMDHbUqLwjkVIivCuWROFtwqhIyFokrxLQrAsxEdATUoFPbLRTaFkXAdFUzmudEdkhATtGUCZXTlMXurkbkDVwePivwVgrbPJkLDWXEODZREEDrzsFclgviOXwcYAJkADvVKqrwlUiMFxWfjpxczsveZIPbXXWybZcKfzqJAlzdAOoMFamyPXCleIGiPDAaTXfTLcLYdSAmXQpyJDPxgPrdOWKNnTraZupvFUhLLrHytLqbUoshNeEzofvCAcwNoTZVBWgcGbZWrBbeatOGencenqprvLizNSonoguLXqsNKsNIfzfQdUuhwWvGEMPFKqGMCrTVmSDTCXifDUzTnUJVacLTkrAodnrwjNfSuDQRufPpnuzcrvrIpTjnYlYWPudYhGddyjjCnZbFvVsJNLHlgkHlIhOFiDdTYMqNObjvyTndGyHBkTHAFjFDDHqzmcnaCbnOYtohMDGhOeQHXOehxYjHuQIPQMCojHronTcNyovtTuphpTqmsjnaCdNwDqLeLGNQerqUoSKzRuVHxSWjwHjjjkJyeXaYQMBJfKtTSvoePrMddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddLoUHqzYTG')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003972329432144761, "start": 1731104440.879876, "stop": 1731104440.8802733, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests33_36_2.py::test_no_vowels_in_range", "location": ["tests33_36_2.py", 30, "test_no_vowels_in_range"], "keywords": {"test_no_vowels_in_range": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.951399311423302e-05, "start": 1731104440.8885458, "stop": 1731104440.8886259, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw2>"}
{"nodeid": "tests33_36_2.py::test_compare_lengths_with_large_string", "location": ["tests33_36_2.py", 15, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01631294807884842, "start": 1731104440.880058, "stop": 1731104440.8963716, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests33_36_2.py::test_compare_lengths_with_large_string", "location": ["tests33_36_2.py", 15, "test_compare_lengths_with_large_string"], "keywords": {"test_compare_lengths_with_large_string": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.73390056565404e-05, "start": 1731104440.8966672, "stop": 1731104440.8967447, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests33_36_2.py::test_property_of_function", "location": ["tests33_36_2.py", 20, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.640306673943996e-05, "start": 1731104440.897062, "stop": 1731104440.897129, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests33_36_2.py::test_property_of_function", "location": ["tests33_36_2.py", 20, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004127549473196268, "start": 1731104440.8971958, "stop": 1731104440.897609, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw1>"}
{"nodeid": "tests33_36_2.py::test_property_of_function", "location": ["tests33_36_2.py", 20, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests33_36_2.py": 1, "Folder_36": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.59359323233366e-05, "start": 1731104440.8977835, "stop": 1731104440.8978395, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "47a85e04632642adbff32220df98a6eb", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
