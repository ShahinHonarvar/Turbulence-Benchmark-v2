{
  "parameter(s)": [
    62,
    78
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00013
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_large_range": [
    "failed",
    "assert [61, 62, 63, 64, 65, 66, ...] == [63, 64, 65, 66, 67, 68, ...]\n  At index 0 diff: 61 != 63\n  Left contains one more item: 78\n  Full diff:\n  - [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]\n  ?                                                                ----\n  + [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78]\n  ?  ++++++++",
    0.00075
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [62, 64, 66, 68, 70, 72, ...] == [126, 128, 13...134, 136, ...]\n  At index 0 diff: 62 != 126\n  Right contains 8 more items, first extra item: 144\n  Full diff:\n    [\n  +  62,\n  +  64,\n  +  66,...\n  \n  ...Full output truncated (24 lines hidden), use '-vv' to show",
    0.00099
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((78 - 62) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00032
  ]
}