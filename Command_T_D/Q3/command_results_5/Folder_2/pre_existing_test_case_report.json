{
  "parameter(s)": [
    15,
    39
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [] == [32, 34, 36, 38, 40, 42, ...]\n  Right contains 25 more items, first extra item: 32\n  Full diff:\n    [\n  +  ,\n  -  32,\n  -  34,\n  -  36,...\n  \n  ...Full output truncated (23 lines hidden), use '-vv' to show",
    0.00085
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [('1', '10'),...', '15'), ...] == [16, 17, 18, 19, 20, 21, ...]\n  At index 0 diff: ('1', '10') != 16\n  Left contains 814 more items, first extra item: ('1', '35')\n  Full diff:\n    [\n  -  16,\n  -  17,\n  -  18,...\n  \n  ...Full output truncated (1701 lines hidden), use '-vv' to show",
    0.03749
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((39 - 15) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00033
  ]
}