{
  "parameter(s)": [
    36,
    46
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [36, 38, 40, 42, 44] == [74, 76, 78, 80, 82, 84, ...]\n  At index 0 diff: 36 != 74\n  Right contains 6 more items, first extra item: 84\n  Full diff:\n  - [74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94]\n  + [36, 38, 40, 42, 44]",
    0.00036
  ],
  "test_large_range": [
    "failed",
    "assert [36, 37, 38, 39, 40, 41, ...] == [37, 38, 39, 40, 41, 42, ...]\n  At index 0 diff: 36 != 37\n  Right contains one more item: 47\n  Full diff:\n  - [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]\n  ?                                    --------\n  + [36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\n  ?  ++++",
    0.00075
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((46 - 36) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00021
  ]
}