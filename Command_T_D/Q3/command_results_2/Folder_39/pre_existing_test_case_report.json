{
  "parameter(s)": [
    20,
    30
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00015
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "assert [20, 22, 24, 26, 28] == [42, 44, 46, 48, 50, 52, ...]\n  At index 0 diff: 20 != 42\n  Right contains 6 more items, first extra item: 52\n  Full diff:\n  - [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62]\n  + [20, 22, 24, 26, 28]",
    0.00036
  ],
  "test_large_range": [
    "failed",
    "assert [20, 21, 22, 23, 24, 25, ...] == [21, 22, 23, 24, 25, 26, ...]\n  At index 0 diff: 20 != 21\n  Right contains one more item: 31\n  Full diff:\n  - [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n  ?                                    --------\n  + [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n  ?  ++++",
    0.0006
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((30 - 20) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00029
  ]
}