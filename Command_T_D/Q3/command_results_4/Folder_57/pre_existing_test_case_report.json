{
  "parameter(s)": [
    27,
    55
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00014
  ],
  "test_range_size": [
    "passed",
    "",
    0.0001
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [27, 28, 29, 30, 31, 32, ...] == [28, 29, 30, 31, 32, 33, ...]\n  At index 0 diff: 27 != 28\n  Right contains one more item: 56\n  Full diff:\n    [\n  +  27,\n     28,\n     29,...\n  \n  ...Full output truncated (28 lines hidden), use '-vv' to show",
    0.00071
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [28, 30, 32, 34, 36, 38, ...] == [56, 58, 60, 62, 64, 66, ...]\n  At index 0 diff: 28 != 56\n  Right contains 15 more items, first extra item: 84\n  Full diff:\n    [\n  -  56,\n  -  58,\n  ?  ^...\n  \n  ...Full output truncated (69 lines hidden), use '-vv' to show",
    0.00407
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((55 - 27) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00027
  ]
}