{
  "parameter(s)": [
    33,
    36
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00014
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "assert [2, 4, 6, 8, 10, 12, ...] == [68, 70, 72, 74]\n  At index 0 diff: 2 != 68\n  Left contains 14 more items, first extra item: 10\n  Full diff:\n  - [68, 70, 72, 74]\n  + [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36]",
    0.00053
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [34, 35, 36, 37]\n  At index 0 diff: 1 != 34\n  Left contains 32 more items, first extra item: 5\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (35 lines hidden), use '-vv' to show",
    0.00073
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 38 == ((36 - 33) + 1)\n +  where 38 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00021
  ]
}