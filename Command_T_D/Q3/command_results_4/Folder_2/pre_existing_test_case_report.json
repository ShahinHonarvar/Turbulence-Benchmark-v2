{
  "parameter(s)": [
    15,
    39
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00013
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    9e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [32, 34, 36, 38, 40, 42, ...]\n  At index 0 diff: 2 != 32\n  Left contains 39 more items, first extra item: 52\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (62 lines hidden), use '-vv' to show",
    0.00076
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [16, 17, 18, 19, 20, 21, ...]\n  At index 0 diff: 1 != 16\n  Left contains 1037 more items, first extra item: 26\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (1060 lines hidden), use '-vv' to show",
    0.00239
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 65 == ((39 - 15) + 1)\n +  where 65 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}