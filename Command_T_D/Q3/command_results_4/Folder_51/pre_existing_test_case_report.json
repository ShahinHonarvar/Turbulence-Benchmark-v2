{
  "parameter(s)": [
    1,
    8
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [1, 2, 3, 4, 5, 6, ...] == [4, 6, 8, 10, 12, 14, ...]\n  At index 0 diff: 1 != 4\n  Full diff:\n  - [4, 6, 8, 10, 12, 14, 16, 18]\n  + [1, 2, 3, 4, 5, 6, 7, 8]",
    0.00043
  ],
  "test_large_range": [
    "failed",
    "assert [1, 2, 3, 4, 5, 6, ...] == [2, 3, 4, 5, 6, 7, ...]\n  At index 0 diff: 1 != 2\n  Full diff:\n  - [2, 3, 4, 5, 6, 7, 8, 9]\n  ?                     ---\n  + [1, 2, 3, 4, 5, 6, 7, 8]\n  ?  +++",
    0.00042
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 36 == ((8 - 1) + 1)\n +  where 36 = sum([1, 2, 3, 4, 5, 6, ...])\n +    where [1, 2, 3, 4, 5, 6, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}