{
  "parameter(s)": [
    59,
    97
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [59, 60, 61, 62, 63, 64, ...] == [60, 61, 62, 63, 64, 65, ...]\n  At index 0 diff: 59 != 60\n  Right contains one more item: 98\n  Full diff:\n    [\n  +  59,\n     60,\n     61,...\n  \n  ...Full output truncated (38 lines hidden), use '-vv' to show",
    0.00082
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [60, 62, 64, 66, 68, 70, ...] == [120, 122, 12...128, 130, ...]\n  At index 0 diff: 60 != 120\n  Right contains 20 more items, first extra item: 158\n  Full diff:\n    [\n  -  120,\n  -  122,\n  -  124,...\n  \n  ...Full output truncated (75 lines hidden), use '-vv' to show",
    0.00286
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((97 - 59) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00023
  ]
}