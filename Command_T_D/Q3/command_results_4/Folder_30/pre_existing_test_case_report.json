{
  "parameter(s)": [
    55,
    98
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00017
  ],
  "test_range_size": [
    "passed",
    "",
    0.00013
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [56, 57, 58, 59, 60, 61, ...]\n  At index 0 diff: 1 != 56\n  Left contains 1053 more items, first extra item: 45\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (1095 lines hidden), use '-vv' to show",
    0.00287
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [112, 114, 11...120, 122, ...]\n  At index 0 diff: 2 != 112\n  Left contains 55 more items, first extra item: 90\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (97 lines hidden), use '-vv' to show",
    0.0008
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 100 == ((98 - 55) + 1)\n +  where 100 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00032
  ]
}