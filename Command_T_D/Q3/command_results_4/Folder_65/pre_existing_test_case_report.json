{
  "parameter(s)": [
    56,
    98
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [56, 58, 60, 62, 64, 66, ...] == [114, 116, 11...122, 124, ...]\n  At index 0 diff: 56 != 114\n  Right contains 22 more items, first extra item: 156\n  Full diff:\n    [\n  -  114,\n  -  116,\n  -  118,...\n  \n  ...Full output truncated (83 lines hidden), use '-vv' to show",
    0.00194
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [56, 57, 58, 59, 60, 61, ...] == [57, 58, 59, 60, 61, 62, ...]\n  At index 0 diff: 56 != 57\n  Right contains one more item: 99\n  Full diff:\n    [\n  +  56,\n     57,\n     58,...\n  \n  ...Full output truncated (42 lines hidden), use '-vv' to show",
    0.0005
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((98 - 56) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}