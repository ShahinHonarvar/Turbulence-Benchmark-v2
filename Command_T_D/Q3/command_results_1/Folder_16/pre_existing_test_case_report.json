{
  "parameter(s)": [
    33,
    36
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [68, 70, 72, 74]\n  At index 0 diff: 2 != 68\n  Left contains 33 more items, first extra item: 10\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (35 lines hidden), use '-vv' to show",
    0.0004
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [34, 35, 36, 37]\n  At index 0 diff: 1 != 34\n  Left contains 1031 more items, first extra item: 5\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (1033 lines hidden), use '-vv' to show",
    0.00179
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 38 == ((36 - 33) + 1)\n +  where 38 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}