{
  "parameter(s)": [
    31,
    34
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00013
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [64, 66, 68, 70]\n  At index 0 diff: 2 != 64\n  Left contains 31 more items, first extra item: 10\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (33 lines hidden), use '-vv' to show",
    0.00063
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [32, 33, 34, 35]\n  At index 0 diff: 1 != 32\n  Left contains 1029 more items, first extra item: 5\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (1031 lines hidden), use '-vv' to show",
    0.00253
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 36 == ((34 - 31) + 1)\n +  where 36 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00034
  ]
}