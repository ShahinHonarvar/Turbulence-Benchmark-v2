{
  "parameter(s)": [
    527,
    538
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00017
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "assert [528, 530, 532, 534, 536, 538] == [1056, 1058, ...64, 1066, ...]\n  At index 0 diff: 528 != 1056\n  Right contains 6 more items, first extra item: 1068\n  Full diff:\n  - [1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078]\n  + [528, 530, 532, 534, 536, 538]",
    0.00051
  ],
  "test_large_range": [
    "failed",
    "assert [527, 528, 52...531, 532, ...] == [528, 529, 53...532, 533, ...]\n  At index 0 diff: 527 != 528\n  Full diff:\n  - [528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539]\n  ?                                                       -----\n  + [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538]\n  ?  +++++",
    0.00094
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((538 - 527) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00036
  ]
}