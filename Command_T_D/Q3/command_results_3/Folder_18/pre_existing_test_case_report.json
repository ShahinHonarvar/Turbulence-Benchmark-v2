{
  "parameter(s)": [
    35,
    49
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00016
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00016
  ],
  "test_large_range": [
    "failed",
    "assert [35, 36, 37, 38, 39, 40, ...] == [36, 37, 38, 39, 40, 41, ...]\n  At index 0 diff: 35 != 36\n  Full diff:\n  - [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n  ?                                                        ----\n  + [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n  ?  ++++",
    0.00101
  ],
  "test_even_range": [
    "failed",
    "assert [36, 38, 40, 42, 44, 46, ...] == [72, 74, 76, 78, 80, 82, ...]\n  At index 0 diff: 36 != 72\n  Right contains 8 more items, first extra item: 86\n  Full diff:\n  - [72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100]\n  + [36, 38, 40, 42, 44, 46, 48]",
    0.00047
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((49 - 35) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00036
  ]
}