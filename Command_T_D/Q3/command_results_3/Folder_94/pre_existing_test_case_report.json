{
  "parameter(s)": [
    28,
    40
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    0.0001
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "assert [58, 60, 62, 64, 66, 68, ...] == [58, 60, 62, 64, 66, 68, ...]\n  Right contains one more item: 82\n  Full diff:\n  - [58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82]\n  ?                                                ----\n  + [58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80]",
    0.00082
  ],
  "test_large_range": [
    "failed",
    "assert [29, 30, 31, 32, 33, 34, ...] == [29, 30, 31, 32, 33, 34, ...]\n  Right contains one more item: 41\n  Full diff:\n  - [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]\n  ?                                                ----\n  + [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]",
    0.00083
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 12 == ((40 - 28) + 1)\n +  where 12 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00026
  ]
}