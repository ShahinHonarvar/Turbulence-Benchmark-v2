{
  "parameter(s)": [
    37,
    51
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00017
  ],
  "test_range_size": [
    "passed",
    "",
    0.00015
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "assert [38, 40, 42, 44, 46, 48, ...] == [76, 78, 80, 82, 84, 86, ...]\n  At index 0 diff: 38 != 76\n  Right contains 8 more items, first extra item: 90\n  Full diff:\n  - [76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104]\n  + [38, 40, 42, 44, 46, 48, 50]",
    0.00037
  ],
  "test_large_range": [
    "failed",
    "assert [37, 38, 39, 40, 41, 42, ...] == [38, 39, 40, 41, 42, 43, ...]\n  At index 0 diff: 37 != 38\n  Right contains one more item: 52\n  Full diff:\n  - [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n  ?                                                    --------\n  + [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n  ?  ++++",
    0.001
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((51 - 37) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00035
  ]
}