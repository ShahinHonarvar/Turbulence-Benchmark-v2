{
  "parameter(s)": [
    68,
    86
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00017
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_large_range": [
    "failed",
    "assert [68, 69, 70, 71, 72, 73, ...] == [69, 70, 71, 72, 73, 74, ...]\n  At index 0 diff: 68 != 69\n  Full diff:\n  - [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87]\n  ?                                                                        ----\n  + [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86]\n  ?  ++++",
    0.00137
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [68, 70, 72, 74, 76, 78, ...] == [138, 140, 14...146, 148, ...]\n  At index 0 diff: 68 != 138\n  Right contains 9 more items, first extra item: 158\n  Full diff:\n    [\n  -  138,\n  -  140,\n  -  142,...\n  \n  ...Full output truncated (31 lines hidden), use '-vv' to show",
    0.00094
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((86 - 68) + 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00035
  ]
}