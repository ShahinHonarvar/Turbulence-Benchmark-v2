{
  "parameter(s)": [
    28,
    32
  ],
  "test_positive_range": [
    "passed",
    "",
    0.00013
  ],
  "test_large_range": [
    "passed",
    "",
    0.00022
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_minimal_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [32, 31, 30, 29, 28, 27, ...] == [-58, -60, -62, -64, -66]\n  At index 0 diff: 32 != -58\n  Left contains 28 more items, first extra item: 27\n  Full diff:\n    [\n  +  32,\n  +  31,\n  +  30,...\n  \n  ...Full output truncated (39 lines hidden), use '-vv' to show",
    0.00085
  ],
  "test_range_sum": [
    "failed",
    "assert 528 < 0\n +  where 528 = sum([32, 31, 30, 29, 28, 27, ...])\n +    where [32, 31, 30, 29, 28, 27, ...] = all_neg_ints_inclusive([-1, -2, -3, -4, -5, -6, ...])",
    0.00018
  ],
  "test_neg_ones_range_sum": [
    "failed",
    "assert 561 == -((32 - 28) + 1)\n +  where 561 = sum([33, 32, 31, 30, 29, 28, ...])\n +    where [33, 32, 31, 30, 29, 28, ...] = all_neg_ints_inclusive([-1, -1, -1, -1, -1, -1, ...])",
    0.0002
  ]
}