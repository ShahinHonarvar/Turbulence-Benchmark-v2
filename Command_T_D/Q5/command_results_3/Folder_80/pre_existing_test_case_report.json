{
  "parameter(s)": [
    64,
    66
  ],
  "test_positive_range": [
    "passed",
    "",
    9e-05
  ],
  "test_large_range": [
    "passed",
    "",
    0.00019
  ],
  "test_zero_range": [
    "passed",
    "",
    8e-05
  ],
  "test_minimal_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [0, 1, 2, 3, 4, 5, ...] == [-130, -132, -134]\n  At index 0 diff: 0 != -130\n  Left contains 64 more items, first extra item: 3\n  Full diff:\n    [\n  +  0,\n  +  1,\n  +  2,...\n  \n  ...Full output truncated (71 lines hidden), use '-vv' to show",
    0.0013
  ],
  "test_range_sum": [
    "failed",
    "assert 2211 < 0\n +  where 2211 = sum([0, 1, 2, 3, 4, 5, ...])\n +    where [0, 1, 2, 3, 4, 5, ...] = all_neg_ints_inclusive([-1, -2, -3, -4, -5, -6, ...])",
    0.00028
  ],
  "test_neg_ones_range_sum": [
    "failed",
    "assert 2278 == -((66 - 64) + 1)\n +  where 2278 = sum([0, 1, 2, 3, 4, 5, ...])\n +    where [0, 1, 2, 3, 4, 5, ...] = all_neg_ints_inclusive([-1, -1, -1, -1, -1, -1, ...])",
    0.0002
  ]
}