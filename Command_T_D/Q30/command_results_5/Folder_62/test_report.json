{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_62_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_62_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012868002522736788, "start": 1731098151.9927027, "stop": 1731098151.9928317, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_62_5.py::test_compare_length_of_strings", "location": ["tests30_62_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.275507181882858e-05, "start": 1731098151.9926531, "stop": 1731098151.9927459, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_62_5.py::test_string_of_length_one", "location": ["tests30_62_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017106789164245129, "start": 1731098151.9927444, "stop": 1731098151.992916, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_62_5.py::test_compare_length_of_strings", "location": ["tests30_62_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('apfSglb1nPYULs9hrReA ')\n +  and   21 = len('apfSglb1nPYULs9hrReA ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('apfSglb1nPYULs9hrReA ')", "E        +  and   21 = len('apfSglb1nPYULs9hrReA ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('apfSglb1nPYULs9hrReA ')", "E        +  and   21 = len('apfSglb1nPYULs9hrReA ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('apfSglb1nPYULs9hrReA ')\n +  and   21 = len('apfSglb1nPYULs9hrReA ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022629299201071262, "start": 1731098151.9929159, "stop": 1731098151.9931426, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_62_5.py::test_string_of_length_one", "location": ["tests30_62_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 8, "message": "AssertionError: assert ' ' == 'o '\n  Strings contain only whitespace, escaping them using repr()\n  - 'o '\n  ?  -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'o' + ' '", "E       AssertionError: assert ' ' == 'o '", "E         Strings contain only whitespace, escaping them using repr()", "E         - 'o '", "E         ?  -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'o' + ' '", "E       AssertionError: assert ' ' == 'o '", "E         Strings contain only whitespace, escaping them using repr()", "E         - 'o '", "E         ?  -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 8, "message": "AssertionError: assert ' ' == 'o '\n  Strings contain only whitespace, escaping them using repr()\n  - 'o '\n  ?  -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003404970047995448, "start": 1731098151.993108, "stop": 1731098151.993449, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_62_5.py::test_string_of_length_one", "location": ["tests30_62_5.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013066909741610289, "start": 1731098152.0022755, "stop": 1731098152.0024068, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_62_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_62_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 1000 == (2 * 1000)", "E        +  where 1000 = lenwhereinsert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_5/Folder_62/tests30_62_5.py", "lineno": 18, "message": "AssertionError: assert 1000 == (2 * 1000)\n +  where 1000 = lenn +    whereinsert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027476693503558636, "start": 1731098151.9930093, "stop": 1731098151.9932845, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_62_5.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_62_5.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001041140640154481, "start": 1731098152.001775, "stop": 1731098152.0018797, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_62_5.py::test_compare_length_of_strings", "location": ["tests30_62_5.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_62_5.py": 1, "Folder_62": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011090503539890051, "start": 1731098152.0016859, "stop": 1731098152.0017974, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "2b1c0050d2a544f4b12b31bfbbb6458e", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
