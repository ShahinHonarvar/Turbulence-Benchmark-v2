{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests30_21_4.py::test_compare_length_of_strings", "location": ["tests30_21_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001095850020647049, "start": 1731097142.1580024, "stop": 1731097142.1581123, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_21_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_21_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012609409168362617, "start": 1731097142.1580093, "stop": 1731097142.158136, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_21_4.py::test_string_of_length_one", "location": ["tests30_21_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000163477030582726, "start": 1731097142.1580915, "stop": 1731097142.1582558, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_21_4.py::test_compare_length_of_strings", "location": ["tests30_21_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('NVSjeCYa4RywnuUpzkKL ')\n +  and   21 = len('NVSjeCYa4RywnuUpzkKL ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('NVSjeCYa4RywnuUpzkKL ')", "E        +  and   21 = len('NVSjeCYa4RywnuUpzkKL ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_compare_length_of_strings():", "        s = ''.join(random.sample(string.ascii_letters + string.digits, k=20))", "        s = s + ' '", "        returned_string = insert_before_character(s)", ">       assert len(s) < len(returned_string)", "E       AssertionError: assert 21 < 21", "E        +  where 21 = len('NVSjeCYa4RywnuUpzkKL ')", "E        +  and   21 = len('NVSjeCYa4RywnuUpzkKL ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 32, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 32, "message": "AssertionError: assert 21 < 21\n +  where 21 = len('NVSjeCYa4RywnuUpzkKL ')\n +  and   21 = len('NVSjeCYa4RywnuUpzkKL ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027059298008680344, "start": 1731097142.1582832, "stop": 1731097142.158554, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_21_4.py::test_string_of_length_one", "location": ["tests30_21_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 8, "message": "AssertionError: assert ' ' == 'K '\n  Strings contain only whitespace, escaping them using repr()\n  - 'K '\n  ?  -\n  + ' '"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'K' + ' '", "E       AssertionError: assert ' ' == 'K '", "E         Strings contain only whitespace, escaping them using repr()", "E         - 'K '", "E         ?  -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = ' '", ">       assert insert_before_character(s) == 'K' + ' '", "E       AssertionError: assert ' ' == 'K '", "E         Strings contain only whitespace, escaping them using repr()", "E         - 'K '", "E         ?  -", "E         + ' '"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 8, "message": "AssertionError: assert ' ' == 'K '\n  Strings contain only whitespace, escaping them using repr()\n  - 'K '\n  ?  -\n  + ' '"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004757259739562869, "start": 1731097142.1585112, "stop": 1731097142.1589873, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_21_4.py::test_string_of_length_one", "location": ["tests30_21_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.574496652930975e-05, "start": 1731097142.1674209, "stop": 1731097142.1675174, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw0>"}
{"nodeid": "tests30_21_4.py::test_compare_length_of_strings", "location": ["tests30_21_4.py", 27, "test_compare_length_of_strings"], "keywords": {"test_compare_length_of_strings": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010576797649264336, "start": 1731097142.1671875, "stop": 1731097142.1672938, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw2>"}
{"nodeid": "tests30_21_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_21_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 18, "message": "AssertionError: assert 500 == (2 * 1000)\n +  where 500 = len('KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK')\n +    where 'KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK' = insert_before_charactern +  and   1000 = len}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 500 == (2 * 1000)", "E        +  where 500 = lenwhere 'KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK' = insert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_length_of_large_string_of_only_specified_character():", "        s = ' ' * 1000", ">       assert len(insert_before_character(s)) == 2 * len(s)", "E       AssertionError: assert 500 == (2 * 1000)", "E        +  where 500 = lenwhere 'KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK' = insert_before_characterand   1000 = lenreprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 18, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q30/command_results_4/Folder_21/tests30_21_4.py", "lineno": 18, "message": "AssertionError: assert 500 == (2 * 1000)\n +  where 500 = len('KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK')\n +    where 'KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK' = insert_before_charactern +  and   1000 = len}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00037022901233285666, "start": 1731097142.15833, "stop": 1731097142.1587002, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw1>"}
{"nodeid": "tests30_21_4.py::test_length_of_large_string_of_only_specified_character", "location": ["tests30_21_4.py", 15, "test_length_of_large_string_of_only_specified_character"], "keywords": {"test_length_of_large_string_of_only_specified_character": 1, "tests30_21_4.py": 1, "Folder_21": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010331394150853157, "start": 1731097142.1672537, "stop": 1731097142.1673577, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "db647eede5924026b38285ea48167ed1", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
