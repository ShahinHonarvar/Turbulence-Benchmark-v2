{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests51_43_5.py::test_list_of_strings_of_length_two", "location": ["tests51_43_5.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_43_5.py": 1, "Folder_43": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.795092046260834e-05, "start": 1738506293.4923556, "stop": 1738506293.4924538, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f96a531d37be4f1abf71bf68c1e94baf", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_43_5.py::test_list_of_strings_of_length_two", "location": ["tests51_43_5.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_43_5.py": 1, "Folder_43": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 984, "message": "re.error: unbalanced parenthesis at position 57"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_of_length_two():", "        l = ['aa', 'aa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_5/Folder_43/tests51_43_5.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return bool(re.findall('(?=([a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)', s))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_5/Folder_43/generated_answer.py", "lineno": 4, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "        p.state.flags = fix_flags(str, p.state.flags)", "    ", "        if source.next is not None:", "            assert source.next == \")\"", ">           raise source.error(\"unbalanced parenthesis\")", "E           re.error: unbalanced parenthesis at position 57"], "reprfuncargs": {"args": [["str", "'(?=([a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)'"], ["flags", "0"], ["state", "<re._parser.State object at 0x7db4c2e10a40>"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 984, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_of_length_two():", "        l = ['aa', 'aa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_5/Folder_43/tests51_43_5.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return bool(re.findall('(?=([a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)', s))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_5/Folder_43/generated_answer.py", "lineno": 4, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def parse(str, flags=0, state=None):", "        # parse 're' pattern into list of (opcode, argument) tuples", "    ", "        source = Tokenizer(str)", "    ", "        if state is None:", "            state = State()", "        state.flags = flags", "        state.str = str", "    ", "        p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)", "        p.state.flags = fix_flags(str, p.state.flags)", "    ", "        if source.next is not None:", "            assert source.next == \")\"", ">           raise source.error(\"unbalanced parenthesis\")", "E           re.error: unbalanced parenthesis at position 57"], "reprfuncargs": {"args": [["str", "'(?=([a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)[a-z]+[A-Z][a-z]?)'"], ["flags", "0"], ["state", "<re._parser.State object at 0x7db4c2e10a40>"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 984, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 984, "message": "re.error: unbalanced parenthesis at position 57"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002677254378795624, "start": 1738506293.4925845, "stop": 1738506293.4928524, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f96a531d37be4f1abf71bf68c1e94baf", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_43_5.py::test_list_of_strings_of_length_two", "location": ["tests51_43_5.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_43_5.py": 1, "Folder_43": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011731777340173721, "start": 1738506293.5237048, "stop": 1738506293.5238228, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f96a531d37be4f1abf71bf68c1e94baf", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
