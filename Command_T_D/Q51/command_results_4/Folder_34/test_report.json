{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests51_34_4.py::test_list_of_strings_of_length_two", "location": ["tests51_34_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_34_4.py": 1, "Folder_34": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.486358612775803e-05, "start": 1738506224.9698057, "stop": 1738506224.9699008, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ab80ca8de07b43209eab08d65f3a4c83", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_34_4.py::test_list_of_strings_of_length_two", "location": ["tests51_34_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_34_4.py": 1, "Folder_34": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 300, "message": "TypeError: unsupported operand type(s) for &: 'str' and 'RegexFlag'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_of_length_two():", "        l = ['aa', 'aa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/tests51_34_4.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return bool(re.findall('(?i)(?<=.)(.*?)(?=.)', *lst))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/generated_answer.py", "lineno": 4, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _compile(pattern, flags):", "        # internal: compile pattern", "        if isinstance(flags, RegexFlag):", "            flags = flags.value", "        try:", "            return _cache2[type(pattern), pattern, flags]", "        except KeyError:", "            pass", "    ", "        key = (type(pattern), pattern, flags)", "        # Item in _cache should be moved to the end if found.", "        p = _cache.pop(key, None)", "        if p is None:", "            if isinstance(pattern, Pattern):", "                if flags:", "                    raise ValueError(", "                        \"cannot process flags argument with a compiled pattern\")", "                return pattern", "            if not _compiler.isstring(pattern):", "                raise TypeError(\"first argument must be string or compiled pattern\")", ">           if flags & T:", "E           TypeError: unsupported operand type(s) for &: 'str' and 'RegexFlag'"], "reprfuncargs": {"args": [["pattern", "'(?i)(?<=.)(.*?)(?=.)'"], ["flags", "'aa'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 300, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_of_length_two():", "        l = ['aa', 'aa']", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/tests51_34_4.py", "lineno": 9, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return bool(re.findall('(?i)(?<=.)(.*?)(?=.)', *lst))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q51/command_results_4/Folder_34/generated_answer.py", "lineno": 4, "message": "in if_contains_anagrams"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _compile(pattern, flags):", "        # internal: compile pattern", "        if isinstance(flags, RegexFlag):", "            flags = flags.value", "        try:", "            return _cache2[type(pattern), pattern, flags]", "        except KeyError:", "            pass", "    ", "        key = (type(pattern), pattern, flags)", "        # Item in _cache should be moved to the end if found.", "        p = _cache.pop(key, None)", "        if p is None:", "            if isinstance(pattern, Pattern):", "                if flags:", "                    raise ValueError(", "                        \"cannot process flags argument with a compiled pattern\")", "                return pattern", "            if not _compiler.isstring(pattern):", "                raise TypeError(\"first argument must be string or compiled pattern\")", ">           if flags & T:", "E           TypeError: unsupported operand type(s) for &: 'str' and 'RegexFlag'"], "reprfuncargs": {"args": [["pattern", "'(?i)(?<=.)(.*?)(?=.)'"], ["flags", "'aa'"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 300, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 300, "message": "TypeError: unsupported operand type(s) for &: 'str' and 'RegexFlag'"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010741502046585083, "start": 1738506224.970028, "stop": 1738506224.970136, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ab80ca8de07b43209eab08d65f3a4c83", "node": "<WorkerController gw0>"}
{"nodeid": "tests51_34_4.py::test_list_of_strings_of_length_two", "location": ["tests51_34_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests51_34_4.py": 1, "Folder_34": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011511612683534622, "start": 1738506224.9819102, "stop": 1738506224.9820263, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ab80ca8de07b43209eab08d65f3a4c83", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
