{
  "parameter(s)": [
    16,
    28,
    64
  ],
  "test_float_numbers": [
    "failed",
    "assert [6.782329983125268, 6.855654600401044, 6.928203230275509, 7.0, 7.0710678118654755, 7.14142842854285, ...] == 6.6332495807108\n +  where [6.782329983125268, 6.855654600401044, 6.928203230275509, 7.0, 7.0710678118654755, 7.14142842854285, ...] = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00023
  ],
  "test_n_th_smallest_is_in_range": [
    "failed",
    "assert [64972, 64973, 64974, 64975, 64976, 64977, ...] in [0, 1, 2, 3, 4, 5, ...]\n +  where [64972, 64973, 64974, 64975, 64976, 64977, ...] = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00347
  ],
  "test_unsorted_large_range": [
    "failed",
    "assert [1036, 1037, 1038, 1039, 1040, 1041, ...] == -79\n +  where [1036, 1037, 1038, 1039, 1040, 1041, ...] = find_n_th_smallest_num([649, 962, -161, 331, -550, 921, ...])",
    0.00114
  ]
}