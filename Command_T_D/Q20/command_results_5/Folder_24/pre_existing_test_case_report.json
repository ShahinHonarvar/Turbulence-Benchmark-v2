{
  "parameter(s)": [
    6,
    43,
    80
  ],
  "test_float_numbers": [
    "failed",
    "assert [6.6332495807108, 7.0710678118654755, 7.483314773547883, 7.874007874011811, 8.246211251235321, 8.602325267042627, ...] == 7.0\n +  where [6.6332495807108, 7.0710678118654755, 7.483314773547883, 7.874007874011811, 8.246211251235321, 8.602325267042627, ...] = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00026
  ],
  "test_unsorted_large_range": [
    "failed",
    "assert [-957, -951, -945, -939, -933, -927, ...] == -541\n +  where [-957, -951, -945, -939, -933, -927, ...] = find_n_th_smallest_num([-1000, -999, -998, -997, -996, -995, ...])",
    0.00091
  ],
  "test_n_th_smallest_is_in_range": [
    "failed",
    "assert [43, 49, 55, 61, 67, 73, ...] in [0, 1, 2, 3, 4, 5, ...]\n +  where [43, 49, 55, 61, 67, 73, ...] = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00382
  ]
}