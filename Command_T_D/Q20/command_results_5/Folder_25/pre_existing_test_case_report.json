{
  "parameter(s)": [
    5,
    13,
    40
  ],
  "test_float_numbers": [
    "failed",
    "assert [3.7416573867739413, 4.358898943540674, 4.898979485566356, 5.385164807134504, 5.830951894845301, 6.244997998398398] == 4.242640687119285\n +  where [3.7416573867739413, 4.358898943540674, 4.898979485566356, 5.385164807134504, 5.830951894845301, 6.244997998398398] = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00023
  ],
  "test_unsorted_large_range": [
    "failed",
    "assert [-987, -982, -977, -972, -967, -962] == -379\n +  where [-987, -982, -977, -972, -967, -962] = find_n_th_smallest_num([973, 777, -430, -926, 225, -135, ...])",
    0.00077
  ],
  "test_n_th_smallest_is_in_range": [
    "failed",
    "assert [13, 18, 23, 28, 33, 38] in [0, 1, 2, 3, 4, 5, ...]\n +  where [13, 18, 23, 28, 33, 38] = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.0015
  ]
}