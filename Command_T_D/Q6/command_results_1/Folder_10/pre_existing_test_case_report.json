{
  "parameter(s)": [
    48,
    74
  ],
  "test_positive_range": [
    "passed",
    "",
    0.00012
  ],
  "test_large_range": [
    "passed",
    "",
    0.00016
  ],
  "test_minimal_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [48, 49, 50, 51, 52, 53, ...] == [-100, -102, ...08, -110, ...]\n  At index 0 diff: 48 != -100\n  Left contains 2 more items, first extra item: 73\n  Full diff:\n    [\n  -  -100,\n  -  -102,\n  -  -104,...\n  \n  ...Full output truncated (51 lines hidden), use '-vv' to show",
    0.00071
  ],
  "test_zero_range": [
    "failed",
    "AssertionError: assert [48, 49, 50, 51, 52, 53, ...] == []\n  Left contains 27 more items, first extra item: 48\n  Full diff:\n    [\n  -  ,\n  +  48,\n  +  49,\n  +  50,...\n  \n  ...Full output truncated (25 lines hidden), use '-vv' to show",
    0.00047
  ],
  "test_neg_ones_range_sum": [
    "failed",
    "assert 1647 == -((74 - 48) - 1)\n +  where 1647 = sum([48, 49, 50, 51, 52, 53, ...])\n +    where [48, 49, 50, 51, 52, 53, ...] = all_neg_ints_exclusive([-1, -1, -1, -1, -1, -1, ...])",
    0.00026
  ]
}