{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_30_4.py::test_strings_of_size_equal_to_72", "location": ["tests39_30_4.py", 5, "test_strings_of_size_equal_to_72"], "keywords": {"test_strings_of_size_equal_to_72": 1, "tests39_30_4.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.635370224714279e-05, "start": 1738504195.5740871, "stop": 1738504195.5741842, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f94f6d080a214872a35748d84b611c27", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_30_4.py::test_strings_of_size_equal_to_72", "location": ["tests39_30_4.py", 5, "test_strings_of_size_equal_to_72"], "keywords": {"test_strings_of_size_equal_to_72": 1, "tests39_30_4.py": 1, "Folder_30": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q39/command_results_4/Folder_30/tests39_30_4.py", "lineno": 10, "message": "AssertionError: assert 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' == [' ', '!', '#', '$', '%', '&', ...]\n +  where 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' = return_n_greatest_chars('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')\n +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_72():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=72))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' == [' ', '!', '#', '$', '%', '&', ...]", "E            +  where 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' = return_n_greatest_chars('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')", "E            +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_30/tests39_30_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_72():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=72))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' == [' ', '!', '#', '$', '%', '&', ...]", "E            +  where 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' = return_n_greatest_chars('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')", "E            +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/command_results_4/Folder_30/tests39_30_4.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q39/command_results_4/Folder_30/tests39_30_4.py", "lineno": 10, "message": "AssertionError: assert 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' == [' ', '!', '#', '$', '%', '&', ...]\n +  where 'ws8h-<AK!5F}#TgX%?mC|9)iUcp&$lbz:/LWu1G]DyEIt+rBH*ef~vnV^a30.OJ,2xq Pj{_' = return_n_greatest_chars('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')\n +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('_{jP qx2,JO.03a^Vnv~fe*HBr+tIEyD]G1uWL/:zbl$&pcUi)9|Cm?%XgT#}F5!KA<-h8sw')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00025180820375680923, "start": 1738504195.574317, "stop": 1738504195.574569, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f94f6d080a214872a35748d84b611c27", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_30_4.py::test_strings_of_size_equal_to_72", "location": ["tests39_30_4.py", 5, "test_strings_of_size_equal_to_72"], "keywords": {"test_strings_of_size_equal_to_72": 1, "tests39_30_4.py": 1, "Folder_30": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011109188199043274, "start": 1738504195.5833058, "stop": 1738504195.5834172, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f94f6d080a214872a35748d84b611c27", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
