{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests57_86_5.py::test_matrix_of_several_numbers", "location": ["tests57_86_5.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001742788590490818, "start": 1731152325.22855, "stop": 1731152325.228725, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_86_5.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001634999644011259, "start": 1731152325.2278137, "stop": 1731152325.2279778, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_86_5.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015752296894788742, "start": 1731152325.2262661, "stop": 1731152325.2264242, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_several_numbers", "location": ["tests57_86_5.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_several_numbers():", "        if -394 <= 0:", "            row = '1 2 3 4 5 6 7 8 9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", "        else:", "            row = '-1 -2 -3 -4 -5 -6 -7 -8 -9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/tests57_86_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return np.where(np.sum(m, axis=2) == -394)[0].tolist()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/generated_answer.py", "lineno": 5, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 2313, "message": "in sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs):", "        passkwargs = {k: v for k, v in kwargs.items()", "                      if v is not np._NoValue}", "    ", "        if type(obj) is not mu.ndarray:", "            try:", "                reduction = getattr(obj, method)", "            except AttributeError:", "                pass", "            else:", "                # This branch is needed for reductions like any which don't", "                # support a dtype.", "                if dtype is not None:", "                    return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)", "                else:", "                    return reduction(axis=axis, out=out, **passkwargs)", "    ", ">       return ufunc.reduce(obj, axis, dtype, out, **passkwargs)", "E       numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"], "reprfuncargs": {"args": [["obj", "array([[1, 2, 3, 4, 5, 6, 7, 8, 9],\n       [1, 2, 3, 4, 5, 6, 7, 8, 9],\n       [1, 2, 3, 4, 5, 6, 7, 8, 9]])"], ["ufunc", "<ufunc 'add'>"], ["method", "'sum'"], ["axis", "2"], ["dtype", "None"], ["out", "None"], ["kwargs", "{'initial': <no value>, 'keepdims': <no value>, 'where': <no value>}"], ["passkwargs", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "AxisError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_several_numbers():", "        if -394 <= 0:", "            row = '1 2 3 4 5 6 7 8 9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", "        else:", "            row = '-1 -2 -3 -4 -5 -6 -7 -8 -9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/tests57_86_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return np.where(np.sum(m, axis=2) == -394)[0].tolist()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/generated_answer.py", "lineno": 5, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 2313, "message": "in sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs):", "        passkwargs = {k: v for k, v in kwargs.items()", "                      if v is not np._NoValue}", "    ", "        if type(obj) is not mu.ndarray:", "            try:", "                reduction = getattr(obj, method)", "            except AttributeError:", "                pass", "            else:", "                # This branch is needed for reductions like any which don't", "                # support a dtype.", "                if dtype is not None:", "                    return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)", "                else:", "                    return reduction(axis=axis, out=out, **passkwargs)", "    ", ">       return ufunc.reduce(obj, axis, dtype, out, **passkwargs)", "E       numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"], "reprfuncargs": {"args": [["obj", "array([[1, 2, 3, 4, 5, 6, 7, 8, 9],\n       [1, 2, 3, 4, 5, 6, 7, 8, 9],\n       [1, 2, 3, 4, 5, 6, 7, 8, 9]])"], ["ufunc", "<ufunc 'add'>"], ["method", "'sum'"], ["axis", "2"], ["dtype", "None"], ["out", "None"], ["kwargs", "{'initial': <no value>, 'keepdims': <no value>, 'where': <no value>}"], ["passkwargs", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "AxisError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002600886858999729, "start": 1731152325.2290056, "stop": 1731152325.231607, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_several_numbers", "location": ["tests57_86_5.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011475896462798119, "start": 1731152325.2709157, "stop": 1731152325.2710314, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_86_5.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_and_zeros():", "        if -394 == 0:", "            element = 1", "        else:", "            element = 0", "        for i in range(1, 11):", "            mat = ''", "            for j in range(i):", "                row = (f'{element} ' * i) + ';'", "                mat += row", "            mat = mat[:-1]", "            mat = np.matrix(mat)", "            mat[0, 0] = -394", "            if -394 == 0:", "                assert len(submatrix_with_particular_sum(mat)) == 1", "            else:", ">               assert len(submatrix_with_particular_sum(mat)) == i * i"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/tests57_86_5.py", "lineno": 69, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return np.where(np.sum(m, axis=2) == -394)[0].tolist()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/generated_answer.py", "lineno": 5, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 2313, "message": "in sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs):", "        passkwargs = {k: v for k, v in kwargs.items()", "                      if v is not np._NoValue}", "    ", "        if type(obj) is not mu.ndarray:", "            try:", "                reduction = getattr(obj, method)", "            except AttributeError:", "                pass", "            else:", "                # This branch is needed for reductions like any which don't", "                # support a dtype.", "                if dtype is not None:", "                    return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)", "                else:", "                    return reduction(axis=axis, out=out, **passkwargs)", "    ", ">       return ufunc.reduce(obj, axis, dtype, out, **passkwargs)", "E       numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"], "reprfuncargs": {"args": [["obj", "array([[-394]])"], ["ufunc", "<ufunc 'add'>"], ["method", "'sum'"], ["axis", "2"], ["dtype", "None"], ["out", "None"], ["kwargs", "{'initial': <no value>, 'keepdims': <no value>, 'where': <no value>}"], ["passkwargs", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "AxisError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_and_zeros():", "        if -394 == 0:", "            element = 1", "        else:", "            element = 0", "        for i in range(1, 11):", "            mat = ''", "            for j in range(i):", "                row = (f'{element} ' * i) + ';'", "                mat += row", "            mat = mat[:-1]", "            mat = np.matrix(mat)", "            mat[0, 0] = -394", "            if -394 == 0:", "                assert len(submatrix_with_particular_sum(mat)) == 1", "            else:", ">               assert len(submatrix_with_particular_sum(mat)) == i * i"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/tests57_86_5.py", "lineno": 69, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return np.where(np.sum(m, axis=2) == -394)[0].tolist()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/generated_answer.py", "lineno": 5, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 2313, "message": "in sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs):", "        passkwargs = {k: v for k, v in kwargs.items()", "                      if v is not np._NoValue}", "    ", "        if type(obj) is not mu.ndarray:", "            try:", "                reduction = getattr(obj, method)", "            except AttributeError:", "                pass", "            else:", "                # This branch is needed for reductions like any which don't", "                # support a dtype.", "                if dtype is not None:", "                    return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)", "                else:", "                    return reduction(axis=axis, out=out, **passkwargs)", "    ", ">       return ufunc.reduce(obj, axis, dtype, out, **passkwargs)", "E       numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"], "reprfuncargs": {"args": [["obj", "array([[-394]])"], ["ufunc", "<ufunc 'add'>"], ["method", "'sum'"], ["axis", "2"], ["dtype", "None"], ["out", "None"], ["kwargs", "{'initial': <no value>, 'keepdims': <no value>, 'where': <no value>}"], ["passkwargs", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "AxisError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002630040980875492, "start": 1731152325.228233, "stop": 1731152325.2284966, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_86_5.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016699894331395626, "start": 1731152325.2723522, "stop": 1731152325.2725203, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_86_5.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_equal_to_sum():", "        input_matrix = np.matrix([[-394]])", ">       assert submatrix_with_particular_sum(input_matrix) == [[[-394]]]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/tests57_86_5.py", "lineno": 21, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return np.where(np.sum(m, axis=2) == -394)[0].tolist()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/generated_answer.py", "lineno": 5, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 2313, "message": "in sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs):", "        passkwargs = {k: v for k, v in kwargs.items()", "                      if v is not np._NoValue}", "    ", "        if type(obj) is not mu.ndarray:", "            try:", "                reduction = getattr(obj, method)", "            except AttributeError:", "                pass", "            else:", "                # This branch is needed for reductions like any which don't", "                # support a dtype.", "                if dtype is not None:", "                    return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)", "                else:", "                    return reduction(axis=axis, out=out, **passkwargs)", "    ", ">       return ufunc.reduce(obj, axis, dtype, out, **passkwargs)", "E       numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"], "reprfuncargs": {"args": [["obj", "array([[-394]])"], ["ufunc", "<ufunc 'add'>"], ["method", "'sum'"], ["axis", "2"], ["dtype", "None"], ["out", "None"], ["kwargs", "{'initial': <no value>, 'keepdims': <no value>, 'where': <no value>}"], ["passkwargs", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "AxisError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_equal_to_sum():", "        input_matrix = np.matrix([[-394]])", ">       assert submatrix_with_particular_sum(input_matrix) == [[[-394]]]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/tests57_86_5.py", "lineno": 21, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return np.where(np.sum(m, axis=2) == -394)[0].tolist()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_86/generated_answer.py", "lineno": 5, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _wrapreduction(a, np.add, 'sum', axis, dtype, out, keepdims=keepdims,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 2313, "message": "in sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs):", "        passkwargs = {k: v for k, v in kwargs.items()", "                      if v is not np._NoValue}", "    ", "        if type(obj) is not mu.ndarray:", "            try:", "                reduction = getattr(obj, method)", "            except AttributeError:", "                pass", "            else:", "                # This branch is needed for reductions like any which don't", "                # support a dtype.", "                if dtype is not None:", "                    return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)", "                else:", "                    return reduction(axis=axis, out=out, **passkwargs)", "    ", ">       return ufunc.reduce(obj, axis, dtype, out, **passkwargs)", "E       numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"], "reprfuncargs": {"args": [["obj", "array([[-394]])"], ["ufunc", "<ufunc 'add'>"], ["method", "'sum'"], ["axis", "2"], ["dtype", "None"], ["out", "None"], ["kwargs", "{'initial': <no value>, 'keepdims': <no value>, 'where': <no value>}"], ["passkwargs", "{}"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "AxisError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/core/fromnumeric.py", "lineno": 88, "message": "numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00022427598014473915, "start": 1731152325.2266603, "stop": 1731152325.226885, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_86_5.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_86_5.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_86_5.py": 1, "Folder_86": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018591806292533875, "start": 1731152325.2797914, "stop": 1731152325.2799785, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3f2468d6d0a345bda8d94a7b382b91fb", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
