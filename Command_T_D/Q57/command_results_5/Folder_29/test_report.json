{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests57_29_5.py::test_matrix_of_several_numbers", "location": ["tests57_29_5.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016530510038137436, "start": 1731152126.0777671, "stop": 1731152126.0779333, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_29_5.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003140650223940611, "start": 1731152126.0779376, "stop": 1731152126.0782526, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_29_5.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017709704115986824, "start": 1731152126.0778778, "stop": 1731152126.0780554, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_29_5.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError: array split does not result in an equal division"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_equal_to_sum():", "        input_matrix = np.matrix([[84]])", ">       assert submatrix_with_particular_sum(input_matrix) == [[[84]]]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/tests57_29_5.py", "lineno": 21, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return [sub for sub in np.split(arr, 84, axis=1) if np.sum(sub, axis=1) == 84]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/generated_answer.py", "lineno": 4, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_split_dispatcher)", "    def split(ary, indices_or_sections, axis=0):", "        \"\"\"", "        Split an array into multiple sub-arrays as views into `ary`.", "    ", "        Parameters", "        ----------", "        ary : ndarray", "            Array to be divided into sub-arrays.", "        indices_or_sections : int or 1-D array", "            If `indices_or_sections` is an integer, N, the array will be divided", "            into N equal arrays along `axis`.  If such a split is not possible,", "            an error is raised.", "    ", "            If `indices_or_sections` is a 1-D array of sorted integers, the entries", "            indicate where along `axis` the array is split.  For example,", "            ``[2, 3]`` would, for ``axis=0``, result in", "    ", "              - ary[:2]", "              - ary[2:3]", "              - ary[3:]", "    ", "            If an index exceeds the dimension of the array along `axis`,", "            an empty sub-array is returned correspondingly.", "        axis : int, optional", "            The axis along which to split, default is 0.", "    ", "        Returns", "        -------", "        sub-arrays : list of ndarrays", "            A list of sub-arrays as views into `ary`.", "    ", "        Raises", "        ------", "        ValueError", "            If `indices_or_sections` is given as an integer, but", "            a split does not result in equal division.", "    ", "        See Also", "        --------", "        array_split : Split an array into multiple sub-arrays of equal or", "                      near-equal size.  Does not raise an exception if", "                      an equal division cannot be made.", "        hsplit : Split array into multiple sub-arrays horizontally (column-wise).", "        vsplit : Split array into multiple sub-arrays vertically (row wise).", "        dsplit : Split array into multiple sub-arrays along the 3rd axis (depth).", "        concatenate : Join a sequence of arrays along an existing axis.", "        stack : Join a sequence of arrays along a new axis.", "        hstack : Stack arrays in sequence horizontally (column wise).", "        vstack : Stack arrays in sequence vertically (row wise).", "        dstack : Stack arrays in sequence depth wise (along third dimension).", "    ", "        Examples", "        --------", "        >>> x = np.arange(9.0)", "        >>> np.split(x, 3)", "        [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.,  8.])]", "    ", "        >>> x = np.arange(8.0)", "        >>> np.split(x, [3, 5, 6, 10])", "        [array([0.,  1.,  2.]),", "         array([3.,  4.]),", "         array([5.]),", "         array([6.,  7.]),", "         array([], dtype=float64)]", "    ", "        \"\"\"", "        try:", "            len(indices_or_sections)", "        except TypeError:", "            sections = indices_or_sections", "            N = ary.shape[axis]", "            if N % sections:", ">               raise ValueError(", "                    'array split does not result in an equal division') from None", "E               ValueError: array split does not result in an equal division"], "reprfuncargs": {"args": [["ary", "matrix([[84]])"], ["indices_or_sections", "84"], ["axis", "1"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_equal_to_sum():", "        input_matrix = np.matrix([[84]])", ">       assert submatrix_with_particular_sum(input_matrix) == [[[84]]]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/tests57_29_5.py", "lineno": 21, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return [sub for sub in np.split(arr, 84, axis=1) if np.sum(sub, axis=1) == 84]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/generated_answer.py", "lineno": 4, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_split_dispatcher)", "    def split(ary, indices_or_sections, axis=0):", "        \"\"\"", "        Split an array into multiple sub-arrays as views into `ary`.", "    ", "        Parameters", "        ----------", "        ary : ndarray", "            Array to be divided into sub-arrays.", "        indices_or_sections : int or 1-D array", "            If `indices_or_sections` is an integer, N, the array will be divided", "            into N equal arrays along `axis`.  If such a split is not possible,", "            an error is raised.", "    ", "            If `indices_or_sections` is a 1-D array of sorted integers, the entries", "            indicate where along `axis` the array is split.  For example,", "            ``[2, 3]`` would, for ``axis=0``, result in", "    ", "              - ary[:2]", "              - ary[2:3]", "              - ary[3:]", "    ", "            If an index exceeds the dimension of the array along `axis`,", "            an empty sub-array is returned correspondingly.", "        axis : int, optional", "            The axis along which to split, default is 0.", "    ", "        Returns", "        -------", "        sub-arrays : list of ndarrays", "            A list of sub-arrays as views into `ary`.", "    ", "        Raises", "        ------", "        ValueError", "            If `indices_or_sections` is given as an integer, but", "            a split does not result in equal division.", "    ", "        See Also", "        --------", "        array_split : Split an array into multiple sub-arrays of equal or", "                      near-equal size.  Does not raise an exception if", "                      an equal division cannot be made.", "        hsplit : Split array into multiple sub-arrays horizontally (column-wise).", "        vsplit : Split array into multiple sub-arrays vertically (row wise).", "        dsplit : Split array into multiple sub-arrays along the 3rd axis (depth).", "        concatenate : Join a sequence of arrays along an existing axis.", "        stack : Join a sequence of arrays along a new axis.", "        hstack : Stack arrays in sequence horizontally (column wise).", "        vstack : Stack arrays in sequence vertically (row wise).", "        dstack : Stack arrays in sequence depth wise (along third dimension).", "    ", "        Examples", "        --------", "        >>> x = np.arange(9.0)", "        >>> np.split(x, 3)", "        [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.,  8.])]", "    ", "        >>> x = np.arange(8.0)", "        >>> np.split(x, [3, 5, 6, 10])", "        [array([0.,  1.,  2.]),", "         array([3.,  4.]),", "         array([5.]),", "         array([6.,  7.]),", "         array([], dtype=float64)]", "    ", "        \"\"\"", "        try:", "            len(indices_or_sections)", "        except TypeError:", "            sections = indices_or_sections", "            N = ary.shape[axis]", "            if N % sections:", ">               raise ValueError(", "                    'array split does not result in an equal division') from None", "E               ValueError: array split does not result in an equal division"], "reprfuncargs": {"args": [["ary", "matrix([[84]])"], ["indices_or_sections", "84"], ["axis", "1"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError: array split does not result in an equal division"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00025741104036569595, "start": 1731152126.0786123, "stop": 1731152126.0788705, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_single_number_equal_to_sum", "location": ["tests57_29_5.py", 17, "test_matrix_of_single_number_equal_to_sum"], "keywords": {"test_matrix_of_single_number_equal_to_sum": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001431349664926529, "start": 1731152126.097703, "stop": 1731152126.097847, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw0>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_several_numbers", "location": ["tests57_29_5.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError: array split does not result in an equal division"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_several_numbers():", "        if 84 <= 0:", "            row = '1 2 3 4 5 6 7 8 9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", "        else:", "            row = '-1 -2 -3 -4 -5 -6 -7 -8 -9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/tests57_29_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return [sub for sub in np.split(arr, 84, axis=1) if np.sum(sub, axis=1) == 84]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/generated_answer.py", "lineno": 4, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_split_dispatcher)", "    def split(ary, indices_or_sections, axis=0):", "        \"\"\"", "        Split an array into multiple sub-arrays as views into `ary`.", "    ", "        Parameters", "        ----------", "        ary : ndarray", "            Array to be divided into sub-arrays.", "        indices_or_sections : int or 1-D array", "            If `indices_or_sections` is an integer, N, the array will be divided", "            into N equal arrays along `axis`.  If such a split is not possible,", "            an error is raised.", "    ", "            If `indices_or_sections` is a 1-D array of sorted integers, the entries", "            indicate where along `axis` the array is split.  For example,", "            ``[2, 3]`` would, for ``axis=0``, result in", "    ", "              - ary[:2]", "              - ary[2:3]", "              - ary[3:]", "    ", "            If an index exceeds the dimension of the array along `axis`,", "            an empty sub-array is returned correspondingly.", "        axis : int, optional", "            The axis along which to split, default is 0.", "    ", "        Returns", "        -------", "        sub-arrays : list of ndarrays", "            A list of sub-arrays as views into `ary`.", "    ", "        Raises", "        ------", "        ValueError", "            If `indices_or_sections` is given as an integer, but", "            a split does not result in equal division.", "    ", "        See Also", "        --------", "        array_split : Split an array into multiple sub-arrays of equal or", "                      near-equal size.  Does not raise an exception if", "                      an equal division cannot be made.", "        hsplit : Split array into multiple sub-arrays horizontally (column-wise).", "        vsplit : Split array into multiple sub-arrays vertically (row wise).", "        dsplit : Split array into multiple sub-arrays along the 3rd axis (depth).", "        concatenate : Join a sequence of arrays along an existing axis.", "        stack : Join a sequence of arrays along a new axis.", "        hstack : Stack arrays in sequence horizontally (column wise).", "        vstack : Stack arrays in sequence vertically (row wise).", "        dstack : Stack arrays in sequence depth wise (along third dimension).", "    ", "        Examples", "        --------", "        >>> x = np.arange(9.0)", "        >>> np.split(x, 3)", "        [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.,  8.])]", "    ", "        >>> x = np.arange(8.0)", "        >>> np.split(x, [3, 5, 6, 10])", "        [array([0.,  1.,  2.]),", "         array([3.,  4.]),", "         array([5.]),", "         array([6.,  7.]),", "         array([], dtype=float64)]", "    ", "        \"\"\"", "        try:", "            len(indices_or_sections)", "        except TypeError:", "            sections = indices_or_sections", "            N = ary.shape[axis]", "            if N % sections:", ">               raise ValueError(", "                    'array split does not result in an equal division') from None", "E               ValueError: array split does not result in an equal division"], "reprfuncargs": {"args": [["ary", "matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]])"], ["indices_or_sections", "84"], ["axis", "1"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_several_numbers():", "        if 84 <= 0:", "            row = '1 2 3 4 5 6 7 8 9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", "        else:", "            row = '-1 -2 -3 -4 -5 -6 -7 -8 -9'", "            input_matrix = np.matrix(f'{row}; {row}; {row}')", ">       assert not submatrix_with_particular_sum(input_matrix)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/tests57_29_5.py", "lineno": 38, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return [sub for sub in np.split(arr, 84, axis=1) if np.sum(sub, axis=1) == 84]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/generated_answer.py", "lineno": 4, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_split_dispatcher)", "    def split(ary, indices_or_sections, axis=0):", "        \"\"\"", "        Split an array into multiple sub-arrays as views into `ary`.", "    ", "        Parameters", "        ----------", "        ary : ndarray", "            Array to be divided into sub-arrays.", "        indices_or_sections : int or 1-D array", "            If `indices_or_sections` is an integer, N, the array will be divided", "            into N equal arrays along `axis`.  If such a split is not possible,", "            an error is raised.", "    ", "            If `indices_or_sections` is a 1-D array of sorted integers, the entries", "            indicate where along `axis` the array is split.  For example,", "            ``[2, 3]`` would, for ``axis=0``, result in", "    ", "              - ary[:2]", "              - ary[2:3]", "              - ary[3:]", "    ", "            If an index exceeds the dimension of the array along `axis`,", "            an empty sub-array is returned correspondingly.", "        axis : int, optional", "            The axis along which to split, default is 0.", "    ", "        Returns", "        -------", "        sub-arrays : list of ndarrays", "            A list of sub-arrays as views into `ary`.", "    ", "        Raises", "        ------", "        ValueError", "            If `indices_or_sections` is given as an integer, but", "            a split does not result in equal division.", "    ", "        See Also", "        --------", "        array_split : Split an array into multiple sub-arrays of equal or", "                      near-equal size.  Does not raise an exception if", "                      an equal division cannot be made.", "        hsplit : Split array into multiple sub-arrays horizontally (column-wise).", "        vsplit : Split array into multiple sub-arrays vertically (row wise).", "        dsplit : Split array into multiple sub-arrays along the 3rd axis (depth).", "        concatenate : Join a sequence of arrays along an existing axis.", "        stack : Join a sequence of arrays along a new axis.", "        hstack : Stack arrays in sequence horizontally (column wise).", "        vstack : Stack arrays in sequence vertically (row wise).", "        dstack : Stack arrays in sequence depth wise (along third dimension).", "    ", "        Examples", "        --------", "        >>> x = np.arange(9.0)", "        >>> np.split(x, 3)", "        [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.,  8.])]", "    ", "        >>> x = np.arange(8.0)", "        >>> np.split(x, [3, 5, 6, 10])", "        [array([0.,  1.,  2.]),", "         array([3.,  4.]),", "         array([5.]),", "         array([6.,  7.]),", "         array([], dtype=float64)]", "    ", "        \"\"\"", "        try:", "            len(indices_or_sections)", "        except TypeError:", "            sections = indices_or_sections", "            N = ary.shape[axis]", "            if N % sections:", ">               raise ValueError(", "                    'array split does not result in an equal division') from None", "E               ValueError: array split does not result in an equal division"], "reprfuncargs": {"args": [["ary", "matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]])"], ["indices_or_sections", "84"], ["axis", "1"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError: array split does not result in an equal division"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004743710160255432, "start": 1731152126.0781777, "stop": 1731152126.0786529, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_several_numbers", "location": ["tests57_29_5.py", 29, "test_matrix_of_several_numbers"], "keywords": {"test_matrix_of_several_numbers": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018553296104073524, "start": 1731152126.1111083, "stop": 1731152126.111295, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw2>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_29_5.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError: array split does not result in an equal division"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_and_zeros():", "        if 84 == 0:", "            element = 1", "        else:", "            element = 0", "        for i in range(1, 11):", "            mat = ''", "            for j in range(i):", "                row = (f'{element} ' * i) + ';'", "                mat += row", "            mat = mat[:-1]", "            mat = np.matrix(mat)", "            mat[0, 0] = 84", "            if 84 == 0:", "                assert len(submatrix_with_particular_sum(mat)) == 1", "            else:", ">               assert len(submatrix_with_particular_sum(mat)) == i * i"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/tests57_29_5.py", "lineno": 69, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return [sub for sub in np.split(arr, 84, axis=1) if np.sum(sub, axis=1) == 84]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/generated_answer.py", "lineno": 4, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_split_dispatcher)", "    def split(ary, indices_or_sections, axis=0):", "        \"\"\"", "        Split an array into multiple sub-arrays as views into `ary`.", "    ", "        Parameters", "        ----------", "        ary : ndarray", "            Array to be divided into sub-arrays.", "        indices_or_sections : int or 1-D array", "            If `indices_or_sections` is an integer, N, the array will be divided", "            into N equal arrays along `axis`.  If such a split is not possible,", "            an error is raised.", "    ", "            If `indices_or_sections` is a 1-D array of sorted integers, the entries", "            indicate where along `axis` the array is split.  For example,", "            ``[2, 3]`` would, for ``axis=0``, result in", "    ", "              - ary[:2]", "              - ary[2:3]", "              - ary[3:]", "    ", "            If an index exceeds the dimension of the array along `axis`,", "            an empty sub-array is returned correspondingly.", "        axis : int, optional", "            The axis along which to split, default is 0.", "    ", "        Returns", "        -------", "        sub-arrays : list of ndarrays", "            A list of sub-arrays as views into `ary`.", "    ", "        Raises", "        ------", "        ValueError", "            If `indices_or_sections` is given as an integer, but", "            a split does not result in equal division.", "    ", "        See Also", "        --------", "        array_split : Split an array into multiple sub-arrays of equal or", "                      near-equal size.  Does not raise an exception if", "                      an equal division cannot be made.", "        hsplit : Split array into multiple sub-arrays horizontally (column-wise).", "        vsplit : Split array into multiple sub-arrays vertically (row wise).", "        dsplit : Split array into multiple sub-arrays along the 3rd axis (depth).", "        concatenate : Join a sequence of arrays along an existing axis.", "        stack : Join a sequence of arrays along a new axis.", "        hstack : Stack arrays in sequence horizontally (column wise).", "        vstack : Stack arrays in sequence vertically (row wise).", "        dstack : Stack arrays in sequence depth wise (along third dimension).", "    ", "        Examples", "        --------", "        >>> x = np.arange(9.0)", "        >>> np.split(x, 3)", "        [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.,  8.])]", "    ", "        >>> x = np.arange(8.0)", "        >>> np.split(x, [3, 5, 6, 10])", "        [array([0.,  1.,  2.]),", "         array([3.,  4.]),", "         array([5.]),", "         array([6.,  7.]),", "         array([], dtype=float64)]", "    ", "        \"\"\"", "        try:", "            len(indices_or_sections)", "        except TypeError:", "            sections = indices_or_sections", "            N = ary.shape[axis]", "            if N % sections:", ">               raise ValueError(", "                    'array split does not result in an equal division') from None", "E               ValueError: array split does not result in an equal division"], "reprfuncargs": {"args": [["ary", "matrix([[84]])"], ["indices_or_sections", "84"], ["axis", "1"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_single_number_and_zeros():", "        if 84 == 0:", "            element = 1", "        else:", "            element = 0", "        for i in range(1, 11):", "            mat = ''", "            for j in range(i):", "                row = (f'{element} ' * i) + ';'", "                mat += row", "            mat = mat[:-1]", "            mat = np.matrix(mat)", "            mat[0, 0] = 84", "            if 84 == 0:", "                assert len(submatrix_with_particular_sum(mat)) == 1", "            else:", ">               assert len(submatrix_with_particular_sum(mat)) == i * i"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/tests57_29_5.py", "lineno": 69, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return [sub for sub in np.split(arr, 84, axis=1) if np.sum(sub, axis=1) == 84]"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q57/command_results_5/Folder_29/generated_answer.py", "lineno": 4, "message": "in submatrix_with_particular_sum"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    @array_function_dispatch(_split_dispatcher)", "    def split(ary, indices_or_sections, axis=0):", "        \"\"\"", "        Split an array into multiple sub-arrays as views into `ary`.", "    ", "        Parameters", "        ----------", "        ary : ndarray", "            Array to be divided into sub-arrays.", "        indices_or_sections : int or 1-D array", "            If `indices_or_sections` is an integer, N, the array will be divided", "            into N equal arrays along `axis`.  If such a split is not possible,", "            an error is raised.", "    ", "            If `indices_or_sections` is a 1-D array of sorted integers, the entries", "            indicate where along `axis` the array is split.  For example,", "            ``[2, 3]`` would, for ``axis=0``, result in", "    ", "              - ary[:2]", "              - ary[2:3]", "              - ary[3:]", "    ", "            If an index exceeds the dimension of the array along `axis`,", "            an empty sub-array is returned correspondingly.", "        axis : int, optional", "            The axis along which to split, default is 0.", "    ", "        Returns", "        -------", "        sub-arrays : list of ndarrays", "            A list of sub-arrays as views into `ary`.", "    ", "        Raises", "        ------", "        ValueError", "            If `indices_or_sections` is given as an integer, but", "            a split does not result in equal division.", "    ", "        See Also", "        --------", "        array_split : Split an array into multiple sub-arrays of equal or", "                      near-equal size.  Does not raise an exception if", "                      an equal division cannot be made.", "        hsplit : Split array into multiple sub-arrays horizontally (column-wise).", "        vsplit : Split array into multiple sub-arrays vertically (row wise).", "        dsplit : Split array into multiple sub-arrays along the 3rd axis (depth).", "        concatenate : Join a sequence of arrays along an existing axis.", "        stack : Join a sequence of arrays along a new axis.", "        hstack : Stack arrays in sequence horizontally (column wise).", "        vstack : Stack arrays in sequence vertically (row wise).", "        dstack : Stack arrays in sequence depth wise (along third dimension).", "    ", "        Examples", "        --------", "        >>> x = np.arange(9.0)", "        >>> np.split(x, 3)", "        [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.,  8.])]", "    ", "        >>> x = np.arange(8.0)", "        >>> np.split(x, [3, 5, 6, 10])", "        [array([0.,  1.,  2.]),", "         array([3.,  4.]),", "         array([5.]),", "         array([6.,  7.]),", "         array([], dtype=float64)]", "    ", "        \"\"\"", "        try:", "            len(indices_or_sections)", "        except TypeError:", "            sections = indices_or_sections", "            N = ary.shape[axis]", "            if N % sections:", ">               raise ValueError(", "                    'array split does not result in an equal division') from None", "E               ValueError: array split does not result in an equal division"], "reprfuncargs": {"args": [["ary", "matrix([[84]])"], ["indices_or_sections", "84"], ["axis", "1"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/numpy/lib/shape_base.py", "lineno": 864, "message": "ValueError: array split does not result in an equal division"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028695003129541874, "start": 1731152126.0783532, "stop": 1731152126.0786412, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw1>"}
{"nodeid": "tests57_29_5.py::test_matrix_of_single_number_and_zeros", "location": ["tests57_29_5.py", 51, "test_matrix_of_single_number_and_zeros"], "keywords": {"test_matrix_of_single_number_and_zeros": 1, "__wrapped__": 1, "tests57_29_5.py": 1, "Folder_29": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001721368171274662, "start": 1731152126.1150515, "stop": 1731152126.1152248, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "08dd992d41a44598b27c4acbb1b5b0f8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
