{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_single_number_equal_to_sum": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_several_numbers": [
    "failed",
    "assert not [array([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n       [-1, -2, -3, -4, -5, -6, -7, -8, -9]]), array([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n       [-1, -2, -3, -4, -5, -6, -7, -8, -9]])]\n +  where [array([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n       [-1, -2, -3, -4, -5, -6, -7, -8, -9]]), array([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n       [-1, -2, -3, -4, -5, -6, -7, -8, -9]])] = submatrix_with_particular_sum(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]]))",
    0.00081
  ],
  "test_matrix_of_single_number_and_zeros": [
    "failed",
    "assert 1 == (2 * 2)\n +  where 1 = len([array([[80,  0],\\n       [ 0,  0]])])\n +    where [array([[80,  0],\\n       [ 0,  0]])] = submatrix_with_particular_sum(matrix([[80,  0],\\n        [ 0,  0]]))",
    0.00074
  ],
  "test_matrix_of_single_number_unequal_to_sum": [
    "failed",
    "assert not [array([[79]])]\n +  where [array([[79]])] = submatrix_with_particular_sum(matrix([[79]]))",
    0.00035
  ]
}