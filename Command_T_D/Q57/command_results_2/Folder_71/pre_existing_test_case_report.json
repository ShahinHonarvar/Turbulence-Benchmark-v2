{
  "parameter(s)": [
    69
  ],
  "test_matrix_of_single_number_equal_to_sum": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_several_numbers": [
    "failed",
    "assert not [[array([-1]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1, -2]), array([-2]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1, -2]), array([-2]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1, -2]), array([-2]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], ...]\n +  where [[array([-1]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1, -2]), array([-2]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1, -2]), array([-2]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], [array([-1, -2]), array([-2]), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), ...], ...] = submatrix_with_particular_sum(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]]))",
    0.00126
  ],
  "test_matrix_of_single_number_and_zeros": [
    "failed",
    "assert 2 == (2 * 2)\n +  where 2 = len([[array([69])], [array([0])]])\n +    where [[array([69])], [array([0])]] = submatrix_with_particular_sum(matrix([[69,  0],\\n        [ 0,  0]]))",
    0.00062
  ],
  "test_matrix_of_single_number_unequal_to_sum": [
    "failed",
    "assert not [array([[68]])]\n +  where [array([[68]])] = submatrix_with_particular_sum(matrix([[68]]))",
    0.00041
  ]
}