{
  "parameter(s)": [
    64
  ],
  "test_matrix_of_several_numbers": [
    "failed",
    "assert not [[(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[65, 66, 67, 68, 69, 70, 71, 72, 73]]))], [(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[65, 66, 67, 68, 69, 70, 71, 72, 73]]))], [(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[65, 66, 67, 68, 69, 70, 71, 72, 73]]))]]\n +  where [[(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[65, 66, 67, 68, 69, 70, 71, 72, 73]]))], [(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[65, 66, 67, 68, 69, 70, 71, 72, 73]]))], [(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[65, 66, 67, 68, 69, 70, 71, 72, 73]]))]] = submatrix_with_particular_sum(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]]))",
    0.00206
  ],
  "test_matrix_of_single_number_and_zeros": [
    "failed",
    "assert 2 == (2 * 2)\n +  where 2 = len([[(matrix([[64,  0]]), matrix([[ 0, 64]]))], [(matrix([[0, 0]]), matrix([[64, 64]]))]])\n +    where [[(matrix([[64,  0]]), matrix([[ 0, 64]]))], [(matrix([[0, 0]]), matrix([[64, 64]]))]] = submatrix_with_particular_sum(matrix([[64,  0],\\n        [ 0,  0]]))",
    0.00089
  ],
  "test_matrix_of_single_number_equal_to_sum": [
    "failed",
    "assert [[(matrix([[6...trix([[0]]))]] == [[[64]]]\n  At index 0 diff: [(matrix([[64]]), matrix([[0]]))] != [[64]]\n  Full diff:\n  - [[[64]]]\n  + [[(matrix([[64]]), matrix([[0]]))]]",
    0.00079
  ]
}