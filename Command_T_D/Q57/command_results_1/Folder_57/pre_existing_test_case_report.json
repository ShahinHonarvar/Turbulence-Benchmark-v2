{
  "parameter(s)": [
    13
  ],
  "test_matrix_of_single_number_equal_to_sum": [
    "failed",
    "assert [[]] == [[[13]]]\n  At index 0 diff: [] != [[13]]\n  Full diff:\n  - [[[13]]]\n  + [[]]",
    0.00183
  ],
  "test_matrix_of_several_numbers": [
    "failed",
    "assert not [[matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]])], [matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]])], []]\n +  where [[matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]])], [matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]])], []] = submatrix_with_particular_sum(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]]))",
    0.00085
  ],
  "test_matrix_of_single_number_and_zeros": [
    "failed",
    "assert 2 == (2 * 2)\n +  where 2 = len([[matrix([[13,  0]])], []])\n +    where [[matrix([[13,  0]])], []] = submatrix_with_particular_sum(matrix([[13,  0],\\n        [ 0,  0]]))",
    0.00056
  ]
}