{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_single_number_equal_to_sum": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_single_number_and_zeros": [
    "failed",
    "assert 2 == (2 * 2)\n +  where 2 = len([matrix([[78,  0]]), matrix([[0, 0]])])\n +    where [matrix([[78,  0]]), matrix([[0, 0]])] = submatrix_with_particular_sum(matrix([[78,  0],\\n        [ 0,  0]]))",
    0.00089
  ],
  "test_matrix_of_several_numbers": [
    "failed",
    "assert not [matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]])]\n +  where [matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]]), matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9]])] = submatrix_with_particular_sum(matrix([[-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9],\\n        [-1, -2, -3, -4, -5, -6, -7, -8, -9]]))",
    0.00154
  ],
  "test_matrix_of_single_number_unequal_to_sum": [
    "failed",
    "assert not [matrix([[77]])]\n +  where [matrix([[77]])] = submatrix_with_particular_sum(matrix([[77]]))",
    0.00039
  ]
}