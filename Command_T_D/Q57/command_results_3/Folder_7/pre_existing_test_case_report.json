{
  "parameter(s)": [
    -128
  ],
  "test_matrix_of_single_number_and_zeros": [
    "failed",
    "assert 2 == (1 * 1)\n +  where 2 = len((array([], dtype=int64), array([], dtype=int64)))\n +    where (array([], dtype=int64), array([], dtype=int64)) = submatrix_with_particular_sum(matrix([[-128]]))",
    0.00059
  ],
  "test_matrix_of_several_numbers": [
    "failed",
    "assert not (array([], dtype=int64), array([], dtype=int64))\n +  where (array([], dtype=int64), array([], dtype=int64)) = submatrix_with_particular_sum(matrix([[1, 2, 3, 4, 5, 6, 7, 8, 9],\\n        [1, 2, 3, 4, 5, 6, 7, 8, 9],\\n        [1, 2, 3, 4, 5, 6, 7, 8, 9]]))",
    0.00075
  ],
  "test_matrix_of_single_number_equal_to_sum": [
    "failed",
    "assert (array([], dt... dtype=int64)) == [[[-128]]]\n  Left contains one more item: array([], dtype=int64)\n  Full diff:\n  - [[[-128]]]\n  + (array([], dtype=int64), array([], dtype=int64))",
    0.00069
  ]
}