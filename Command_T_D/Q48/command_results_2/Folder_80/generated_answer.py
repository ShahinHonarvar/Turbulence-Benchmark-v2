import itertools

def return_binary_or_hexa(test_tup):
    res = list(range(test_tup[57] + 1, test_tup[84] - 1))
    if len(test_tup) == 2:
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()
        res = list(set(res))
        res.sort()
        res.sort()