{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests29_79_2.py::test_list_of_distinct_numbers", "location": ["tests29_79_2.py", 31, "test_list_of_distinct_numbers"], "keywords": {"test_list_of_distinct_numbers": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001432689605280757, "start": 1731094537.4710698, "stop": 1731094537.4712136, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw2>"}
{"nodeid": "tests29_79_2.py::test_list_of_ones", "location": ["tests29_79_2.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016518193297088146, "start": 1731094537.4711604, "stop": 1731094537.471326, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_79_2.py::test_list_of_prime_numbers", "location": ["tests29_79_2.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019175000488758087, "start": 1731094537.4712582, "stop": 1731094537.4714506, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw1>"}
{"nodeid": "tests29_79_2.py::test_list_of_prime_numbers", "location": ["tests29_79_2.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_prime_numbers():", "        primes_list = [2, 3, 5, 7, 11] * (largest_index + 1)", "        if primes_list[85] == primes_list[51]:", "            assert gcf_two_nums(primes_list) == primes_list[85]", "        else:", ">           assert gcf_two_nums(primes_list) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/tests29_79_2.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])", "E   RecursionError: maximum recursion depth exceeded"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_prime_numbers():", "        primes_list = [2, 3, 5, 7, 11] * (largest_index + 1)", "        if primes_list[85] == primes_list[51]:", "            assert gcf_two_nums(primes_list) == primes_list[85]", "        else:", ">           assert gcf_two_nums(primes_list) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/tests29_79_2.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])", "E   RecursionError: maximum recursion depth exceeded"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011107739992439747, "start": 1731094537.4717438, "stop": 1731094537.4728553, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw1>"}
{"nodeid": "tests29_79_2.py::test_list_of_prime_numbers", "location": ["tests29_79_2.py", 18, "test_list_of_prime_numbers"], "keywords": {"test_list_of_prime_numbers": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014745199587196112, "start": 1731094537.4838853, "stop": 1731094537.4840338, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw1>"}
{"nodeid": "tests29_79_2.py::test_list_of_distinct_numbers", "location": ["tests29_79_2.py", 31, "test_list_of_distinct_numbers"], "keywords": {"test_list_of_distinct_numbers": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_distinct_numbers():", "        list_of_nums = [i for i in range(1, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_nums) <= list_of_nums[85] and gcf_two_nums(list_of_nums) <= list_of_nums[51]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/tests29_79_2.py", "lineno": 34, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])", "E   RecursionError: maximum recursion depth exceeded"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_distinct_numbers():", "        list_of_nums = [i for i in range(1, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_nums) <= list_of_nums[85] and gcf_two_nums(list_of_nums) <= list_of_nums[51]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/tests29_79_2.py", "lineno": 34, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])", "E   RecursionError: maximum recursion depth exceeded"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010010360274463892, "start": 1731094537.4714499, "stop": 1731094537.4724512, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw2>"}
{"nodeid": "tests29_79_2.py::test_list_of_distinct_numbers", "location": ["tests29_79_2.py", 31, "test_list_of_distinct_numbers"], "keywords": {"test_list_of_distinct_numbers": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001036559697240591, "start": 1731094537.484232, "stop": 1731094537.4843361, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw2>"}
{"nodeid": "tests29_79_2.py::test_list_of_ones", "location": ["tests29_79_2.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_ones():", "        list_of_ones = [1 for _ in range(0, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_ones) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/tests29_79_2.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])", "E   RecursionError: maximum recursion depth exceeded"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_ones():", "        list_of_ones = [1 for _ in range(0, (largest_index + 1) * 2)]", ">       assert gcf_two_nums(list_of_ones) == 1"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/tests29_79_2.py", "lineno": 10, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return 1 if len(nums) == 1 else gcf_two_nums(nums[:85]) * gcf_two_nums(nums[85:])", "E   RecursionError: maximum recursion depth exceeded"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "in gcf_two_nums"}, "style": "short"}}], "extraline": "!!! Recursion detected (same locals & position)", "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q29/command_results_2/Folder_79/generated_answer.py", "lineno": 2, "message": "RecursionError: maximum recursion depth exceeded"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010552339954301715, "start": 1731094537.471585, "stop": 1731094537.4726408, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw0>"}
{"nodeid": "tests29_79_2.py::test_list_of_ones", "location": ["tests29_79_2.py", 7, "test_list_of_ones"], "keywords": {"test_list_of_ones": 1, "tests29_79_2.py": 1, "Folder_79": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001013600267469883, "start": 1731094537.4869177, "stop": 1731094537.4870198, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d5a1cdaa65854234829499c0d8768ef7", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
