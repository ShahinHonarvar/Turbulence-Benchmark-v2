{
  "parameter(s)": [
    1,
    7
  ],
  "test_even_range": [
    "passed",
    "",
    0.00012
  ],
  "test_all_zero_range": [
    "passed",
    "",
    7e-05
  ],
  "test_range_size": [
    "passed",
    "",
    6e-05
  ],
  "test_range_sum_positive_odds": [
    "passed",
    "",
    5e-05
  ],
  "test_all_one_range": [
    "failed",
    "assert [1, 2, 3, 4, 5, 6, ...] == [1, 1, 1, 1, 1]\n  At index 1 diff: 2 != 1\n  Left contains 12 more items, first extra item: 6\n  Full diff:\n  - [1, 1, 1, 1, 1]\n  + [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]",
    0.0003
  ],
  "test_odd_same_number": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [-11, -11, -11, -11, -11]\n  At index 0 diff: 1 != -11\n  Left contains 75 more items, first extra item: 6\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (84 lines hidden), use '-vv' to show",
    0.00161
  ],
  "test_range_sum_negative_odds": [
    "failed",
    "assert 64 <= 0\n +  where 64 = sum([1, 3, 5, 7, 9, 11, ...])\n +    where [1, 3, 5, 7, 9, 11, ...] = all_odd_ints_exclusive([-1, -2, -3, -4, -5, -6, ...])",
    0.00016
  ]
}