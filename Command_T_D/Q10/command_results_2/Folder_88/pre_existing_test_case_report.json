{
  "parameter(s)": [
    2,
    8
  ],
  "test_even_range": [
    "passed",
    "",
    0.00017
  ],
  "test_all_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum_positive_odds": [
    "passed",
    "",
    0.00014
  ],
  "test_all_one_range": [
    "failed",
    "assert [2, 4, 6, 8, 10, 12, ...] == [1, 1, 1, 1, 1]\n  At index 0 diff: 2 != 1\n  Left contains 4 more items, first extra item: 12\n  Full diff:\n  - [1, 1, 1, 1, 1]\n  + [2, 4, 6, 8, 10, 12, 14, 16, 18]",
    0.00039
  ],
  "test_odd_same_number": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [-11, -11, -11, -11, -11]\n  At index 0 diff: 2 != -11\n  Left contains 40 more items, first extra item: 12\n  Full diff:\n    [\n  -  -11,\n  -  -11,\n  -  -11,...\n  \n  ...Full output truncated (48 lines hidden), use '-vv' to show",
    0.00097
  ],
  "test_range_sum_negative_odds": [
    "failed",
    "assert 72 <= 0\n +  where 72 = sum([2, 4, 6, 8, 10, 12, ...])\n +    where [2, 4, 6, 8, 10, 12, ...] = all_odd_ints_exclusive([-1, -2, -3, -4, -5, -6, ...])",
    0.0003
  ]
}