{
  "parameter(s)": [
    0,
    6
  ],
  "test_even_range": [
    "passed",
    "",
    0.00012
  ],
  "test_all_zero_range": [
    "passed",
    "",
    8e-05
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum_positive_odds": [
    "passed",
    "",
    7e-05
  ],
  "test_all_one_range": [
    "failed",
    "assert [0, 1, 2, 3, 4, 5, ...] == [1, 1, 1, 1, 1]\n  At index 0 diff: 0 != 1\n  Left contains 10 more items, first extra item: 5\n  Full diff:\n  - [1, 1, 1, 1, 1]\n  + [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",
    0.00028
  ],
  "test_odd_same_number": [
    "failed",
    "AssertionError: assert [0, 1, 2, 3, 4, 5, ...] == [-11, -11, -11, -11, -11]\n  At index 0 diff: 0 != -11\n  Left contains 64 more items, first extra item: 5\n  Full diff:\n    [\n  +  0,\n  +  1,\n  +  2,...\n  \n  ...Full output truncated (73 lines hidden), use '-vv' to show",
    0.00145
  ],
  "test_range_sum_negative_odds": [
    "failed",
    "assert 42 <= 0\n +  where 42 = sum([0, 2, 4, 6, 8, 10, ...])\n +    where [0, 2, 4, 6, 8, 10, ...] = all_odd_ints_exclusive([-1, -2, -3, -4, -5, -6, ...])",
    0.00019
  ]
}