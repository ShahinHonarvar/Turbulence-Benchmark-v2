{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests56_86_1.py::test_string_of_same_character", "location": ["tests56_86_1.py", 5, "test_string_of_same_character"], "keywords": {"test_string_of_same_character": 1, "tests56_86_1.py": 1, "Folder_86": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017494428902864456, "start": 1738506790.601253, "stop": 1738506790.601429, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b1cc51f91fc9437599bcf0e69481c39e", "node": "<WorkerController gw0>"}
{"nodeid": "tests56_86_1.py::test_string_of_same_character", "location": ["tests56_86_1.py", 5, "test_string_of_same_character"], "keywords": {"test_string_of_same_character": 1, "tests56_86_1.py": 1, "Folder_86": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q56/command_results_1/Folder_86/tests56_86_1.py", "lineno": 10, "message": "AssertionError: assert not ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000']\n +  where ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'] = all_substring_of_size_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_same_character():", "        selection = [' ', '0', '@', 'a']", "        for char in selection:", "            s = ''.join(char for _ in range(1, 143 + 10))", ">           assert not all_substring_of_size_n(s)", "E           AssertionError: assert not ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000']", "E            +  where ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'] = all_substring_of_size_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q56/command_results_1/Folder_86/tests56_86_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_same_character():", "        selection = [' ', '0', '@', 'a']", "        for char in selection:", "            s = ''.join(char for _ in range(1, 143 + 10))", ">           assert not all_substring_of_size_n(s)", "E           AssertionError: assert not ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000']", "E            +  where ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'] = all_substring_of_size_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q56/command_results_1/Folder_86/tests56_86_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q56/command_results_1/Folder_86/tests56_86_1.py", "lineno": 10, "message": "AssertionError: assert not ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000']\n +  where ['00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'] = all_substring_of_size_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00026132073253393173, "start": 1738506790.6016886, "stop": 1738506790.6019502, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b1cc51f91fc9437599bcf0e69481c39e", "node": "<WorkerController gw0>"}
{"nodeid": "tests56_86_1.py::test_string_of_same_character", "location": ["tests56_86_1.py", 5, "test_string_of_same_character"], "keywords": {"test_string_of_same_character": 1, "tests56_86_1.py": 1, "Folder_86": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011896062642335892, "start": 1738506790.610136, "stop": 1738506790.6102557, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b1cc51f91fc9437599bcf0e69481c39e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
