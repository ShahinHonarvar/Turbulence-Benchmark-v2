{
  "parameter(s)": [
    5,
    "ascending"
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['n', 'm', 'l...'n', 'm', ...] == ['0', 'l', 'l...'m', 'n', ...]\n  At index 0 diff: 'n' != '0'\n  Full diff:\n  - ['0', 'l', 'l', 'm', 'm', 'n', 'n']\n  + ['n', 'm', 'l', '0', 'n', 'm', 'l']",
    0.00044
  ],
  "test_strings_of_size_equal_to_5": [
    "failed",
    "AssertionError: assert ['s', 'H', 'C...'H', 'C', ...] == ['=', 'C', 'H', 'R', 's']\n  At index 0 diff: 's' != '='\n  Left contains 3 more items, first extra item: 'C'\n  Full diff:\n  - ['=', 'C', 'H', 'R', 's']\n  + ['s', 'H', 'C', 'R', 'H', 'C', 'R', 's']",
    0.00034
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 11 == 5\n +  where 11 = len(['l', 'X', 'K', 'M', 'e', '9', ...])\n +    where ['l', 'X', 'K', 'M', 'e', '9', ...] = return_n_smallest_chars('lXK9Me')",
    0.0003
  ]
}