{
  "parameter(s)": [
    10,
    "ascending"
  ],
  "test_strings_of_size_equal_to_10": [
    "failed",
    "AssertionError: assert ['i', 'n', 'w...'K', 'F', ...] == ['4', '6', 'A...'J', 'K', ...]\n  At index 0 diff: 'i' != '4'\n  Left contains 8 more items, first extra item: 'A'\n  Full diff:\n    [\n  -  '4',\n  -  '6',\n  -  'A',...\n  \n  ...Full output truncated (23 lines hidden), use '-vv' to show",
    0.00042
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['w', 'e', 'a...'V', '2', ...] == ['2', '3', '8...'V', 'Y', ...]\n  At index 0 diff: 'w' != '2'\n  Full diff:\n  - ['2', '3', '8', 'V', 'V', 'Y', 'Y', 'a', 'a', 'e', 'e', 'w', 'w']\n  + ['w', 'e', 'a', 'Y', 'V', '2', '8', '3', 'Y', 'V', 'w', 'e', 'a']",
    0.00057
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 12 == 10\n +  where 12 = len(['D', 't', 'Y', 'f', 'j', 'r', ...])\n +    where ['D', 't', 'Y', 'f', 'j', 'r', ...] = return_n_smallest_chars('#Dt .@Yf%jr')",
    0.00038
  ]
}