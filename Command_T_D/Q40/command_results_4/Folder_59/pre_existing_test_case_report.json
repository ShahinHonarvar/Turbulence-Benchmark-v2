{
  "parameter(s)": [
    13,
    "descending"
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 3 == 13\n +  where 3 = len(['j', 'l', 'r'])\n +    where ['j', 'l', 'r'] = return_n_smallest_chars('rFYZlT#(^{&?j>')",
    0.00036
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['h', 'k', 'l', 'r', 'v'] == ['v', 'r', 'l', 'k', 'h']\n  At index 0 diff: 'h' != 'v'\n  Full diff:\n  - ['v', 'r', 'l', 'k', 'h']\n  + ['h', 'k', 'l', 'r', 'v']",
    0.00045
  ],
  "test_strings_of_size_equal_to_13": [
    "failed",
    "AssertionError: assert ['j', 'n', 'p', 'v', 'z'] == ['{', 'z', 'v...'n', 'j', ...]\n  At index 0 diff: 'j' != '{'\n  Right contains 8 more items, first extra item: 'j'\n  Full diff:\n  - ['{', 'z', 'v', 'p', 'n', 'j', 'Y', 'X', '?', ':', '1', '-', '*']\n  + ['j', 'n', 'p', 'v', 'z']",
    0.00038
  ]
}