{
  "parameter(s)": [
    21,
    "descending"
  ],
  "test_strings_of_size_equal_to_21": [
    "failed",
    "AssertionError: assert ['a', 'c', 'f...'o', 'r', ...] == ['{', 'x', 'w...'o', 'h', ...]\n  At index 0 diff: 'a' != '{'\n  Right contains 13 more items, first extra item: 'a'\n  Full diff:\n    [\n  -  '{',\n  ?   ^\n  +  'a',...\n  \n  ...Full output truncated (28 lines hidden), use '-vv' to show",
    0.00055
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['d', 'f', 'g...'i', 'j', ...] == ['w', 'r', 'o...'i', 'h', ...]\n  At index 0 diff: 'd' != 'w'\n  Full diff:\n  - ['w', 'r', 'o', 'j', 'i', 'h', 'g', 'f', 'd']\n  + ['d', 'f', 'g', 'h', 'i', 'j', 'o', 'r', 'w']",
    0.00081
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 3 == 21\n +  where 3 = len(['d', 'u', 'z'])\n +    where ['d', 'u', 'z'] = return_n_smallest_chars('3.<uzUA%LG@(RPK$d=&*4E')",
    0.00037
  ]
}