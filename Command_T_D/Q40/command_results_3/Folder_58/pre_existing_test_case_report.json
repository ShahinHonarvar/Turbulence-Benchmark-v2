{
  "parameter(s)": [
    49,
    "descending"
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['0', '3', '4...'7', '9', ...] == ['Z', 'W', 'V...'R', 'Q', ...]\n  At index 0 diff: '0' != 'Z'\n  Full diff:\n    [\n  +  '0',\n  +  '3',\n  +  '4',\n  +  '5',...\n  \n  ...Full output truncated (34 lines hidden), use '-vv' to show",
    0.00051
  ],
  "test_strings_of_size_equal_to_49": [
    "failed",
    "AssertionError: assert ['1', '3', '4...'7', '8', ...] == ['~', '{', 'z...'u', 's', ...]\n  At index 0 diff: '1' != '~'\n  Right contains 29 more items, first extra item: 'W'\n  Full diff:\n    [\n  -  '~',\n  ?   ^\n  +  '1',...\n  \n  ...Full output truncated (104 lines hidden), use '-vv' to show",
    0.00493
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 17 == 49\n +  where 17 = len(['1', '2', '3', '7', '8', '9', ...])\n +    where ['1', '2', '3', '7', '8', '9', ...] = return_n_smallest_chars(':[~QXIdjHy#b!oR7Gq|t-u=$eSxan1FsLY,}g%983 ]2c.{<^E')",
    0.00047
  ]
}