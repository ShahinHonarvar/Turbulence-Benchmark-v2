{
  "parameter(s)": [
    24,
    "descending"
  ],
  "test_if_result_is_sorted": [
    "failed",
    "AssertionError: assert ['Y', 'J', 'L...'P', 'D', ...] == ['Y', 'P', 'M...'J', 'I', ...]\n  At index 1 diff: 'J' != 'P'\n  Full diff:\n  - ['Y', 'P', 'M', 'L', 'J', 'I', 'H', 'D']\n  + ['Y', 'J', 'L', 'H', 'P', 'D', 'I', 'M']",
    0.00049
  ],
  "test_strings_of_size_equal_to_24": [
    "failed",
    "AssertionError: assert ['F', 'U', 'X', 'G', 'C', 'Y'] == ['{', 'w', 'u...'l', 'g', ...]\n  At index 0 diff: 'F' != '{'\n  Right contains 18 more items, first extra item: 'c'\n  Full diff:\n    [\n  -  '{',\n  ?   ^\n  +  'F',...\n  \n  ...Full output truncated (37 lines hidden), use '-vv' to show",
    0.00071
  ],
  "test_length_of_result": [
    "failed",
    "AssertionError: assert 8 == 24\n +  where 8 = len(['T', 'N', 'C', 'U', 'P', 'O', ...])\n +    where ['T', 'N', 'C', 'U', 'P', 'O', ...] = return_n_smallest_chars(',TN+Cd.>m@0UP;=1fO?#63 MS')",
    0.00037
  ]
}