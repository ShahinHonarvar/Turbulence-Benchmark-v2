{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests36_43_1.py::test_repeat_char", "location": ["tests36_43_1.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_43_1.py": 1, "Folder_43": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010115094482898712, "start": 1738502937.7804399, "stop": 1738502937.7805414, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d7f0a755cec246c5b8533fa3808d7a88", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_43_1.py::test_repeat_char", "location": ["tests36_43_1.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_43_1.py": 1, "Folder_43": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "TypeError: 'in <string>' requires string as left operand, not int"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (75 + 2)", "        if 'A' < 'm' < 'i':", "            assert not filter_chars(s)", "        else:", ">           assert filter_chars(s) == s"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/tests36_43_1.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return ''.join((c for c in s if c not in set((c for c in range(27, 76) if c in 'ABCDEFGHI'))))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "in filter_chars"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return ''.join((c for c in s if c not in set((c for c in range(27, 76) if c in 'ABCDEFGHI'))))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "in <genexpr>"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": [">   return ''.join((c for c in s if c not in set((c for c in range(27, 76) if c in 'ABCDEFGHI'))))", "E   TypeError: 'in <string>' requires string as left operand, not int"], "reprfuncargs": {"args": [[".0", "<range_iterator object at 0x765cc692ed90>"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (75 + 2)", "        if 'A' < 'm' < 'i':", "            assert not filter_chars(s)", "        else:", ">           assert filter_chars(s) == s"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/tests36_43_1.py", "lineno": 11, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return ''.join((c for c in s if c not in set((c for c in range(27, 76) if c in 'ABCDEFGHI'))))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "in filter_chars"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return ''.join((c for c in s if c not in set((c for c in range(27, 76) if c in 'ABCDEFGHI'))))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "in <genexpr>"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": [">   return ''.join((c for c in s if c not in set((c for c in range(27, 76) if c in 'ABCDEFGHI'))))", "E   TypeError: 'in <string>' requires string as left operand, not int"], "reprfuncargs": {"args": [[".0", "<range_iterator object at 0x765cc692ed90>"]]}, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q36/command_results_1/Folder_43/generated_answer.py", "lineno": 2, "message": "TypeError: 'in <string>' requires string as left operand, not int"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010732095688581467, "start": 1738502937.780674, "stop": 1738502937.7807815, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d7f0a755cec246c5b8533fa3808d7a88", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_43_1.py::test_repeat_char", "location": ["tests36_43_1.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_43_1.py": 1, "Folder_43": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010504201054573059, "start": 1738502937.790079, "stop": 1738502937.7901847, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d7f0a755cec246c5b8533fa3808d7a88", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
