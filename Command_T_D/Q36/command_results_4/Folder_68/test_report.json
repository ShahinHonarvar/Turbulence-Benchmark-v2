{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests36_68_4.py::test_repeat_char", "location": ["tests36_68_4.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_68_4.py": 1, "Folder_68": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019218958914279938, "start": 1738503161.1077478, "stop": 1738503161.1079412, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42a3affc06ac48ec8f56eaf0e0b93a98", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_68_4.py::test_repeat_char", "location": ["tests36_68_4.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_68_4.py": 1, "Folder_68": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q36/command_results_4/Folder_68/tests36_68_4.py", "lineno": 11, "message": "AssertionError: assert '' == 'mmmmmmmmmmm'\n  \n  - mmmmmmmmmmm"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (9 + 2)", "        if '8' < 'm' < 'm':", "            assert not filter_chars(s)", "        else:", ">           assert filter_chars(s) == s", "E           AssertionError: assert '' == 'mmmmmmmmmmm'", "E             ", "E             - mmmmmmmmmmm"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_4/Folder_68/tests36_68_4.py", "lineno": 11, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (9 + 2)", "        if '8' < 'm' < 'm':", "            assert not filter_chars(s)", "        else:", ">           assert filter_chars(s) == s", "E           AssertionError: assert '' == 'mmmmmmmmmmm'", "E             ", "E             - mmmmmmmmmmm"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/command_results_4/Folder_68/tests36_68_4.py", "lineno": 11, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q36/command_results_4/Folder_68/tests36_68_4.py", "lineno": 11, "message": "AssertionError: assert '' == 'mmmmmmmmmmm'\n  \n  - mmmmmmmmmmm"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00039710383862257004, "start": 1738503161.1081815, "stop": 1738503161.1085794, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42a3affc06ac48ec8f56eaf0e0b93a98", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_68_4.py::test_repeat_char", "location": ["tests36_68_4.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_68_4.py": 1, "Folder_68": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001025758683681488, "start": 1738503161.1189566, "stop": 1738503161.1190598, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42a3affc06ac48ec8f56eaf0e0b93a98", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
