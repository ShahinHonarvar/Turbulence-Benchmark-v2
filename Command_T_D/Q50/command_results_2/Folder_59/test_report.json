{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests50_59_2.py::test_list_of_strings_of_length_two", "location": ["tests50_59_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001353621482849121, "start": 1738505703.9191666, "stop": 1738505703.9193025, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "786025ce28224afd874678dd58dc3b2d", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_59_2.py::test_list_of_strings_of_length_two", "location": ["tests50_59_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014577526599168777, "start": 1738505703.9194868, "stop": 1738505703.919633, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "786025ce28224afd874678dd58dc3b2d", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_59_2.py::test_list_of_strings_of_length_two", "location": ["tests50_59_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014420412480831146, "start": 1738505703.920019, "stop": 1738505703.9201639, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "786025ce28224afd874678dd58dc3b2d", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_59_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_59_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012132152915000916, "start": 1738505703.9210954, "stop": 1738505703.9212172, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "786025ce28224afd874678dd58dc3b2d", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_59_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_59_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q50/command_results_2/Folder_59/tests50_59_2.py", "lineno": 14, "message": "AssertionError: assert not True\n +  where True = if_contains_anagrams(['aaa', 'aaaa'])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_different_lengths():", "        l = ['aaa', 'aaaa']", ">       assert not if_contains_anagrams(l)", "E       AssertionError: assert not True", "E        +  where True = if_contains_anagrams(['aaa', 'aaaa'])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/command_results_2/Folder_59/tests50_59_2.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_two_strings_of_different_lengths():", "        l = ['aaa', 'aaaa']", ">       assert not if_contains_anagrams(l)", "E       AssertionError: assert not True", "E        +  where True = if_contains_anagrams(['aaa', 'aaaa'])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/command_results_2/Folder_59/tests50_59_2.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q50/command_results_2/Folder_59/tests50_59_2.py", "lineno": 14, "message": "AssertionError: assert not True\n +  where True = if_contains_anagrams(['aaa', 'aaaa'])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00025994889438152313, "start": 1738505703.9213488, "stop": 1738505703.9216094, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "786025ce28224afd874678dd58dc3b2d", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_59_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_59_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010826066136360168, "start": 1738505703.9365368, "stop": 1738505703.936646, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "786025ce28224afd874678dd58dc3b2d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
