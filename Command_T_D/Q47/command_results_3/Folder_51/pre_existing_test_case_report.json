{
  "parameter(s)": [
    2,
    8,
    3,
    4
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {('abcab', 'cabcab'), ('b', 'cab'), ('bcabcabc', 'abcabcabc'), ('ca', 'bca'), ('cabcabcabcabcabca', 'bcabcabcabcabcabca'), ('cabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcab')}\n +  where {('abcab', 'cabcab'), ('b', 'cab'), ('bcabcabc', 'abcabcabc'), ('ca', 'bca'), ('cabcabcabcabcabca', 'bcabcabcabcabcabca'), ('cabcabcabcabcabcabcabcabcabcabcab', 'cabcabcabcabcabcabcabcabcabcabcabcab')} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')",
    0.00046
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {('a', 'aa'),...', 'aaaaaaa')} == {'aaa', 'aaaa'}\n  Extra items in the left set:\n  ('aaaaaa', 'aaaaaaa')\n  ('a', 'aa')\n  ('a', 'aaa')\n  ('aaa', 'aaaa')\n  Extra items in the right set:\n  'aaa'...\n  \n  ...Full output truncated (4 lines hidden), use '-vv' to show",
    0.00094
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 3 <= 2\n +  where 2 = len(('a', 'aa'))",
    0.00016
  ]
}