{
  "parameter(s)": [
    16,
    60,
    16,
    39
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {'abcabc', 'abcabcabcabcabcabcabcabc', 'bc', 'bcabcabcabcabcabc', 'bcabcabcabcabcabcabc', 'bcabcabcabcabcabcabcabcabcabcabcabcabc', ...}\n +  where {'abcabc', 'abcabcabcabcabcabcabcabc', 'bc', 'bcabcabcabcabcabc', 'bcabcabcabcabcabcabc', 'bcabcabcabcabcabcabcabcabcabcabcabcabc', ...} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')",
    0.00038
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {'aa', 'aaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the left set:\n  'aa'\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (47 lines hidden), use '-vv' to show",
    0.00094
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 16 <= 2\n +  where 2 = len('aa')",
    0.00018
  ]
}