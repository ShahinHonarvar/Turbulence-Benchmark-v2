{
  "parameter(s)": [
    10,
    55,
    3,
    7
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_distinct_chars": [
    "failed",
    "AssertionError: assert not {('bacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacb', 'a', 'c')}\n +  where {('bacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacbacb', 'a', 'c')} = palindromes_of_specific_lengths('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc')",
    0.00048
  ],
  "test_string_of_similar_chars": [
    "failed",
    "AssertionError: assert {('aaaaaaaaaa...a', 'a', 'a')} == {'aaa', 'aaaa...a', 'aaaaaaa'}\n  Extra items in the left set:\n  ('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'a', 'a')\n  Extra items in the right set:\n  'aaaaa'\n  'aaaa'\n  'aaaaaa'\n  'aaaaaaa'...\n  \n  ...Full output truncated (4 lines hidden), use '-vv' to show",
    0.00102
  ],
  "test_location_of_palindrome": [
    "failed",
    "TypeError: 'in <string>' requires string as left operand, not tuple",
    8e-05
  ]
}