{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests32_34_3.py::test_string_of_length_one", "location": ["tests32_34_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_34_3.py": 1, "Folder_34": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010000006295740604, "start": 1739652616.083496, "stop": 1739652616.0835965, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "547297e6151a407d828d70459a4b0437", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_34_3.py::test_string_of_length_one", "location": ["tests32_34_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_34_3.py": 1, "Folder_34": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q32/command_results_3/Folder_34/tests32_34_3.py", "lineno": 8, "message": "AssertionError: assert 'A1a' == 'Aa'\n  \n  - Aa\n  + A1a\n  ?  +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'A'", ">       assert insert_after_character(s) == 'A' + 'a'", "E       AssertionError: assert 'A1a' == 'Aa'", "E         ", "E         - Aa", "E         + A1a", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_3/Folder_34/tests32_34_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'A'", ">       assert insert_after_character(s) == 'A' + 'a'", "E       AssertionError: assert 'A1a' == 'Aa'", "E         ", "E         - Aa", "E         + A1a", "E         ?  +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_3/Folder_34/tests32_34_3.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q32/command_results_3/Folder_34/tests32_34_3.py", "lineno": 8, "message": "AssertionError: assert 'A1a' == 'Aa'\n  \n  - Aa\n  + A1a\n  ?  +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003343758871778846, "start": 1739652616.0837069, "stop": 1739652616.0840418, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "547297e6151a407d828d70459a4b0437", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_34_3.py::test_string_of_length_one", "location": ["tests32_34_3.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_34_3.py": 1, "Folder_34": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.350801024585962e-05, "start": 1739652616.0919788, "stop": 1739652616.0920525, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "547297e6151a407d828d70459a4b0437", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
