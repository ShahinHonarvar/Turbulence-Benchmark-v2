{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests32_16_4.py::test_string_of_length_one", "location": ["tests32_16_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_16_4.py": 1, "Folder_16": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011062703561037779, "start": 1739652778.870069, "stop": 1739652778.87018, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "19e5c34c59724a9d876cba03903c83c2", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_16_4.py::test_string_of_length_one", "location": ["tests32_16_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_16_4.py": 1, "Folder_16": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q32/command_results_4/Folder_16/tests32_16_4.py", "lineno": 8, "message": "AssertionError: assert '1wn' == 'wn'\n  \n  - wn\n  + 1wn\n  ? +"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'w'", ">       assert insert_after_character(s) == 'w' + 'n'", "E       AssertionError: assert '1wn' == 'wn'", "E         ", "E         - wn", "E         + 1wn", "E         ? +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_16/tests32_16_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_length_one():", "        s = 'w'", ">       assert insert_after_character(s) == 'w' + 'n'", "E       AssertionError: assert '1wn' == 'wn'", "E         ", "E         - wn", "E         + 1wn", "E         ? +"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q32/command_results_4/Folder_16/tests32_16_4.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q32/command_results_4/Folder_16/tests32_16_4.py", "lineno": 8, "message": "AssertionError: assert '1wn' == 'wn'\n  \n  - wn\n  + 1wn\n  ? +"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028808205388486385, "start": 1739652778.8702948, "stop": 1739652778.870583, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "19e5c34c59724a9d876cba03903c83c2", "node": "<WorkerController gw0>"}
{"nodeid": "tests32_16_4.py::test_string_of_length_one", "location": ["tests32_16_4.py", 5, "test_string_of_length_one"], "keywords": {"test_string_of_length_one": 1, "tests32_16_4.py": 1, "Folder_16": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.817898247390985e-05, "start": 1739652778.8781984, "stop": 1739652778.8782666, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "19e5c34c59724a9d876cba03903c83c2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
