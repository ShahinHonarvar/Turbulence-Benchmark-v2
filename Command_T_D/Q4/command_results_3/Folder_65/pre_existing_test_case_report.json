{
  "parameter(s)": [
    42,
    87
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00014
  ],
  "test_range_size": [
    "passed",
    "",
    0.00016
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [88, 90, 92, 94, 96, 98, ...]\n  At index 0 diff: 2 != 88\n  Left contains 42 more items, first extra item: 92\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (84 lines hidden), use '-vv' to show",
    0.00095
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [44, 45, 46, 47, 48, 49, ...]\n  At index 0 diff: 1 != 44\n  Left contains 1040 more items, first extra item: 46\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (1082 lines hidden), use '-vv' to show",
    0.00226
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 86 == ((87 - 42) - 1)\n +  where 86 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00026
  ]
}