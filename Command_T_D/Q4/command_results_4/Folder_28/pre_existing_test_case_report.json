{
  "parameter(s)": [
    20,
    51
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00013
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [2, 4, 6, 8, 10, 12, ...] == [44, 46, 48, 50, 52, 54, ...]\n  At index 0 diff: 2 != 44\n  Left contains 21 more items, first extra item: 64\n  Full diff:\n    [\n  +  2,\n  +  4,\n  +  6,...\n  \n  ...Full output truncated (49 lines hidden), use '-vv' to show",
    0.00054
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [1, 2, 3, 4, 5, 6, ...] == [22, 23, 24, 25, 26, 27, ...]\n  At index 0 diff: 1 != 22\n  Left contains 1019 more items, first extra item: 32\n  Full diff:\n    [\n  +  1,\n  +  2,\n  +  3,...\n  \n  ...Full output truncated (1047 lines hidden), use '-vv' to show",
    0.00211
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((51 - 20) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00037
  ]
}