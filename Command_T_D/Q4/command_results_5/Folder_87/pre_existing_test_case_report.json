{
  "parameter(s)": [
    32,
    99
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00014
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [32, 34, 36, 38, 40, 42, ...] == [68, 70, 72, 74, 76, 78, ...]\n  At index 0 diff: 32 != 68\n  Right contains 32 more items, first extra item: 136\n  Full diff:\n    [\n  +  32,\n  +  34,\n  +  36,...\n  \n  ...Full output truncated (82 lines hidden), use '-vv' to show",
    0.0005
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [32, 33, 34, 35, 36, 37, ...] == [34, 35, 36, 37, 38, 39, ...]\n  At index 0 diff: 32 != 34\n  Left contains one more item: 98\n  Full diff:\n    [\n  +  32,\n  +  33,\n     34,...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show",
    0.00074
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((99 - 32) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00021
  ]
}