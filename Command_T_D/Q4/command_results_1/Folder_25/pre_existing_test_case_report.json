{
  "parameter(s)": [
    41,
    69
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00017
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [82, 84, 86, 88, 90, 92, ...] == [86, 88, 90, 92, 94, 96, ...]\n  At index 0 diff: 82 != 86\n  Left contains 2 more items, first extra item: 136\n  Full diff:\n    [\n  +  82,\n  +  84,\n     86,...\n  \n  ...Full output truncated (27 lines hidden), use '-vv' to show",
    0.0005
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [41, 42, 43, 44, 45, 46, ...] == [43, 44, 45, 46, 47, 48, ...]\n  At index 0 diff: 41 != 43\n  Left contains 1000 more items, first extra item: 68\n  Full diff:\n    [\n  +  41,\n  +  42,\n     43,...\n  \n  ...Full output truncated (1025 lines hidden), use '-vv' to show",
    0.00273
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 29 == ((69 - 41) - 1)\n +  where 29 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}