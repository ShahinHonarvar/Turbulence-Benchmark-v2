{
  "parameter(s)": [
    10,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [10, 11, 12, 13, 14, 15, ...] == [12, 13, 14, 15, 16, 17, ...]\n  At index 0 diff: 10 != 12\n  Left contains 2 more items, first extra item: 75\n  Full diff:\n    [\n  +  10,\n  +  11,\n     12,...\n  \n  ...Full output truncated (65 lines hidden), use '-vv' to show",
    0.00061
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [10, 12, 14, 16, 18, 20, ...] == [24, 26, 28, 30, 32, 34, ...]\n  At index 0 diff: 10 != 24\n  Right contains 31 more items, first extra item: 92\n  Full diff:\n    [\n  +  10,\n  +  12,\n  +  14,...\n  \n  ...Full output truncated (70 lines hidden), use '-vv' to show",
    0.00082
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((76 - 10) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00021
  ]
}