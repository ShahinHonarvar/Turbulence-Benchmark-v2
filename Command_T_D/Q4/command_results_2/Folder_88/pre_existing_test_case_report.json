{
  "parameter(s)": [
    2,
    8
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00013
  ],
  "test_range_size": [
    "passed",
    "",
    0.00011
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "assert [4, 6, 6, 8, 8, 10, ...] == [8, 10, 12, 14, 16]\n  At index 0 diff: 4 != 8\n  Left contains 10 more items, first extra item: 10\n  Full diff:\n  - [8, 10, 12, 14, 16]\n  + [4, 6, 6, 8, 8, 10, 10, 12, 12, 14, 14, 16, 16, 18, 18]",
    0.00036
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [2, 3, 3, 4, 4, 5, ...] == [4, 5, 6, 7, 8]\n  At index 0 diff: 2 != 4\n  Left contains 2006 more items, first extra item: 5\n  Full diff:\n    [\n  +  2,\n  +  3,\n  +  3,...\n  \n  ...Full output truncated (2009 lines hidden), use '-vv' to show",
    0.00551
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 15 == ((8 - 2) - 1)\n +  where 15 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}