{
  "parameter(s)": [
    29,
    53
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [30, 32, 34, 36, 38, 40, ...] == [62, 64, 66, 68, 70, 72, ...]\n  At index 0 diff: 30 != 62\n  Right contains 11 more items, first extra item: 86\n  Full diff:\n    [\n  -  62,\n  -  64,\n  -  66,...\n  \n  ...Full output truncated (57 lines hidden), use '-vv' to show",
    0.00213
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [30, 31, 32, 33, 34, 35, ...] == [31, 32, 33, 34, 35, 36, ...]\n  At index 0 diff: 30 != 31\n  Left contains one more item: 53\n  Full diff:\n    [\n  +  30,\n     31,\n     32,...\n  \n  ...Full output truncated (22 lines hidden), use '-vv' to show",
    0.00072
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 0 == ((53 - 29) - 1)\n +  where 0 = sum([])\n +    where [] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}