{
  "parameter(s)": [
    33
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_similar_chars_of_length_33": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00011
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00014
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00014
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00038
  ],
  "test_string_of_similar_chars_of_length_greater_than_33": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (64 lines hidden), use '-vv' to show",
    0.00071
  ]
}