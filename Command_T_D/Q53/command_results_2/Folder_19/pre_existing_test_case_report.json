{
  "parameter(s)": [
    23
  ],
  "test_string_of_similar_chars_of_length_23": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00014
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00012
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    0.00013
  ],
  "test_numeric_string": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00031
  ],
  "test_string_of_similar_chars_of_length_greater_than_23": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (44 lines hidden), use '-vv' to show",
    0.00046
  ]
}