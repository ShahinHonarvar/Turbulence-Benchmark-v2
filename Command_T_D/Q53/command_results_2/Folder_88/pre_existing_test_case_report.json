{
  "parameter(s)": [
    27
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    6e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    7e-05
  ],
  "test_numeric_string": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcd', 'cdefabcdefabcdefabcdefabcdef', 'efabcdefabcdefabcdefabcdefab'}\n +  where {'abcdefabcdefabcdefabcdefabcd', 'cdefabcdefabcdefabcdefabcdef', 'efabcdefabcdefabcdefabcdefab'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00023
  ],
  "test_string_of_similar_chars_of_length_27": [
    "failed",
    "AssertionError: assert set() == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n  + set()",
    0.00052
  ]
}