{
  "parameter(s)": [
    38
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {' ', '  ', '  a', '  a ', '  a  ', '  a  a', ...}\n +  where {' ', '  ', '  a', '  a ', '  a  ', '  a  a', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00204
  ],
  "test_string_of_similar_chars_of_length_38": [
    "failed",
    "AssertionError: assert {'a', 'aa', '...'aaaaaa', ...} == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaa'\n  'aaaaaaaa'\n  'aaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (75 lines hidden), use '-vv' to show",
    0.00317
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef', ...}\n +  where {'a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef', ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00387
  ]
}