{
  "parameter(s)": [
    49
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    7e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    8e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'cdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcd', 'efabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefab', 'cdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcd', 'efabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00033
  ],
  "test_string_of_similar_chars_of_length_49": [
    "failed",
    "AssertionError: assert set() == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n  + set()",
    0.00055
  ]
}