{
  "parameter(s)": [
    23
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    5e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    5e-05
  ],
  "test_numeric_string": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcde'}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcde'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00035
  ],
  "test_string_of_similar_chars_of_length_23": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaaaaaaaaaaaaa'} == {'aaaaaaaaaaaaaaaaaaaaaaa'}\n  Extra items in the left set:\n  'aaaaaaaaaaaaaaaaaaaaaa'\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaa'}\n  ?                         -\n  + {'aaaaaaaaaaaaaaaaaaaaaa'}",
    0.00069
  ]
}