{
  "parameter(s)": [
    40
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    7e-05
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    0.00014
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not [('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcde', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')]\n +  where [('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcde', 'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')] = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00064
  ],
  "test_string_of_similar_chars_of_length_40": [
    "failed",
    "AssertionError: assert [('aaaaaaaaaa...aaaaaaaaaaa')] == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Full diff:\n  - {\n  + [\n  +  ('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n  -  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n  +   'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'),\n  ? +                                           +\n  - }\n  + ]",
    0.00166
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 40 <= 2\n +  where 2 = len(('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'))",
    0.00029
  ]
}