{
  "parameter(s)": [
    24
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_similar_chars_of_length_24": [
    "passed",
    "",
    0.00015
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    6e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    7e-05
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    0.00015
  ],
  "test_string_of_similar_nums": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_many_similar_nums": [
    "passed",
    "",
    0.00012
  ],
  "test_numeric_string": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'}\n +  where {'abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef'} = palindrome_of_length_at_least_n('abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef')",
    0.00042
  ],
  "test_string_of_similar_chars_of_length_greater_than_24": [
    "failed",
    "AssertionError: assert {'aaaaaaaaaaa...aaaaaaaaaaaa'} == {'aaaaaaaaaaa...aaaaaaa', ...}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'...\n  \n  ...Full output truncated (46 lines hidden), use '-vv' to show",
    0.00048
  ]
}