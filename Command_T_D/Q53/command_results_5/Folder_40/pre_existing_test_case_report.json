{
  "parameter(s)": [
    3
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_punctuations": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_punctuations_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_punctuations_and_letters_and_spaces": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_similar_chars_of_length_3": [
    "failed",
    "AssertionError: assert {('aa', ''), ('aaa', '')} == {'aaa'}\n  Extra items in the left set:\n  ('aaa', '')\n  ('aa', '')\n  Extra items in the right set:\n  'aaa'\n  Full diff:\n  - {'aaa'}\n  + {('aaa', ''), ('aa', '')}",
    0.00082
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {('abcdef', ''), ('abcdefabcdef', ''), ('abcdefabcdefabcdef', ''), ('bcdef', ''), ('bcdefabcdef', ''), ('bcdefabcdefabcdef', ''), ...}\n +  where {('abcdef', ''), ('abcdefabcdef', ''), ('abcdefabcdefabcdef', ''), ('bcdef', ''), ('bcdefabcdef', ''), ('bcdefabcdefabcdef', ''), ...} = palindrome_of_length_at_least_n('abcdefabcdefabcdef')",
    0.00074
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 3 <= 2\n +  where 2 = len(('aaaa', ''))",
    0.00026
  ]
}