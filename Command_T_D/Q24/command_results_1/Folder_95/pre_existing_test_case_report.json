{
  "parameter(s)": [
    35,
    98
  ],
  "test_if_upperbound_is_not_positive": [
    "passed",
    "",
    0.00011
  ],
  "test_one": [
    "passed",
    "",
    0.00019
  ],
  "test_sum_of_divisors_subsets": [
    "failed",
    "assert 64.0 <= 0\n +  where 64.0 = sum_of_divisors_in_range(49)\n +  and   0 = sum_of_divisors_in_range(98)",
    0.00041
  ],
  "test_sum_range": [
    "failed",
    "assert 0 > 0\n +  where 0 = sum_of_divisors_in_range(35)",
    0.00015
  ],
  "test_sum_greater_than_equal_num": [
    "failed",
    "assert 35 <= 0\n +  where 0 = sum_of_divisors_in_range(35)",
    0.00025
  ]
}