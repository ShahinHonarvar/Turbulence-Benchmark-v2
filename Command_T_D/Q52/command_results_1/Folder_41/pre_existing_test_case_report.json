{
  "parameter(s)": [
    60
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    0.00013
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.0002
  ],
  "test_string_of_numbers_and_letters": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00015
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.00016
  ],
  "test_length_of_palindrome": [
    "passed",
    "",
    8e-05
  ],
  "test_length_less_than_60": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_identical_punctuations": [
    "passed",
    "",
    8e-05
  ],
  "test_string_of_punctuations_and_nums": [
    "passed",
    "",
    0.00015
  ],
  "test_length_equal_to_60": [
    "failed",
    "AssertionError: assert set() == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n  + set()",
    0.00048
  ],
  "test_string_of_spaces_and_punctuations_nums_letters": [
    "failed",
    "AssertionError: assert not {(' a @', '00', '0')}\n +  where {(' a @', '00', '0')} = palindrome_of_length_n('0 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 00 @ a a @ 0')",
    0.00046
  ]
}