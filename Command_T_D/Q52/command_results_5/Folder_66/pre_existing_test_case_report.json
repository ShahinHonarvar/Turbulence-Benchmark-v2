{
  "parameter(s)": [
    25
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not ['aa', 'aa', 'aa', 'aa', 'aa', 'aa', ...]\n +  where ['aa', 'aa', 'aa', 'aa', 'aa', 'aa', ...] = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00033
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not ['abcdef']\n +  where ['abcdef'] = palindrome_of_length_n('abcdef')",
    0.00046
  ],
  "test_string_of_numbers_and_letters": [
    "failed",
    "AssertionError: assert not ['aa', 'aa', 'aa', 'aa', 'aa', 'aa', ...]\n +  where ['aa', 'aa', 'aa', 'aa', 'aa', 'aa', ...] = palindrome_of_length_n('a1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1a')",
    0.0002
  ]
}