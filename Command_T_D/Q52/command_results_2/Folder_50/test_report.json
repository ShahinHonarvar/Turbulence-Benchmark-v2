{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_50_2.py::test_string_of_identical_nums", "location": ["tests52_50_2.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.461899753659964e-05, "start": 1731135570.5746934, "stop": 1731135570.5747883, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_50_2.py::test_string_of_many_chars", "location": ["tests52_50_2.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019124196842312813, "start": 1731135570.5751536, "stop": 1731135570.5753455, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_50_2.py::test_string_of_many_chars", "location": ["tests52_50_2.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016590498853474855, "start": 1731135570.5756297, "stop": 1731135570.5757964, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_50_2.py::test_string_of_spaces_and_letters", "location": ["tests52_50_2.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010526296682655811, "start": 1731135570.574749, "stop": 1731135570.5748546, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_50_2.py::test_string_of_many_chars", "location": ["tests52_50_2.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011624698527157307, "start": 1731135570.5761757, "stop": 1731135570.5762925, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_50_2.py::test_string_of_spaces", "location": ["tests52_50_2.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011847401037812233, "start": 1731135570.5775301, "stop": 1731135570.577649, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_50_2.py::test_string_of_identical_nums", "location": ["tests52_50_2.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 29, "message": "AssertionError: assert not {}\n +  where {'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (40 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'}", "E        +  where {} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (40 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 29, "message": "AssertionError: assert not {}\n +  where {'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'} = palindrome_of_length_n('00000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.151437008054927, "start": 1731135570.5749447, "stop": 1731135570.7263823, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_50_2.py::test_string_of_identical_nums", "location": ["tests52_50_2.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011821207590401173, "start": 1731135570.734811, "stop": 1731135570.73493, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_50_2.py::test_string_of_spaces", "location": ["tests52_50_2.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('                                                                                ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (40 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             '}", "E        +  where {} = palindrome_of_length_n('                                                                                ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (40 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('                                                                                ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('                                                                                ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.15404381300322711, "start": 1731135570.5777764, "stop": 1731135570.731821, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_50_2.py::test_string_of_spaces", "location": ["tests52_50_2.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.749007247388363e-05, "start": 1731135570.7401485, "stop": 1731135570.7402365, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_50_2.py::test_string_of_spaces_and_letters", "location": ["tests52_50_2.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 19, "message": "AssertionError: assert not {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'}\n +  where {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (40 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'}", "E        +  where {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (40 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'}", "E        +  where {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Command_T_D/Q52/command_results_2/Folder_50/tests52_50_2.py", "lineno": 19, "message": "AssertionError: assert not {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'}\n +  where {'aaaaa aa aaa aaaa aa aa aa aaa aa aaaa aa aa aa aa aa aaa aa aa aaaa aa aa aa aa aa aa aa aaa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aaaa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a  a aa aa  aa a aa aa aa aa  aa aa a aa aa aa aa aa aa  aa aa aa a aa aa aa aa aa aa aa aa  aa aa aa aa a aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa ...a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa  aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a aa aaa aa a aa aa aa aaa aa aa a aa aa aa aa aa aaa aa aa aa a aa aa aa aa aa aa aa aaa aa aa aa aa a aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aaa aa aa aa aa aa aa aa aa aa aa aa aa a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 3.7053425119956955, "start": 1731135570.575033, "stop": 1731135574.280376, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_50_2.py::test_string_of_spaces_and_letters", "location": ["tests52_50_2.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_50_2.py": 1, "Folder_50": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.299290832132101e-05, "start": 1731135574.288818, "stop": 1731135574.2889116, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "062aeb55da834e678eeac2c56d69ff91", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
