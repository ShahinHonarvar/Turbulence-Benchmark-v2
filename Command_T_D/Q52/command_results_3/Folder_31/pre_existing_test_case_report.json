{
  "parameter(s)": [
    66
  ],
  "test_string_of_spaces_and_letters": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    0.00016
  ],
  "test_string_of_punctuations_and_letters": [
    "passed",
    "",
    0.0001
  ],
  "test_string_of_numbers_and_letters": [
    "passed",
    "",
    0.00014
  ],
  "test_string_of_many_chars": [
    "failed",
    "AssertionError: assert not {'abcdef'}\n +  where {'abcdef'} = palindrome_of_length_n('abcdef')",
    0.00038
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 330 == 66\n +  where 330 = len('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')",
    0.00024
  ],
  "test_length_less_than_66": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'} = palindrome_of_length_n('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')",
    0.00025
  ]
}