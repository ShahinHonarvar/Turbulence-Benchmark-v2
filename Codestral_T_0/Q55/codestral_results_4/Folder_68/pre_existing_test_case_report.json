{
  "parameter(s)": [
    6
  ],
  "test_list_of_single_number": [
    "passed",
    "",
    0.00349
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00023
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00014
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[6], [6, 6],...6, 6, 6], ...] == [[6], [6], [6...[6], [6], ...]\n  At index 1 diff: [6, 6] != [6]\n  Left contains 650 more items, first extra item: [6]\n  Full diff:\n    [\n     [6],\n  +  [6,\n  +   6],...\n  \n  ...Full output truncated (3599 lines hidden), use '-vv' to show",
    0.02689
  ],
  "test_presence_of_duplicates_in_result": [
    "failed",
    "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x729946fdcd80>([6])\n +    where <built-in method count of list object at 0x729946fdcd80> = [[1, 6], [1, 6, 1, 6], [1, 6, 1, 6, 1, 6], [6], [6, 1], [6, 1, 6], ...].count\n +  and   3 = <built-in method count of list object at 0x729946fdcd80>([1, 6])\n +    where <built-in method count of list object at 0x729946fdcd80> = [[1, 6], [1, 6, 1, 6], [1, 6, 1, 6, 1, 6], [6], [6, 1], [6, 1, 6], ...].count\n +  and   2 = <built-in method count of list object at 0x729946fdcd80>([6, 1])\n +    where <built-in method count of list object at 0x729946fdcd80> = [[1, 6], [1, 6, 1, 6], [1, 6, 1, 6, 1, 6], [6], [6, 1], [6, 1, 6], ...].count",
    0.00065
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 36 == 6\n +  where 36 = <built-in function prod>([2, 3, 6, 1])\n +    where <built-in function prod> = math.prod",
    0.00034
  ]
}