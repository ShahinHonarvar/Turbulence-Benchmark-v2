{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  17,  -94,  -54,   16,  -83,  -89,   36,   69,  -27,  -58,\\n           28,   28,   75,   46,    0,    3,  -54,  -99,  -91,  -77,\\n           -7,  -15,   -2,   65,   76,  -49,   97,   60,   44,   41,\\n            4,  -67,   65,    1,  -84,  -72,  -99,   13,  -19,   13,\\n          -13,  -98,  -12,  -40,  -47,  -75,   64,   33,   51,   58,\\n            6,    2,   98,   50,   82,   90,  -62,   35,   11,   92,\\n           58,  -42,   49,  -28,   21,   88,  -97,   62,  -60,   60,\\n           30,   54,  -78,  -86,  -25,   70,   60,  -77,   45,    5,\\n          -64,   53,   57,   26, -100,  -35,  -25,  -79,   73,   43,\\n          -94,  -25,   14,   65,  -61,  -54,   74,  -33,   16,   31,\\n           16,  -13,  -53,   85,  -55,   85,   66,  -35,   11,   54,\\n          -70,   34,   -9,   73,    4,  -42,   62,   81,   21,   71,\\n           30,   99,   -7,   -6,   94,   35,   -5,   22,   13,   71,\\n            1,  -81,   64,   84,   24,   25,   -4,   56,  -94,  -44,\\n           82,  -39,  -36,    0,   35,   -3,   32,  100,  -87,  -26,\\n           40,  -89,   80,   49,   95,   -6,  -16,   71,   92,   12,\\n           70,  -47,   98,   15,  -92,  -46,  -60,  -74,   24,  -38,\\n           99,  -50,  -35]]))",
    0.0489
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.20886
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.2318
  ]
}