{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 15 == 1\n +  where 15 = submatrix_with_n_numbers(matrix([[ -47,  -66,    9,  -29,   11,   74,   48,  -32,  -29,  -55,\\n          -28,  -72,  -16,   48,  -53,  -26,   -1,  -98,  -64,  -50,\\n           77,  -61,   12,    2,   79,  -41,  -70,   29,   37,  -81,\\n          -74,  -93,  -36,  -46,  -63,  -40, -100,   -4,   16,  -58,\\n           58,   82,   60,   98,  -53,  -32,   88,   21,   16,   78,\\n          -54,   -5,   -1,   52,   32,   99,   67,  -56,  -78,   94,\\n          -56,   60,  -21,   38,   57,    4,  -99,   43,   52,   74,\\n           74,  -66,   39,  -79,  -44,  -67,  -40,   99,   22,  -21,\\n           11,   67,  -20,   50,   36,  -48,   26,  -57,  -58,  -80,\\n          -92,   54,  -65,  -62,   29,   38,  -34,  -24,    5,   21,\\n           80,  -20,   13,   76,   79,  -79,   21,  -13,   12,  -50,\\n          -29,   33,  -13,  -75,  -24,    8,   16,   70,  -50,  -10,\\n           71]]))",
    0.19012
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.91724
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[121]]))",
    0.00047
  ]
}