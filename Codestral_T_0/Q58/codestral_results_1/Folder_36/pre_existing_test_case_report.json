{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.0004
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  66,  -15,  -65,   21,  -55,   32,   74,   88,    0,   84,\\n           -4,  -39,   -1,  -37,   44,   79,   26,   66,   -2,  -39,\\n           47,   77,    0,  -10,  -67,  -25,   76,   37,   71,  -31,\\n           78,   74,   55,   87,  -42,  -99,   74,   70,   97,  -75,\\n           62,   98,  -36,  -63,   -3,  -97,   63,  -62,   44,    8,\\n          -65,   52,  -97,   44,  -27,  -38,   76,  -70,   64,  -18,\\n          -22,   -4,  -52,    6,   80,   51, -100,   79,  -84,   22,\\n           91,  -28,   54,  -11,   19,   55,   74,  -62,  -98,  -24,\\n            6,  -93,  -38,  -59,   -2,    5,  -30,   56,    5,   18,\\n          -58,   80,  -11,   89,  -91,  -90,    0,  -74,   41,  -95,\\n           76,  -12,  -37,  -73,  -98,   50,  -56,  -89,  -23,   -7,\\n            8,    1,  -25,   41,  -43,   41,  -70,  -77,  -33,  -27,\\n           -4,    3,  -93,  -76,  -12,  -11,   98,  -19,  -76,   10,\\n           46]]))",
    0.00258
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00928
  ]
}