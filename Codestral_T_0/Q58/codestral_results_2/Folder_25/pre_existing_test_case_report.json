{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[66]]))",
    0.00085
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 5 == 1\n +  where 5 = submatrix_with_n_numbers(matrix([[ 85, -70],\\n        [ 94,  41],\\n        [ 49,  45],\\n        [ 26,  59],\\n        [-48, -62],\\n        [-10,  18],\\n        [-19, -59],\\n        [ 18, -46],\\n        [-56, -30],\\n        [-30,  93],\\n        [ 52, -33],\\n        [-77, -26],\\n        [ 34, -24],\\n        [ 96,  67],\\n        [-49, -95],\\n        [-93,  73],\\n        [-86,  97],\\n        [ 40,  55],\\n        [ -3, -69],\\n        [-64, -67],\\n        [ 16,  74],\\n        [  9,  25],\\n        [ 85,  21],\\n        [-53, -79],\\n        [-37,   0],\\n        [ 62,  61],\\n        [-75,  25],\\n        [-50, -20],\\n        [ 31, -72],\\n        [ -1,  99],\\n        [-61, -11],\\n        [-78,  43],\\n        [ 50, -35]]))",
    0.0386
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 155 == 133",
    0.18928
  ]
}