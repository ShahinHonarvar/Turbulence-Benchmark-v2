{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  32,  -67,   80,   42, -100,   69,  -29,   67,   40,  -65,\\n           38,   11, -100,   18,   -8,  -83,  -96,   94,   49,   -5,\\n           53,  -69,   54,   40,  -11,  -82,   96,   81,  -95,    2,\\n           35,   34,   61,   27,    0,  -54,  -80,  -40,  -28,   40,\\n          -52,   99,  -24,  -32,   11,   20,   90,   44,   18,  -99,\\n           83,   -6,  -34,   52,   28,   67,  -97,   16,   21,  -61,\\n           33,   27,   61,   53,  -83,  -66,   85,   67,  -85,  -59,\\n           66,  -95,  -34,  -24,  -87,  -71,  -54,    9,   31,  -12,\\n          -98,  -19,  -58,   45,   88,   61,  -42,   37,   19,   74,\\n          -66,   74,  -48,   65,  -13,  -60,  -91,   67,   89,  -63,\\n           34,   43,  -55,   24,  -75,  -97,   10,   23,    4,  -58,\\n          -85,  -46,   19,   94,  -30,    0,   23,   78,   87,  -71,\\n          -50,  -99,   78,  -43,  -76,   -7,  -89,   -6,   64,   84,\\n           -7]]))",
    0.00514
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00096
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00103
  ]
}