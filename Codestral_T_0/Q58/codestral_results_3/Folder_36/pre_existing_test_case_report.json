{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.0005
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  27,  -50,  -58,   81,   36,   13,   83,   17,  -32,   13,\\n            8,  -28,   73,   60,  -99,   19,    4,   35,  -34,   51,\\n           85,   91,   76,  -39,   91,    3,    6,   89,  -58,  -51,\\n           93,   88,  -82,  -36,  -82,  -12,  -59,  -89,  -36,   93,\\n           61,  100,   40,   16,   14,  -57,   -7,  -87,  -19,  -10,\\n           56,   63,  -53,   -1,   98,   21,   -2,   80,  -74,   12,\\n            1,   53,   84,   36,   51,    3,   59,  -67,   53,   18,\\n           33,  -75,  -15,   45,   -3,  -17,   41,  -89,    4,  -93,\\n          -93,  -61,   54,   -4,   44,   33,   63,  -39,  -64,   78,\\n           38,   53,  -72,  -12,   24,  -15,   65,  -19,   36,   56,\\n           98,   42,   87,   30,  -14,   65,  -82,   98,  -55,   75,\\n           -6,   45,   32,  100,   89,  -57,   92,  -36, -100,   60,\\n           11,  -11,  -49,  -33,   41,  -74,  -48,  -39,  -36,  -40,\\n           43]]))",
    0.00103
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00128
  ]
}