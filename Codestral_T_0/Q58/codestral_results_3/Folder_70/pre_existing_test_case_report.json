{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00178
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 64,  25,  63,  50, -13,  45, -80,  98,  45,   8,  16, -61,   4,\\n          -8, -54,  54,  65,  45,  83,  -5,  94,  91,  70,  83, -23, -41,\\n         -58, -96, -55,  35, -46, -76,  38,  87, -11, -19,  97, -16, -70,\\n          -1, -12,  45, -42, -17,  29,  69,  38, -37,   3, -14,  73,  90,\\n         -16,  87,  73,  32, -32,  68,  59,  69, -37,  61,  78, -72, -52,\\n          84, -64, -16, -44, -99,  21, -15,  76,  -9,  88,  36, -48,  84,\\n         -96,  10, -48, -38,  -3,  45,  96, -11,  19,  70, -48, -30,   5,\\n          19,  38, -72,  14, -15,  78,  96,  45, -95,  95, -88,  80,  84,\\n         -17, -49,   8,  61,  40, -21,  24,  79,  81, -33, -22,  99, -67,\\n         -69, -84,  96, -56, -35,  38,  50, -34, -60, -26,  74,  36,  72,\\n         -75, -13, -66, -79,  86, -54, -72, -91, -71, -52, -13,   5,  -7,\\n           0, -32,   0, -47,  28,  93, -70,  55, -93,  73,  67,  71,  28,\\n         -30,  38,  83, -61, -93,  42, -81, -29, -16,  34,  10, -71,  37,\\n         -57,  77,  38,  78]]))",
    0.01894
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.27281
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.21561
  ]
}