{
  "parameter(s)": [
    115
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 231",
    0.11923
  ],
  "test_matrix_of_having_115_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  90,   90,   38,  -12,  -22,   87,   31,   65,   78,   64,\\n           82,  -57,  -68,   85,  -16,  -41,  -51,    2,  -13,   95,\\n          -75,   53,  -23, -100,    7,   10,  -53,   47,    8,   26,\\n           47, -100,  -41,  -79,  -82,   28,    6,  -92,   39,  -87,\\n          -58,    2,  -36,   91,  -89,  -18,  -42,  -91,  -31,  -26,\\n          -89,  -48,  -64,   -8,  -29,   56,   58,   46,   81,  -49,\\n          -33,    5,  -35,   77,  -78,   21,  -59,  -40,   48,   65,\\n            2,   16,  -30,  -54,  -28,   62,   25,  -57,  -76,  -47,\\n            8,   57,  -94,   17,  -71,  -91,   49,    0,  -14,  -26,\\n          -94,   16,  -19,   91,  -13, -100,  -10,  -91,  -77,   11,\\n           35,  -80,  -52,  -43,    4,  -10,  -98,  -78,   87,   82,\\n          -27,  -80,  -70,  -68,    3]]))",
    0.0188
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 231",
    0.08869
  ]
}