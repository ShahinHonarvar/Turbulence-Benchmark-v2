{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[66]]))",
    0.00054
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 2 == 1\n +  where 2 = submatrix_with_n_numbers(matrix([[  25,  -19],\\n        [   5,   17],\\n        [ -23,  -68],\\n        [  42,  -67],\\n        [  96,  -82],\\n        [ -66,   80],\\n        [  -3,   99],\\n        [  51,   14],\\n        [   8,  -50],\\n        [ -18,   47],\\n        [   7,  -49],\\n        [-100,   -4],\\n        [ -51,  -98],\\n        [  56,   56],\\n        [  -5,  -32],\\n        [ -36,  -67],\\n        [  41,   63],\\n        [ -21,   41],\\n        [  20,  -54],\\n        [ -23,  -96],\\n        [  74,  -96],\\n        [  -4,  -14],\\n        [   8,   67],\\n        [  -6,   85],\\n        [  51,   24],\\n        [ -95,  -51],\\n        [ -53,   88],\\n        [  24,  -78],\\n        [ -41,  -75],\\n        [  70,  -94],\\n        [  40,   37],\\n        [ -63,  -61],\\n        [ -73,  -88]]))",
    0.01208
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.14026
  ]
}