{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00121
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00039
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  77,   39],\\n        [  22,   85],\\n        [ -18,  -32],\\n        [  75,  -46],\\n        [  46,  -13],\\n        [ -52,  -18],\\n        [ -10,  -74],\\n        [  60,  -38],\\n        [  85,   58],\\n        [  82,  -52],\\n        [  45,  -41],\\n        [  32,   15],\\n        [ -91,  -78],\\n        [  55,  -52],\\n        [  81,  -17],\\n        [  22,  -93],\\n        [  72,  -25],\\n        [ -24, -100],\\n        [ -80,   46],\\n        [   5,  -89],\\n        [  67,   56],\\n        [  84,  -46],\\n        [ -56,  -56],\\n        [ -32,  -22],\\n        [ -50,   77],\\n        [  49,   39],\\n        [  54,   75],\\n        [  25,  -86],\\n        [ -21,  -39],\\n        [  45,   77],\\n        [ -89,   94],\\n        [  75,   96],\\n        [  59,   58],\\n        [ -42,  -93],\\n        [   3,  -61],\\n        [  85,  -20],\\n        [  78,  -89],\\n        [ -51,  -36],\\n        [  13,  -33],\\n        [  79,   15],\\n        [  85,  -27],\\n        [  68,   28],\\n        [  19,   49],\\n        [  13,  -67],\\n        [  52,  -66]]))",
    0.00066
  ]
}