{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.0008
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-31, -96],\\n        [ 47, -39],\\n        [-96,  82],\\n        [-75, -50],\\n        [ 89,   9],\\n        [ 46,  34],\\n        [ -6,   4],\\n        [-30,  66],\\n        [-53,  80],\\n        [-25,   4],\\n        [ 79, -31],\\n        [ 11, -39],\\n        [-91, -21],\\n        [-14,  73],\\n        [-42, -72],\\n        [ 58,  81],\\n        [  0, -70],\\n        [-30,  60],\\n        [ 94, -32],\\n        [-99,  92],\\n        [ 57, -24],\\n        [ 93, -37],\\n        [-63,  71],\\n        [ 25,  93],\\n        [-12,  47],\\n        [ 98,  45],\\n        [ 46,   4],\\n        [ 81, -49],\\n        [  1,  88],\\n        [ 84,  64],\\n        [ 84,  72],\\n        [-53, -54],\\n        [ 20,  75],\\n        [ 68, -10],\\n        [-99,  61],\\n        [-44, -90],\\n        [ 74,  21],\\n        [  3,  83],\\n        [-79, -41],\\n        [-87, -61],\\n        [ 81,   9],\\n        [  0, -38],\\n        [ 15,  86],\\n        [ 60,  69],\\n        [ 88,  69],\\n        [ 53,  41],\\n        [-22, -18],\\n        [-95,  70],\\n        [ 76, -76],\\n        [ 12,  -2],\\n        [-62, -41],\\n        [-63,  81]]))",
    0.00192
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00036
  ]
}