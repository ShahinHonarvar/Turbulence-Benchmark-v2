{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  80,   69,   45,   69,   70,  -96,  -73,   -2,  -96,    2,\\n          -57,    2,  -51,  -33,    9,    9,   62,   94,   95,  -51,\\n          -89,  -49,   33,  -41,   30,  -44,   77,   -2,  -66,   36,\\n          -81,   33,  -12,    6,  -96,   42,  -44,   16,   56,  -73,\\n           58,   76,   28,   55,  -11,  -33,  -61,  -67,   54,  -88,\\n            6,   58,  -69,  -63,  -76,   65,  -78,  -63,  -63,  -21,\\n          -68,  -50,   78,   76,   90,   60,   70,   16,  -34,   13,\\n          -87,   35,  -75, -100,   27,   76,  -86,   18,  -41,  -49,\\n          -42,   -3,   30,   27,  -66,  -49,  -41,   74,  -40,  -60,\\n           46,   80,  -25,  -73,   -3,  -74,   97,   37,   42,   58,\\n           -9,  -98,   43,   19,   40,   10,  -58,   84,   60,   94,\\n            1,   62,   44,  -70,  -23,   94,   95,   52,   72,  -60,\\n           53,  -11,  100,   28,   68,  -33,   19,  -72,  -45,   56,\\n           33,   32,   21,   -1,    8,   16,   32,   89,  -28,   79,\\n          -79,    0,   58,   41,   65,  -20,   83,  -24,   73,  -99,\\n           24,   88,   91,   83,  -98,   23,   46,   37,   74,    1,\\n          -49,   93,  -15,   -1,   29,  100,  -12,   75,  -66,   -5,\\n           60,  -40,   74,  -49,  -50]]))",
    0.0007
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.01056
  ]
}