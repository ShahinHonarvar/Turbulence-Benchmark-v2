{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  6, -72, -98,  21,  29, -46,   2, -63,  83, -78,  87,  67, -37,\\n         -97, -68, -83, -15,  36,  50,  55, -31,  84,  80,  56, -39, -30,\\n          99,   2,  36, -91, -84, -36,  58, -89, -71,  86,  75,  92,  53,\\n          72,   1, -44, -13, -11,  47,  99,  83,  99, -60,  -5,  42, -38,\\n          34,  39,  73,  38,  36, -93,  10, -73, -45,  32, -54,  59,  17,\\n         -98,  61,  12,  85, -99,  28, -41,  11,  -3,  71,  85, -98, -20,\\n         -26,  46, -14, -11, -62,   9, -39, -58, -16, -28, -38,  44,  31,\\n          24, -97, -86, -89, -52, -93,  71,  -8, -76, -97, -75, 100,  87,\\n          14,  22,  75, -46,  69, -38, -83,  37, -87, -81,  61,  67, -94,\\n         -62, -48,  -4,  -7,  14,  40, -74, -60, -78, -75, -43, -50,  -8,\\n          53, -85,  -5, -98, -65, -68, -86,  71, -77]]))",
    0.00073
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.0039
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00426
  ]
}