{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00087
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-32,  94, -84, -22, -78,  70,  97,  42,  84, -23,  78,  36,  -8,\\n          81,  67,  -3,  12,  39, -44, -51, -67,  12,  -8,  99, -40,  23,\\n          47, -76,  59, -86, -79,  68, -79, -75,  16, -69,  85, -49, -50,\\n          79, -74, -60,  84, -23, -36,  87,  86, -27,  44,  36, -16, -77,\\n         -98,  81, -26, -60,  24,  34,  29, -43,  36,  50, -71,  71, -44,\\n          33,  25,  33,  58,  69,  86,  87, -58,  78,  83,   6,  63,   1,\\n          27,  -1, -62, -34,  18, -55,  98,  86, -10, -51,  27,  -7,  81,\\n          80, -21,  -1,  11,  97,  41, -10, -64, -68, -86, -37, -60, -48,\\n          18,  72,  -2,  78,  20, -11,  73,  18, -63,  60, -76,  22,  34,\\n         -28,  76,  68,  59, -38, 100,  38,  25,  25, -62, -16,  30, -51,\\n          86]]))",
    0.00066
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00032
  ]
}