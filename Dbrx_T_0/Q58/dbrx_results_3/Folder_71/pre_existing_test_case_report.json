{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-19,  30],\\n        [ 64,  26],\\n        [ 78,  72],\\n        [ 13, -54],\\n        [ 87, -66],\\n        [ 29, -30],\\n        [ 23, -14],\\n        [-79,  60],\\n        [ -5, -14],\\n        [ 77,  99],\\n        [-40,  25],\\n        [  2, -74],\\n        [ 35,  30],\\n        [-69, -31],\\n        [  4, -10],\\n        [ 82,  -5],\\n        [-12, -26],\\n        [-56,  33],\\n        [ 48, -23],\\n        [-86,  41],\\n        [  7,  96],\\n        [ -5, -47],\\n        [ 25,  83],\\n        [ 85,  62],\\n        [-44, -99],\\n        [ 45, -35],\\n        [ 46,  39],\\n        [ 46, -72],\\n        [-80,  70],\\n        [ 21,  54],\\n        [-88,  64],\\n        [-65, -45],\\n        [ 87,  60],\\n        [-47,  67],\\n        [-82,  32],\\n        [ 81,  18],\\n        [-92,  35],\\n        [-39,  50],\\n        [ 10,  96]]))",
    0.00185
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00047
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00075
  ]
}