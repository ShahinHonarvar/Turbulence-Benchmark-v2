{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00027
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -49,   99],\\n        [  64,  -82],\\n        [-100,   73],\\n        [  14,  -71],\\n        [  29,  -84],\\n        [  83,  -21],\\n        [  33,   64],\\n        [ -94,  -17],\\n        [ -84,  -98],\\n        [ -73,   16],\\n        [ -71,   86],\\n        [ -70,  -45],\\n        [ -32,   79],\\n        [ -18,   77],\\n        [  24,   68],\\n        [  47,  -48],\\n        [ -31,  -49],\\n        [ -81,   61],\\n        [  57,    0],\\n        [ -83,  -33],\\n        [ -23,   52],\\n        [  75,  -64],\\n        [ -64,   80],\\n        [  72,  -12],\\n        [ -59,   49],\\n        [ -37,   21],\\n        [  99,   25],\\n        [ -43,  -39],\\n        [  49,   30],\\n        [  76,   12],\\n        [ -40,  -56],\\n        [ -84,  -52],\\n        [  29,   46],\\n        [ -62,   28],\\n        [   0,   74],\\n        [  65,   45],\\n        [ -13,   22],\\n        [ -24,  -88],\\n        [  75,    3],\\n        [  44,   85]]))",
    0.00062
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00494
  ]
}