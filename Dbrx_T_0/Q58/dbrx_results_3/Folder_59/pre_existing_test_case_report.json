{
  "parameter(s)": [
    76
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 153",
    0.0003
  ],
  "test_matrix_of_having_76_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 24, -25],\\n        [ 43,  14],\\n        [-41,  25],\\n        [ 27, -72],\\n        [-32, -50],\\n        [-24, -20],\\n        [ 14,   9],\\n        [ 76, -57],\\n        [ 65, -83],\\n        [ -9,  37],\\n        [ 63, -57],\\n        [-88,  95],\\n        [ -9, -64],\\n        [-93, -19],\\n        [ 37, -83],\\n        [ 69,  97],\\n        [ 35,  31],\\n        [ 52,  78],\\n        [ 79, -36],\\n        [ 85, -51],\\n        [ 56, -82],\\n        [-14,  90],\\n        [ 52,  34],\\n        [-52,  99],\\n        [ 96, -66],\\n        [ 83,  95],\\n        [-21, -66],\\n        [ 38,  89],\\n        [ 52, -95],\\n        [ 84,  75],\\n        [-56, -94],\\n        [ 38,  69],\\n        [-72, -74],\\n        [ 46,  85],\\n        [-98, -50],\\n        [-39, -75],\\n        [-31,  78],\\n        [ -7,  83]]))",
    0.00442
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 153",
    0.00094
  ]
}