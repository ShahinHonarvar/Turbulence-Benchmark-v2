{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00052
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00092
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00033
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-37,  -5, -27,  13, -58,  -4,  38, -49,  31,  25,  80,  -5, -62,\\n         -40,   0,  70,   1,  79,   9,   5, -53,  -2,  53,  78,  20,  44,\\n         -52,  18, -26,  74,  92,  -7, -10,  46, -54, -65,  11,  57, -73,\\n         -47,  65, -18,  54,  70, -53,  82, -36,   0,  17,  25, -83,  23,\\n         -93, -72, -64,  36,  78, -82, -82, -97, -79,  55,  -5, -60,   3,\\n         -38, -45, -54, -45,  17,  87, -40, -59, -79,  96,   7,  12,  32,\\n         -23,   5, -56, -88, -62, -86,   2,  89,   3,  -2,  22,  51,  41,\\n          95,  -9,  18, -51, -98,  75, -49, -48, -51,  18, -72,  61,  -8,\\n           7,  89, -25,   3,  38,  49,  -7,  83,  85,  86,  61,  27,  48,\\n          39, -81, -77,  49, -27,  39, -43, -99, -72,   8,  93, -29,  37,\\n          81,  78, -96,  17,  34,  77, -40,  54, -46,  88,  67,  51, -74,\\n          97, -70,  64, -61]]))",
    0.00065
  ]
}