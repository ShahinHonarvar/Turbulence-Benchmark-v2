{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -96,  -58],\\n        [  98,  -66],\\n        [  12,   88],\\n        [ -84,  -73],\\n        [  35,   49],\\n        [  20,  -57],\\n        [ -93,   59],\\n        [ -18,   25],\\n        [  44,  -37],\\n        [  79,   54],\\n        [ -74,  -38],\\n        [ -16,   87],\\n        [ -10,  -16],\\n        [ -37,  -20],\\n        [ -12,  -40],\\n        [ -78,  -38],\\n        [  20,   71],\\n        [  -3,  -47],\\n        [ -29,   71],\\n        [ -48,   11],\\n        [ -89,  -89],\\n        [ -75,   75],\\n        [ -50,   -6],\\n        [-100,  -46],\\n        [ -51,   58],\\n        [ -60,   -5],\\n        [  52,  -74],\\n        [ -36,   51],\\n        [ -70,  -94],\\n        [ -21,   15],\\n        [ -58,   41],\\n        [ -14,  -14],\\n        [ -34,   85],\\n        [  99,  -16],\\n        [ -16,  -21],\\n        [ -70,   -5],\\n        [  94,   -4],\\n        [ -48,  -52],\\n        [  28,  -83],\\n        [  68,  -49],\\n        [ -35,  -10],\\n        [ -43,  -77]]))",
    0.0006
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00033
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00075
  ]
}