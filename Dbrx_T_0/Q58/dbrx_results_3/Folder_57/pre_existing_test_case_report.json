{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 65,  20],\\n        [-27,  32],\\n        [-15,   0],\\n        [ 95, -90],\\n        [  4, -82],\\n        [ 14, -85],\\n        [ 22, -47],\\n        [-38, -88],\\n        [ 28, -69],\\n        [-81,  40],\\n        [ 56,  93],\\n        [ 21, -84],\\n        [ 55, -45],\\n        [-28, -46],\\n        [-93, -45],\\n        [ 58, -80],\\n        [-93, -63],\\n        [ -9,  25],\\n        [-31,  -2],\\n        [-25,  -4],\\n        [ 72,  89],\\n        [ 91,  65],\\n        [ 34, -24],\\n        [-64,  12],\\n        [ 59,  68],\\n        [-70,  54],\\n        [ 22, -87],\\n        [-68,  -4],\\n        [ 39, -32],\\n        [ 50,  47],\\n        [-52,  26],\\n        [ 75, -75],\\n        [ 26, -29],\\n        [-97,  89],\\n        [ 52, -85],\\n        [ 89,  12],\\n        [ 23,  58],\\n        [ 64,  69],\\n        [ 49, -47],\\n        [ 66,  22],\\n        [-65, -17],\\n        [ 64,  84],\\n        [-93,  48],\\n        [ 21, -77],\\n        [-87, -12],\\n        [-69,  79]]))",
    0.00195
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00077
  ]
}