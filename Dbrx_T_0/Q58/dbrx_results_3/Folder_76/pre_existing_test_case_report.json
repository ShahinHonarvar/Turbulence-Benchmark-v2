{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00032
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -45,  -47,   78,   17,   53,   96,    4,  -31,   17,   30,\\n           71,  100,   34,   97,  -34,   77,   20,   18,   15,   89,\\n          -60,  -10,   75,  -19,   16,  -11,  -92,   91,   85,  -34,\\n          -28,  -26,  -15,   99,   66,  -90,   92,   26,  -89,  -97,\\n          -49,   18,   94,   40,  -50,    8,  -76,   68,  -86,  -33,\\n            9,  -25,   80,   11,   23,    7,    0,  -81,  -48,   89,\\n          -86,  -58,  -38,   75,  -29,  -49,   51,   49,  -30,  -25,\\n          -55,   56,    7,   89,   18,  -86,  -59,   31,   52,  -48,\\n          100,   92,   80,   20,  -48,   -7,    4,   -4,   58,   17,\\n          -99,  -44,   16,  -81,  -17,  -33,  -85,  -35,   69,   38,\\n           83,   43,   63,  -95,   20,  -85,  -55,   16,   49,   68,\\n          -80,  -15,   88,  -67,   50,   13,  -96,   84,   67,   12,\\n          -13,  -34,   10,  -42, -100,   -8,   63,  -24,  -49,  -89,\\n           55,   62,   23,   -3,    2,   62,   24,    7,   85,   75,\\n          -35,  -90,   88,   56,   62,    2,   89,  -14,  -33,   94,\\n          -89,   13,   61,  -83,  -24,   46,  -48,  -33,   85]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00096
  ]
}