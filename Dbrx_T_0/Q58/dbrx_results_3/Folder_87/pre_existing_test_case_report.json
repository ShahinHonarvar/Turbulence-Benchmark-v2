{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00303
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  17,  -89],\\n        [   9,  -59],\\n        [  90,  -19],\\n        [  81,  -22],\\n        [  31,   10],\\n        [  77,  -64],\\n        [ -31,  -37],\\n        [   8,   87],\\n        [  91,  -58],\\n        [  73,   20],\\n        [  50,  -28],\\n        [ -21,  -92],\\n        [ -51,   78],\\n        [  -5,  -75],\\n        [  89,   39],\\n        [ -42,   41],\\n        [ -26,  -48],\\n        [ -80,  -90],\\n        [  58,   90],\\n        [ -65,   27],\\n        [  50,   77],\\n        [  86,   39],\\n        [ -97,    1],\\n        [ -96,  -35],\\n        [ -52,    9],\\n        [  19,   16],\\n        [  70,  -59],\\n        [ -69,  -63],\\n        [ -39,   17],\\n        [  67,   79],\\n        [  -9,   83],\\n        [   4,   33],\\n        [  54,   24],\\n        [ 100,  -67],\\n        [  64,  -82],\\n        [  21,  -31],\\n        [ -22,  -51],\\n        [ -28,  -22],\\n        [ -44,   32],\\n        [   2,  -62],\\n        [  76,   74],\\n        [  -6,   -4],\\n        [  78,  -42],\\n        [  98,  -98],\\n        [ -45,  -37],\\n        [-100,  -18],\\n        [ -82,   89],\\n        [ -36,    2]]))",
    0.00065
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00036
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00079
  ]
}