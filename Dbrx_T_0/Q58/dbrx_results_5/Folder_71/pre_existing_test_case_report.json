{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00046
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -89,   90],\\n        [  67,   13],\\n        [  19,  -94],\\n        [ -32,  -19],\\n        [  47,   50],\\n        [ -36,   81],\\n        [  26, -100],\\n        [  89,  -17],\\n        [ -90,  -19],\\n        [  32,   58],\\n        [ -16,  100],\\n        [  62,  -15],\\n        [  75,   -9],\\n        [  72,    7],\\n        [  69,   14],\\n        [  89,   69],\\n        [ -76,  -63],\\n        [ -66,   89],\\n        [  33,  -93],\\n        [  40,   17],\\n        [ -95,   27],\\n        [  49,  -48],\\n        [ -50,   -1],\\n        [  89,   51],\\n        [  14,  -14],\\n        [  64,  -47],\\n        [ -65,  -74],\\n        [ -64,  -78],\\n        [ -25,   11],\\n        [  -7,  -99],\\n        [ -60,   66],\\n        [  -7,  -10],\\n        [ -33,  -86],\\n        [   5,  -53],\\n        [  81,   -5],\\n        [  80,   35],\\n        [ -71,  -38],\\n        [ -57,   18],\\n        [ -51,   52]]))",
    0.00525
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00066
  ]
}