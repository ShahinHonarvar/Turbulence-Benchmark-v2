{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00052
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  36,   -7,  -69,   82,  -55,  -66,   18,   42,  -81,  -32,\\n          -96,  -58,  -47,  -55,  -75,   -3,  100,  -53,  -18,   20,\\n            9,   78,   52,   62,  -91,   -1,  -51,    4,   31,   58,\\n            1,  -70,  -78,   63,   10,  -80,   24,   17,  -57,  -76,\\n         -100,  -35,  -22,  -82,  -56,   65,  -52,  -37,   11,   15,\\n           15,   20,  -42,   70,   42,  -84,   -9,  -43,   98,   75,\\n          -29,   66,   40,   16,   78,  -56,   74,  -88,  -77,  -59,\\n           84,  -81,   36,    3,   82,  -11,   82,   -9,  -82,   34,\\n           61,  -63,   98,   47,  -89,   32,   34,    1,  -26, -100,\\n          -95,  -95,  -96,   95,   95,   25,   87,   -5,  -95,  -78,\\n            0,    4,   25,   54,  -91,  -97,  -24,   15,  -47,   64,\\n           29,   67,  -50,  -85,   29,   58,  -71,  -82,   93,  -74,\\n          -78,   28,  -71,  -77,   -8,  -67,   50,   70,   40,  -46,\\n           77,  -16,   22,   74,  -59,   11,   56,   10,   12]]))",
    0.00067
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00091
  ]
}