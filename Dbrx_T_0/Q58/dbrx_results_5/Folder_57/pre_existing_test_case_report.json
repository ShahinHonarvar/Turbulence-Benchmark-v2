{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-48,  47],\\n        [ 87, -79],\\n        [ 93,  16],\\n        [-13,   0],\\n        [ 84,  28],\\n        [ 67,  70],\\n        [-24, -36],\\n        [-44,  80],\\n        [ -3, -10],\\n        [ 12,  73],\\n        [-97,  48],\\n        [ 62,  -9],\\n        [ 52, -67],\\n        [ 46,  75],\\n        [ 84,  75],\\n        [-16, -22],\\n        [ 98, -27],\\n        [-61,  96],\\n        [ 81, -48],\\n        [ 69, -43],\\n        [-25,  -5],\\n        [-76,  77],\\n        [-49,  -4],\\n        [ 27, -88],\\n        [-58,  46],\\n        [ 97,  62],\\n        [ 77,  -3],\\n        [ 39, -73],\\n        [ 35,  84],\\n        [ 25,  69],\\n        [-62,  32],\\n        [100,  -7],\\n        [-30, -93],\\n        [  4, -12],\\n        [ 79,  64],\\n        [ 74,  61],\\n        [ 53,  27],\\n        [ 86,  80],\\n        [ 48, -73],\\n        [ -8, -57],\\n        [-47, -85],\\n        [ 58, -32],\\n        [-68,  31],\\n        [-73,  65],\\n        [ 72,  75],\\n        [-42,  -1]]))",
    0.00904
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00201
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00039
  ]
}