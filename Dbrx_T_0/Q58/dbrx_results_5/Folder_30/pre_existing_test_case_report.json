{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.0003
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 53,  69],\\n        [-38,  17],\\n        [ -1,   6],\\n        [-53, -13],\\n        [ 53, -45],\\n        [-30,  78],\\n        [ 48, -28],\\n        [ 54, -17],\\n        [-68, -79],\\n        [ 86,  27],\\n        [-72, -58],\\n        [-30,  36],\\n        [ 65, -66],\\n        [ -8, -74],\\n        [-47, -21],\\n        [-39,  88],\\n        [-44, -44],\\n        [ 38,  88],\\n        [-79,  28],\\n        [-27, -33],\\n        [-29,  -8],\\n        [ 28, -51],\\n        [ 52, -37],\\n        [-19,  14],\\n        [-12,  76],\\n        [-55, -43],\\n        [-31,  55],\\n        [  4,   1],\\n        [-26, -42],\\n        [-50, -10],\\n        [ 97,  -8],\\n        [  4,  55],\\n        [ 50,  90],\\n        [ 16, -27],\\n        [ 26,  29],\\n        [-52, -66],\\n        [-47, -32],\\n        [-22,  99],\\n        [ 73,  46],\\n        [-40,  49],\\n        [-56, -20],\\n        [-41,  99],\\n        [ 93,  55],\\n        [-54,  75],\\n        [  5, -80],\\n        [-73, -64],\\n        [-89, -69]]))",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00086
  ]
}