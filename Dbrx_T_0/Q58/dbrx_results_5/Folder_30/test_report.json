{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_30_5.py::test_horizontal_matrix", "location": ["tests58_30_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011895701754838228, "start": 1730450762.0896113, "stop": 1730450762.0897305, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_30_5.py::test_matrix_of_having_94_integers", "location": ["tests58_30_5.py", 28, "test_matrix_of_having_94_integers"], "keywords": {"test_matrix_of_having_94_integers": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00037594203604385257, "start": 1730450762.0901992, "stop": 1730450762.0905762, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_5.py::test_matrix_of_one_integer", "location": ["tests58_30_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013658101670444012, "start": 1730450762.0923479, "stop": 1730450762.092485, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_5.py::test_matrix_of_one_integer", "location": ["tests58_30_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017816596664488316, "start": 1730450762.0927298, "stop": 1730450762.0929086, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_5.py::test_matrix_of_one_integer", "location": ["tests58_30_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.780800271779299e-05, "start": 1730450762.093256, "stop": 1730450762.0933442, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_5.py::test_vertical_matrix", "location": ["tests58_30_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010306498734280467, "start": 1730450762.09377, "stop": 1730450762.0938735, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_5.py::test_horizontal_matrix", "location": ["tests58_30_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 58, "message": "assert 0 == 189"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(94)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 94) + 1", ">           assert output == expected_result", "E           assert 0 == 189"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(94)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 94) + 1", ">           assert output == expected_result", "E           assert 0 == 189"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 58, "message": "assert 0 == 189"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002991229994222522, "start": 1730450762.090296, "stop": 1730450762.0905955, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_30_5.py::test_horizontal_matrix", "location": ["tests58_30_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.96069866232574e-05, "start": 1730450762.1068866, "stop": 1730450762.1069868, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_30_5.py::test_matrix_of_having_94_integers", "location": ["tests58_30_5.py", 28, "test_matrix_of_having_94_integers"], "keywords": {"test_matrix_of_having_94_integers": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 53,  69],\\n        [-38,  17],\\n        [ -1,   6],\\n        [-53, -13],\\n        [ 53, -45],\\n        [-30,  78],\\n        [ 48, -28],\\n        [ 54, -17],\\n        [-68, -79],\\n        [ 86,  27],\\n        [-72, -58],\\n        [-30,  36],\\n        [ 65, -66],\\n        [ -8, -74],\\n        [-47, -21],\\n        [-39,  88],\\n        [-44, -44],\\n        [ 38,  88],\\n        [-79,  28],\\n        [-27, -33],\\n        [-29,  -8],\\n        [ 28, -51],\\n        [ 52, -37],\\n        [-19,  14],\\n        [-12,  76],\\n        [-55, -43],\\n        [-31,  55],\\n        [  4,   1],\\n        [-26, -42],\\n        [-50, -10],\\n        [ 97,  -8],\\n        [  4,  55],\\n        [ 50,  90],\\n        [ 16, -27],\\n        [ 26,  29],\\n        [-52, -66],\\n        [-47, -32],\\n        [-22,  99],\\n        [ 73,  46],\\n        [-40,  49],\\n        [-56, -20],\\n        [-41,  99],\\n        [ 93,  55],\\n        [-54,  75],\\n        [  5, -80],\\n        [-73, -64],\\n        [-89, -69]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_94_integers():", "        if 94 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(94 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(94)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 53,  69],\\n        [-38,  17],\\n        [ -1,   6],\\n        [-53, -13],\\n        [ 53, -45],\\n        [-30,  78],\\n        [ 48, -28],\\n        [ 54, -17],\\n        [-68, -79],\\n        [ 86,  27],\\n        [-72, -58],\\n        [-30,  36],\\n        [ 65, -66],\\n        [ -8, -74],\\n        [-47, -21],\\n        [-39,  88],\\n        [-44, -44],\\n        [ 38,  88],\\n        [-79,  28],\\n        [-27, -33],\\n        [-29,  -8],\\n        [ 28, -51],\\n        [ 52, -37],\\n        [-19,  14],\\n        [-12,  76],\\n        [-55, -43],\\n        [-31,  55],\\n        [  4,   1],\\n        [-26, -42],\\n        [-50, -10],\\n        [ 97,  -8],\\n        [  4,  55],\\n        [ 50,  90],\\n        [ 16, -27],\\n        [ 26,  29],\\n        [-52, -66],\\n        [-47, -32],\\n        [-22,  99],\\n        [ 73,  46],\\n        [-40,  49],\\n        [-56, -20],\\n        [-41,  99],\\n        [ 93,  55],\\n        [-54,  75],\\n        [  5, -80],\\n        [-73, -64],\\n        [-89, -69]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_94_integers():", "        if 94 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(94 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(94)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 53,  69],\\n        [-38,  17],\\n        [ -1,   6],\\n        [-53, -13],\\n        [ 53, -45],\\n        [-30,  78],\\n        [ 48, -28],\\n        [ 54, -17],\\n        [-68, -79],\\n        [ 86,  27],\\n        [-72, -58],\\n        [-30,  36],\\n        [ 65, -66],\\n        [ -8, -74],\\n        [-47, -21],\\n        [-39,  88],\\n        [-44, -44],\\n        [ 38,  88],\\n        [-79,  28],\\n        [-27, -33],\\n        [-29,  -8],\\n        [ 28, -51],\\n        [ 52, -37],\\n        [-19,  14],\\n        [-12,  76],\\n        [-55, -43],\\n        [-31,  55],\\n        [  4,   1],\\n        [-26, -42],\\n        [-50, -10],\\n        [ 97,  -8],\\n        [  4,  55],\\n        [ 50,  90],\\n        [ 16, -27],\\n        [ 26,  29],\\n        [-52, -66],\\n        [-47, -32],\\n        [-22,  99],\\n        [ 73,  46],\\n        [-40,  49],\\n        [-56, -20],\\n        [-41,  99],\\n        [ 93,  55],\\n        [-54,  75],\\n        [  5, -80],\\n        [-73, -64],\\n        [-89, -69]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 53,  69],\\n        [-38,  17],\\n        [ -1,   6],\\n        [-53, -13],\\n        [ 53, -45],\\n        [-30,  78],\\n        [ 48, -28],\\n        [ 54, -17],\\n        [-68, -79],\\n        [ 86,  27],\\n        [-72, -58],\\n        [-30,  36],\\n        [ 65, -66],\\n        [ -8, -74],\\n        [-47, -21],\\n        [-39,  88],\\n        [-44, -44],\\n        [ 38,  88],\\n        [-79,  28],\\n        [-27, -33],\\n        [-29,  -8],\\n        [ 28, -51],\\n        [ 52, -37],\\n        [-19,  14],\\n        [-12,  76],\\n        [-55, -43],\\n        [-31,  55],\\n        [  4,   1],\\n        [-26, -42],\\n        [-50, -10],\\n        [ 97,  -8],\\n        [  4,  55],\\n        [ 50,  90],\\n        [ 16, -27],\\n        [ 26,  29],\\n        [-52, -66],\\n        [-47, -32],\\n        [-22,  99],\\n        [ 73,  46],\\n        [-40,  49],\\n        [-56, -20],\\n        [-41,  99],\\n        [ 93,  55],\\n        [-54,  75],\\n        [  5, -80],\\n        [-73, -64],\\n        [-89, -69]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007606910075992346, "start": 1730450762.0925007, "stop": 1730450762.0932622, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_5.py::test_matrix_of_having_94_integers", "location": ["tests58_30_5.py", 28, "test_matrix_of_having_94_integers"], "keywords": {"test_matrix_of_having_94_integers": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.812100324779749e-05, "start": 1730450762.1176627, "stop": 1730450762.1177614, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_30_5.py::test_vertical_matrix", "location": ["tests58_30_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 79, "message": "assert 0 == 189"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 94", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 94) + 1", ">           assert output == expected_result", "E           assert 0 == 189"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 94", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 94 < 30:", "            num = 4", "        elif 30 <= 94 < 70:", "            num = 3", "        elif 70 <= 94 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 94) + 1", ">           assert output == expected_result", "E           assert 0 == 189"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_5/Folder_30/tests58_30_5.py", "lineno": 79, "message": "assert 0 == 189"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008616039995104074, "start": 1730450762.0939832, "stop": 1730450762.0948455, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_30_5.py::test_vertical_matrix", "location": ["tests58_30_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_30_5.py": 1, "Folder_30": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.475898696109653e-05, "start": 1730450762.126328, "stop": 1730450762.1264231, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "0f9e0e2e63744944ab90a6783798a073", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
