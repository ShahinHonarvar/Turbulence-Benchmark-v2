{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00032
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -59,   13],\\n        [ -79,  -82],\\n        [ -41,  -63],\\n        [-100,   27],\\n        [  56,   89],\\n        [  48,   36],\\n        [ -20,   44],\\n        [ -75,   62],\\n        [ -98,  -87],\\n        [   5,   17],\\n        [  72,  -74],\\n        [ -38,   46],\\n        [ -84,   69],\\n        [ -17,   68],\\n        [   2,  -86],\\n        [  -7,    2],\\n        [  -6,  -91],\\n        [  78,  -76],\\n        [ -77,   46],\\n        [   4,  -32],\\n        [ -80,  -69],\\n        [  90,   15],\\n        [ -80,  -63],\\n        [  17,    7],\\n        [ -47,   -1],\\n        [  48,  -89],\\n        [  83,  -71],\\n        [  67,  -38],\\n        [ -27,  -16],\\n        [ -50,    3],\\n        [ -80,  -31],\\n        [  26,  -80],\\n        [ -14,    5],\\n        [ -56,  -82],\\n        [  47,   41],\\n        [ -45,   37],\\n        [  74,  -78],\\n        [  86,  -83],\\n        [  82,   94],\\n        [ -48,  -20],\\n        [ -64,   65],\\n        [  11,   67],\\n        [   2,    0],\\n        [  72,   45],\\n        [  61,   87],\\n        [  82,   88],\\n        [ -64,  -50],\\n        [  44,  -32],\\n        [ -42,   78],\\n        [  86,  -88],\\n        [  81,  -95],\\n        [  -2,  -75]]))",
    0.00191
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00112
  ]
}