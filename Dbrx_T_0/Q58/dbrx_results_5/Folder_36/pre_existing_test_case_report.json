{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.0003
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-80, -84, -86, -63, -82,  44, -23,  49,  38, -91, -45,  -1,  18,\\n         -55, -77, -84,  57,   3, -31,  36,  27, -78,  33, -84, -98,  61,\\n          62,  31,  -2, -70,  67, -28,  45, -19,  25,  42,   4, -25,  10,\\n          14,  28,  43,  -6,  78,  95,  19,  43,  -9, -94,  79,   1,  60,\\n          33,  19,  86,  44,  75, -10, -10, -96,  -6,  66,   1,  55,  89,\\n         -58,  43, -34,  66,  54,  15,  32,  42, -24,  66, -78,  10,  92,\\n         -40, -34,  88, -85,  12,  32, -82,  84, -74, -87,  72,  34,  98,\\n         -31,  11, -55,  42, -40, -26,  50,  70,  41,  48, -40,  53, -45,\\n          23, -83,  81,  40, -30, -69, -93, -72, 100,  81,  24,  21,  10,\\n          57, -71,  -5, -57,  34,  40,   2, -55, -35, -74, -29, -97,  53,\\n          26]]))",
    0.00067
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00087
  ]
}