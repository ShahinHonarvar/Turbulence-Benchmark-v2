{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 32,  81, -87,  -3, -98, -71, -37, -91,  81,  48,  58,  -5,  93,\\n          58,  67, -56, -90,  57,  -2,  71,  58,  -6,   2, -33, -90, -81,\\n          93,   3, 100,   9, -23,  66, -70, -53, -59,  -2,  17, -39,  91,\\n           4,  79,  66,  72, -78, -56,  52, -80, -39,   0, -49,  41, -32,\\n         -31, -21,  10,  85, -74, -62,  44,  90,  11, -88, -29, -72,  -3,\\n         -70,  51,   5, -38, -83,  86, -69, -98, -71,  63, -69,  62, -49,\\n         -86,  41,  88, -16, -71,  17,  33, -29,   9, -79, -73,  19,   0,\\n         -35,  37, -15, -27,  66,  32,   0, -58, -73,  90, -92,  11,  40,\\n         -80,  98,  32, -82,  31,  16,  80,  94,  -7, -73,  48,  76, -64,\\n         -49, -84, -55,  64,  14,   1, -97, -34,   4, -15,  49,  40, -23,\\n         -76,  -7,   7, -47,  33, -62, -49, -60, -21,  73, -56, -68,  47,\\n          92,  45,  -8, -10,  50,  17,  92, -43,  20,  53, -42, -63, -22,\\n         -90,  -1, -50, -71,  33, -50,  77,  55,  42,  54,  30,  70, -45,\\n          51,  97,  12, -75]]))",
    0.00084
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00036
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.00106
  ]
}