{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.0003
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 54, -64],\\n        [  8,   2],\\n        [ 13,  83],\\n        [-32, -19],\\n        [-84,  23],\\n        [-89, -48],\\n        [ 44,  23],\\n        [-92,  49],\\n        [ 88,  25],\\n        [-87,  76],\\n        [ 55,   8],\\n        [ 28,  49],\\n        [ 77, -37],\\n        [-47, -71],\\n        [ 93,  43],\\n        [-46,  64],\\n        [ 24,   0],\\n        [ 99, -29],\\n        [ 63,  34],\\n        [-78, -95],\\n        [ 31,  17],\\n        [ 28, -48],\\n        [ 59,  54],\\n        [100,  -1],\\n        [-89,  55],\\n        [-15,  63],\\n        [-93, -62],\\n        [ 51, -55],\\n        [-69,  85],\\n        [ 97,   8],\\n        [ 84,  17],\\n        [ 36,  85],\\n        [-33,   2],\\n        [ 52,   5],\\n        [-59,  72],\\n        [ 95,  81],\\n        [ 80,  59],\\n        [ 95, -59],\\n        [-32,  67],\\n        [ 86, -75]]))",
    0.0007
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00064
  ]
}