{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00025
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 18,  69],\\n        [ 28,  62],\\n        [ 14, -62],\\n        [ -7,  95],\\n        [-91,  99],\\n        [-34, -49],\\n        [ 50,  78],\\n        [ 27, -11],\\n        [ 26, -20],\\n        [ 93,  61],\\n        [-93, -58],\\n        [-71, -27],\\n        [ -3,  54],\\n        [ 39,  88],\\n        [-53, -20],\\n        [-26,  -8],\\n        [ 16,  31],\\n        [ 41,  87],\\n        [ 71,  85],\\n        [ 36,  58],\\n        [ 10, -45],\\n        [ 49,  15],\\n        [ 53,  17],\\n        [-26, -86],\\n        [ 50, -37],\\n        [  6,  98],\\n        [  4,  65],\\n        [ 79,  -7],\\n        [-30, -33],\\n        [ 81, -42],\\n        [ 89, -90],\\n        [-15, -41],\\n        [ 32, -69],\\n        [ 94,  41],\\n        [ 96,  28],\\n        [-11,  37],\\n        [-40, -80],\\n        [  7, -30],\\n        [ 96,   5],\\n        [-92,  -3],\\n        [-69,  18],\\n        [ -6, -60]]))",
    0.0005
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00059
  ]
}