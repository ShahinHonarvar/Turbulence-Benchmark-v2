{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00032
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -63,   39,   -1,  -75,  -37,   90,  -58,   67,  -51,   98,\\n          -91,   52,    3,  -78,   -2,  -48,  -63,   -3,  -81,  -54,\\n           51,  -20,  -66,   79,   -8,   77,  -16,   12,    3,   29,\\n          -42,  -42,  -80,  -95,   32,   59,  -68,  -75,  -16,  -87,\\n          -28,  -48,  -12,   87,  -69,   16,   87,  -69,  -45,   42,\\n           -8,    0,  -38,   -7,   61,  -91,   45,   13,  -40,  -45,\\n          -10,   67,   30,  -40,   79,  -72,  -84,  -62,  -49,   44,\\n          -45,  -59,   55,  -58,  -74,  -71,  -14,   63,   64,  -31,\\n          -23,  -93,  -57,    9,   41,  -37,   10,   89,   93,  -92,\\n          -60,  -51,   55,  -42,   13,   22,  -80,   19,   -4,  -79,\\n           45,   70,   57,  -63,  -21,   17,  -80,  -50,   -1,   85,\\n          -47,   59,  -93,   88,   74,   21,    0,   77,   75,  -52,\\n           69,   -8,   23,   86,   87,  -63,   93,   68,  -26,  -21,\\n          -89,   31,   -4,   27,   89,   33,   68,  -85, -100,   67,\\n           25, -100,  -65,   27,  -65,   55,   77,  -70,  -41,  -81,\\n           45,  -35,   -8,   68,    3,   44,  -94,   -6,  -10]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.001
  ]
}