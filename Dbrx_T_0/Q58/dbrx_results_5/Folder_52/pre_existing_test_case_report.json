{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 40,  93, -72,  35,  77, -78, -10, -15,  93,  78,  18,  67, -66,\\n          13,  29,  76,  62,  78, -11,  44, 100, -31,  51, -22, -95, -17,\\n         -95,   1,  77,  16, -80,  15, -15, -43,   4, -10,  45,  74, -36,\\n          79,  56, -89, -70,  45,  34,  -6, -77,  76, -62, -18,  41, -84,\\n         -77,  70, -42, -16, -65,   4, -20, -98, -62,  10,  97,  -7,  20,\\n          36, -80,  47, -79, -87,  41, -64, -71,   2,   9,  84,  45, -65,\\n          76,   3, -71, -18,  89,  16,  95,  -7,  61, -11, -56, -39, -96,\\n         -68,  80, -54, -97, -32, -19,  80,   8,  70,  84, -12,  23, -92,\\n          79, -75, -91,  27, -33,  72, -60,  79,   2, -50,  57, -18,  22,\\n         -98,  64, -90,  -1, -64, -48, -84, -59,  29, -55,  52,  55,  68,\\n         -51, -37,  48, -41, -17,  75, -16, -45,  73, -60, -73, -69, -60,\\n          83, -77, -30,   9]]))",
    0.00185
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.0004
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00149
  ]
}