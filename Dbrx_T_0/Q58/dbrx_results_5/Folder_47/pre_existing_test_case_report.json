{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  23,   27],\\n        [ -92,   80],\\n        [   9,  -49],\\n        [  16,   43],\\n        [  12,  -39],\\n        [ -74,  -19],\\n        [  59,  -72],\\n        [  68,  -55],\\n        [  44,   69],\\n        [ -69,   31],\\n        [ -39,    9],\\n        [ -69,  -84],\\n        [  71,    2],\\n        [  19,  -90],\\n        [  31,   27],\\n        [   5,  -55],\\n        [   1,   48],\\n        [ -66,   72],\\n        [  -9,   40],\\n        [ -40,   36],\\n        [ -74,   -1],\\n        [  20,   62],\\n        [ -19,  -41],\\n        [  30,   59],\\n        [  42,  -76],\\n        [ -48,   86],\\n        [  55,  -50],\\n        [ -62,   95],\\n        [ -99,   -1],\\n        [ -82,   87],\\n        [ -88,   36],\\n        [  75,  -47],\\n        [ -85,   63],\\n        [ -38,   55],\\n        [ -52,   69],\\n        [-100,   67],\\n        [ -46,   53],\\n        [ -33,  -81],\\n        [  87,  -61],\\n        [ -28,   14],\\n        [   0,   23],\\n        [ -33,   65],\\n        [ -75,  -21],\\n        [ -53,  -30],\\n        [   9,  -89]]))",
    0.0011
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00073
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.0003
  ]
}