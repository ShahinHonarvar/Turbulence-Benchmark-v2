{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00073
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 57, -77, -98, -66, -81,  21, -63,  34,  89,  17,  64, -28, -58,\\n         -45, -28,  50,  20, -96, -87, -11, -79, -23, -39, -15,  17, -10,\\n          49, -26,  67,  96,  11,  80, -92, -63, -92,  50,  98, -50,  -2,\\n          55, -87, -95,  79,  56,  96,  75,  98, -69, -18, -57,  24, -99,\\n         -64,  40,  12, -15, -65,  86, -94,  -6, -57,  58, -78,  14,  48,\\n         -95,  63,  54,  36, -61, -11, -48,  10,   2,  11,   8, -18,  60,\\n         -92, -26,  46, -39,  25,  92,  78, -92,  21, -58, -42,  12,  75,\\n          93,  11, -83, -92,  46, -52, -38,  72,  24,  86, -29,  45,  21,\\n          90,  13, -92,   6, -22,  -9, -95,  68, -10, -36, -58, -77,  89,\\n          -5, -96, -27,  -3,  55,  -2,  39, -18, -55, -76,  -2, -28, -64,\\n          15, -97, -10, -90,  18,  -1, -84,  65, -35, -21,  45, -98, -54,\\n           0,  42, -96,  32, -78, -50,  58,  53, -45,  61,  56, -28,  62,\\n         -94,  93,  19]]))",
    0.00066
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00096
  ]
}