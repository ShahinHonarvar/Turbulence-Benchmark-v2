{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_57_1.py::test_horizontal_matrix", "location": ["tests58_57_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013555603800341487, "start": 1730450194.3361964, "stop": 1730450194.3363323, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_57_1.py::test_matrix_of_having_92_integers", "location": ["tests58_57_1.py", 28, "test_matrix_of_having_92_integers"], "keywords": {"test_matrix_of_having_92_integers": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015718600479885936, "start": 1730450194.335968, "stop": 1730450194.3361256, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_57_1.py::test_matrix_of_one_integer", "location": ["tests58_57_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014990399358794093, "start": 1730450194.339295, "stop": 1730450194.3394456, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_1.py::test_matrix_of_one_integer", "location": ["tests58_57_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016886100638657808, "start": 1730450194.3396695, "stop": 1730450194.3398385, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_1.py::test_matrix_of_one_integer", "location": ["tests58_57_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.553899195045233e-05, "start": 1730450194.340139, "stop": 1730450194.3402147, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_1.py::test_vertical_matrix", "location": ["tests58_57_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00036712398286908865, "start": 1730450194.3405745, "stop": 1730450194.3409421, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_1.py::test_horizontal_matrix", "location": ["tests58_57_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 58, "message": "assert 0 == 185"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(92)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(92)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 58, "message": "assert 0 == 185"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004601459950208664, "start": 1730450194.3365355, "stop": 1730450194.3369958, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_57_1.py::test_horizontal_matrix", "location": ["tests58_57_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001023009535856545, "start": 1730450194.3591683, "stop": 1730450194.3592708, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_57_1.py::test_matrix_of_having_92_integers", "location": ["tests58_57_1.py", 28, "test_matrix_of_having_92_integers"], "keywords": {"test_matrix_of_having_92_integers": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 66,  69],\\n        [-11,  58],\\n        [-23,  55],\\n        [ -5,  17],\\n        [ 40, -61],\\n        [ 72,  60],\\n        [ 67,  91],\\n        [-72,  32],\\n        [ 94, -70],\\n        [-86, -93],\\n        [-82, -86],\\n        [ 65, -91],\\n        [ 19,   5],\\n        [ 93, -19],\\n        [ 59,  71],\\n        [ 39,  38],\\n        [-62, -30],\\n        [-86,  83],\\n        [ -9,   3],\\n        [-59, -88],\\n        [ 60, -95],\\n        [ 77, -53],\\n        [  4,  48],\\n        [-97,  89],\\n        [ 42, -61],\\n        [ 56,   9],\\n        [ 99, -89],\\n        [  3,  42],\\n        [-48, -11],\\n        [-12, -12],\\n        [ 26, -78],\\n        [ 90,  95],\\n        [ -5,  44],\\n        [-32, -68],\\n        [-60,  55],\\n        [-23,  85],\\n        [ 28, -49],\\n        [ 86,  99],\\n        [ 23, -53],\\n        [ 22,  77],\\n        [ 70,  20],\\n        [ 49, -26],\\n        [-71, -74],\\n        [ 53, -65],\\n        [ 87, -95],\\n        [ 89, -82]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_92_integers():", "        if 92 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(92 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(92)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 66,  69],\\n        [-11,  58],\\n        [-23,  55],\\n        [ -5,  17],\\n        [ 40, -61],\\n        [ 72,  60],\\n        [ 67,  91],\\n        [-72,  32],\\n        [ 94, -70],\\n        [-86, -93],\\n        [-82, -86],\\n        [ 65, -91],\\n        [ 19,   5],\\n        [ 93, -19],\\n        [ 59,  71],\\n        [ 39,  38],\\n        [-62, -30],\\n        [-86,  83],\\n        [ -9,   3],\\n        [-59, -88],\\n        [ 60, -95],\\n        [ 77, -53],\\n        [  4,  48],\\n        [-97,  89],\\n        [ 42, -61],\\n        [ 56,   9],\\n        [ 99, -89],\\n        [  3,  42],\\n        [-48, -11],\\n        [-12, -12],\\n        [ 26, -78],\\n        [ 90,  95],\\n        [ -5,  44],\\n        [-32, -68],\\n        [-60,  55],\\n        [-23,  85],\\n        [ 28, -49],\\n        [ 86,  99],\\n        [ 23, -53],\\n        [ 22,  77],\\n        [ 70,  20],\\n        [ 49, -26],\\n        [-71, -74],\\n        [ 53, -65],\\n        [ 87, -95],\\n        [ 89, -82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_92_integers():", "        if 92 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(92 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(92)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 66,  69],\\n        [-11,  58],\\n        [-23,  55],\\n        [ -5,  17],\\n        [ 40, -61],\\n        [ 72,  60],\\n        [ 67,  91],\\n        [-72,  32],\\n        [ 94, -70],\\n        [-86, -93],\\n        [-82, -86],\\n        [ 65, -91],\\n        [ 19,   5],\\n        [ 93, -19],\\n        [ 59,  71],\\n        [ 39,  38],\\n        [-62, -30],\\n        [-86,  83],\\n        [ -9,   3],\\n        [-59, -88],\\n        [ 60, -95],\\n        [ 77, -53],\\n        [  4,  48],\\n        [-97,  89],\\n        [ 42, -61],\\n        [ 56,   9],\\n        [ 99, -89],\\n        [  3,  42],\\n        [-48, -11],\\n        [-12, -12],\\n        [ 26, -78],\\n        [ 90,  95],\\n        [ -5,  44],\\n        [-32, -68],\\n        [-60,  55],\\n        [-23,  85],\\n        [ 28, -49],\\n        [ 86,  99],\\n        [ 23, -53],\\n        [ 22,  77],\\n        [ 70,  20],\\n        [ 49, -26],\\n        [-71, -74],\\n        [ 53, -65],\\n        [ 87, -95],\\n        [ 89, -82]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 66,  69],\\n        [-11,  58],\\n        [-23,  55],\\n        [ -5,  17],\\n        [ 40, -61],\\n        [ 72,  60],\\n        [ 67,  91],\\n        [-72,  32],\\n        [ 94, -70],\\n        [-86, -93],\\n        [-82, -86],\\n        [ 65, -91],\\n        [ 19,   5],\\n        [ 93, -19],\\n        [ 59,  71],\\n        [ 39,  38],\\n        [-62, -30],\\n        [-86,  83],\\n        [ -9,   3],\\n        [-59, -88],\\n        [ 60, -95],\\n        [ 77, -53],\\n        [  4,  48],\\n        [-97,  89],\\n        [ 42, -61],\\n        [ 56,   9],\\n        [ 99, -89],\\n        [  3,  42],\\n        [-48, -11],\\n        [-12, -12],\\n        [ 26, -78],\\n        [ 90,  95],\\n        [ -5,  44],\\n        [-32, -68],\\n        [-60,  55],\\n        [-23,  85],\\n        [ 28, -49],\\n        [ 86,  99],\\n        [ 23, -53],\\n        [ 22,  77],\\n        [ 70,  20],\\n        [ 49, -26],\\n        [-71, -74],\\n        [ 53, -65],\\n        [ 87, -95],\\n        [ 89, -82]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017845150432549417, "start": 1730450194.3363473, "stop": 1730450194.3381321, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_57_1.py::test_matrix_of_having_92_integers", "location": ["tests58_57_1.py", 28, "test_matrix_of_having_92_integers"], "keywords": {"test_matrix_of_having_92_integers": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.034998947754502e-05, "start": 1730450194.3600476, "stop": 1730450194.3601384, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_57_1.py::test_vertical_matrix", "location": ["tests58_57_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 79, "message": "assert 0 == 185"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 92", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 92", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_57/tests58_57_1.py", "lineno": 79, "message": "assert 0 == 185"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008788999984972179, "start": 1730450194.3410554, "stop": 1730450194.341935, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_1.py::test_vertical_matrix", "location": ["tests58_57_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_57_1.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001167579903267324, "start": 1730450194.361506, "stop": 1730450194.3616235, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "3432207e24224fe798b055fbc9e25078", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
