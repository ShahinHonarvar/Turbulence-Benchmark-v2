{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00046
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 66,  69],\\n        [-11,  58],\\n        [-23,  55],\\n        [ -5,  17],\\n        [ 40, -61],\\n        [ 72,  60],\\n        [ 67,  91],\\n        [-72,  32],\\n        [ 94, -70],\\n        [-86, -93],\\n        [-82, -86],\\n        [ 65, -91],\\n        [ 19,   5],\\n        [ 93, -19],\\n        [ 59,  71],\\n        [ 39,  38],\\n        [-62, -30],\\n        [-86,  83],\\n        [ -9,   3],\\n        [-59, -88],\\n        [ 60, -95],\\n        [ 77, -53],\\n        [  4,  48],\\n        [-97,  89],\\n        [ 42, -61],\\n        [ 56,   9],\\n        [ 99, -89],\\n        [  3,  42],\\n        [-48, -11],\\n        [-12, -12],\\n        [ 26, -78],\\n        [ 90,  95],\\n        [ -5,  44],\\n        [-32, -68],\\n        [-60,  55],\\n        [-23,  85],\\n        [ 28, -49],\\n        [ 86,  99],\\n        [ 23, -53],\\n        [ 22,  77],\\n        [ 70,  20],\\n        [ 49, -26],\\n        [-71, -74],\\n        [ 53, -65],\\n        [ 87, -95],\\n        [ 89, -82]]))",
    0.00178
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00088
  ]
}