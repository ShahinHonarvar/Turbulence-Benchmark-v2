{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00078
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-97,  68],\\n        [-77,  58],\\n        [-67,  11],\\n        [-86,  68],\\n        [ 34,  34],\\n        [ 10, -61],\\n        [-45,  16],\\n        [  8,  54],\\n        [-52, -71],\\n        [ 60, -38],\\n        [  8,  95],\\n        [-36, -70],\\n        [ 58,  91],\\n        [-90,   6],\\n        [-75, -96],\\n        [ 59,  63],\\n        [-36,  41],\\n        [ -9,  79],\\n        [  6, -58],\\n        [-95,  61],\\n        [-83, -59],\\n        [-81,  19],\\n        [-67,  56],\\n        [ 74, -69],\\n        [-39,  59],\\n        [ 11,  29],\\n        [-70,  76],\\n        [-73, -97],\\n        [-13, -24],\\n        [ 69,  75],\\n        [ 53,  39],\\n        [-35,  50],\\n        [  1,   8],\\n        [ 47, -27],\\n        [ 12, -27],\\n        [-17, -32],\\n        [ 89, -56],\\n        [-97,  98],\\n        [-31, -64],\\n        [ 95, -23],\\n        [ 39,  54],\\n        [-96,  58],\\n        [ 47, -13],\\n        [-79,  42],\\n        [ 53,  41],\\n        [-85,  83],\\n        [ 49,  80],\\n        [ 52,  56]]))",
    0.00071
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00037
  ]
}