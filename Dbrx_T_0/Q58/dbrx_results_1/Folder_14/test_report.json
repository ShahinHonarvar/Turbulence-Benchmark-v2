{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_14_1.py::test_horizontal_matrix", "location": ["tests58_14_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014224497135728598, "start": 1730450137.3473802, "stop": 1730450137.347523, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_14_1.py::test_matrix_of_having_84_integers", "location": ["tests58_14_1.py", 28, "test_matrix_of_having_84_integers"], "keywords": {"test_matrix_of_having_84_integers": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014650099910795689, "start": 1730450137.3484519, "stop": 1730450137.3485987, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_14_1.py::test_matrix_of_one_integer", "location": ["tests58_14_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018668000120669603, "start": 1730450137.347465, "stop": 1730450137.3476524, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_1.py::test_matrix_of_one_integer", "location": ["tests58_14_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002066390006802976, "start": 1730450137.347941, "stop": 1730450137.348148, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_1.py::test_matrix_of_one_integer", "location": ["tests58_14_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011348299449309707, "start": 1730450137.348539, "stop": 1730450137.3486533, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_1.py::test_vertical_matrix", "location": ["tests58_14_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011936301598325372, "start": 1730450137.3491678, "stop": 1730450137.349288, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_1.py::test_horizontal_matrix", "location": ["tests58_14_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 58, "message": "assert 0 == 169"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(84)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 84 < 30:", "            num = 4", "        elif 30 <= 84 < 70:", "            num = 3", "        elif 70 <= 84 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 84) + 1", ">           assert output == expected_result", "E           assert 0 == 169"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(84)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 84 < 30:", "            num = 4", "        elif 30 <= 84 < 70:", "            num = 3", "        elif 70 <= 84 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 84) + 1", ">           assert output == expected_result", "E           assert 0 == 169"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 58, "message": "assert 0 == 169"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00034044700441882014, "start": 1730450137.3478794, "stop": 1730450137.3482203, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_14_1.py::test_horizontal_matrix", "location": ["tests58_14_1.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011807301780208945, "start": 1730450137.3789077, "stop": 1730450137.3790264, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_14_1.py::test_matrix_of_having_84_integers", "location": ["tests58_14_1.py", 28, "test_matrix_of_having_84_integers"], "keywords": {"test_matrix_of_having_84_integers": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -25,  -44],\\n        [ -37,  -54],\\n        [ -20,  -51],\\n        [ -53,  -41],\\n        [-100,  -89],\\n        [  12,  100],\\n        [  57,  -67],\\n        [  93,  -24],\\n        [  80,  -59],\\n        [ -63,  -99],\\n        [ -23,   93],\\n        [  59,  -24],\\n        [ -61,   91],\\n        [ -23,  -11],\\n        [   5,   91],\\n        [  66,  -44],\\n        [ -13,   11],\\n        [  19,   -1],\\n        [  38,  -52],\\n        [ -31,  -57],\\n        [  47,  -54],\\n        [  10,   75],\\n        [  36,  -31],\\n        [ -59,   34],\\n        [  61,   47],\\n        [ -94,  -36],\\n        [ -87,  -93],\\n        [ -28,   89],\\n        [ -54,    8],\\n        [  -3,  -55],\\n        [  86,  -59],\\n        [  44,  -16],\\n        [ -72,    3],\\n        [  86,   92],\\n        [ -50,   32],\\n        [ -62,   -8],\\n        [  19,  -64],\\n        [ -91,  -80],\\n        [  -2,  -28],\\n        [ -50,   43],\\n        [ -82,   -2],\\n        [  73,   16]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_84_integers():", "        if 84 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(84 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(84)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -25,  -44],\\n        [ -37,  -54],\\n        [ -20,  -51],\\n        [ -53,  -41],\\n        [-100,  -89],\\n        [  12,  100],\\n        [  57,  -67],\\n        [  93,  -24],\\n        [  80,  -59],\\n        [ -63,  -99],\\n        [ -23,   93],\\n        [  59,  -24],\\n        [ -61,   91],\\n        [ -23,  -11],\\n        [   5,   91],\\n        [  66,  -44],\\n        [ -13,   11],\\n        [  19,   -1],\\n        [  38,  -52],\\n        [ -31,  -57],\\n        [  47,  -54],\\n        [  10,   75],\\n        [  36,  -31],\\n        [ -59,   34],\\n        [  61,   47],\\n        [ -94,  -36],\\n        [ -87,  -93],\\n        [ -28,   89],\\n        [ -54,    8],\\n        [  -3,  -55],\\n        [  86,  -59],\\n        [  44,  -16],\\n        [ -72,    3],\\n        [  86,   92],\\n        [ -50,   32],\\n        [ -62,   -8],\\n        [  19,  -64],\\n        [ -91,  -80],\\n        [  -2,  -28],\\n        [ -50,   43],\\n        [ -82,   -2],\\n        [  73,   16]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_84_integers():", "        if 84 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(84 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(84)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -25,  -44],\\n        [ -37,  -54],\\n        [ -20,  -51],\\n        [ -53,  -41],\\n        [-100,  -89],\\n        [  12,  100],\\n        [  57,  -67],\\n        [  93,  -24],\\n        [  80,  -59],\\n        [ -63,  -99],\\n        [ -23,   93],\\n        [  59,  -24],\\n        [ -61,   91],\\n        [ -23,  -11],\\n        [   5,   91],\\n        [  66,  -44],\\n        [ -13,   11],\\n        [  19,   -1],\\n        [  38,  -52],\\n        [ -31,  -57],\\n        [  47,  -54],\\n        [  10,   75],\\n        [  36,  -31],\\n        [ -59,   34],\\n        [  61,   47],\\n        [ -94,  -36],\\n        [ -87,  -93],\\n        [ -28,   89],\\n        [ -54,    8],\\n        [  -3,  -55],\\n        [  86,  -59],\\n        [  44,  -16],\\n        [ -72,    3],\\n        [  86,   92],\\n        [ -50,   32],\\n        [ -62,   -8],\\n        [  19,  -64],\\n        [ -91,  -80],\\n        [  -2,  -28],\\n        [ -50,   43],\\n        [ -82,   -2],\\n        [  73,   16]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -25,  -44],\\n        [ -37,  -54],\\n        [ -20,  -51],\\n        [ -53,  -41],\\n        [-100,  -89],\\n        [  12,  100],\\n        [  57,  -67],\\n        [  93,  -24],\\n        [  80,  -59],\\n        [ -63,  -99],\\n        [ -23,   93],\\n        [  59,  -24],\\n        [ -61,   91],\\n        [ -23,  -11],\\n        [   5,   91],\\n        [  66,  -44],\\n        [ -13,   11],\\n        [  19,   -1],\\n        [  38,  -52],\\n        [ -31,  -57],\\n        [  47,  -54],\\n        [  10,   75],\\n        [  36,  -31],\\n        [ -59,   34],\\n        [  61,   47],\\n        [ -94,  -36],\\n        [ -87,  -93],\\n        [ -28,   89],\\n        [ -54,    8],\\n        [  -3,  -55],\\n        [  86,  -59],\\n        [  44,  -16],\\n        [ -72,    3],\\n        [  86,   92],\\n        [ -50,   32],\\n        [ -62,   -8],\\n        [  19,  -64],\\n        [ -91,  -80],\\n        [  -2,  -28],\\n        [ -50,   43],\\n        [ -82,   -2],\\n        [  73,   16]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0023468940053135157, "start": 1730450137.3488302, "stop": 1730450137.351178, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_14_1.py::test_matrix_of_having_84_integers", "location": ["tests58_14_1.py", 28, "test_matrix_of_having_84_integers"], "keywords": {"test_matrix_of_having_84_integers": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001036939793266356, "start": 1730450137.379583, "stop": 1730450137.379687, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_14_1.py::test_vertical_matrix", "location": ["tests58_14_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 79, "message": "assert 0 == 169"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 84", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 84 < 30:", "            num = 4", "        elif 30 <= 84 < 70:", "            num = 3", "        elif 70 <= 84 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 84) + 1", ">           assert output == expected_result", "E           assert 0 == 169"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 84", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 84 < 30:", "            num = 4", "        elif 30 <= 84 < 70:", "            num = 3", "        elif 70 <= 84 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 84) + 1", ">           assert output == expected_result", "E           assert 0 == 169"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_1/Folder_14/tests58_14_1.py", "lineno": 79, "message": "assert 0 == 169"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.005233258998487145, "start": 1730450137.3494115, "stop": 1730450137.3546457, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_14_1.py::test_vertical_matrix", "location": ["tests58_14_1.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_14_1.py": 1, "Folder_14": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.708100697025657e-05, "start": 1730450137.3852634, "stop": 1730450137.385361, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "21e9f27a1ca4428f961e13a7d2083b82", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
