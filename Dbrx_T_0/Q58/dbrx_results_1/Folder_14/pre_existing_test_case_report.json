{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00034
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -25,  -44],\\n        [ -37,  -54],\\n        [ -20,  -51],\\n        [ -53,  -41],\\n        [-100,  -89],\\n        [  12,  100],\\n        [  57,  -67],\\n        [  93,  -24],\\n        [  80,  -59],\\n        [ -63,  -99],\\n        [ -23,   93],\\n        [  59,  -24],\\n        [ -61,   91],\\n        [ -23,  -11],\\n        [   5,   91],\\n        [  66,  -44],\\n        [ -13,   11],\\n        [  19,   -1],\\n        [  38,  -52],\\n        [ -31,  -57],\\n        [  47,  -54],\\n        [  10,   75],\\n        [  36,  -31],\\n        [ -59,   34],\\n        [  61,   47],\\n        [ -94,  -36],\\n        [ -87,  -93],\\n        [ -28,   89],\\n        [ -54,    8],\\n        [  -3,  -55],\\n        [  86,  -59],\\n        [  44,  -16],\\n        [ -72,    3],\\n        [  86,   92],\\n        [ -50,   32],\\n        [ -62,   -8],\\n        [  19,  -64],\\n        [ -91,  -80],\\n        [  -2,  -28],\\n        [ -50,   43],\\n        [ -82,   -2],\\n        [  73,   16]]))",
    0.00235
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00523
  ]
}