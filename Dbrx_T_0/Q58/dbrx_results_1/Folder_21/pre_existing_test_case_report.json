{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  66,  -82,   80,  -89,  -55,   41,  -90,  -19,  -36,   83,\\n          -28,  -16,   63,   71, -100,  -68,   19,  -75,  -81,  -63,\\n           18,  100,  -70,  -10,   44,   76,   47,  -29,   43,   18,\\n           90,   71,   25,  -22,   -5,  -12,   68,  -59,  -89,  -75,\\n          -90,  -99,  -69,   16,   89,  -56,   -6,   -8,  -65,  -75,\\n           97,  -78,   -6,   80,   37,  -52,   23,   49,   51,  -25,\\n           80,  -86,   41,   53,  -66,   12,   60,  -64,   57,  -57,\\n           37,   58,    9,   90,  -66,  -66,   13,  -88,  -96,   26,\\n           88,   50,  -31,   20,  -88,  -16,    8, -100,  -49,  -10,\\n            3,  -22,   24,   15,   52,  -81,   -7,   55,    1,   57,\\n           47,  -71,  -65,   62,  -29,  -66,   32,  -54,  -13,   74,\\n           26,  -86,  -65,  -78,   10,   64,   -6,   24,   68,  -20,\\n          -82,    1,   68,   -2,  -98,   55,  -52,  -30,  -40,   64,\\n          -42,   91,   58,   60,  -29,   63,   -2,   -3,   30]]))",
    0.00067
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00476
  ]
}