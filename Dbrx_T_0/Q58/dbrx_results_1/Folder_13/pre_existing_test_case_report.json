{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94,   0,  66,  34,  72,  -1,  22,  10, -20,  -6,  94,  25,  27,\\n         -99,  85, -38,  29,  93, -50, -17,  51,  72,  25,  93, -62, -90,\\n         -71, -85,  43,  -2,  18,  79,  74, -70, -75,  89, -66,  37,  23,\\n          90,  58, -14, -74,  99,  99, -36, -70,   2,  82,  79,  62, -39,\\n          74,   7, -83, -27,  68,  10,  91, -59, -59,  22,  52,  87, -13,\\n          89, -99, -84,  84,  96, -51,  29, -35,  97,  50, -68, -21, -88,\\n         -28,  17, -82, -73, -64, -65, -24, -66,  26,  99,  -9,  15,  27,\\n          19, -71,  20, -96,  79,  83,  97,  91, -46, -62,  95,  30, -52,\\n         -10, -48,  69, -13,  99, -64,  31,  -2, -23, -79,  99,  15, -68,\\n          83,  68, -10,  69,  92, -34,  74, -27, -95,  33, -49, -56, -65,\\n         -26, -24, -47, -92,  55,  46,  39, -83,   3, -28, -73, -76,  20,\\n          60, -54, -43, -61, -35,   0, -86, -30, -94, -21, -42, -46,  68,\\n         -54, -99, -59, -79,  68,  86, -76, -70, -41,   4, -81,   2,  18,\\n         -25,  -5,  89,  13, -58, -40]]))",
    0.00289
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.01061
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00042
  ]
}