{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00033
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00028
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00077
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-50,  11],\\n        [ 30,  90],\\n        [-52,  78],\\n        [ 51,  95],\\n        [  4, -83],\\n        [-53,  54],\\n        [-64,  88],\\n        [-32, -93],\\n        [-20, -44],\\n        [ 47, 100],\\n        [-23,  13],\\n        [-90, -42],\\n        [ 60,  49],\\n        [ 19,   5],\\n        [-39, -83],\\n        [-97,  60],\\n        [ 18,  14],\\n        [  9,  13],\\n        [ 81, -76],\\n        [ 90, -63],\\n        [-88,  50],\\n        [ 35, -35],\\n        [  7,  18],\\n        [ 68, -47],\\n        [ 61,  95],\\n        [-46, -84],\\n        [-72, -73],\\n        [-68, -82],\\n        [-96,  66],\\n        [ 35,  41],\\n        [ 76,  65],\\n        [ -2,  35],\\n        [ -2, -27],\\n        [ 31,  67],\\n        [ 77,  33],\\n        [-93, -92],\\n        [-67, -25],\\n        [-42,  -4],\\n        [ 73, -57]]))",
    0.00175
  ]
}