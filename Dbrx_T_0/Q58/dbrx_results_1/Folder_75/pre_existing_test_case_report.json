{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00123
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -34,   60],\\n        [ -79,   13],\\n        [ -36,   -9],\\n        [  54,   48],\\n        [   7,   59],\\n        [  48,   93],\\n        [  64,  -54],\\n        [  68,  -47],\\n        [ -21,  -55],\\n        [ -30,   57],\\n        [ -45,   13],\\n        [  80,   25],\\n        [  -9,   66],\\n        [  53,  -95],\\n        [  41,   27],\\n        [  22,   70],\\n        [  37,   36],\\n        [ -45,  -18],\\n        [ -91,  -32],\\n        [ -35,  -73],\\n        [  47,  -12],\\n        [  96,   79],\\n        [  65,   44],\\n        [ -63,  -97],\\n        [ -57,   -3],\\n        [  72,   18],\\n        [ -89,  -29],\\n        [  39,  -45],\\n        [ -43, -100],\\n        [  33,   11],\\n        [ -56,   42],\\n        [  96,  -72],\\n        [  90,   54],\\n        [  74,  -78],\\n        [  77,   45],\\n        [  62,  -56],\\n        [  13,   -2],\\n        [ -88,   65],\\n        [ -98,    6],\\n        [  60,  -18]]))",
    0.00055
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00064
  ]
}