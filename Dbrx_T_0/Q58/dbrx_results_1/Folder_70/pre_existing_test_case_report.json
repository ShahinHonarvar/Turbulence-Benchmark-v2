{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-65,  19, -61, -45,  84,  -6,  83,  -8,  22,  82,  89, -33,  44,\\n          42, -28, -42,  25, -61,  35, -32, -66, -44,  17, -75,  15, -38,\\n           2, -61,   7, -39,  47, -38, -57, -95, -99, 100,  12,  78,  92,\\n          80,  93, -72, -99,  67, -57,   4,  98,  -8, -30,  45, -60,  50,\\n          -8,  12,  25,  75,  64,  88,  47,  59,  -4,  10,  -2,  73,  50,\\n          30,  93, -94, -10, -39, -64, -13,  26, -11, -25,  -1,  38, -71,\\n         -73,  63,  19, -15, -76, -77,  -6, -90,   1,  72,  21, -92, -14,\\n          24,  91,  82,  73,  76, -28,  52,  21,  59, -60,  -3,  30, -55,\\n          71, -23,  27,  85,   8, -98, -11,  13,  41, -12,  -6, -81, 100,\\n           2, -94, -79,  73, -77, -76,  14, -96,  64, -47, -16,  55,  94,\\n         -89, -17,  86, -71,  22,  83, -66, -26, -39,  88, -57,  23,   3,\\n          80,  73, -41,  64,   2,  73,  77, -26,  71,  74,   2, -26, -82,\\n         -29, -63,  91, -61, -62,  42,  -2,  20,   1,  19, -77,  42,  38,\\n          45,  95, -28, -90]]))",
    0.00073
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.00494
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00038
  ]
}