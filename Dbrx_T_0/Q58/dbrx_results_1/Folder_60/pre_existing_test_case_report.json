{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00034
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00074
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  94,  -30],\\n        [ -47,  -33],\\n        [ -60,  -53],\\n        [  38,    4],\\n        [ -17,   21],\\n        [ -19,   -3],\\n        [  64,  -15],\\n        [  68,  -70],\\n        [ -16,  -67],\\n        [ -50,   86],\\n        [  58,   94],\\n        [ -31,   -1],\\n        [ -79,  -85],\\n        [ -36,   93],\\n        [ -61,   63],\\n        [ -31,   28],\\n        [  10,  -54],\\n        [  86,  -42],\\n        [ -11,  -36],\\n        [ -61,   64],\\n        [  -2,    1],\\n        [ -74,  -55],\\n        [  38,   53],\\n        [ -36,   14],\\n        [ -55,   66],\\n        [  38,    2],\\n        [ -22,  -34],\\n        [ -73,   83],\\n        [ -75,   58],\\n        [  67,  -59],\\n        [  12,  -89],\\n        [ -49,   26],\\n        [ -25,   -5],\\n        [  76,   72],\\n        [ -76,  -13],\\n        [ -73,   80],\\n        [  54,   55],\\n        [ -69,  -12],\\n        [ -53,   25],\\n        [  59,    1],\\n        [-100,  -35],\\n        [ -26,  -22],\\n        [ -30,   42],\\n        [ -70,  -89]]))",
    0.00973
  ]
}