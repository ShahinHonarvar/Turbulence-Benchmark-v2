{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -80,  -86,   13,  -58,  -37,   20,   14,  -75,    3,  -53,\\n           48,  -62,   50,  -43,   28,  -45,   58,   85,  -30,   22,\\n           17,  -14,   43,  -97,   12,  -92,   81,  -32,  -91,  -50,\\n          -89,   55,  -86,  -81,   95,   32,   86,   41,  -83,   24,\\n           58,    1,    4,  -83,   93,  -63,  -44,   42,   80,   81,\\n          -80,   -5,   50,   16,  -89,  -61,    7,    5,  -19,  -38,\\n          -64,   53,   51,   79,  -13,  -95,   34,    5,  -21,  -84,\\n           40,    7,   -1,  -87,   91,  -51,   35,  -41,   79,    8,\\n          -99,   47,   54,   34,  -63,  -35,   95,  -45,   47,   -1,\\n           80,   30,   77,   21,    3,   54,  -19,  -58,  -27,   34,\\n          -48,  -23,   -7,  -46,   40,   30,  -18,  -53,  -69,   99,\\n          -59,   27,   44,   89,   71,   33,   63,   -9,   68,   79,\\n           29,  -36,   61,  -18,  -41,  -48,  -74,  -75,   -8,   16,\\n          -74,  -95,  -45,   91,  -29,   82,   23,   80,   34,  -49,\\n          -74,   53,  -93,  -89,  -36,  -40,  -65,   61,  -17,   91,\\n           77,   48,  -39,   48,   96,  -61,   -9,  -71,  -15,   63,\\n           -5,   41,   89,  -11,  -28,   68, -100,  -42,   42,  -29,\\n          -56,   34,  -75,   42,  -38,   56,   50,  -80,    9,   29,\\n           41,  -60,   28,   15,   27,   59,   48,   37,   70,   99,\\n          -15,   10,  -63]]))",
    0.00076
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 387",
    0.00299
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 387",
    0.00036
  ]
}