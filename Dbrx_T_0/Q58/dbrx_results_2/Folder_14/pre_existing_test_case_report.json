{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -47],\\n        [ 90, -41],\\n        [ 73,   3],\\n        [ 26, -48],\\n        [-62, -29],\\n        [-79, -77],\\n        [-87,  58],\\n        [-61,  46],\\n        [ 28, -66],\\n        [ -8,  88],\\n        [-95,  -7],\\n        [-30, -83],\\n        [ 97, -13],\\n        [-66,  40],\\n        [ 70, -28],\\n        [  9,  92],\\n        [-29,  29],\\n        [ 75,  13],\\n        [ 93, -19],\\n        [100, -72],\\n        [ 87, -50],\\n        [-70,  66],\\n        [-73, -11],\\n        [-96,  31],\\n        [ 11,  93],\\n        [-37,  43],\\n        [-51,  80],\\n        [ 89, -75],\\n        [-97,  50],\\n        [ 66,  60],\\n        [ 23,  22],\\n        [ 23,  76],\\n        [-98,  57],\\n        [ 91,  95],\\n        [ 56, -57],\\n        [ -2, -21],\\n        [ -7, -21],\\n        [-62,  91],\\n        [ 64, -74],\\n        [ 55, -78],\\n        [-33,  80],\\n        [-46,  84]]))",
    0.00061
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.0003
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00073
  ]
}