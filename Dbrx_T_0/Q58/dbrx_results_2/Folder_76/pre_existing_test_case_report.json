{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -93, -68,  28, -83,  24,  38,  -7, -21,  32, -53, -60, -38,\\n          95,  92, -29,  26, -14, -84,  55, -60,  22,  -2, -41, -40,  53,\\n          42,  35, -81, -32,  -9, -12, -76,  88, -37,  76, -89,  74, -44,\\n         -66,  41, -64, -85,   8, -65, -79, 100, -51, -68, -41, -48,  97,\\n         -40,  91,  80, -71, -17,  37,  54, -56,  65,  48, -21,  58,  47,\\n           6,  62, -24, -28, -25,   0,  17,  60, -88,   1, -55,  26, -56,\\n         -30,  83, -72, -90,  35, -65, -73,  27,  12, -15,  11, -55, -47,\\n          49,  38, -94,  31,  69, -92, -40,  99,   5,   6, -82, -36, -36,\\n          90, -31, -30, -38, -99,   8,  79, -57, -25, -13, -90, -31,  79,\\n         -48, -76,  87, -71,  30,  -4, -26,  -5,  20, -15, -57,  47,  91,\\n          33,  63, -62, -40,  50, -69,  10, -19, -14,  64, -94, -82,  15,\\n          79, -45,  78,  34, -50,  10,  66, -18,  32, -26,  -1, -13,  36,\\n          74, -65, -98]]))",
    0.00067
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00036
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00098
  ]
}