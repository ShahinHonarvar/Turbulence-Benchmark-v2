{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-42, -36],\\n        [ 87, -85],\\n        [-18, -72],\\n        [ 46, -69],\\n        [ 58, -32],\\n        [ -6,  48],\\n        [ 85, -16],\\n        [-60,  41],\\n        [ 56, -91],\\n        [-92,  57],\\n        [ 14,  22],\\n        [-36,  81],\\n        [-30, -71],\\n        [-39, -45],\\n        [ 87, -65],\\n        [ 40,  35],\\n        [ 18, -82],\\n        [ 63,  -8],\\n        [ 94,  85],\\n        [ -2,  61],\\n        [-14, -52],\\n        [-75, -50],\\n        [-26, -65],\\n        [-60,  95],\\n        [-65, -35],\\n        [ 20,  -2],\\n        [-43,  63],\\n        [ -2,  97],\\n        [ 25,  68],\\n        [ 70, -46],\\n        [  6,  51],\\n        [ 53, -49],\\n        [-50, -80],\\n        [ 97,  66],\\n        [ 65,  25],\\n        [-32, -88],\\n        [ 91, -98],\\n        [ 22, -44],\\n        [  2,  42],\\n        [-13,  89],\\n        [-96, -72],\\n        [ -5,   6],\\n        [ 12, -26],\\n        [ 77,   5],\\n        [ 89, -37],\\n        [ 82,   2],\\n        [ 32,  75],\\n        [ 37, -24]]))",
    0.00386
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00092
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00044
  ]
}