{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00042
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 88,  40],\\n        [-22, -45],\\n        [-71,  87],\\n        [ 79, -85],\\n        [-48,  99],\\n        [-16,  13],\\n        [-48,  84],\\n        [-19,  14],\\n        [ -9,  10],\\n        [ 51,  62],\\n        [ 96, -27],\\n        [ 12, -85],\\n        [-65,  46],\\n        [-38,  76],\\n        [ 43, -48],\\n        [ 32, -35],\\n        [-21,  40],\\n        [-92, -63],\\n        [ 83, -18],\\n        [ 86, -55],\\n        [ 32,  36],\\n        [ 60,  31],\\n        [ 80,  98],\\n        [-43, -36],\\n        [-65, -11],\\n        [-42,  -4],\\n        [-79,   4],\\n        [ 84, -81],\\n        [ 31,  85],\\n        [-10,  51],\\n        [ 57, -76],\\n        [ 73,  59],\\n        [ 50, -11],\\n        [-91,  -1],\\n        [  2,  34],\\n        [ 74,  84],\\n        [ -4, -80],\\n        [-15,  63],\\n        [  6,   0],\\n        [ 86, -55],\\n        [-83, -70],\\n        [ 87,  86],\\n        [  4,  11],\\n        [-85,  38],\\n        [ 41, -35]]))",
    0.00066
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00072
  ]
}