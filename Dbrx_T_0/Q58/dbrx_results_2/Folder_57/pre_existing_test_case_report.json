{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -4,  -79],\\n        [   6,  -60],\\n        [ -97,  -15],\\n        [  24,  -63],\\n        [  65,  -55],\\n        [ -45,  -87],\\n        [ -20,  -43],\\n        [  85,   72],\\n        [ -56,   67],\\n        [  82,   22],\\n        [  72,   33],\\n        [ -30,  -23],\\n        [   6,   88],\\n        [ -98,  -61],\\n        [ -60,  -44],\\n        [  85,   46],\\n        [  25,    8],\\n        [  67,    9],\\n        [  84,    2],\\n        [  96,   96],\\n        [ -40,   19],\\n        [  -5,   80],\\n        [  70,  -96],\\n        [   6,   32],\\n        [ -57,   47],\\n        [ -51,   38],\\n        [ -51,  -84],\\n        [ -83,   -3],\\n        [ -27,   -6],\\n        [ -98,   11],\\n        [  11,  -36],\\n        [ -24,  -68],\\n        [  45,  -56],\\n        [ -76,   73],\\n        [ -42,  -20],\\n        [ -80,   79],\\n        [ -73,   14],\\n        [  33,  -61],\\n        [  -5,   11],\\n        [ -40, -100],\\n        [  57,  -54],\\n        [  64,   46],\\n        [  66,  -88],\\n        [ -87,  -78],\\n        [   5,  -34],\\n        [ -34,  -58]]))",
    0.00176
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.0003
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00076
  ]
}