{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00029
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 48, -84],\\n        [ 29,  93],\\n        [-85, -56],\\n        [-38,  79],\\n        [-99,   9],\\n        [-60,  26],\\n        [ -9,  82],\\n        [ 87,  54],\\n        [ 29, -87],\\n        [ 82, -17],\\n        [-11, -74],\\n        [-87, -30],\\n        [ 25, -76],\\n        [-85,  61],\\n        [ 12,   4],\\n        [ 29, -54],\\n        [-96,  25],\\n        [ 48, -50],\\n        [-76,  59],\\n        [ 83, -55],\\n        [ 12,  59],\\n        [ 55, -56],\\n        [-50,  42],\\n        [-22,  74],\\n        [  6,  97],\\n        [-87,  65],\\n        [ 81,  76],\\n        [-89,  49],\\n        [ -4,  20],\\n        [-60, -74],\\n        [ 85, -80],\\n        [-34,  32],\\n        [-83,  34],\\n        [ 48, -60],\\n        [  2,   2],\\n        [-51, -67],\\n        [ 98,  23],\\n        [  6, -87],\\n        [-30,  89],\\n        [-40,  89]]))",
    0.00412
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00067
  ]
}