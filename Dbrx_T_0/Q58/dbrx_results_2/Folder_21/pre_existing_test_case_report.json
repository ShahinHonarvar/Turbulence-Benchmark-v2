{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00113
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-70,  15, -50, -43,  14, -90, -12, -12,  60, -71, -68, -70, -82,\\n          51, -86,  -6, -84,   9, -98, -20, -32,  42,  65,  -1, -77,  43,\\n         -15,  58, -34, -74,   2, -87,  14, -66,  71, -25,  55,  32, -32,\\n          56,  -6, -76,   5,  54, -77, -10, -40,  98,  44, -26,  97,  38,\\n         -44, -21,  34,  -9,  95,  97,   8,  53,  16, -82,  38, -40, -84,\\n         -93, -95,  44, -63,  22, -79,  71,  84,  57, -88, -75, -38, -22,\\n          65,  35,  37,  36,   9,   7, -37,  57,  94,  66, -70, -96, -71,\\n          27, -92, -68,  71,  16,  86, -58,  81, -93,  60,  77,  84,  40,\\n         -34, -79,  40, -91, -19, -51, -59, -31,  -9,  43,  11, -31, -67,\\n          55,  34, -40,  57,  37, -86,  49, -54,  64,  -3,  16, -19, -63,\\n         -19,   6, -47, -90,  98,  32, -49,  17,  58]]))",
    0.00062
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00089
  ]
}