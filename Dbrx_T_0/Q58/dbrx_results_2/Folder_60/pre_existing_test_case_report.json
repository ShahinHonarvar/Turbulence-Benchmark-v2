{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-21, -10],\\n        [ 55,  72],\\n        [-83,   6],\\n        [ 98,  18],\\n        [-33,   9],\\n        [ 65, -99],\\n        [-41,  49],\\n        [-89, -44],\\n        [ 19,  81],\\n        [ 75, -11],\\n        [ -7,  79],\\n        [ 64,  72],\\n        [-72, -51],\\n        [ 48,  10],\\n        [ -8, -69],\\n        [-43,  91],\\n        [-82, -21],\\n        [-94, -55],\\n        [ 86,  73],\\n        [-90,  47],\\n        [-76,  -3],\\n        [-82,   9],\\n        [ 25,  92],\\n        [ 38,  95],\\n        [-22, -23],\\n        [-47, -67],\\n        [ 24,  89],\\n        [ 91,  88],\\n        [-45,  32],\\n        [ 50, -54],\\n        [-49, -90],\\n        [ 10,  -2],\\n        [-19, -84],\\n        [-94,  22],\\n        [ 68,  30],\\n        [-68, -14],\\n        [ 73,  79],\\n        [-52, -71],\\n        [ 16,  55],\\n        [ 82, -73],\\n        [ 63,  60],\\n        [ 33, -93],\\n        [-33, -89],\\n        [-74, -91]]))",
    0.00417
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00183
  ]
}