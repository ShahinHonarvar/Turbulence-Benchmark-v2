{
  "parameter(s)": [
    138
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_138_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -47,  -18],\\n        [ -17,  -37],\\n        [  60,   38],\\n        [ -56,  -51],\\n        [  47,   42],\\n        [  25,   65],\\n        [  -5,  -65],\\n        [ -95,  -27],\\n        [ -79,  -13],\\n        [ -95,  -21],\\n        [  -5,   81],\\n        [   9,  -82],\\n        [ -85,  -88],\\n        [  62,  -10],\\n        [  81,  -28],\\n        [ -77,  -61],\\n        [  12,  -94],\\n        [  62,   12],\\n        [  -8,  -80],\\n        [  95,   44],\\n        [  -2,   44],\\n        [ -78,   68],\\n        [  36,  -23],\\n        [ -54,  -71],\\n        [ -93,   84],\\n        [  11,   34],\\n        [ -66,  -75],\\n        [  43,   17],\\n        [ -42,   60],\\n        [ -85,   55],\\n        [ -82,  -17],\\n        [ -82,  -79],\\n        [ -65,  -13],\\n        [  34,   55],\\n        [  95,   70],\\n        [ -85,  -17],\\n        [  67,   16],\\n        [  93,   57],\\n        [ -33,    1],\\n        [  68,  -74],\\n        [ -26,  -45],\\n        [ -47,  -64],\\n        [  50,   98],\\n        [ -80,   52],\\n        [  90,   59],\\n        [  -1,   39],\\n        [-100,  -47],\\n        [  70,  -97],\\n        [  97,   36],\\n        [  -9,   -6],\\n        [  60,  -49],\\n        [  77,   10],\\n        [ -49,   47],\\n        [  36,  -57],\\n        [   2,   62],\\n        [  86,   63],\\n        [ -79,  -37],\\n        [  52,  -16],\\n        [  59,   23],\\n        [   3,   68],\\n        [ -87,  -71],\\n        [  64,  -77],\\n        [  59,  -13],\\n        [  37,   78],\\n        [  44,  -73],\\n        [  82,  -96],\\n        [ -46,   20],\\n        [ -41,  -12],\\n        [  -4,   29]]))",
    0.00599
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 277",
    0.00089
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 277",
    0.00029
  ]
}