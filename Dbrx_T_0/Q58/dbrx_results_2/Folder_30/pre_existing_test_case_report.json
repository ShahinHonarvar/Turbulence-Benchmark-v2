{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00073
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  12,  -45],\\n        [ -71,   34],\\n        [ -65,  -14],\\n        [   1,  -20],\\n        [  -9,  -61],\\n        [ -64,    9],\\n        [ -20,  -91],\\n        [  62,  -74],\\n        [ -60,   74],\\n        [  25,  -82],\\n        [  -4,  -52],\\n        [ -44,  -39],\\n        [ -86,  -85],\\n        [  68,   98],\\n        [  62,  -35],\\n        [  40,   12],\\n        [  24,  -81],\\n        [  59, -100],\\n        [  -7,   -9],\\n        [ -37,  -58],\\n        [  37,   89],\\n        [  30,   48],\\n        [ -42,  -49],\\n        [  87,  -81],\\n        [ -57,  -45],\\n        [  50,  -50],\\n        [  80,  -72],\\n        [ -61,   17],\\n        [ -22,  -57],\\n        [  59,   25],\\n        [  99,  -73],\\n        [  52,   74],\\n        [ -44,   93],\\n        [  98,   45],\\n        [ -64,   51],\\n        [ -43,  -73],\\n        [  71,  -80],\\n        [ -52,   64],\\n        [ -72,   82],\\n        [  81,  -77],\\n        [  94,   90],\\n        [ -12,    4],\\n        [  96,  -48],\\n        [ -99,  -67],\\n        [  11,   68],\\n        [  57,   36],\\n        [ -58,  -24]]))",
    0.00066
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00076
  ]
}