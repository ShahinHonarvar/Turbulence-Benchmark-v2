{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00202
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00149
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-80, -46],\\n        [ 57, -23],\\n        [ 87, -81],\\n        [-64,  -1],\\n        [ -4,  78],\\n        [-22, -69],\\n        [-20, -12],\\n        [-73, -68],\\n        [ 53, -46],\\n        [-37,  32],\\n        [-74,  -7],\\n        [-20,  79],\\n        [-72,  12],\\n        [-73,  93],\\n        [ -7,  81],\\n        [ 92, -74],\\n        [-27,  18],\\n        [-76,  77],\\n        [ 22,   3],\\n        [ 64, -68],\\n        [-41,  16],\\n        [ 29,  78],\\n        [ 86, -13],\\n        [-99,  61],\\n        [-57,  66],\\n        [-83,  62],\\n        [  9, -16],\\n        [-68, -57],\\n        [-30, -32],\\n        [ 66,  96],\\n        [ 99, -46],\\n        [-58, -15],\\n        [-73,  24],\\n        [-70,  51],\\n        [-19, -31],\\n        [ 21,  87],\\n        [-67,  36],\\n        [ 75, -19],\\n        [ 68,  59],\\n        [-38,  21],\\n        [ 12, -89],\\n        [  2, -46],\\n        [-86,  51],\\n        [-58, -14],\\n        [ 67,  89],\\n        [ 46,  84],\\n        [-64, -86],\\n        [ 87, 100]]))",
    0.00409
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00708
  ]
}