{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-43, -30, -68,   5,  90, -41,  65,  30, -79, -72,  45, -95, -55,\\n          42,  84, -28, -79,  58,  17, -23,   1, -95, -16, -45, -23,  86,\\n         -38, -66,  72, -30,  16, -26, -85,  87, -63, -67,  78,  46, -15,\\n          63,  55,   0,  47, -69, -45, -68, -56,  56, -42, -70,  16,  56,\\n         -75, -24,  96,  27,  53, -29,  11, -65,   3, -43, -81,  40,  53,\\n          80,  50,  99, -33,  66,  37,  90, -62,  51,  26, -30, -49,  76,\\n          62, -39,  21, -63,  94,  55,  28,  20, -67,  43,  69,  75, -58,\\n         -20, -75,   8,  73,  48,  23,  52,  -8,  74, -13,  92, -42, -90,\\n         -61, -91, -34, -27,  80, -17, -60,  75,  95, -90,  98,  31,  42,\\n          60, -52,  12,  18, -30,   8,  -7,  13, -93,  67, -84,  24,  85,\\n         -37, -64,  38, -72,  45, -86, -27,  90, -14,  51,  37, -17,  76,\\n          72, -13, -67, -38,  25,  58, -35, -74,  70, -59, -46, -23,  90,\\n         -80,  13,  47,  69, -13,  -3, -75,  11, -84, -58,  93, -55,  45,\\n          33,  31, -15, -39]]))",
    0.0011
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00033
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 347",
    0.00107
  ]
}