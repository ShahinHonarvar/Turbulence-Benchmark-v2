{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00036
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -56,  -12,  -89,   87,  -80,  -49,  -22,  -93,  -16,   68,\\n           46,  -69,  -50,   67,  -88,  -45,   14,  -57,   25,   87,\\n           -5,  -54,    7,   53,   28,   92,   47,   71,   17,   36,\\n          -85,   20,   97,  -18,  -37,   63,  -69,   98,   26,  -86,\\n          -91,   16,  -93,  -73,    1,  -12,  -39,  -69,  -43,   71,\\n          -38, -100,   18,   19,  -20,  -84,  -65,   29,  -69,   31,\\n          -17,   96,  -59,  -64,   37,   77,   20,   53,   80,  -21,\\n          -71,  -80,   61,  -87,  -22,   76,  -79,  -93,   21,   94,\\n          -34,  -40,   86,  -35,   29,   40,  -67,   64,    7,    7,\\n          -66,   98,  -65,   88,  -63,  -58,   -3,   13,  -62,  -65,\\n           55,   13,  -54,   70,   89,  -12,   75,   10,   24,  -69,\\n           46,  -32,  -84,   21,  -37,    9,  -83,  -45,  -83,  -18,\\n          -81,  -65,  -59,   72,   16,  -33,   -3,    7, -100,  -27,\\n           78,   92,   62,  -97,  -18,   29,   77,   98,  -59,  -29,\\n           -3,  -45,   89,  -43,  -15,   32,  -42,   -8,  -18,  -67,\\n            2,  -88,   24,   86,   68,   22,  -11,    5,  -51]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 319",
    0.00529
  ]
}