{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00032
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  81,   26],\\n        [  10,  -81],\\n        [ -80,   41],\\n        [  -4,   60],\\n        [ -51,   43],\\n        [ -22,  -53],\\n        [  81,    7],\\n        [  52,   15],\\n        [  40,   72],\\n        [  11, -100],\\n        [  72,   43],\\n        [  28,   66],\\n        [  59,   32],\\n        [  42,   42],\\n        [  42,    1],\\n        [ -49,  -57],\\n        [  -5,   32],\\n        [ -26,   55],\\n        [ -66,  -66],\\n        [  -5,  -36],\\n        [ -25,   26],\\n        [  97,   21],\\n        [ -12,   -4],\\n        [  55,    9],\\n        [ -23,  -99],\\n        [ -47,   11],\\n        [ -74,  -38],\\n        [ -80,   21],\\n        [ -61,  -23],\\n        [  79,   68],\\n        [   1,  -56],\\n        [  16,  -26],\\n        [  -6,   80],\\n        [  89,   16],\\n        [ -25,   44],\\n        [  76,   51],\\n        [ -53,  -11],\\n        [ -18,   93],\\n        [  -7,  -16],\\n        [ -36,   71],\\n        [  15,  -85],\\n        [   5,   39],\\n        [ -85,   52],\\n        [ -79,   40],\\n        [  73,  -22],\\n        [ -60,   99],\\n        [ -93,  -19],\\n        [ -68,  -54],\\n        [ -75,    7],\\n        [  13,   -4],\\n        [ -47,  -35],\\n        [  61,  -50]]))",
    0.00192
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00082
  ]
}