{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00066
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00037
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 39, -46,  13, -51,  -8, -46,  58,   2, -33,  64,  60,  90, -59,\\n          16,  11, -93, -27, -48,  19, -91, -71, -38,  -3,   3, -74,  33,\\n          37, -53,  48,  25, -29, -55, -99,  23,  39,  80,  56,  57,  26,\\n          55, -98,  10,  95,  14,  25, -92, -42,  30,  56, -95, -12, -80,\\n         -90,  53,  36,  68, -54,   8,  -7, -47,  20,  61,  58,  42,  33,\\n         -45,  92,  -9, -16, -55,  29,  37, -38,  15, -23, -10,  63,   3,\\n          79,  25,  17, -39,  28, -78,  74,  88,   9,  -7,  73,   0, -78,\\n         -35,  78,  80, -12, -82, -76, -93,  42, -34,   8,  29,  64, -32,\\n           8,  52, -95, -32, -90,  53,  43, -44, -97,  54,  83, -71,  84,\\n          59, -63,  56,  29, -30,  -8, -29, -37, -15,  75,  22, -13, -19,\\n          46,  55,  12,  51, -59, -97, -32, -63,  94]]))",
    0.00163
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00088
  ]
}