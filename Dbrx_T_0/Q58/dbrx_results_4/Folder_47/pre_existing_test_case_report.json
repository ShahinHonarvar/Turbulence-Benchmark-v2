{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00099
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 35, -28],\\n        [-51,  92],\\n        [ 41, -34],\\n        [  1, -25],\\n        [ 60, -83],\\n        [-18, -19],\\n        [ 34, -52],\\n        [ 27, -58],\\n        [ 55,  82],\\n        [ 17,  52],\\n        [ 99,  11],\\n        [ -7, -35],\\n        [ 33, -10],\\n        [-77, -93],\\n        [-57,  20],\\n        [-70,  75],\\n        [ 57,  -9],\\n        [ 11,  -6],\\n        [-18,   3],\\n        [-19,   6],\\n        [ 24, -76],\\n        [ 38,  64],\\n        [-80, -11],\\n        [-86, -75],\\n        [-27, -20],\\n        [ 22,  49],\\n        [ -7,   3],\\n        [-80, -20],\\n        [-99,  74],\\n        [-58, -61],\\n        [ 10,  88],\\n        [ 85,  56],\\n        [ 78, -12],\\n        [ 83, -46],\\n        [-12,  99],\\n        [-78, -99],\\n        [ 70,   9],\\n        [-30, -52],\\n        [ 21,  63],\\n        [ 56, -21],\\n        [-67, -41],\\n        [-51, -49],\\n        [ -6,  55],\\n        [-36, -41],\\n        [ 33, -71]]))",
    0.00063
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00081
  ]
}