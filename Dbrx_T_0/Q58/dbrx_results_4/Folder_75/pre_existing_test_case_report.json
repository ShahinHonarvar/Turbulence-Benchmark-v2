{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 68, -22],\\n        [-13,  11],\\n        [ 29,   7],\\n        [-43, -10],\\n        [-39,  10],\\n        [-46, -80],\\n        [-27, -49],\\n        [ 34, -84],\\n        [-52,  25],\\n        [-97, -38],\\n        [ 76,  50],\\n        [ 49, -85],\\n        [ 75, -61],\\n        [ 63,  36],\\n        [-86, -33],\\n        [-21,  86],\\n        [-64, -35],\\n        [-88,  84],\\n        [ 76, -14],\\n        [ 68,  23],\\n        [ 82,  63],\\n        [ 89, -61],\\n        [ 75, -13],\\n        [  4,  73],\\n        [ 99, -75],\\n        [-31, -61],\\n        [ 15, -71],\\n        [ 24, -54],\\n        [-69, -62],\\n        [-84,  80],\\n        [ 27,  37],\\n        [-60, -34],\\n        [ 24, -29],\\n        [-58, -99],\\n        [ 78,  35],\\n        [-61,   5],\\n        [ 45,  66],\\n        [ 81, -65],\\n        [-73,   4],\\n        [ 87,  64]]))",
    0.00057
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00034
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00066
  ]
}