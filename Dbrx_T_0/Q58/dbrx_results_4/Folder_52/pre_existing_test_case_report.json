{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00091
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00031
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-51, -85, -59,  51,  92,  46, -82, -49, -14, -17, -45,  23,  23,\\n         -66, -57, -38, -61,  91,  60,   1, -75, -14,   6, -98,  16, -18,\\n          40, -81,  80,  25, -69, -44, -80,  71, -37,  63,  85,  91,  58,\\n         -17,  33,  25, -76,  64, -12,  71, -83,   7,  -5, -50,  75, -75,\\n          -2,  -4, -10, -18,  30,  29,  -8,  70, -21,  36,  54, -28, -76,\\n           2,  31,  44,  17, -59, -28,  22,  26,  60, -86,  28,  24, -94,\\n          30,  78,   8,  43,  27,  23,  33,  20, -97,  71, -93,  96, -29,\\n         -63,  46, -43,  42,  83,  -4, -68,  40,  93,  60, -69,   1, -50,\\n          78,  91, -92, -37, -96,  87,  53, -61,   9, -61,  90, -60, -82,\\n         -76,  88, -91,  70, -68,  38,  35,  14, -98,  31, -24, 100,  67,\\n         -77,  74,  40, -98, -99, -28,  -7,  94, -66, -94,  53,  63,  66,\\n          54,  49, -27,  12]]))",
    0.00065
  ]
}