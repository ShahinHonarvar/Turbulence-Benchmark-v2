{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.0003
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  33,  -10],\\n        [  96,   51],\\n        [ -61,    5],\\n        [ -82,  -88],\\n        [  -5,  -10],\\n        [ -82,   38],\\n        [  97,    4],\\n        [ -26,  -72],\\n        [ -64,  -47],\\n        [  23,    7],\\n        [ -20,   92],\\n        [ -25,   57],\\n        [ -24,    1],\\n        [  85,  -43],\\n        [  78,  -48],\\n        [  65,  -45],\\n        [  83,  -87],\\n        [  99,  -60],\\n        [   6,  -88],\\n        [  46,   78],\\n        [  39,  -55],\\n        [-100,  -57],\\n        [  35,  -53],\\n        [  15,   -3],\\n        [ -12,   93],\\n        [ -12,   17],\\n        [  85,   -8],\\n        [ -30,  -47],\\n        [   4,   89],\\n        [ -69,   19],\\n        [  63,    4],\\n        [  94,  -25],\\n        [ -25,   54],\\n        [  34,   90],\\n        [ -80,   11],\\n        [   0,   44],\\n        [ -47,   82],\\n        [ -78,  -82],\\n        [  76,   96],\\n        [  72,  -30],\\n        [ -73,  -24],\\n        [ -92,  -98],\\n        [  12,  -16],\\n        [  -4,  -91]]))",
    0.0046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00072
  ]
}