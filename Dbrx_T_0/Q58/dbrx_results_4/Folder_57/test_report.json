{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_57_4.py::test_matrix_of_one_integer", "location": ["tests58_57_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006882479647174478, "start": 1730450653.9811196, "stop": 1730450653.9818084, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_4.py::test_horizontal_matrix", "location": ["tests58_57_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017914798809215426, "start": 1730450653.9820836, "stop": 1730450653.9822636, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_57_4.py::test_matrix_of_having_92_integers", "location": ["tests58_57_4.py", 28, "test_matrix_of_having_92_integers"], "keywords": {"test_matrix_of_having_92_integers": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001476559555158019, "start": 1730450653.9828067, "stop": 1730450653.982955, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_57_4.py::test_matrix_of_one_integer", "location": ["tests58_57_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009334439528174698, "start": 1730450653.982026, "stop": 1730450653.98296, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_4.py::test_matrix_of_one_integer", "location": ["tests58_57_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.623899728059769e-05, "start": 1730450653.9832633, "stop": 1730450653.9833398, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_4.py::test_vertical_matrix", "location": ["tests58_57_4.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0031097889877855778, "start": 1730450653.9837031, "stop": 1730450653.986813, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_4.py::test_horizontal_matrix", "location": ["tests58_57_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 58, "message": "assert 0 == 185"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(92)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(92)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 58, "message": "assert 0 == 185"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00043836404802277684, "start": 1730450653.9825723, "stop": 1730450653.9830115, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_57_4.py::test_horizontal_matrix", "location": ["tests58_57_4.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017742498312145472, "start": 1730450654.0108306, "stop": 1730450654.0110087, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_57_4.py::test_matrix_of_having_92_integers", "location": ["tests58_57_4.py", 28, "test_matrix_of_having_92_integers"], "keywords": {"test_matrix_of_having_92_integers": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  -2],\\n        [ 58, -40],\\n        [-36, -99],\\n        [ 27, -37],\\n        [-14,  67],\\n        [-67, -39],\\n        [-12, -51],\\n        [-93, -18],\\n        [-80,  63],\\n        [-51,   9],\\n        [-82,  73],\\n        [100,  59],\\n        [ 64, -94],\\n        [ 86,  89],\\n        [-89,  49],\\n        [-48,  76],\\n        [-60,  -1],\\n        [ 35,  28],\\n        [ 75,  56],\\n        [-14, -32],\\n        [ 25, -76],\\n        [ 91,  53],\\n        [-27,   3],\\n        [-71, -22],\\n        [  8, -61],\\n        [ 45,  73],\\n        [-45, -44],\\n        [ 55,  61],\\n        [-98, -71],\\n        [ 60, -11],\\n        [-50,  17],\\n        [-97,  96],\\n        [-24, -48],\\n        [-23,  21],\\n        [-47,  72],\\n        [ 20,  74],\\n        [ 28,  20],\\n        [ 50,  71],\\n        [ 34,  40],\\n        [  5,  23],\\n        [-69,  39],\\n        [-14,  26],\\n        [ 58,  27],\\n        [ 42,  71],\\n        [ 85,   1],\\n        [ 89, -77]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_92_integers():", "        if 92 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(92 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(92)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  -2],\\n        [ 58, -40],\\n        [-36, -99],\\n        [ 27, -37],\\n        [-14,  67],\\n        [-67, -39],\\n        [-12, -51],\\n        [-93, -18],\\n        [-80,  63],\\n        [-51,   9],\\n        [-82,  73],\\n        [100,  59],\\n        [ 64, -94],\\n        [ 86,  89],\\n        [-89,  49],\\n        [-48,  76],\\n        [-60,  -1],\\n        [ 35,  28],\\n        [ 75,  56],\\n        [-14, -32],\\n        [ 25, -76],\\n        [ 91,  53],\\n        [-27,   3],\\n        [-71, -22],\\n        [  8, -61],\\n        [ 45,  73],\\n        [-45, -44],\\n        [ 55,  61],\\n        [-98, -71],\\n        [ 60, -11],\\n        [-50,  17],\\n        [-97,  96],\\n        [-24, -48],\\n        [-23,  21],\\n        [-47,  72],\\n        [ 20,  74],\\n        [ 28,  20],\\n        [ 50,  71],\\n        [ 34,  40],\\n        [  5,  23],\\n        [-69,  39],\\n        [-14,  26],\\n        [ 58,  27],\\n        [ 42,  71],\\n        [ 85,   1],\\n        [ 89, -77]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_92_integers():", "        if 92 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(92 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(92)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  -2],\\n        [ 58, -40],\\n        [-36, -99],\\n        [ 27, -37],\\n        [-14,  67],\\n        [-67, -39],\\n        [-12, -51],\\n        [-93, -18],\\n        [-80,  63],\\n        [-51,   9],\\n        [-82,  73],\\n        [100,  59],\\n        [ 64, -94],\\n        [ 86,  89],\\n        [-89,  49],\\n        [-48,  76],\\n        [-60,  -1],\\n        [ 35,  28],\\n        [ 75,  56],\\n        [-14, -32],\\n        [ 25, -76],\\n        [ 91,  53],\\n        [-27,   3],\\n        [-71, -22],\\n        [  8, -61],\\n        [ 45,  73],\\n        [-45, -44],\\n        [ 55,  61],\\n        [-98, -71],\\n        [ 60, -11],\\n        [-50,  17],\\n        [-97,  96],\\n        [-24, -48],\\n        [-23,  21],\\n        [-47,  72],\\n        [ 20,  74],\\n        [ 28,  20],\\n        [ 50,  71],\\n        [ 34,  40],\\n        [  5,  23],\\n        [-69,  39],\\n        [-14,  26],\\n        [ 58,  27],\\n        [ 42,  71],\\n        [ 85,   1],\\n        [ 89, -77]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  -2],\\n        [ 58, -40],\\n        [-36, -99],\\n        [ 27, -37],\\n        [-14,  67],\\n        [-67, -39],\\n        [-12, -51],\\n        [-93, -18],\\n        [-80,  63],\\n        [-51,   9],\\n        [-82,  73],\\n        [100,  59],\\n        [ 64, -94],\\n        [ 86,  89],\\n        [-89,  49],\\n        [-48,  76],\\n        [-60,  -1],\\n        [ 35,  28],\\n        [ 75,  56],\\n        [-14, -32],\\n        [ 25, -76],\\n        [ 91,  53],\\n        [-27,   3],\\n        [-71, -22],\\n        [  8, -61],\\n        [ 45,  73],\\n        [-45, -44],\\n        [ 55,  61],\\n        [-98, -71],\\n        [ 60, -11],\\n        [-50,  17],\\n        [-97,  96],\\n        [-24, -48],\\n        [-23,  21],\\n        [-47,  72],\\n        [ 20,  74],\\n        [ 28,  20],\\n        [ 50,  71],\\n        [ 34,  40],\\n        [  5,  23],\\n        [-69,  39],\\n        [-14,  26],\\n        [ 58,  27],\\n        [ 42,  71],\\n        [ 85,   1],\\n        [ 89, -77]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00557475903769955, "start": 1730450653.9832802, "stop": 1730450653.9888558, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_57_4.py::test_matrix_of_having_92_integers", "location": ["tests58_57_4.py", 28, "test_matrix_of_having_92_integers"], "keywords": {"test_matrix_of_having_92_integers": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012438901467248797, "start": 1730450654.0161173, "stop": 1730450654.0162423, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_57_4.py::test_vertical_matrix", "location": ["tests58_57_4.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 79, "message": "assert 0 == 185"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 92", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_vertical_matrix():", "        m = '1 ;' * 92", "        m = m[:-1]", "        m = np.matrix(m)", "        mat = np.concatenate((m, m), axis=0)", "        if 92 < 30:", "            num = 4", "        elif 30 <= 92 < 70:", "            num = 3", "        elif 70 <= 92 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            mat = np.concatenate((m, mat), axis=0)", "            output = submatrix_with_n_numbers(mat)", "            expected_result = ((i + 2) * 92) + 1", ">           assert output == expected_result", "E           assert 0 == 185"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 79, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_0/Q58/dbrx_results_4/Folder_57/tests58_57_4.py", "lineno": 79, "message": "assert 0 == 185"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008192869718186557, "start": 1730450653.9869413, "stop": 1730450653.9877615, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_57_4.py::test_vertical_matrix", "location": ["tests58_57_4.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_57_4.py": 1, "Folder_57": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013398798182606697, "start": 1730450654.022846, "stop": 1730450654.0229807, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "b1436a88fbac4bef98767bb2a411fc22", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
