{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00069
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00044
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  -2],\\n        [ 58, -40],\\n        [-36, -99],\\n        [ 27, -37],\\n        [-14,  67],\\n        [-67, -39],\\n        [-12, -51],\\n        [-93, -18],\\n        [-80,  63],\\n        [-51,   9],\\n        [-82,  73],\\n        [100,  59],\\n        [ 64, -94],\\n        [ 86,  89],\\n        [-89,  49],\\n        [-48,  76],\\n        [-60,  -1],\\n        [ 35,  28],\\n        [ 75,  56],\\n        [-14, -32],\\n        [ 25, -76],\\n        [ 91,  53],\\n        [-27,   3],\\n        [-71, -22],\\n        [  8, -61],\\n        [ 45,  73],\\n        [-45, -44],\\n        [ 55,  61],\\n        [-98, -71],\\n        [ 60, -11],\\n        [-50,  17],\\n        [-97,  96],\\n        [-24, -48],\\n        [-23,  21],\\n        [-47,  72],\\n        [ 20,  74],\\n        [ 28,  20],\\n        [ 50,  71],\\n        [ 34,  40],\\n        [  5,  23],\\n        [-69,  39],\\n        [-14,  26],\\n        [ 58,  27],\\n        [ 42,  71],\\n        [ 85,   1],\\n        [ 89, -77]]))",
    0.00557
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00082
  ]
}