{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.0003
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00318
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 73,  91],\\n        [ 56, -73],\\n        [ 33,  63],\\n        [-89, -35],\\n        [-19,  87],\\n        [-97,  49],\\n        [-74,  60],\\n        [-28, -31],\\n        [-34, -41],\\n        [-12, -52],\\n        [-89, -12],\\n        [ 67,  81],\\n        [  4, -93],\\n        [ 54,  45],\\n        [-32,  18],\\n        [-45, -83],\\n        [-21,  34],\\n        [ 79, -79],\\n        [ 51,  98],\\n        [ 10,  34],\\n        [  4,  48],\\n        [-76,  85],\\n        [ 43, -22],\\n        [-31,  95],\\n        [-62, -50],\\n        [100, -61],\\n        [-38,  25],\\n        [ 70, -32],\\n        [-20,  87],\\n        [  7,  45],\\n        [ 15,  91],\\n        [ 90,  72],\\n        [ 35,  35],\\n        [ 40, -56],\\n        [ 93,  41],\\n        [-10, -93],\\n        [-26,  65],\\n        [-56,   4],\\n        [ 15,  92],\\n        [-98, -69],\\n        [ 79, -76],\\n        [ 28, -91]]))",
    0.00122
  ]
}