{
  "parameter(s)": [
    37,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    0.00014
  ],
  "test_range_sum": [
    "passed",
    "",
    0.00011
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [37, 38, 39, 40, 41, 42, ...] == [38, 39, 40, 41, 42, 43, ...]\n  At index 0 diff: 37 != 38\n  Left contains one more item: 77\n  Full diff:\n    [\n  +  37,\n     38,\n     39,...\n  \n  ...Full output truncated (39 lines hidden), use '-vv' to show",
    0.00048
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [74, 76, 78, 80, 82, 84, ...] == [76, 78, 80, 82, 84, 86, ...]\n  At index 0 diff: 74 != 76\n  Left contains one more item: 154\n  Full diff:\n    [\n  +  74,\n     76,\n     78,...\n  \n  ...Full output truncated (39 lines hidden), use '-vv' to show",
    0.00062
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 41 == ((76 - 37) + 1)\n +  where 41 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00032
  ]
}