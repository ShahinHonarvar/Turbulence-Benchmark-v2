{
  "parameter(s)": [
    56,
    66
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [112, 114, 11...120, 122, ...] == [114, 116, 11...122, 124, ...]\n  At index 0 diff: 112 != 114\n  Left contains one more item: 134\n  Full diff:\n  - [114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134]\n  + [112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134]\n  ?  +++++",
    0.0005
  ],
  "test_large_range": [
    "failed",
    "assert [56, 57, 58, 59, 60, 61, ...] == [57, 58, 59, 60, 61, 62, ...]\n  At index 0 diff: 56 != 57\n  Left contains one more item: 67\n  Full diff:\n  - [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]\n  + [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]\n  ?  ++++",
    0.00047
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 12 == ((66 - 56) + 1)\n +  where 12 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}