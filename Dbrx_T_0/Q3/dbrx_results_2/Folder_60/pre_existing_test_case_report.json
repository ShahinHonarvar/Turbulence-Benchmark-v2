{
  "parameter(s)": [
    75,
    85
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    7e-05
  ],
  "test_even_range": [
    "failed",
    "assert [150, 152, 15...158, 160, ...] == [152, 154, 15...160, 162, ...]\n  At index 0 diff: 150 != 152\n  Left contains one more item: 172\n  Full diff:\n  - [152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172]\n  + [150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172]\n  ?  +++++",
    0.00053
  ],
  "test_large_range": [
    "failed",
    "assert [75, 76, 77, 78, 79, 80, ...] == [76, 77, 78, 79, 80, 81, ...]\n  At index 0 diff: 75 != 76\n  Left contains one more item: 86\n  Full diff:\n  - [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86]\n  + [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86]\n  ?  ++++",
    0.00071
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 12 == ((85 - 75) + 1)\n +  where 12 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}