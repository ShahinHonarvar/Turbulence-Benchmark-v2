{
  "parameter(s)": [
    31,
    72
  ],
  "test_zero_range": [
    "passed",
    "",
    8e-05
  ],
  "test_range_size": [
    "passed",
    "",
    6e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    5e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [31, 32, 33, 34, 35, 36, ...] == [32, 33, 34, 35, 36, 37, ...]\n  At index 0 diff: 31 != 32\n  Left contains one more item: 73\n  Full diff:\n    [\n  +  31,\n     32,\n     33,...\n  \n  ...Full output truncated (41 lines hidden), use '-vv' to show",
    0.0005
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [62, 64, 66, 68, 70, 72, ...] == [64, 66, 68, 70, 72, 74, ...]\n  At index 0 diff: 62 != 64\n  Left contains one more item: 146\n  Full diff:\n    [\n  +  62,\n     64,\n     66,...\n  \n  ...Full output truncated (41 lines hidden), use '-vv' to show",
    0.00048
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 43 == ((72 - 31) + 1)\n +  where 43 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00017
  ]
}