{
  "parameter(s)": [
    68,
    86
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00012
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_large_range": [
    "failed",
    "assert [68, 69, 70, 71, 72, 73, ...] == [69, 70, 71, 72, 73, 74, ...]\n  At index 0 diff: 68 != 69\n  Left contains one more item: 87\n  Full diff:\n  - [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87]\n  + [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87]\n  ?  ++++",
    0.00071
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [136, 138, 14...144, 146, ...] == [138, 140, 14...146, 148, ...]\n  At index 0 diff: 136 != 138\n  Left contains one more item: 174\n  Full diff:\n    [\n  +  136,\n     138,\n     140,...\n  \n  ...Full output truncated (18 lines hidden), use '-vv' to show",
    0.00067
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 20 == ((86 - 68) + 1)\n +  where 20 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_inclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00023
  ]
}