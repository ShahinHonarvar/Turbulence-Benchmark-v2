{
  "parameter(s)": [
    40
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    9e-05
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00012
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    6e-05
  ],
  "test_length_less_than_40": [
    "passed",
    "",
    5e-05
  ],
  "test_length_equal_to_40": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_identical_punctuations": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_punctuations_and_nums": [
    "passed",
    "",
    0.00011
  ],
  "test_string_of_spaces_and_punctuations": [
    "passed",
    "",
    5e-05
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00019
  ],
  "test_string_of_numbers_and_letters": [
    "failed",
    "AssertionError: assert not {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n +  where {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'} = palindrome_of_length_n('a1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1a')",
    0.00016
  ]
}