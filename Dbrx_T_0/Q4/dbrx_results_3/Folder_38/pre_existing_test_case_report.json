{
  "parameter(s)": [
    15,
    40
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    6e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [30, 32, 34, 36, 38, 40, ...] == [34, 36, 38, 40, 42, 44, ...]\n  At index 0 diff: 30 != 34\n  Left contains 2 more items, first extra item: 78\n  Full diff:\n    [\n  +  30,\n  +  32,\n     34,...\n  \n  ...Full output truncated (24 lines hidden), use '-vv' to show",
    0.0004
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [15, 16, 17, 18, 19, 20, ...] == [17, 18, 19, 20, 21, 22, ...]\n  At index 0 diff: 15 != 17\n  Left contains 2 more items, first extra item: 39\n  Full diff:\n    [\n  +  15,\n  +  16,\n     17,...\n  \n  ...Full output truncated (24 lines hidden), use '-vv' to show",
    0.00041
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 26 == ((40 - 15) - 1)\n +  where 26 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}