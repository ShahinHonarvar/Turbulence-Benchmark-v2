{
  "parameter(s)": [
    51,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    6e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    5e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [51, 52, 53, 54, 55, 56, ...] == [53, 54, 55, 56, 57, 58, ...]\n  At index 0 diff: 51 != 53\n  Left contains 2 more items, first extra item: 75\n  Full diff:\n    [\n  +  51,\n  +  52,\n     53,...\n  \n  ...Full output truncated (24 lines hidden), use '-vv' to show",
    0.00041
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [102, 104, 10...110, 112, ...] == [106, 108, 11...114, 116, ...]\n  At index 0 diff: 102 != 106\n  Left contains 2 more items, first extra item: 150\n  Full diff:\n    [\n  +  102,\n  +  104,\n     106,...\n  \n  ...Full output truncated (24 lines hidden), use '-vv' to show",
    0.00041
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 26 == ((76 - 51) - 1)\n +  where 26 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00017
  ]
}