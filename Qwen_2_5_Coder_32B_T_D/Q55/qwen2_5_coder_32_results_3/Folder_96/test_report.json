{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests55_96_3.py::test_sublist_size", "location": ["tests55_96_3.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014093599747866392, "start": 1731691838.4185455, "stop": 1731691838.4186866, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_sublist_size", "location": ["tests55_96_3.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015655701281502843, "start": 1731691838.4189005, "stop": 1731691838.4190576, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_sublist_size", "location": ["tests55_96_3.py", 50, "test_sublist_size"], "keywords": {"test_sublist_size": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.169802069664001e-05, "start": 1731691838.4193568, "stop": 1731691838.419449, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_list_of_single_number", "location": ["tests55_96_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001966410200111568, "start": 1731691838.4188535, "stop": 1731691838.419051, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_3.py::test_list_of_single_number", "location": ["tests55_96_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016395299462601542, "start": 1731691838.419342, "stop": 1731691838.4195068, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_3.py::test_list_of_several_same_number", "location": ["tests55_96_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015983800403773785, "start": 1731691838.418679, "stop": 1731691838.4188397, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_96_3.py::test_list_of_single_number", "location": ["tests55_96_3.py", 5, "test_list_of_single_number"], "keywords": {"test_list_of_single_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011352798901498318, "start": 1731691838.4198837, "stop": 1731691838.419998, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_3.py::test_return_elements_are_in_given_list", "location": ["tests55_96_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012969895033165812, "start": 1731691838.4211419, "stop": 1731691838.421272, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_return_elements_are_in_given_list", "location": ["tests55_96_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012806197628378868, "start": 1731691838.4214113, "stop": 1731691838.4215398, "extras": [], "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_return_elements_are_in_given_list", "location": ["tests55_96_3.py", 70, "test_return_elements_are_in_given_list"], "keywords": {"test_return_elements_are_in_given_list": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.56819499656558e-05, "start": 1731691838.421818, "stop": 1731691838.421894, "$report_type": "TestReport", "item_index": 5, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_96_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013581500388681889, "start": 1731691838.4218395, "stop": 1731691838.4219756, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_3.py::test_if_sublist_product_equals_number", "location": ["tests55_96_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.267699740827084e-05, "start": 1731691838.4228346, "stop": 1731691838.4229178, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_if_sublist_product_equals_number", "location": ["tests55_96_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Qwen_2_5_Coder_32B_T_D/Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 107, "message": "assert 1 == 0\n +  where 1 = <built-in function prod>([])\n +    where <built-in function prod> = math.prod"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_sublist_product_equals_number():", "        input_list = []", "        if 0 == 0:", "            k = random.randint(1, 4)", "            input_list = list(range(-k, k + 1))", "        elif 0 > 0:", "            divs = [i for i in range(1, 0 + 1) if 0 % i == 0]", "            input_list = divs + divs", "        else:", "            n = -0", "            divs = [-i for i in range(1, n + 1) if n % i == 0]", "            input_list = divs + divs", "    ", "        result = lists_with_product_equal_n(input_list)", "        if result:", "            for r in result:", ">               assert math.prod(r) == 0", "E               assert 1 == 0", "E                +  where 1 = <built-in function prod>([])", "E                +    where <built-in function prod> = math.prod"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 107, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_if_sublist_product_equals_number():", "        input_list = []", "        if 0 == 0:", "            k = random.randint(1, 4)", "            input_list = list(range(-k, k + 1))", "        elif 0 > 0:", "            divs = [i for i in range(1, 0 + 1) if 0 % i == 0]", "            input_list = divs + divs", "        else:", "            n = -0", "            divs = [-i for i in range(1, n + 1) if n % i == 0]", "            input_list = divs + divs", "    ", "        result = lists_with_product_equal_n(input_list)", "        if result:", "            for r in result:", ">               assert math.prod(r) == 0", "E               assert 1 == 0", "E                +  where 1 = <built-in function prod>([])", "E                +    where <built-in function prod> = math.prod"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 107, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Qwen_2_5_Coder_32B_T_D/Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 107, "message": "assert 1 == 0\n +  where 1 = <built-in function prod>([])\n +    where <built-in function prod> = math.prod"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00026210100622847676, "start": 1731691838.4230323, "stop": 1731691838.4232948, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_if_sublist_product_equals_number", "location": ["tests55_96_3.py", 90, "test_if_sublist_product_equals_number"], "keywords": {"test_if_sublist_product_equals_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011379399802535772, "start": 1731691838.4330866, "stop": 1731691838.4332008, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw2", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw2>"}
{"nodeid": "tests55_96_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_96_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Qwen_2_5_Coder_32B_T_D/Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 14, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x790303659740>([0])\n +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count\n +  and   3 = <built-in method count of list object at 0x790303659740>([1, 0])\n +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count\n +  and   2 = <built-in method count of list object at 0x790303659740>([0, 1])\n +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 0, 1, 0, 1, 0]", "        result = lists_with_product_equal_n(input_list)", "        if 0 == 0:", ">           assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x790303659740>([0])", "E            +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count", "E            +  and   3 = <built-in method count of list object at 0x790303659740>([1, 0])", "E            +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count", "E            +  and   2 = <built-in method count of list object at 0x790303659740>([0, 1])", "E            +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_presence_of_duplicates_in_result():", "        input_list = [1, 0, 1, 0, 1, 0]", "        result = lists_with_product_equal_n(input_list)", "        if 0 == 0:", ">           assert result.count([0]) == 3 and result.count([1, 0]) == 3 and result.count([0, 1]) == 3 and result.count(", "            [1, 0, 1]) == 3 and result.count([0, 1, 0]) == 3 and result.count([1, 0, 1, 0]) == 3 and result.count(", "            [0, 1, 0, 1]) == 3 and result.count([0, 1, 0, 1, 0]) == 3 and result.count(", "E           assert (3 == 3 and 3 == 3 and 2 == 3)", "E            +  where 3 = <built-in method count of list object at 0x790303659740>([0])", "E            +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count", "E            +  and   3 = <built-in method count of list object at 0x790303659740>([1, 0])", "E            +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count", "E            +  and   2 = <built-in method count of list object at 0x790303659740>([0, 1])", "E            +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Qwen_2_5_Coder_32B_T_D/Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 14, "message": "assert (3 == 3 and 3 == 3 and 2 == 3)\n +  where 3 = <built-in method count of list object at 0x790303659740>([0])\n +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count\n +  and   3 = <built-in method count of list object at 0x790303659740>([1, 0])\n +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count\n +  and   2 = <built-in method count of list object at 0x790303659740>([0, 1])\n +    where <built-in method count of list object at 0x790303659740> = [[1, 0], [1, 0, 1], [1, 0, 1, 0], [1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0], [0], ...].count"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005860120290890336, "start": 1731691838.4221134, "stop": 1731691838.4227004, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_3.py::test_presence_of_duplicates_in_result", "location": ["tests55_96_3.py", 9, "test_presence_of_duplicates_in_result"], "keywords": {"test_presence_of_duplicates_in_result": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018684600945562124, "start": 1731691838.444507, "stop": 1731691838.444695, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw0>"}
{"nodeid": "tests55_96_3.py::test_list_of_several_same_number", "location": ["tests55_96_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed: Timeout >7.0s"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if 0 == 0 or 0 == 1:", "            for i in range(1, n + 1):", "                l.append([0] * i)", "            l = l * n", "        elif 0 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[0]] * n", "    ", "        input_list = [0] * n", ">       assert lists_with_product_equal_n(input_list) == l"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 40, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    custom = util._reprcompare(ops[i], each_obj[i], each_obj[i + 1])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/rewrite.py", "lineno": 499, "message": "in _call_reprcompare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    hook_result = ihook.pytest_assertrepr_compare("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 141, "message": "in callbinrepr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_hooks.py", "lineno": 265, "message": "in __call__"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_manager.py", "lineno": 80, "message": "in _hookexec"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return util.assertrepr_compare(config=config, op=op, left=left, right=right)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 181, "message": "in pytest_assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation = _compare_eq_any(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 192, "message": "in assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    expl = _compare_eq_iterable(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 241, "message": "in _compare_eq_any"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in _compare_eq_iterable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in <genexpr>"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 872, "message": "in compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from self._fancy_helper(a, best_i+1, ahi, b, best_j+1, bhi)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 985, "message": "in _fancy_replace"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 997, "message": "in _fancy_helper"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from self._fancy_helper(a, best_i+1, ahi, b, best_j+1, bhi)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 985, "message": "in _fancy_replace"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 997, "message": "in _fancy_helper"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from self._fancy_helper(a, best_i+1, ahi, b, best_j+1, bhi)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 985, "message": "in _fancy_replace"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 997, "message": "in _fancy_helper"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _fancy_replace(self, a, alo, ahi, b, blo, bhi):", "        r\"\"\"", "        When replacing one block of lines with another, search the blocks", "        for *similar* lines; the best-matching pair (if any) is used as a", "        synch point, and intraline difference marking is done on the", "        similar pair. Lots of work, but often worth it.", "    ", "        Example:", "    ", "        >>> d = Differ()", "        >>> results = d._fancy_replace(['abcDefghiJkl\\n'], 0, 1,", "        ...                            ['abcdefGhijkl\\n'], 0, 1)", "        >>> print(''.join(results), end=\"\")", "        - abcDefghiJkl", "        ?    ^  ^  ^", "        + abcdefGhijkl", "        ?    ^  ^  ^", "        \"\"\"", "    ", "        # don't synch up unless the lines have a similarity score of at", "        # least cutoff; best_ratio tracks the best score seen so far", "        best_ratio, cutoff = 0.74, 0.75", "        cruncher = SequenceMatcher(self.charjunk)", "        eqi, eqj = None, None   # 1st indices of equal lines (if any)", "    ", "        # search for the pair that matches best without being identical", "        # (identical lines must be junk lines, & we don't want to synch up", "        # on junk -- unless we have to)", "        for j in range(blo, bhi):", "            bj = b[j]", "            cruncher.set_seq2(bj)", "            for i in range(alo, ahi):", "                ai = a[i]", "                if ai == bj:", "                    if eqi is None:", "                        eqi, eqj = i, j", "                    continue", "                cruncher.set_seq1(ai)", "                # computing similarity is expensive, so use the quick", "                # upper bounds first -- have seen this speed up messy", "                # compares by a factor of 3.", "                # note that ratio() is only expensive to compute the first", "                # time it's called on a sequence pair; the expensive part", "                # of the computation is cached by cruncher", "                if cruncher.real_quick_ratio() > best_ratio and \\", ">                     cruncher.quick_ratio() > best_ratio and \\", "                      cruncher.ratio() > best_ratio:", "E                     Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["self", "<difflib.Differ object at 0x74e45ad6e810>"], ["a", "['[', ' [0],', ' [0,', '  0],', ' [0,', '  0,', ...]"], ["alo", "106241"], ["ahi", "108263"], ["b", "['[', ' [0],', ' [0,', '  0],', ' [0,', '  0,', ...]"], ["blo", "66050"], ["bhi", "66083"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_several_same_number():", "        n = random.randint(1,100)", "        l = []", "        if 0 == 0 or 0 == 1:", "            for i in range(1, n + 1):", "                l.append([0] * i)", "            l = l * n", "        elif 0 == -1:", "            for i in range(1, n + 1):", "                if i % 2 != 0:", "                    l.append([-1] * i)", "            l = l * n", "        else:", "            l = [[0]] * n", "    ", "        input_list = [0] * n", ">       assert lists_with_product_equal_n(input_list) == l"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q55/qwen2_5_coder_32_results_3/Folder_96/tests55_96_3.py", "lineno": 40, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    custom = util._reprcompare(ops[i], each_obj[i], each_obj[i + 1])"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/rewrite.py", "lineno": 499, "message": "in _call_reprcompare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    hook_result = ihook.pytest_assertrepr_compare("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 141, "message": "in callbinrepr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_hooks.py", "lineno": 265, "message": "in __call__"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/pluggy/_manager.py", "lineno": 80, "message": "in _hookexec"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return util.assertrepr_compare(config=config, op=op, left=left, right=right)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/__init__.py", "lineno": 181, "message": "in pytest_assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation = _compare_eq_any(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 192, "message": "in assertrepr_compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    expl = _compare_eq_iterable(left, right, verbose)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 241, "message": "in _compare_eq_any"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in _compare_eq_iterable"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    explanation.extend("], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/util.py", "lineno": 332, "message": "in <genexpr>"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 872, "message": "in compare"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from self._fancy_helper(a, best_i+1, ahi, b, best_j+1, bhi)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 985, "message": "in _fancy_replace"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 997, "message": "in _fancy_helper"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from self._fancy_helper(a, best_i+1, ahi, b, best_j+1, bhi)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 985, "message": "in _fancy_replace"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 997, "message": "in _fancy_helper"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from self._fancy_helper(a, best_i+1, ahi, b, best_j+1, bhi)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 985, "message": "in _fancy_replace"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    yield from g"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 997, "message": "in _fancy_helper"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _fancy_replace(self, a, alo, ahi, b, blo, bhi):", "        r\"\"\"", "        When replacing one block of lines with another, search the blocks", "        for *similar* lines; the best-matching pair (if any) is used as a", "        synch point, and intraline difference marking is done on the", "        similar pair. Lots of work, but often worth it.", "    ", "        Example:", "    ", "        >>> d = Differ()", "        >>> results = d._fancy_replace(['abcDefghiJkl\\n'], 0, 1,", "        ...                            ['abcdefGhijkl\\n'], 0, 1)", "        >>> print(''.join(results), end=\"\")", "        - abcDefghiJkl", "        ?    ^  ^  ^", "        + abcdefGhijkl", "        ?    ^  ^  ^", "        \"\"\"", "    ", "        # don't synch up unless the lines have a similarity score of at", "        # least cutoff; best_ratio tracks the best score seen so far", "        best_ratio, cutoff = 0.74, 0.75", "        cruncher = SequenceMatcher(self.charjunk)", "        eqi, eqj = None, None   # 1st indices of equal lines (if any)", "    ", "        # search for the pair that matches best without being identical", "        # (identical lines must be junk lines, & we don't want to synch up", "        # on junk -- unless we have to)", "        for j in range(blo, bhi):", "            bj = b[j]", "            cruncher.set_seq2(bj)", "            for i in range(alo, ahi):", "                ai = a[i]", "                if ai == bj:", "                    if eqi is None:", "                        eqi, eqj = i, j", "                    continue", "                cruncher.set_seq1(ai)", "                # computing similarity is expensive, so use the quick", "                # upper bounds first -- have seen this speed up messy", "                # compares by a factor of 3.", "                # note that ratio() is only expensive to compute the first", "                # time it's called on a sequence pair; the expensive part", "                # of the computation is cached by cruncher", "                if cruncher.real_quick_ratio() > best_ratio and \\", ">                     cruncher.quick_ratio() > best_ratio and \\", "                      cruncher.ratio() > best_ratio:", "E                     Failed: Timeout >7.0s"], "reprfuncargs": {"args": [["self", "<difflib.Differ object at 0x74e45ad6e810>"], ["a", "['[', ' [0],', ' [0,', '  0],', ' [0,', '  0,', ...]"], ["alo", "106241"], ["ahi", "108263"], ["b", "['[', ' [0],', ' [0,', '  0],', ' [0,', '  0,', ...]"], ["blo", "66050"], ["bhi", "66083"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/difflib.py", "lineno": 938, "message": "Failed: Timeout >7.0s"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (128524134385216) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 6.999675822968129, "start": 1731691838.4190717, "stop": 1731691845.4187481, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw1>"}
{"nodeid": "tests55_96_3.py::test_list_of_several_same_number", "location": ["tests55_96_3.py", 23, "test_list_of_several_same_number"], "keywords": {"test_list_of_several_same_number": 1, "tests55_96_3.py": 1, "Folder_96": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured stdout call", "~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (128524134385216) ~~~~~~~~~~~~~~~~~~~~~\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 411, in _perform_spawn\n    reply.run()\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 341, in run\n    self._result = func(*args, **kwargs)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 1160, in _thread_receiver\n    msg = Message.from_io(io)\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 567, in from_io\n    header = io.read(9)  # type 1, channel 4, payload 4\n  File \"/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/execnet/gateway_base.py\", line 534, in read\n    data = self._read(numbytes - len(buf))\n"]], "duration": 0.0001174400094896555, "start": 1731691845.4808364, "stop": 1731691845.480955, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "7078754ae6994cc0a03573a1216b2004", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
