{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 24,  65, -12,  -4,  32, -16,  12, -53,  30,   7,  90,   5,  58,\\n         -39, -52,  59, -60,  -1, -40,  58,  41, -54, -83, -10, -95,  85,\\n          35,  67, -64, -59, -33,   6, -10, -90,   1, -23,  53, -57,   4,\\n         -26,  75, -56, -29, -30,  14, -94, -21,  12,  56, -95,  50,  27,\\n         -36,  46,  -8,  -4,  37,  76, -87, -42, -77, -69,  64, -51, -11,\\n          51, -17, -82,   5,  94,  96, -76,  62, -51, -34, -88,  65,  87,\\n          57, -40, -68,  14, -23, -10,  59,  62, -65,  72, -89,  27, -15,\\n         -35, -11,   8, -38, -84,  35,  57, -43, -65, -53,  -7, -28, -64,\\n          43,   0,  94,  39,  60,  52, -63,  73, -32, -45, -39, -45,  92,\\n         -29,  19,  -5, -31, -26, -17,  71,  -7, -53,  46, -25, -56, -94,\\n         -37,  32,  17, -85,  31, -73,  -6, -65,  17, -81,  98,  19, -57,\\n         -90, -94,  85,  21]]))",
    0.0007
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00843
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.00094
  ]
}