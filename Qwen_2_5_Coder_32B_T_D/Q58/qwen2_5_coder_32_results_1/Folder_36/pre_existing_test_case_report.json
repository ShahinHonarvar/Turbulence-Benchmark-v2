{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.02503
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-92,  -7,  44, -43, -69,  -1, -55, -20,  56, -63, -13, -71, -44,\\n         -68, -85, -21,  50, -74,   2,  38, -53,  32,  44,  51, -15, -91,\\n          72,  97,  80, -35,  31, -99,  52, -25,  17, -75,  58, -18,  74,\\n          24,  68, -48,  16, -69, -27,  -4,  82, -22, -58,  50, -85,  64,\\n          21,  14, -80,  69,  59, -23,  38, -63,  62, -94, -53, -66,  70,\\n          15,  78,  18,  21,  -8, -65,   8,  -5,  47,  82, -53, -64,  88,\\n          10,  48,  46,  66,   4, -58,  29, -61, -39, -58, -94,  98, -25,\\n         -92, -20,  33, -52,  40, -22,  -9, -72, -96, -47,  29, -83,  34,\\n         -21,  98,  21,  81,  26,  53,  48,  85, -75,  24,  19, -21, -42,\\n          49, -60,  16,  45,  -2, -77, -40, -54, -21,  56, -70, -78, -82,\\n         -82]]))",
    0.00913
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00895
  ]
}