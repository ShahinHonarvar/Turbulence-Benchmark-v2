{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00033
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00074
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-47,  10],\\n        [ 58,  45],\\n        [ 44,  13],\\n        [ 54, -92],\\n        [-28, -91],\\n        [ 94, -71],\\n        [-89, -90],\\n        [ 57,  74],\\n        [-37, -47],\\n        [ 40, -86],\\n        [ 29,   0],\\n        [ -4,  62],\\n        [ 31,   4],\\n        [-68, -63],\\n        [ 36,  44],\\n        [ 32, -29],\\n        [-66, -43],\\n        [-98, -38],\\n        [-51, -26],\\n        [ -7, -33],\\n        [ 88, -60],\\n        [-59,  83],\\n        [-77, -36],\\n        [-48,  91],\\n        [ 77,  -9],\\n        [ 85,  16],\\n        [-95,  89],\\n        [ 22,  -3],\\n        [ 93, -13],\\n        [ 18,  62],\\n        [ 54, -45],\\n        [-36,  41],\\n        [-16, -49],\\n        [-23,  99],\\n        [ 16,  54],\\n        [  9, -54],\\n        [-95,  85],\\n        [-59,  21],\\n        [ 26, -67],\\n        [ 91, -54],\\n        [  5,  57],\\n        [-17,  -7],\\n        [ 67, -62],\\n        [ 52,  40],\\n        [-83,  32],\\n        [100,  18]]))",
    0.00081
  ]
}