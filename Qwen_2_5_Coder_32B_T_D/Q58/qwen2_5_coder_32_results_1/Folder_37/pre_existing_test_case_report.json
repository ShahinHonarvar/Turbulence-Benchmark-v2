{
  "parameter(s)": [
    64
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_64_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 98,  95],\\n        [-81, -94],\\n        [-35,  99],\\n        [-17, -52],\\n        [-55,  52],\\n        [-17,  71],\\n        [ 97, -72],\\n        [-74, -87],\\n        [-31, -38],\\n        [-43, -27],\\n        [ 33, -95],\\n        [-62,  16],\\n        [ 96, -44],\\n        [ 19,  40],\\n        [ 43,  30],\\n        [-78, -52],\\n        [ 88,  79],\\n        [-97,  90],\\n        [ 86,  36],\\n        [ 77, -76],\\n        [-83,  71],\\n        [ 50, -39],\\n        [-96, -96],\\n        [-69,  36],\\n        [ 35,  89],\\n        [ -9,  -7],\\n        [ 90, -99],\\n        [-73,  19],\\n        [ 68, -10],\\n        [ 10,  34],\\n        [-26,  27],\\n        [ 59, -29]]))",
    0.00059
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 129",
    0.0006
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 129",
    0.00032
  ]
}