{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00036
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00076
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 89, -56],\\n        [-38,  53],\\n        [ 88, -44],\\n        [-33, -60],\\n        [ 85, -98],\\n        [100, -43],\\n        [-34,  96],\\n        [-96,  47],\\n        [-48,  28],\\n        [-41,  52],\\n        [-84,  -6],\\n        [ 32, -46],\\n        [-35, -82],\\n        [-70,  72],\\n        [-78, -36],\\n        [ 50,   2],\\n        [-36, -78],\\n        [ 17, -13],\\n        [ 30, -53],\\n        [-63, -10],\\n        [ 77,  29],\\n        [ 65,  88],\\n        [-26, -90],\\n        [-50, -21],\\n        [ 59, -83],\\n        [  8,   1],\\n        [-36,  69],\\n        [ 56,  81],\\n        [ 91, -84],\\n        [  3, -70],\\n        [-38,  91],\\n        [ 35, -74],\\n        [-69,  38],\\n        [-24, -61],\\n        [ 46, -82],\\n        [ 36,  14],\\n        [-35,  99],\\n        [ 79, -15],\\n        [-17,  48]]))",
    0.00077
  ]
}