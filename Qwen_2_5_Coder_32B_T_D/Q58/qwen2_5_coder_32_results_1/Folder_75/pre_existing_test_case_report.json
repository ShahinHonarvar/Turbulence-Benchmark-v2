{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00067
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  93,   29],\\n        [ -31,  -75],\\n        [  94,   65],\\n        [  -8,    3],\\n        [ -31,    1],\\n        [  66,    2],\\n        [ -54,   61],\\n        [ -80,   90],\\n        [  15,  -69],\\n        [-100,   32],\\n        [ -81,   33],\\n        [ -82,   -7],\\n        [ -57,    1],\\n        [  28,   91],\\n        [  79,  -54],\\n        [ -38,   -5],\\n        [  34,  -61],\\n        [  78,  -74],\\n        [ -48,    5],\\n        [  80,  -31],\\n        [  24,   19],\\n        [  87,  -96],\\n        [ -47,  -81],\\n        [ -15,  -63],\\n        [  50,  -62],\\n        [  25,   62],\\n        [  23,   61],\\n        [  39,   68],\\n        [  75,   86],\\n        [  29, -100],\\n        [ -58,   -5],\\n        [ -97,  -45],\\n        [  74,   60],\\n        [ -63,   38],\\n        [ -23,   37],\\n        [  66,  -70],\\n        [   9,  -37],\\n        [ -20,  -26],\\n        [ -19,   78],\\n        [ -47,  -35]]))",
    0.00078
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00035
  ]
}