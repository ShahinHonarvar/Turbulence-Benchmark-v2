{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 16, -61,  74, -20, -50, -52, -60,  90, -92,  90, -57,  34, -56,\\n         -31, -63,  45, -93,  40, -75,  56,  32,  81, -20,  28,  41,  17,\\n          93,  35,  70, -98, -41,  72,  66,  -3,  -8, -90,  -3,   4,  18,\\n          61, -75,  88, -24,  -8,  73, -58,  45, -23, -19,  63,  15, -50,\\n         -92,  14,  23,  23, -41, -51,  73,  50,  77, -37,  89, -78, -73,\\n          20,  78, -60, -94,  87,  58,  80, -67,  84,  39,  11, -24,  86,\\n          37,  83, -25, -91, -67,  -9,   5,  97,  70,  34, -16, -91, -48,\\n          36,  41, -80, -18, -96, -24, -95,  27, -85,  29,  60,  93, -95,\\n         -88, -11,  -1,  26, -74, -44,  -2,   8,   4, -24, -85,  33, -90,\\n         -19, -43,   7, -71,  61, -49, -39,  22,  84, -23,  65,  55,  43,\\n         -39, -85,  31,  23,  90,  25,  62, -31,  -5]]))",
    0.00096
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.0009
  ]
}