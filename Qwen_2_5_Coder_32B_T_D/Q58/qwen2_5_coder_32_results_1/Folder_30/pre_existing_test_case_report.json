{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.0005
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -77,  -82],\\n        [-100,   89],\\n        [  83,  -86],\\n        [ -15,    4],\\n        [  -2,  -56],\\n        [  11,   85],\\n        [  67,  -69],\\n        [ -42,   89],\\n        [ -18,   23],\\n        [ -10,  -48],\\n        [   0,  -26],\\n        [ -72,   75],\\n        [  72,   81],\\n        [ -49,   74],\\n        [ -16,    5],\\n        [ -11,   52],\\n        [  30,  -35],\\n        [ -74,   90],\\n        [  20,   67],\\n        [  67,  -59],\\n        [  63,   -4],\\n        [-100,   -2],\\n        [ -44,  -22],\\n        [ -11,   18],\\n        [  -4,  -21],\\n        [ -13,  -56],\\n        [ -87,   78],\\n        [ -98,  -11],\\n        [   1,   43],\\n        [  53,   -7],\\n        [ -26,   83],\\n        [   4,   85],\\n        [ -66, -100],\\n        [ -83,  -29],\\n        [ -30,  -44],\\n        [ -34,   32],\\n        [  21,  -26],\\n        [ 100,   20],\\n        [  99,    0],\\n        [  60,  -13],\\n        [ -16,  -91],\\n        [ -94,  -31],\\n        [ -21,   86],\\n        [ -67,   31],\\n        [ -81,   -2],\\n        [  45,  -13],\\n        [ -75,   44]]))",
    0.00176
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00074
  ]
}