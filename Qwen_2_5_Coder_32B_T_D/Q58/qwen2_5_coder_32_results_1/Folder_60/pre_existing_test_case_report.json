{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00044
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -23,   26],\\n        [ -80,  -48],\\n        [ -92,   61],\\n        [ 100,    1],\\n        [ -92,  -80],\\n        [ -72,   25],\\n        [ -92,  -76],\\n        [  93,   90],\\n        [  54,   72],\\n        [ -32,  -28],\\n        [  37,   76],\\n        [ -80,   -9],\\n        [  70,   59],\\n        [ -84,   45],\\n        [ -81,   57],\\n        [  86,   98],\\n        [ -67,  -36],\\n        [ -89,    6],\\n        [ -40,   55],\\n        [ -27,  -88],\\n        [   0,  -78],\\n        [ -49,   83],\\n        [  78,  -89],\\n        [  50,  -18],\\n        [  34,  -52],\\n        [  88,  -42],\\n        [ -49,  -14],\\n        [-100,   76],\\n        [  28,  -54],\\n        [  43,    7],\\n        [ -36,    9],\\n        [  11,  -28],\\n        [  42,   80],\\n        [ -26,  -45],\\n        [  45,  -13],\\n        [  39,   71],\\n        [  37,   45],\\n        [ -15,   89],\\n        [ -82,  -17],\\n        [  25,   -8],\\n        [  86, -100],\\n        [ -93,  -76],\\n        [ -15,  -36],\\n        [  70,  -94]]))",
    0.00064
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0008
  ]
}