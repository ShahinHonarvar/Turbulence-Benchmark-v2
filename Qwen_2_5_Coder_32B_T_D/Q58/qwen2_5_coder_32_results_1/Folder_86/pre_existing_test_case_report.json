{
  "parameter(s)": [
    138
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_138_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  45,  -92],\\n        [ -56,   26],\\n        [ -70,  -78],\\n        [  22,  -66],\\n        [  64,   82],\\n        [ -66,   39],\\n        [ -90,   54],\\n        [ -44,   29],\\n        [ -98,  -21],\\n        [ -59,  -37],\\n        [  85,   83],\\n        [ -84,   24],\\n        [  26,  -31],\\n        [  23,   91],\\n        [  12,   50],\\n        [  61,   51],\\n        [  25,  -89],\\n        [  33,   -5],\\n        [  -2,   55],\\n        [  51,   62],\\n        [  67,  -61],\\n        [  31,   54],\\n        [ -92,  -94],\\n        [ -77,  -74],\\n        [  36,  -46],\\n        [  63,   81],\\n        [  92,   22],\\n        [ -97, -100],\\n        [ -25,   28],\\n        [ -82,  -86],\\n        [ -26,  -89],\\n        [ -64,   54],\\n        [  96,   27],\\n        [ -36,   72],\\n        [ -35,  -64],\\n        [  71,  -81],\\n        [ -68,  -58],\\n        [ -58,  -20],\\n        [  42,  -17],\\n        [  65,  -96],\\n        [   4,   78],\\n        [  99,   61],\\n        [ -20,   -8],\\n        [   6,   80],\\n        [  60,  -28],\\n        [  13,   22],\\n        [  59,  -54],\\n        [ -16,   42],\\n        [  66,   38],\\n        [  74,  -54],\\n        [  66,   53],\\n        [  82,  -42],\\n        [  89,   16],\\n        [ -48,   18],\\n        [ -28,   28],\\n        [ -20,  -18],\\n        [  35,  -30],\\n        [ -88,   80],\\n        [ -89,   74],\\n        [  25,  -61],\\n        [ -80,  -94],\\n        [   9,  -17],\\n        [   8,   36],\\n        [ -37,   -1],\\n        [  23,  -44],\\n        [ -48,   67],\\n        [  57,  -71],\\n        [ -31,   75],\\n        [  -9,   56]]))",
    0.00189
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 277",
    0.00089
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 277",
    0.00033
  ]
}