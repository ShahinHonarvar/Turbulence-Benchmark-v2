{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00027
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -92,  -90],\\n        [ -40,  -84],\\n        [  42,  -60],\\n        [  85,   78],\\n        [  81,    7],\\n        [  82,   -8],\\n        [ -33,  -87],\\n        [  11,  -16],\\n        [ 100,  -23],\\n        [  18,   27],\\n        [  38,   56],\\n        [  14,  -63],\\n        [  95,   32],\\n        [ -94,  -52],\\n        [ -99,  -97],\\n        [ -74,  -39],\\n        [  47,  -57],\\n        [ -52,   58],\\n        [ -88,  -91],\\n        [ -37,   68],\\n        [ -56,   46],\\n        [  15,  -26],\\n        [-100,  -13],\\n        [   7,  -32],\\n        [ -84,   78],\\n        [ -15,  -17],\\n        [  68,   55],\\n        [  99,   15],\\n        [ -15,  -34],\\n        [-100,  -32],\\n        [ -70,  -96],\\n        [ -95,   92],\\n        [ -88,  -41],\\n        [ -14,  -96],\\n        [  35,   27],\\n        [ -99,  -81],\\n        [  14,   20],\\n        [ -81,  -34],\\n        [  22,  -76],\\n        [  -3,  -35],\\n        [  55,   57],\\n        [  75,    9]]))",
    0.00048
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00087
  ]
}