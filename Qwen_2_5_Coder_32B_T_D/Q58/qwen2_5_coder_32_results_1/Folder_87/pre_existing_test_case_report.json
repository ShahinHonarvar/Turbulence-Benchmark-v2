{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.0003
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  93,   50],\\n        [  94,   17],\\n        [ -88,   36],\\n        [ -14,   83],\\n        [  81,   28],\\n        [  43,   71],\\n        [  -1,   72],\\n        [  24,   85],\\n        [  17,   56],\\n        [  93,  -71],\\n        [ -10,   -9],\\n        [  42,  -90],\\n        [ -60,  -57],\\n        [  48,  -46],\\n        [ -91,  -33],\\n        [  25,  -26],\\n        [  49,   32],\\n        [  23,   26],\\n        [ -18,   63],\\n        [ -32,  -88],\\n        [ -94,   69],\\n        [  17,  -80],\\n        [  96,   78],\\n        [  95,   97],\\n        [  74,  -79],\\n        [ -64,   89],\\n        [ -41,  -85],\\n        [  39,  -25],\\n        [ 100,   18],\\n        [ -49,   28],\\n        [  69,    3],\\n        [  35,  -64],\\n        [  18,  -63],\\n        [  40,  -82],\\n        [  25,   52],\\n        [  53,   94],\\n        [   7,  -18],\\n        [  25,  -61],\\n        [ -64,  -55],\\n        [ -76,   72],\\n        [  35,  -40],\\n        [ -31,   25],\\n        [  20,  -44],\\n        [  52,  -57],\\n        [  18,   56],\\n        [  69,   17],\\n        [  18,   48],\\n        [-100,  -40]]))",
    0.00064
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00062
  ]
}