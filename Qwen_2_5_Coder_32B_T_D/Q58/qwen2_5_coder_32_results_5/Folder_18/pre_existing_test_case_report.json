{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-30,  21],\\n        [-25,  42],\\n        [-74,  65],\\n        [ 62,   9],\\n        [ 22, -13],\\n        [ 91,  78],\\n        [  1,  16],\\n        [ 93, -80],\\n        [-83,  17],\\n        [  9,  -4],\\n        [ 26,  63],\\n        [ 11, -10],\\n        [ 80,  94],\\n        [-43,  55],\\n        [-96,  75],\\n        [-95,  -6],\\n        [ 63, -66],\\n        [-55,  24],\\n        [-51,  10],\\n        [ 21, -28],\\n        [-95, -60],\\n        [ 39, -66],\\n        [-48, -68],\\n        [ 38, -89],\\n        [-74,  41],\\n        [  5,  61],\\n        [ 28, -19],\\n        [-91,  97],\\n        [ 13, -72],\\n        [ 67,  61],\\n        [-44,  -8],\\n        [ 63,  67],\\n        [ 84, -78],\\n        [-50,  63],\\n        [-48, -42],\\n        [ 38, -39],\\n        [-28, -16],\\n        [  1, -98],\\n        [-63,  94],\\n        [ 37, -20],\\n        [-19,  72],\\n        [-17, -93],\\n        [-93,  -3],\\n        [ -7, -88],\\n        [ -1,   8],\\n        [ 71, -88],\\n        [ -2,  -5],\\n        [-15,  53],\\n        [-52, -36],\\n        [  1, -16],\\n        [-44,  -6],\\n        [-42, -41]]))",
    0.00105
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00407
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.0003
  ]
}