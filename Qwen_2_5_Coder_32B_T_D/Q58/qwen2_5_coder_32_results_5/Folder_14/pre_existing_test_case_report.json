{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00036
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -73,   68],\\n        [ -48,   96],\\n        [ -48,    1],\\n        [  38,   47],\\n        [  79,  -20],\\n        [ -84,  -39],\\n        [  56,    0],\\n        [ -12,   -2],\\n        [ -11,  -40],\\n        [  72,  -17],\\n        [ -30,  100],\\n        [  -5,  -59],\\n        [ -74,   80],\\n        [   4,   88],\\n        [ -14,    2],\\n        [  55,    2],\\n        [ -12,   28],\\n        [  48,   45],\\n        [ -30,  -47],\\n        [ -29,   86],\\n        [  13,   18],\\n        [ -60,   66],\\n        [  33,  -95],\\n        [ -33,   79],\\n        [  16,  -37],\\n        [  78, -100],\\n        [  40,   52],\\n        [  -3,  -10],\\n        [ -81,   41],\\n        [-100,  -66],\\n        [ 100,  -20],\\n        [  36,   38],\\n        [  15,   20],\\n        [ -46,  -47],\\n        [ -71,  -52],\\n        [  60,  -91],\\n        [  54,  -67],\\n        [  37,   21],\\n        [  47,   64],\\n        [ -59,  -96],\\n        [ -22,  -71],\\n        [ -86,   57]]))",
    0.00062
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00071
  ]
}