{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00032
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 45, -51],\\n        [  5, -86],\\n        [ 49,  27],\\n        [ 84, -27],\\n        [-22, -80],\\n        [-81,  18],\\n        [ -4, -11],\\n        [ 78,  83],\\n        [ 85,  32],\\n        [-45,  50],\\n        [ 36,  62],\\n        [ -7,  39],\\n        [-56, -33],\\n        [ 67, -83],\\n        [ 46,  -9],\\n        [-94, -68],\\n        [-58, -38],\\n        [-40,  26],\\n        [ 34, -60],\\n        [-77,  21],\\n        [-23, -82],\\n        [-38,  35],\\n        [-38, -11],\\n        [-43,  94],\\n        [ 14, -24],\\n        [ 34,  68],\\n        [ 14, -78],\\n        [  3,  21],\\n        [-82, -17],\\n        [-93,  69],\\n        [-86,  87],\\n        [ 89, -75],\\n        [ 50,   4],\\n        [ 38,   3],\\n        [ 67,  25],\\n        [-17,   3],\\n        [ 70, -83],\\n        [  7,  13],\\n        [-32,  31],\\n        [-93, -36],\\n        [ 70,  41],\\n        [ 74,  36],\\n        [-54,  45],\\n        [-53,  78],\\n        [-16,  95],\\n        [-29,  79],\\n        [-49,  78]]))",
    0.00064
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00147
  ]
}