{
  "parameter(s)": [
    74
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 149",
    0.00039
  ],
  "test_matrix_of_having_74_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-17, -32],\\n        [-39,  20],\\n        [ 46,  93],\\n        [ 85, -49],\\n        [-63,  79],\\n        [-10, -28],\\n        [-13, -70],\\n        [-74,  59],\\n        [ 69, -59],\\n        [-48,  35],\\n        [-51,  42],\\n        [-83, -20],\\n        [ 59,  39],\\n        [ -9,  85],\\n        [ 66,  21],\\n        [ 57,  12],\\n        [-40, -55],\\n        [-62,   7],\\n        [-44,  56],\\n        [-75, -93],\\n        [ 21,   2],\\n        [  6,  24],\\n        [-69, -42],\\n        [-25, -71],\\n        [ 54, -15],\\n        [-60,  88],\\n        [ 71,  88],\\n        [-99, -23],\\n        [-88,  47],\\n        [-88, -14],\\n        [ 23, -83],\\n        [ -4, -93],\\n        [ 11,  60],\\n        [-75,  49],\\n        [-18,  19],\\n        [-47, -43],\\n        [ 86, -96]]))",
    0.00061
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 149",
    0.00064
  ]
}