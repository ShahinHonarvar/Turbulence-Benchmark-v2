{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00037
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -76,  -83],\\n        [  87,   96],\\n        [ -14,  -49],\\n        [  84,   95],\\n        [  33,   38],\\n        [ -88,   29],\\n        [  95,  -75],\\n        [ -50,  -35],\\n        [  15,   49],\\n        [ -90,  -65],\\n        [  35,  -65],\\n        [  89,  -91],\\n        [  15,   94],\\n        [ -92,  -85],\\n        [ -36,   29],\\n        [ -30,  -76],\\n        [ -73,  -17],\\n        [   7,   91],\\n        [ -81,  -37],\\n        [  39,  -86],\\n        [  60,   -5],\\n        [  20,   -5],\\n        [  11,   49],\\n        [  88,   53],\\n        [ -98,  -46],\\n        [ -15,  -75],\\n        [ -87,   62],\\n        [  26,  -61],\\n        [ -72,   93],\\n        [  73,  -15],\\n        [  91,   68],\\n        [  48,   48],\\n        [   8,  -35],\\n        [  40,    3],\\n        [ -82, -100],\\n        [ -88,  -35],\\n        [ -31,   98],\\n        [  77,  -27],\\n        [  87,  -34],\\n        [   3,  -66],\\n        [ -27,  -55],\\n        [  77,  -51],\\n        [  92,  -86],\\n        [ -60,   -3],\\n        [ -20,  -17]]))",
    0.00072
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00073
  ]
}