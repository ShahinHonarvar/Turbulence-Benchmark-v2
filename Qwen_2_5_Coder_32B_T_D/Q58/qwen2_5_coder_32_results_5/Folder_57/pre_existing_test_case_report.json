{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00034
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-40, -53],\\n        [ 97, -31],\\n        [-72, -59],\\n        [-30,  -1],\\n        [-99, -74],\\n        [  8, -19],\\n        [-80,  -4],\\n        [ 82,  54],\\n        [-23, -79],\\n        [-74,  51],\\n        [-28,  30],\\n        [-77, -20],\\n        [ 47,  70],\\n        [  6,  76],\\n        [ 24, -57],\\n        [-40, -11],\\n        [ 83,  13],\\n        [ 47,  58],\\n        [-31, -23],\\n        [ 33, -64],\\n        [ 85, -51],\\n        [-84,  -6],\\n        [ 15,   9],\\n        [-10,  53],\\n        [-39, -72],\\n        [-19, -54],\\n        [ 40,  41],\\n        [ 67, -31],\\n        [-56, -97],\\n        [ 67, -52],\\n        [-16,  64],\\n        [-33,  78],\\n        [ 64,   0],\\n        [ 78, -73],\\n        [ 33, -26],\\n        [ 91,  10],\\n        [-61, -65],\\n        [  0, -40],\\n        [ -3,  11],\\n        [-58,  54],\\n        [-38,  40],\\n        [-72,  99],\\n        [ -9, -26],\\n        [ 83,  26],\\n        [ 70,  28],\\n        [ 35,  11]]))",
    0.00094
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00102
  ]
}