{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00028
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 40, -76],\\n        [ 83, -25],\\n        [ 92,  94],\\n        [ 10, -34],\\n        [  3,  -5],\\n        [ 15, -23],\\n        [-59, -54],\\n        [-73,  84],\\n        [ 89,  -2],\\n        [-99,  75],\\n        [-48,  48],\\n        [ 50, -90],\\n        [-73,  92],\\n        [-44,  71],\\n        [ 30, -72],\\n        [-86,  29],\\n        [ 75, -79],\\n        [ 30,  62],\\n        [ 88, -38],\\n        [ 61, -24],\\n        [  4,   0],\\n        [-37,  55],\\n        [ 13,   4],\\n        [-22, -98],\\n        [-56,  94],\\n        [-35,  69],\\n        [ 82,  87],\\n        [-12,  99],\\n        [ -9, -34],\\n        [-63,  53],\\n        [ 73,   0],\\n        [-66,  32],\\n        [-60,  57],\\n        [-71,  14],\\n        [ 82, -84],\\n        [ 58, -27],\\n        [ 32,  -2],\\n        [-71, -11],\\n        [-81, -79],\\n        [ 68,  27],\\n        [-60,  16],\\n        [ 16, -61],\\n        [-64,  49],\\n        [ 74,  93],\\n        [-67, -78],\\n        [ 18,  29],\\n        [-20,  69],\\n        [-12,  38]]))",
    0.00088
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00057
  ]
}