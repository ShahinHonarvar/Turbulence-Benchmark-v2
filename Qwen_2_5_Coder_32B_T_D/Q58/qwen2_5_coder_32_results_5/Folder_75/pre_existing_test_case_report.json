{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00075
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-80, -69],\\n        [-69,  99],\\n        [-11,  19],\\n        [ 98,  45],\\n        [-34,  75],\\n        [ 10, -11],\\n        [-14,   6],\\n        [-45,  80],\\n        [-74,  54],\\n        [  0,  43],\\n        [-42, -75],\\n        [ -2,  47],\\n        [-49,  -1],\\n        [ 79,  12],\\n        [ 84, -77],\\n        [-71, -28],\\n        [ 55, -67],\\n        [  0,   6],\\n        [ 76, -50],\\n        [ -9, -56],\\n        [  7, -10],\\n        [-25, -80],\\n        [ 76,  95],\\n        [ 91,  96],\\n        [-32,  93],\\n        [ 47,  -2],\\n        [-70, -24],\\n        [ -1,  67],\\n        [ -6, -34],\\n        [-90, -57],\\n        [  4,  80],\\n        [  8, -31],\\n        [  5,  80],\\n        [-32,  40],\\n        [-16,  57],\\n        [ -2,  67],\\n        [ 87,  50],\\n        [-88, -78],\\n        [-32, -90],\\n        [ 50,  64]]))",
    0.00103
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.0004
  ]
}