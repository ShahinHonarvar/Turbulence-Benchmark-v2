{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00054
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.00487
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00047
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 59, -96,  91,  43, -96,  61,   8,  34,  95,  48, -28,  -2,  75,\\n          51,  10,  46,  86, -97, -23, -21,   1, -95,  53, -11,  29,  68,\\n          19,  -4,  33, -59, -40, -19,  36,  22, -84,  12,  33,  48,  76,\\n         -10,  14,  96,  65, -27, -41, -35,  61,  63,   8, -64, -20, -63,\\n          38,  70,  -5,  98, -82, -97,  50,  13, -67,  68,  55, -68,  91,\\n         -27,  56,  41, -81, -14, -82, -41, -31, -26,   6, -44, -21, -64,\\n          94, -50, -97,  36,  42, -59,  80, -60, -37,  87, -86,  62,  62,\\n           4, -37, -21, -64,  84, -15, -36,  57,  36,  60,  35, -35,  61,\\n         -51,  18, -71, -14, -74,  45,  -1, -68,  71, -87, -41,  17,  20,\\n          68, -56, -39, -24, -46,  27, -68,  49, -84, -80, -15, -16, -48,\\n         -73,  63,  75,  77,  22,  70,  46, -81,   2,  92, -94, -66, -86,\\n           9, -87,  19,  20,   6,  56, -10, -42,  51,  31,  95, -60, -86,\\n         -67,  18,  73, -95,  -3,  74, -97,  10,  47,  63,  -9, -70,  61,\\n          19, -39, -29, -19, -74, -92,   5, -74,  24,  55,   0,  41,  22,\\n          -2,  32,  65]]))",
    0.00075
  ]
}