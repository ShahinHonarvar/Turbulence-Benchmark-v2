{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 87, -21],\\n        [ 62, -60],\\n        [ 50,  53],\\n        [-50,  -9],\\n        [ -8, -42],\\n        [-27, -66],\\n        [ 98, -16],\\n        [ 58, -55],\\n        [  4,   3],\\n        [ -3,  48],\\n        [ 69,   2],\\n        [ 43,  18],\\n        [ 94, -32],\\n        [ 59,  77],\\n        [ 30, -53],\\n        [ 81,  90],\\n        [ -3, -10],\\n        [-73,  48],\\n        [-88, -90],\\n        [-64, -91],\\n        [-24,  78],\\n        [ 56,  39],\\n        [-62,  53],\\n        [ 76, -93],\\n        [-16, -82],\\n        [ 66, -18],\\n        [  8, -39],\\n        [-73,  35],\\n        [-47, -61],\\n        [ 78,  95],\\n        [-44,  41],\\n        [-21, -11],\\n        [ 35, -75],\\n        [ 25,   5],\\n        [-38, -43],\\n        [-29,  69],\\n        [ -3, -52],\\n        [-71, -25],\\n        [-82, -43],\\n        [ 21,  78],\\n        [-39,   5],\\n        [-51, -20],\\n        [-67,  33],\\n        [ 53,  18]]))",
    0.00149
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00051
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00403
  ]
}