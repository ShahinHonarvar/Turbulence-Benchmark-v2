{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 84,  82],\\n        [-76, -67],\\n        [ 40,  -3],\\n        [ 36,  81],\\n        [ -7, -16],\\n        [ 13,  98],\\n        [-70, -12],\\n        [-90, -63],\\n        [-74,  -7],\\n        [ -1,   9],\\n        [ -6, -67],\\n        [ 32,  31],\\n        [-22,  77],\\n        [ 79,  26],\\n        [-15, 100],\\n        [-53,  -7],\\n        [-98,  91],\\n        [ 24,  11],\\n        [  2,  16],\\n        [-67,  41],\\n        [ 24, -70],\\n        [ 19,  90],\\n        [ 77,  97],\\n        [ 82, -30],\\n        [-89,  13],\\n        [-70,  78],\\n        [  2,  28],\\n        [-50,   5],\\n        [ 26,  21],\\n        [ 74,  21],\\n        [-65,  50],\\n        [-62, -15],\\n        [-68, -83],\\n        [-78, -73],\\n        [  7, -33],\\n        [ 91,  89],\\n        [-86, -92],\\n        [ 32,  49],\\n        [ 87,  19],\\n        [ 43, -47],\\n        [-58, -58],\\n        [ 10, -35],\\n        [ 96,  98],\\n        [ -7, -59],\\n        [-83,  75],\\n        [ 68, -87],\\n        [-13,  -5]]))",
    0.00066
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00143
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00079
  ]
}