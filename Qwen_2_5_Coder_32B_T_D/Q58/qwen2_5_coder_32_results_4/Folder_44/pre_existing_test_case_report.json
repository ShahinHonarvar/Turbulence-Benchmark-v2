{
  "parameter(s)": [
    191
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 383",
    0.00046
  ],
  "test_matrix_of_having_191_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-35, -89, -58, -43,  95, -93,  99,  52,  -6,  61, -71, -27,  34,\\n         -10,  23, -60,  65,   9,   7, -69,  33,  21,  45, -73,  76,  12,\\n          81,  15,  40, -12,  87,  46, -26, -68, -28, -63,  61, -81,  34,\\n         -66,  17, -49,  65,  29,  47, -21, -64,   4,  71,  -2, -19, -43,\\n         -30,  -7,  94,  70,  64,  45, -92, -85,  73, -18, -32, -36, -55,\\n         -13, -37,  98, -26,  75,  99,  10,  32,  85,  37,   8,  30, -62,\\n          17,  60, -17, -32, -96, -50,  55,  86,  69,  51,  65, -68, -29,\\n          69,  -4,  62,  65,  44,  74, -68, 100,  -5, -15,  74,  88, -84,\\n          14, -89, -14, -41, -67,  53,  34,  95, -55,  52,  53,  55,  29,\\n         -72, -56, -80, -88, -12, -79,  82,  88,   0, -60,  -3,  14, -46,\\n          52,  89,  91, -71,  34, -46,  12,  99,  -1,  29, -35, -90,  12,\\n           5,  19, -88,  37, -25,  95, -30,  -7, -22, -19,  95, -30,  65,\\n         -13,  98, -55, -71, -47, -98,  72, 100,  37,  59,  -6,   1,  40,\\n          34, -91,  75,  62, -45,  54,  40,  63,  84,   0, -91, -84,  -4,\\n          96, -30,  11, -70, -84, -79, -92,  33, -72]]))",
    0.00074
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 383",
    0.00114
  ]
}