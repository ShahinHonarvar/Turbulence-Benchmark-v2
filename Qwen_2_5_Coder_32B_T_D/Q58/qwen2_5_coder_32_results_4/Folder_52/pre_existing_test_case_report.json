{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-56,  55, -95,  89,  48, -30,  11, -28, -59,  47, -38,  56,  66,\\n          62, -94,  93, -47, -88, -15,   1, -20,  65,  92,  58,  18,  40,\\n         -94,  97,  35,  81,  63,  49, -35,  58, -27, -53,  95,  49,  95,\\n          10, -76,  65, -59,  56,  -1, -62,  86,  46, -60, -45, -59,   7,\\n          99, -55, -86,   4,   4,  57, -52,  85,  82, -10,   4, -68,  27,\\n         -47, -38,  47,  45, -13,  88,  -6, -18,  33, -30,  92, -28,  30,\\n          79, -54,  65,  11,  31, -71, -32, -57,  -6,  12,  65,  21,  71,\\n          47,  45, -59,  67,  92, -32, -74,  -6, -74, -61, -26, -58, -32,\\n         -65,  34, -90,   3, -98, -61,  70, -36,  39,  11,  35, -97, -89,\\n         -87,  82,  89, -76,  80, -17,  77,  37, -21, -82, -86,  10, -43,\\n         -36,  78,  34, -42, -33,  52,  30, -88,  88, -83,  61, -31, -47,\\n          -6,  64,   4,  44]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.0009
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00033
  ]
}