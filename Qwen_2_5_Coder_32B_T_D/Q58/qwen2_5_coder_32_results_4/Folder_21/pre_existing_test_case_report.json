{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -77,   92,   65,  -91,  -48,  -59,  -71,  -27,  -77,   65,\\n          -54,   40,  -87,   49,   75,   56,   70,  -23,  -17,  -10,\\n          -62,   65,   37,  -23,   18,   37,    9,    8,   57,   46,\\n           95,  -58,  -16,  -86,  -35,    0,   24,   39,   19,   29,\\n           16,  -48,  -61,   74,  -47,   25,   39,  -19,   98,  -32,\\n         -100,  -99,   73,  -41,  -80,  -40,   -9,   46,    1,  -16,\\n          -98,   71,  -25,   49,  -12,  -41,    7,  -80,  -85,   90,\\n           83,   88,   77,    9,  -12,  -16,   17,   38,   20,    9,\\n            8,    4,  -20,  -48,   49,  -36,  -63,   65,   37,   98,\\n           38,   60,  -32,  -58,   84,    1,   64,   -6,    5,   58,\\n          -72,  -36,   44,   53,  -74,   54,   86,   37,  -47,   54,\\n           20,   85,  -79,   94,   -6,  -98,  -62,  -38,  -85,  -29,\\n           67,   55,  -31,   64,   25,  -54,    0,  -96,   65,  -95,\\n          -99,  -13,  -42,   89,  -16,   66,  -89,  -29,  -85]]))",
    0.00118
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00035
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00088
  ]
}