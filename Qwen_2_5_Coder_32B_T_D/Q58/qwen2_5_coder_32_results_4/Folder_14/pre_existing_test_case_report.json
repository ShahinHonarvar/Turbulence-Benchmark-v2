{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.0004
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   0,   53],\\n        [ -82,   18],\\n        [ -71,  -25],\\n        [ -62,   60],\\n        [  77,   52],\\n        [  84,  -81],\\n        [ -10,  -90],\\n        [  22,   48],\\n        [   5,   45],\\n        [ -14,  -29],\\n        [ -28,   97],\\n        [  92,   -7],\\n        [  85,  -22],\\n        [  34,  -38],\\n        [ -86,  -67],\\n        [  93,  -96],\\n        [  93,   33],\\n        [ -88,   69],\\n        [ -32, -100],\\n        [  13,  -37],\\n        [  34,   13],\\n        [  -8,  -83],\\n        [  89,  -71],\\n        [ -54,  -14],\\n        [ -88,   74],\\n        [ -27,  -58],\\n        [  74,   13],\\n        [ 100,  -36],\\n        [ -39,  -61],\\n        [ -88,   79],\\n        [ -54,  -64],\\n        [  13,   59],\\n        [  92,   32],\\n        [ -31,   97],\\n        [ -88,   37],\\n        [ -89,   41],\\n        [  65,  -60],\\n        [ -92,  -52],\\n        [ -17,    8],\\n        [  -9,   39],\\n        [  77,   -9],\\n        [ -76,  -63]]))",
    0.00063
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.00076
  ]
}