{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00051
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -16,   73],\\n        [ -30,   26],\\n        [  50,   25],\\n        [  29,    1],\\n        [ -34,   62],\\n        [  62,  -42],\\n        [ -73,   43],\\n        [ -72,  -45],\\n        [  73,  -86],\\n        [  27,   44],\\n        [ -59,   23],\\n        [   1,  -31],\\n        [  22,   73],\\n        [  71,  -23],\\n        [ -44,   53],\\n        [  58,   12],\\n        [ -78,  -83],\\n        [  16,  -75],\\n        [   8,    4],\\n        [   8,  -10],\\n        [  65,  -48],\\n        [  44,   92],\\n        [ -20,   66],\\n        [ -85,   52],\\n        [   6,  -50],\\n        [  72,   69],\\n        [-100,  -37],\\n        [  11,  -28],\\n        [   6,   93],\\n        [  89,   54],\\n        [  47,  -21],\\n        [  19,  -75],\\n        [  22,  -87],\\n        [  38,  -89],\\n        [ -43,  -18],\\n        [  69,  -19],\\n        [ -63,   30],\\n        [   5,  -94],\\n        [  42,  -23],\\n        [ -64,   44],\\n        [  60,   88],\\n        [ -63,   49],\\n        [  16,   99],\\n        [ -91,  -88],\\n        [   0,  -57],\\n        [ -41,  -24],\\n        [  57,   40],\\n        [  13,  -66],\\n        [ -90,  -12],\\n        [ -85,   60],\\n        [   0,   87],\\n        [ -50,   49]]))",
    0.0027
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00032
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00081
  ]
}