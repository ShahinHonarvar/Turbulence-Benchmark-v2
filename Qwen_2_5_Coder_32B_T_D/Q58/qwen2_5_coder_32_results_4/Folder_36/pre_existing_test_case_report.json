{
  "parameter(s)": [
    131
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 263",
    0.00035
  ],
  "test_matrix_of_having_131_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 74,  48, -17,  59,  50,  22, -46,  78, -57,  96,  12,  86, -30,\\n          66,  49, -92,   2,  10,  47,  27,   4, -83, -33, -38, -96, -87,\\n          45,  41,  41,  59,   2, -86,  50, -97,   6,  55, -43,  40, -93,\\n          41,   3,   2, -41,  69,   6,  68,  -6,   7, -49,  43, -57, -18,\\n         -24,  89,  99,  -2, -96,  10,  74,  53,  34, -60, -53,  58, -15,\\n          96, -50,  -4,  88, -81,  41,  49,  38,  92, -64,  98,  95,  78,\\n          68, -61,  85,  89, -75, -28,  26,  46,  47,  12,  61,  33,  96,\\n         -38, -83, -44, -97, -72,  78,  39,  52,  10, -71, -18, -97, -80,\\n         -53, -78,   1,  60, -26,  26, -60, -26,  42, -96,  85,  91,  82,\\n          -9,  59, -21,  81, -28, 100, -18,  85, -15, -21,  28,   7, -83,\\n          88]]))",
    0.00085
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 263",
    0.00549
  ]
}