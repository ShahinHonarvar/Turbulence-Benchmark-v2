{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00028
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 78,  92],\\n        [ 35, -64],\\n        [ 90,  72],\\n        [-76, -14],\\n        [ -2,  23],\\n        [ 10, -74],\\n        [ 81,  40],\\n        [ -1,  85],\\n        [ 87, -39],\\n        [ 70, -52],\\n        [-75,  96],\\n        [ 94,  57],\\n        [ 38,  43],\\n        [ 85,  94],\\n        [-56,  22],\\n        [-25, -25],\\n        [ 54,  -9],\\n        [-43, -78],\\n        [-30, -91],\\n        [  8,  69],\\n        [ 27, -22],\\n        [-74, -69],\\n        [  6,  34],\\n        [ 10,  52],\\n        [-81, -30],\\n        [-85, -59],\\n        [-23, -53],\\n        [ 98,  -1],\\n        [ 53,   2],\\n        [-70,  70],\\n        [ 30, -38],\\n        [-94,  75],\\n        [ 68, -56],\\n        [ 40, -27],\\n        [ 99, -81],\\n        [-81,  69],\\n        [-16,  51],\\n        [-79,  -3],\\n        [ 36,  97],\\n        [ 61,  39],\\n        [ 68,  14],\\n        [ 92,  62],\\n        [ 12,  44],\\n        [-56,  23],\\n        [ 39,  52],\\n        [-16,  11]]))",
    0.00052
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00057
  ]
}