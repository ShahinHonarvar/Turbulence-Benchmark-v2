{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.0004
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-30, -34],\\n        [-70, -42],\\n        [  6,  22],\\n        [  4,  80],\\n        [  8,  32],\\n        [-49, -94],\\n        [ 69,  33],\\n        [-96,  32],\\n        [  9,   4],\\n        [-76, -80],\\n        [ 49, -57],\\n        [ 98,  79],\\n        [ 74, -97],\\n        [ 96,  50],\\n        [-75,  92],\\n        [-66, -88],\\n        [ 59,  15],\\n        [-72,   9],\\n        [-62,  20],\\n        [-42,  -6],\\n        [ 53, -90],\\n        [-36,  28],\\n        [-14, -43],\\n        [-34,  34],\\n        [-26, -36],\\n        [ 84, -11],\\n        [ 43, -21],\\n        [  4, -73],\\n        [-81,  33],\\n        [ 34,  -4],\\n        [-78, -47],\\n        [-53, -31],\\n        [-88,  78],\\n        [ -6,   9],\\n        [-51,  98],\\n        [ 51, -30],\\n        [ 78,  -5],\\n        [ 78, -81],\\n        [  5, -31],\\n        [-66,  24]]))",
    0.00059
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00065
  ]
}