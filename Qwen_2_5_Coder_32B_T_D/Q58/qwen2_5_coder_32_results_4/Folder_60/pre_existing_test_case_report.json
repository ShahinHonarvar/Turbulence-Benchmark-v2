{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00349
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -26],\\n        [ -76,  -18],\\n        [ -20,  -56],\\n        [  63,  -32],\\n        [ -53,   71],\\n        [ -84,  -52],\\n        [ -29,  -30],\\n        [  66,   -1],\\n        [ -52,   60],\\n        [  18,   11],\\n        [  -2,  -34],\\n        [  64,   64],\\n        [ -31,   -5],\\n        [ -76,  -45],\\n        [  44,   60],\\n        [ -88,  -79],\\n        [  79,  -72],\\n        [  75,    2],\\n        [  12,  -80],\\n        [ -48,   24],\\n        [ -18, -100],\\n        [  11,    6],\\n        [  51,   61],\\n        [  72,   69],\\n        [  -2,   94],\\n        [ -20,   88],\\n        [  16,   90],\\n        [ -74,  -61],\\n        [  33,  -41],\\n        [  90,  -64],\\n        [  52,   20],\\n        [ -38,   21],\\n        [  50,  -63],\\n        [  94,  -19],\\n        [ -65,  -31],\\n        [ -44,   16],\\n        [  36,  -78],\\n        [  -2,   85],\\n        [  55,   -6],\\n        [ -70,   11],\\n        [   4,   13],\\n        [ -47,  -47],\\n        [ -81,  -31],\\n        [ -43,  -10]]))",
    0.00069
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00129
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.00072
  ]
}