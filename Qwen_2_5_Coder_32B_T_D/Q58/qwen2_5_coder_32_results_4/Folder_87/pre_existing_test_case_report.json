{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  5,   0],\\n        [ 91,  36],\\n        [ 14,  62],\\n        [-28,  78],\\n        [-18,  26],\\n        [-87, -22],\\n        [ 79,   1],\\n        [-36, -61],\\n        [ 47,   6],\\n        [ 63,  77],\\n        [ 81, -59],\\n        [-40, -65],\\n        [ 13, -27],\\n        [-41, -89],\\n        [-24, -30],\\n        [-79, -75],\\n        [ 33,  82],\\n        [-27,  29],\\n        [ 59, -72],\\n        [ 73,  30],\\n        [-50,   6],\\n        [-17, -90],\\n        [ 32, -49],\\n        [-61, -13],\\n        [ 22,  96],\\n        [-53,  86],\\n        [ 52,  12],\\n        [ 78,  46],\\n        [ 38,  57],\\n        [-76,  67],\\n        [ 62, -60],\\n        [ 47, 100],\\n        [  7,  57],\\n        [-97,  90],\\n        [ 78, -40],\\n        [-70, -92],\\n        [-77, -35],\\n        [-41,  43],\\n        [-60, -97],\\n        [-47, 100],\\n        [-59,  -2],\\n        [-65,  44],\\n        [-94, -84],\\n        [ 53,  77],\\n        [-35,  35],\\n        [ -2, -62],\\n        [-46, -27],\\n        [ 23,  69]]))",
    0.00073
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00031
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00085
  ]
}