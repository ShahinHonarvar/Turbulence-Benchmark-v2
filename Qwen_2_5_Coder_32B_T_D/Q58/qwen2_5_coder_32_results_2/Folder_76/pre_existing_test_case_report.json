{
  "parameter(s)": [
    159
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00105
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 10,  58, -41,  55, -10,  43,  64,  52, -27, -62,  57, -68, -62,\\n          62, -35, -63, -23, -18,  67,  90,  26, -56,  88,  25,   5,  18,\\n          84,  74, -88,  91,  58,   5, -76, -92,  87,  30, -51, -10,  76,\\n          38,  37, -73, -88,  51,  11,  60, -32,  31, -11, -12, -67,  99,\\n          80,  18, -81, -81, -32,  75,   4, -99,  57,  97,  21,  49,  44,\\n           4, -99,   8, -29,   0,  99, -21, -57,  60, -77, -98, -73,  24,\\n          18,  58, -15, -38,  98, -22,  51, -77,  76, -25,  75, -99, -90,\\n          94,  27, -40, -97,  10, -36, -72, -73,  -9,  57, -85, -32,  -4,\\n         -38,  28, -32,  37,  77,  93,  47, -83, -10,  49, -60,  85,  46,\\n         -98,  20,  52,   7,  96, -37, -86,  33,  -3,  20,  92,  47, -54,\\n         -24,  26,  12, -40, -62,  23, -11, -71, -36, -87, -28,  78, -47,\\n         -50, -32,  52, -74,  68,  -2, -98,  49,  29,  67, -34, -80,  22,\\n          -9, -59,  45]]))",
    0.0007
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[159]]))",
    0.00033
  ]
}