{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00037
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 67, -97],\\n        [ 41, -53],\\n        [-15,  39],\\n        [ 69, -36],\\n        [-40, -63],\\n        [ 14,  60],\\n        [ 63,  87],\\n        [ 22,  16],\\n        [ 92, -62],\\n        [ 51,  90],\\n        [-53,  78],\\n        [ -5,  62],\\n        [ 61,  21],\\n        [-40,  70],\\n        [-14,  68],\\n        [ 48,  84],\\n        [-97, -93],\\n        [ 37,  55],\\n        [ 33, -18],\\n        [-64,  46],\\n        [ -7, -51],\\n        [-81, -62],\\n        [-30,  73],\\n        [ 55, -10],\\n        [  2,   6],\\n        [ 99,  51],\\n        [ 64,  78],\\n        [-30,  34],\\n        [ 37,  96],\\n        [-10, -15],\\n        [-38,  83],\\n        [-23, -40],\\n        [ 47,  81],\\n        [ 62, -91],\\n        [ 15,  19],\\n        [ 41, -33],\\n        [ 67,  10],\\n        [-48,  13],\\n        [ 84, -25],\\n        [ 61,  -5],\\n        [-54,  32],\\n        [ 98, -42],\\n        [ -7,  66],\\n        [ 74,  42],\\n        [-91, -86],\\n        [  9,  64],\\n        [ 46, -74]]))",
    0.00083
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00077
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00042
  ]
}