{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00048
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-21,  31, -98, -40,  54,   2,  46, -16, -32,  45,  41,  -5, -46,\\n          22,  70,  59,  22, -71,  97,  28, -76, -19,   8,  36,  90,  34,\\n         -86, -39, -37, -96,  15,  24,  86, -69, -19, -23, -33,  33, -36,\\n         -44, -56, -85, -22,  65,   1,  41,  57,   3,  92,  15,   6, -83,\\n         -65, -34, -83, -86, -15,  75, -93,  21,  -7, -97, -40, -56, -72,\\n          84, -19, -59, -70, -52,  -2,  56, -60, -30,  78,  24,   2,  81,\\n          53,  54, -40, -34,  32,  83, -33,  64,  16,  24,  35,  46,  85,\\n          88, -10,  32,  39,  90, -76, -99, -47, -19,  20,  33,  88, -33,\\n         -54,  43, -23,  22, -87,  79, 100, -29,  61,  39, -53,  40,  18,\\n         -81,  93,  49, -36, -85, -12,  28,  68, -94, -59,  84, -42,   4,\\n           8, -64, -30,  64, -86,  98,  15,   1, -86,  64, -31, -94, -18,\\n          21,  59, -13, -75, -98, -54, -78,   3, -94, 100,  98,  75, -12,\\n          80, -15,  68,  13, -78,  58, -72, -23, -30, -98,  63, -69,  58,\\n          20,  74, -79,  45,  33, -44]]))",
    0.00072
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00186
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 351",
    0.00319
  ]
}