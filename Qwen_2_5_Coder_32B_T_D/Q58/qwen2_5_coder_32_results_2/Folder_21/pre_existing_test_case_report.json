{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00251
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00038
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.00486
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  48,   10,   70,   93,   47,   84,   99,   71,   79,   97,\\n           90,  -11,   14,  -28,   -9,   56,    0,   71,  -65,  -57,\\n           21,   87,  -55,   19, -100,   73,   76,  -24,  -57,   42,\\n          -64,   84,  -66,  -33,   91,   38,  -60,   50,  -45,  -63,\\n          -28,  -92,    5,   96,  -91,   48,   35,   82,  -43,   33,\\n           63,   56,   83,   39,   12,  -68,   65,  -65,  -46,   58,\\n          -52,  -98,  -18,  -52,  -77,   92,  -98,   58,  -40,   58,\\n          -58,   53,  -87,  -39,   98,  -78,    5,   37,  -42,   60,\\n           36,   11,    2,  -88,   69,  -16,  -40,  -59,   69,  -29,\\n          -55,   90,  -22,  -13,  -96,  -39,  -99,   16,   24,   45,\\n          -22,   64,   26,  -69,   79,  -50,   -1,  -54,   35,  -56,\\n           29,  -97,   76,   82,   32,  -56,  -35,  -61,  -46,  -56,\\n           24,  -91,    2,   75,   -4,  -45,   29,  -16,   31,  -57,\\n          -80,   -4,  -85,   -4,  -11,   21,  -21,   96,   28]]))",
    0.00078
  ]
}