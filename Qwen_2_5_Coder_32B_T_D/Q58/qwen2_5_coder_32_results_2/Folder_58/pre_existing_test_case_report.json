{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00182
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 19,  26,  64,  23,  56, -75, -25,   9,  81, -81,  92, -22,  98,\\n           3,  49,  -4,  77,  50, -76,  -7, -63, -64,  -7, -65,  30, -40,\\n          72, -95,   8,  -7,  69, -42,  86, -85, -91, -53, -71,  45, -58,\\n         -12, -43,  52,  26, -26, -63,  -7, -34,  95,  92, -79,  18, 100,\\n         -62, -52, -44,  95, -47,  22,  14, -64,  43, -48, -84, -61, -66,\\n         -26, -31, -32, -61,  46, -68,  47,  89,  99,  94,  34, -31, -77,\\n         -40,  99, -70,  47,  -6,   4,  30,  76,  43,  -1, -31,  48, -22,\\n          69, -30,  86, -85, -98,  23,  45,  10, -17,   9, -55,  96,  42,\\n          63, -16,  72, -18, -58, 100, -58, -98,  11, -61, -12,  47,  -9,\\n          97, -28, -94, -60,  44,  23, -46, -94,  58,  52, -50, -92,   0,\\n          68,  77, -91,  19,   3,  38,  -5, -16,  15, -91,  41, -21, -59,\\n         -59,  18,  68,  47, -12,  48,   4,  48, -65,  43,   0, -75,  82,\\n         -72,  32, -62, -19,  86, -51, -82, -38,  89, -48,  74, -96,  -8,\\n         -77,  91,  12, -33,  77, -23,  39,  71, -16,  42,  72,  78,  44,\\n          88,  24, -89]]))",
    0.00464
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00043
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.00108
  ]
}