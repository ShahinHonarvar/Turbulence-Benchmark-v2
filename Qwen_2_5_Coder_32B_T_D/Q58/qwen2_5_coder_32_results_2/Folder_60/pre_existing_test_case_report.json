{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00086
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  0,  90],\\n        [ 92, -41],\\n        [ 31,   2],\\n        [ 64, -31],\\n        [ 55, -42],\\n        [ 81, 100],\\n        [ 96,  34],\\n        [-14, -46],\\n        [ 90,  21],\\n        [-76, -59],\\n        [ 11, -89],\\n        [ 34, -50],\\n        [ 84,  24],\\n        [-84, -53],\\n        [-10,  26],\\n        [ 98,  77],\\n        [100,  96],\\n        [ 18,  55],\\n        [-17, -84],\\n        [ 32,   9],\\n        [ 76,  21],\\n        [-27,  -3],\\n        [ 72, -93],\\n        [  6, -67],\\n        [-22,  44],\\n        [-11, -93],\\n        [-70, -86],\\n        [ -5,  63],\\n        [-51, -67],\\n        [-86,  58],\\n        [ -3,  -8],\\n        [  6, -81],\\n        [-29,  88],\\n        [ 21, -14],\\n        [-42,  49],\\n        [ 13,  62],\\n        [-42,  36],\\n        [ 65, -59],\\n        [ 23, -22],\\n        [ 70,  95],\\n        [-45,  79],\\n        [ 47,  14],\\n        [-14,  56],\\n        [ 88, -42]]))",
    0.00084
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00035
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0011
  ]
}