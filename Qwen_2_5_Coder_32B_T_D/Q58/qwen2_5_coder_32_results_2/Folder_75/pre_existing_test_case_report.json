{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00031
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   7,   58],\\n        [ -88,  -56],\\n        [  26,  -93],\\n        [  18,    6],\\n        [ -86,  -23],\\n        [ -89,  -35],\\n        [  62,  -92],\\n        [  56,   83],\\n        [  49, -100],\\n        [ -45,   34],\\n        [  58,  -12],\\n        [  15,   35],\\n        [  41,  -50],\\n        [ -73,  -10],\\n        [  72,  -68],\\n        [ -22,   75],\\n        [ -66,  -42],\\n        [   2,   85],\\n        [ -30,  -15],\\n        [  93,  -39],\\n        [ -64,  -61],\\n        [  84,  -37],\\n        [ -90,  -99],\\n        [  48,  -23],\\n        [ -29,   58],\\n        [  93,  -24],\\n        [  61,  -92],\\n        [ -98,   83],\\n        [ -93,   95],\\n        [  63,  -30],\\n        [ -59,   81],\\n        [  61,   56],\\n        [  84,   66],\\n        [  13,   37],\\n        [  61,   85],\\n        [  50,  -37],\\n        [ -66,   55],\\n        [ -24,    7],\\n        [ -24,  -32],\\n        [ -68,   47]]))",
    0.00061
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00066
  ]
}