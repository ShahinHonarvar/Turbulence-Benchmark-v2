{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.00029
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   7,   29],\\n        [ -21,  -19],\\n        [  15,  -97],\\n        [  20,  -21],\\n        [ -32,  -49],\\n        [   0,  -68],\\n        [   4,  -44],\\n        [  49,   39],\\n        [ -19,  -49],\\n        [  49,    0],\\n        [ -90,   74],\\n        [   5,   45],\\n        [  81,   83],\\n        [ -63,   86],\\n        [ -66,  -39],\\n        [  31,   86],\\n        [  25,   62],\\n        [ -39,   63],\\n        [  17,   33],\\n        [ -51,   36],\\n        [  -8,   51],\\n        [  10,  -65],\\n        [ -20,  -97],\\n        [ -98,  -26],\\n        [ -49,  -31],\\n        [   6,  -28],\\n        [ -68,   39],\\n        [ -96,   40],\\n        [  -1,   85],\\n        [  67,  -42],\\n        [  87,  -95],\\n        [   3,  -26],\\n        [ -84,   20],\\n        [  89,  -37],\\n        [-100,  -45],\\n        [ -31,  -51],\\n        [  54,  100],\\n        [  89,   93],\\n        [ -52,    7],\\n        [  45,  -13],\\n        [ -84,   -2],\\n        [  20,   14],\\n        [  -5,  -79],\\n        [  18,   94],\\n        [ -18,   45]]))",
    0.00246
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00077
  ]
}