{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00085
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -92,  -50],\\n        [  63,  -26],\\n        [  25,   28],\\n        [  88,  -89],\\n        [ -31,   73],\\n        [  86,  100],\\n        [  -6,  -87],\\n        [  28,   80],\\n        [ -35,  -55],\\n        [  42,  -90],\\n        [ -69,   31],\\n        [  66,   65],\\n        [  23,  -61],\\n        [  66,  -25],\\n        [ -57,  -21],\\n        [ -90,   64],\\n        [ -34,   93],\\n        [  59,   46],\\n        [  54,  -38],\\n        [ -31,  -80],\\n        [  -4,  -25],\\n        [  77,  -58],\\n        [ -65,   96],\\n        [  -7,  -83],\\n        [ -11,  -22],\\n        [  25,   84],\\n        [  99,  -24],\\n        [  23, -100],\\n        [  54,   48],\\n        [ -42,  -62],\\n        [ -80,   40],\\n        [ -52,  -81],\\n        [  40,   87],\\n        [  86,   15],\\n        [ -40,   46],\\n        [ -31,  -36],\\n        [  93,   55],\\n        [ -73,  -94],\\n        [  66,  -30],\\n        [ -77,   72],\\n        [   2,  -34],\\n        [   4,   25],\\n        [ -59,   89],\\n        [ -44,   81],\\n        [ -32,   28],\\n        [ -81,   73],\\n        [  15,  -18],\\n        [ -37,  -74]]))",
    0.00068
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00075
  ]
}