{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -1,  67],\\n        [  3,  61],\\n        [ 65,  20],\\n        [-12,  95],\\n        [-67,  83],\\n        [ 79, -48],\\n        [-21,  44],\\n        [ 80, -74],\\n        [-93, -22],\\n        [ 94, -44],\\n        [-15,  52],\\n        [-88, -10],\\n        [-64,  83],\\n        [  0,  -3],\\n        [-34, -21],\\n        [ 47, -46],\\n        [-16, -49],\\n        [ 55,  17],\\n        [-21, -99],\\n        [  2, -99],\\n        [  0, -55],\\n        [ 62,  86],\\n        [-14, -99],\\n        [100,  32],\\n        [ 71, -70],\\n        [ 96, -73],\\n        [ 95, -73],\\n        [-43, -12],\\n        [-54, -17],\\n        [ -1, -86],\\n        [ 80,  26],\\n        [ 82, -59],\\n        [ 39,   9],\\n        [ 68,  37],\\n        [-73, -38],\\n        [-39,   2],\\n        [ 85,  64],\\n        [ 60, -13],\\n        [-85,  99],\\n        [-40,  95],\\n        [ 63, -76],\\n        [  5,  92]]))",
    0.00091
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00052
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.0046
  ]
}