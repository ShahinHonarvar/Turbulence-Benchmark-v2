{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00047
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.00121
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 95, -78],\\n        [-80, -16],\\n        [  9,  22],\\n        [-11,  35],\\n        [ 15,  90],\\n        [ 32,  28],\\n        [ 60, -68],\\n        [-11, -87],\\n        [ 21,  35],\\n        [ 98,  -9],\\n        [-71, -16],\\n        [-21,   9],\\n        [-20,  21],\\n        [ 30,  75],\\n        [ 40,  76],\\n        [ 43, -85],\\n        [-37, -61],\\n        [ 82, -47],\\n        [  5, -94],\\n        [ 23,  -4],\\n        [ 16,  -3],\\n        [-25,  62],\\n        [ 82,  86],\\n        [-42, -57],\\n        [ 53,  56],\\n        [-71,  62],\\n        [-28,  -3],\\n        [ -3,  91],\\n        [-77, -87],\\n        [ 90,  -5],\\n        [ 16,  23],\\n        [-52, -41],\\n        [ 93, -40],\\n        [ 43,  95],\\n        [-88, -86],\\n        [ 65,  62],\\n        [ 29,  70],\\n        [-51, -22],\\n        [ 67,  87],\\n        [-68, -30],\\n        [ 80, -56],\\n        [-89,  78],\\n        [ 80,  43],\\n        [-73, -63],\\n        [100, -16],\\n        [-18, -45],\\n        [-49,  98],\\n        [-47,  67],\\n        [-91,  41],\\n        [-15,  -7],\\n        [-37, -29],\\n        [ -5, -54]]))",
    0.00068
  ]
}