{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00064
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-69, -58],\\n        [ 77, -68],\\n        [-90,  90],\\n        [-20, -11],\\n        [-12, -71],\\n        [ -1,  11],\\n        [-11,  88],\\n        [ 94, -80],\\n        [-37, -71],\\n        [ 22, -25],\\n        [-77,  24],\\n        [-88, -59],\\n        [ 69, -73],\\n        [ 78, -62],\\n        [ 84,  16],\\n        [ 36, -15],\\n        [  0, -36],\\n        [ 94, -12],\\n        [-37,   5],\\n        [-13,  84],\\n        [ 12,  -9],\\n        [  2,  39],\\n        [-62,   8],\\n        [ 33, -39],\\n        [-71,  35],\\n        [-77, -82],\\n        [ 71,  45],\\n        [-13,  26],\\n        [-74,  57],\\n        [ -9, -90],\\n        [ 47,  62],\\n        [ 43, -73],\\n        [  7, -58],\\n        [-98, -47],\\n        [-43, -26],\\n        [ 78,  -6],\\n        [-18,  84],\\n        [  4, -68],\\n        [  3,   3],\\n        [-12,  43],\\n        [-96, -68],\\n        [ 73, -29],\\n        [-39,  36],\\n        [-71, -42],\\n        [ 99,  73],\\n        [ 73,  12]]))",
    0.00059
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00058
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00054
  ]
}