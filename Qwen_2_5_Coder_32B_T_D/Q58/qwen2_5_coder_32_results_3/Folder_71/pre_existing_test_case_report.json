{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-39,  28],\\n        [-45,  91],\\n        [ 77,  19],\\n        [  4,  78],\\n        [-62, -75],\\n        [ 82, -25],\\n        [-44, -66],\\n        [-76, -39],\\n        [ 35, -23],\\n        [-28, -41],\\n        [ 60, -48],\\n        [-37, -51],\\n        [-37, -18],\\n        [-61, -70],\\n        [ -3,  26],\\n        [-19, -95],\\n        [ -3, -89],\\n        [ 78,  -8],\\n        [-25, -13],\\n        [-49, -39],\\n        [ 83, -78],\\n        [ -4, -86],\\n        [ 68,  27],\\n        [-71,  76],\\n        [ 94, -59],\\n        [ 43,   6],\\n        [-44,  -3],\\n        [  4, -28],\\n        [-35,  21],\\n        [  0,   3],\\n        [ 11,  77],\\n        [ 16, -54],\\n        [-86, -22],\\n        [ 97, -93],\\n        [-84,  38],\\n        [-20,   1],\\n        [ 36, -61],\\n        [ 19,  23],\\n        [ 49, -55]]))",
    0.00061
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.00628
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00247
  ]
}