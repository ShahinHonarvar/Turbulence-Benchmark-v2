{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00039
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-96, -50,  70, -33,  71,  81, -25, -26,  16,  75,  95, -53,  38,\\n         -31, -15, -99,  83, -58,  22, -78,  54, -43, -90,  43, -61,  -4,\\n          42,  64, -41,  96,   9,  12,  28, -41,  53, -81,  87, -41, -75,\\n         -32, -89, -71,  87,  27, -19,  62, -28, -46, -62, -74, -38,  12,\\n          87, -22, -81, -71, -25, -75, -72,  78,  40,  15,  91,  20,  27,\\n         -46,  -8,  96,  87, -13,  46,  -4, -10, -91, -74, -90,  97, -55,\\n          31,  99, -58,  50, -13,  96,  65, -39, -60,  69,  11, -21, -69,\\n          95,  94, -65, -90,  89, -55,   6, -88, -81,  72,  32,  38,   9,\\n          52,   0, -83,  57, -56,  46, -59, -53, -48,  80,  90, -42, -55,\\n          32,  67, -35, -37,  42,  65,  64,  51,   4,  84,  14,  20, 100,\\n          50,  53, -40, -39,  32, -50,  82,  27, -87,  63,  83,  99,   6,\\n         -47, -31,  53,  83,  27,  49,  84,   3, -10, -91, -40,  34, -20,\\n          63,  97, -95,  58,  94, -27,  18, -73, -10, -71, -60, -23,  66,\\n         -16, -60, -24,  10, -71,  59, -68,  61, -83, -93, -15,  74,  16,\\n          63, -99,  42]]))",
    0.00115
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 371",
    0.00212
  ]
}