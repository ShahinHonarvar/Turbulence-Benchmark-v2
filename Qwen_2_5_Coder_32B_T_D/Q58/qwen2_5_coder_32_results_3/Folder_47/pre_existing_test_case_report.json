{
  "parameter(s)": [
    90
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0011
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 181",
    0.0003
  ],
  "test_matrix_of_having_90_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-57, -33],\\n        [ 36,  18],\\n        [ 41,  53],\\n        [ 18,  64],\\n        [-86,  57],\\n        [ 56,  91],\\n        [ -5,  72],\\n        [-83,  61],\\n        [-64,  -6],\\n        [ 62, -67],\\n        [ 41,  42],\\n        [ 94, -11],\\n        [ 52, -77],\\n        [ 63,  72],\\n        [  9,  59],\\n        [-78,  53],\\n        [-29, -37],\\n        [ 38,  81],\\n        [-32, -21],\\n        [ 72,  50],\\n        [ 72,  53],\\n        [ 68,  32],\\n        [-85,  40],\\n        [ 49, -96],\\n        [-64,  19],\\n        [ 88, -26],\\n        [ 37,  92],\\n        [ 92,  65],\\n        [ 85,  84],\\n        [ 34, -43],\\n        [-66, -52],\\n        [-57, -92],\\n        [-65, -99],\\n        [-73,  20],\\n        [ 42,  17],\\n        [ 41,  91],\\n        [-44, -90],\\n        [-94,  80],\\n        [ 85,  29],\\n        [-30, -72],\\n        [-52,  62],\\n        [-79, -89],\\n        [ 75,   6],\\n        [-42, -99],\\n        [-87, -30]]))",
    0.00062
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 181",
    0.00077
  ]
}