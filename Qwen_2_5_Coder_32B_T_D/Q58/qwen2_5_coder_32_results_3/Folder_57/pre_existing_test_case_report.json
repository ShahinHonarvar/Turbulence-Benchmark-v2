{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00028
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  6, -17],\\n        [ 59, -77],\\n        [-94,  59],\\n        [-78,  -3],\\n        [ 26,  -7],\\n        [-40, -13],\\n        [-79, -44],\\n        [ 29,  88],\\n        [ 81,  75],\\n        [ 34, -11],\\n        [ 56, -22],\\n        [ 98, -72],\\n        [-87, -45],\\n        [ 10, -26],\\n        [-63, -74],\\n        [-71,  -1],\\n        [-27, -69],\\n        [ 80,   1],\\n        [  0, -43],\\n        [  9, -15],\\n        [-74,  13],\\n        [-52, -72],\\n        [  7,  82],\\n        [ 55,  27],\\n        [ 66,  33],\\n        [ -9,  -8],\\n        [-26,  90],\\n        [ 26, -20],\\n        [-79, -36],\\n        [  8,  -7],\\n        [-32,  65],\\n        [-66,  -2],\\n        [ 83,  12],\\n        [-17,   5],\\n        [ 55,  64],\\n        [-99,  61],\\n        [-32,  64],\\n        [  1,  96],\\n        [-32,  32],\\n        [-26,  10],\\n        [-90,  60],\\n        [ 75,   3],\\n        [-87, -23],\\n        [-79, -61],\\n        [  4,   0],\\n        [ 69, -84]]))",
    0.00063
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.00075
  ]
}