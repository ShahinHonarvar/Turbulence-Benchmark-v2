{
  "parameter(s)": [
    80
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_80_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -15,  -49],\\n        [ -61,   26],\\n        [ -94,   37],\\n        [ -86,   91],\\n        [ -81,   73],\\n        [ -98,   60],\\n        [  80,   13],\\n        [ -97,   78],\\n        [  28,   26],\\n        [  91,   84],\\n        [ -28,  -83],\\n        [ -37, -100],\\n        [  22,  -94],\\n        [ -37,  -88],\\n        [  66,   96],\\n        [ -70,   49],\\n        [  88,  -83],\\n        [ -18,   64],\\n        [ -10,   47],\\n        [  96,  -68],\\n        [  86,  -65],\\n        [ -37,  -52],\\n        [  59,  -58],\\n        [  68,   87],\\n        [  53,  -59],\\n        [ -11,  -11],\\n        [ -47,  -94],\\n        [ -98,   27],\\n        [ -16,   97],\\n        [ -78,  -54],\\n        [-100,   56],\\n        [  34,    4],\\n        [  63,   32],\\n        [  48,   -3],\\n        [  64,  -40],\\n        [  86,   -2],\\n        [   1,   10],\\n        [  21,   38],\\n        [ -94,  -53],\\n        [  40,   97]]))",
    0.00049
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 161",
    0.00042
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 161",
    0.00052
  ]
}