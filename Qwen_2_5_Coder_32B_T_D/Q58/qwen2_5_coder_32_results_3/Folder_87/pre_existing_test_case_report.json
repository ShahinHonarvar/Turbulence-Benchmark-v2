{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 193",
    0.00034
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 193",
    0.00074
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-65, -24],\\n        [ 92, -81],\\n        [-52, -73],\\n        [-92,  83],\\n        [ -9, -45],\\n        [  3, -71],\\n        [-57, -42],\\n        [-28,  24],\\n        [ 20,  77],\\n        [ 94,  43],\\n        [ 38,  62],\\n        [-28,  26],\\n        [-92,   3],\\n        [-12,  24],\\n        [ 81,  69],\\n        [ 45,  48],\\n        [ 42,  30],\\n        [ 14,  80],\\n        [-84, -10],\\n        [ 65, -89],\\n        [  0,  84],\\n        [-63, -30],\\n        [ 37, -26],\\n        [  2,  88],\\n        [-30,  10],\\n        [ 92, -51],\\n        [-76,  49],\\n        [ 15,  -9],\\n        [-37,  26],\\n        [ 83,  75],\\n        [-72, -68],\\n        [-87, -10],\\n        [-91, -18],\\n        [ 53,  -8],\\n        [-45,   5],\\n        [-68,  32],\\n        [-69,  92],\\n        [-37, -91],\\n        [ 77, -86],\\n        [ 72, -42],\\n        [-89,  40],\\n        [ -8, -45],\\n        [  2,  37],\\n        [ 10,  46],\\n        [  4,  91],\\n        [ 71, -81],\\n        [ 28,  61],\\n        [ 86, -97]]))",
    0.00063
  ]
}