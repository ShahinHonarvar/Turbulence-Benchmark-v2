{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -65, -100],\\n        [  -5,   -8],\\n        [   2,   28],\\n        [ -24,   96],\\n        [   1,  -91],\\n        [  95,  -94],\\n        [  19,  -96],\\n        [ -96,  -58],\\n        [ -46,  -76],\\n        [   5,   11],\\n        [ -60,  -87],\\n        [  23,   -5],\\n        [ -12,  -67],\\n        [  75, -100],\\n        [  94,  -81],\\n        [ -97,   65],\\n        [   4,   -5],\\n        [  92,   96],\\n        [ -63,  -28],\\n        [  31,  -90],\\n        [  47,  -98],\\n        [  48,   86],\\n        [ -90,  -75],\\n        [ -22,   63],\\n        [  69,   82],\\n        [ -79,  -46],\\n        [  15,   37],\\n        [   9,   -7],\\n        [ -48,  -19],\\n        [ -70,   24],\\n        [  46,   62],\\n        [ -29,   32],\\n        [  51,  -51],\\n        [  63,   66],\\n        [ -63,  -96],\\n        [  91,   82],\\n        [  78,  -46],\\n        [  52,   98],\\n        [  61,   64],\\n        [ -65,   92],\\n        [ -99,  -53],\\n        [  99,   56],\\n        [  -9,  -12],\\n        [  -7,  -41],\\n        [ -16,   39],\\n        [  10,   99],\\n        [  92,   92]]))",
    0.00112
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 189",
    0.00078
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 189",
    0.00095
  ]
}