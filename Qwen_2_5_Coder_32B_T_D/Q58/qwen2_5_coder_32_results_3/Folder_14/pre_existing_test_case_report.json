{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00014
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00043
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-51, -81],\\n        [  9, -75],\\n        [-31, -25],\\n        [-88, -15],\\n        [ 36, -44],\\n        [-46,  92],\\n        [ -5,   8],\\n        [-83, -76],\\n        [-84,  65],\\n        [-60,  32],\\n        [ 61,  83],\\n        [-14, -13],\\n        [-35, -76],\\n        [ -3,  28],\\n        [-12,  83],\\n        [ 68,   9],\\n        [-94,  52],\\n        [ 58,  82],\\n        [-26, -40],\\n        [ 72,  20],\\n        [-45,  72],\\n        [ 96,  22],\\n        [ 36, -47],\\n        [ 73, -10],\\n        [ 69,  86],\\n        [ 26, -97],\\n        [-95, -68],\\n        [ 36,  34],\\n        [ 57,  16],\\n        [-67, -46],\\n        [ 79,  78],\\n        [-42, -66],\\n        [ 56, -44],\\n        [-51,  46],\\n        [ -2,  57],\\n        [ 55,  90],\\n        [ 16,  51],\\n        [ -7, -15],\\n        [ 94,  17],\\n        [ 57,  88],\\n        [-41, -93],\\n        [-34,  -1]]))",
    0.00061
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.0007
  ]
}