{
  "parameter(s)": [
    20
  ],
  "test_list_of_strings_of_length_two": [
    "passed",
    "",
    0.00018
  ],
  "test_list_of_two_strings_of_same_lengths": [
    "passed",
    "",
    0.00017
  ],
  "test_list_of_two_strings_of_different_lengths": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_four_strings": [
    "passed",
    "",
    0.00011
  ],
  "test_list_of_strings_including_one_same_uppercase_char_2": [
    "passed",
    "",
    9e-05
  ],
  "test_list_of_strings_including_one_same_lowercase_char_2": [
    "passed",
    "",
    9e-05
  ],
  "test_list_of_many_strings_with_different_lengths": [
    "failed",
    "AssertionError: assert False\n +  where False = if_contains_anagrams(['aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', 'aaaaaaaa', ...])",
    0.00033
  ],
  "test_list_of_strings_including_one_same_uppercase_char_1": [
    "failed",
    "AssertionError: assert not True\n +  where True = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])",
    0.0003
  ],
  "test_list_of_strings_including_one_distinct_sequence_1": [
    "failed",
    "AssertionError: assert not True\n +  where True = if_contains_anagrams(['testAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAtestAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])",
    0.00035
  ]
}