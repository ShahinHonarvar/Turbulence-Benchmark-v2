{
  "parameter(s)": [
    42
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00014
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.0001
  ],
  "test_list_of_single_number": [
    "failed",
    "assert [] == [[42]]\n  Right contains one more item: [42]\n  Full diff:\n  - [[42]]\n  + []",
    0.00042
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[42, 42, 42,... 42, 42, ...]] == [[42], [42], ...2], [42], ...]\n  At index 0 diff: [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42] != [42]\n  Right contains 78 more items, first extra item: [42]\n  Full diff:\n    [\n  -  [42],\n  ?     -\n  +  [42,...\n  \n  ...Full output truncated (159 lines hidden), use '-vv' to show",
    0.0157
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 9682651996416 == 42\n +  where 9682651996416 = <built-in function prod>([1, 2, 3, 6, 7, 14, ...])\n +    where <built-in function prod> = math.prod",
    0.00026
  ]
}