{
  "parameter(s)": [
    90
  ],
  "test_sublist_size": [
    "passed",
    "",
    0.00018
  ],
  "test_return_elements_are_in_given_list": [
    "passed",
    "",
    0.00012
  ],
  "test_list_of_several_same_number": [
    "failed",
    "AssertionError: assert [[90, 90, 90,... 90, 90, ...]] == [[90], [90], ...0], [90], ...]\n  At index 0 diff: [90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90] != [90]\n  Right contains 32 more items, first extra item: [90]\n  Full diff:\n    [\n  -  [90],\n  ?     -\n  +  [90,...\n  \n  ...Full output truncated (67 lines hidden), use '-vv' to show",
    0.00366
  ],
  "test_list_of_single_number": [
    "failed",
    "assert [] == [[90]]\n  Right contains one more item: [90]\n  Full diff:\n  - [[90]]\n  + []",
    0.00046
  ],
  "test_if_sublist_product_equals_number": [
    "failed",
    "assert 282429536481000000000000 == 90\n +  where 282429536481000000000000 = <built-in function prod>([1, 2, 3, 5, 6, 9, ...])\n +    where <built-in function prod> = math.prod",
    0.00028
  ]
}