{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_2_5.py::test_large_range", "location": ["tests14_2_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016599800437688828, "start": 1729600427.071031, "stop": 1729600427.0711977, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_2_5.py::test_smallest_is_in_range", "location": ["tests14_2_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001705250033410266, "start": 1729600427.0709648, "stop": 1729600427.0711362, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_2_5.py::test_unsorted_large_range", "location": ["tests14_2_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001572359979036264, "start": 1729600427.0709333, "stop": 1729600427.071091, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_2_5.py::test_smallest_is_in_range", "location": ["tests14_2_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 10, "message": "AssertionError: assert 'None' in [814, -504, 570, -476, -135, -454, ...]\n +  where 'None' = find_second_smallest_num([814, -504, 570, -476, -135, -454, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(86 + 2))", "        if 43 == 86:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [814, -504, 570, -476, -135, -454, ...]", "E            +  where 'None' = find_second_smallest_num([814, -504, 570, -476, -135, -454, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(86 + 2))", "        if 43 == 86:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [814, -504, 570, -476, -135, -454, ...]", "E            +  where 'None' = find_second_smallest_num([814, -504, 570, -476, -135, -454, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 10, "message": "AssertionError: assert 'None' in [814, -504, 570, -476, -135, -454, ...]\n +  where 'None' = find_second_smallest_num([814, -504, 570, -476, -135, -454, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003277589930803515, "start": 1729600427.0715036, "stop": 1729600427.0718322, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_2_5.py::test_smallest_is_in_range", "location": ["tests14_2_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014489299792330712, "start": 1729600427.0865319, "stop": 1729600427.0866778, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_2_5.py::test_unsorted_large_range", "location": ["tests14_2_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 30, "message": "AssertionError: assert 'None' == -954\n +  where 'None' = find_second_smallest_num([1026, 62, -755, -858, -53, -632, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 86 + 1000)]", "        random.shuffle(initial_list)", "        if 43 == 86:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[43:86 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -954", "E            +  where 'None' = find_second_smallest_num([1026, 62, -755, -858, -53, -632, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 86 + 1000)]", "        random.shuffle(initial_list)", "        if 43 == 86:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[43:86 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -954", "E            +  where 'None' = find_second_smallest_num([1026, 62, -755, -858, -53, -632, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 30, "message": "AssertionError: assert 'None' == -954\n +  where 'None' = find_second_smallest_num([1026, 62, -755, -858, -53, -632, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000996742004645057, "start": 1729600427.0714636, "stop": 1729600427.072461, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_2_5.py::test_unsorted_large_range", "location": ["tests14_2_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002092220020131208, "start": 1729600427.0896542, "stop": 1729600427.0898645, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_2_5.py::test_large_range", "location": ["tests14_2_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 19, "message": "AssertionError: assert 'None' == 44\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(86 + 1) * 1000)]", "        if 43 == 86:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[43 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 44", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(86 + 1) * 1000)]", "        if 43 == 86:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[43 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 44", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_2/tests14_2_5.py", "lineno": 19, "message": "AssertionError: assert 'None' == 44\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0031792410009074956, "start": 1729600427.0716069, "stop": 1729600427.074787, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_2_5.py::test_large_range", "location": ["tests14_2_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_2_5.py": 1, "Folder_2": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014746899978490546, "start": 1729600427.092573, "stop": 1729600427.0927212, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "fb1ed7337716427ca8c2eda97ba8d29e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
