{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_52_5.py::test_unsorted_large_range", "location": ["tests14_52_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013834299898007885, "start": 1729600968.8849437, "stop": 1729600968.8850825, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_52_5.py::test_large_range", "location": ["tests14_52_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016543599485885352, "start": 1729600968.8851771, "stop": 1729600968.885343, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_52_5.py::test_smallest_is_in_range", "location": ["tests14_52_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021113100228831172, "start": 1729600968.8852823, "stop": 1729600968.8854942, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_52_5.py::test_unsorted_large_range", "location": ["tests14_52_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 30, "message": "AssertionError: assert 'None' == -128\n +  where 'None' = find_second_smallest_num([-757, 664, 554, 734, -843, -519, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 66 + 1000)]", "        random.shuffle(initial_list)", "        if 64 == 66:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[64:66 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -128", "E            +  where 'None' = find_second_smallest_num([-757, 664, 554, 734, -843, -519, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 66 + 1000)]", "        random.shuffle(initial_list)", "        if 64 == 66:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[64:66 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -128", "E            +  where 'None' = find_second_smallest_num([-757, 664, 554, 734, -843, -519, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 30, "message": "AssertionError: assert 'None' == -128\n +  where 'None' = find_second_smallest_num([-757, 664, 554, 734, -843, -519, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006472220047726296, "start": 1729600968.8854272, "stop": 1729600968.8860748, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_52_5.py::test_unsorted_large_range", "location": ["tests14_52_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012137399608036503, "start": 1729600968.895552, "stop": 1729600968.8956742, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_52_5.py::test_smallest_is_in_range", "location": ["tests14_52_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-106, 859, 876, 56, -928, 925, ...]\n +  where 'None' = find_second_smallest_num([-106, 859, 876, 56, -928, 925, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(66 + 2))", "        if 64 == 66:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-106, 859, 876, 56, -928, 925, ...]", "E            +  where 'None' = find_second_smallest_num([-106, 859, 876, 56, -928, 925, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(66 + 2))", "        if 64 == 66:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-106, 859, 876, 56, -928, 925, ...]", "E            +  where 'None' = find_second_smallest_num([-106, 859, 876, 56, -928, 925, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-106, 859, 876, 56, -928, 925, ...]\n +  where 'None' = find_second_smallest_num([-106, 859, 876, 56, -928, 925, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003551819972926751, "start": 1729600968.8857942, "stop": 1729600968.8861496, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_52_5.py::test_smallest_is_in_range", "location": ["tests14_52_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015715100016677752, "start": 1729600968.9033847, "stop": 1729600968.903543, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_52_5.py::test_large_range", "location": ["tests14_52_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 19, "message": "AssertionError: assert 'None' == 65\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(66 + 1) * 1000)]", "        if 64 == 66:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[64 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 65", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(66 + 1) * 1000)]", "        if 64 == 66:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[64 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 65", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_52/tests14_52_5.py", "lineno": 19, "message": "AssertionError: assert 'None' == 65\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002453697001328692, "start": 1729600968.8857434, "stop": 1729600968.888198, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_52_5.py::test_large_range", "location": ["tests14_52_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_52_5.py": 1, "Folder_52": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001428440009476617, "start": 1729600968.9046185, "stop": 1729600968.904762, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "a2e6bed00310460c9032d1066a708aab", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
