{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_19_5.py::test_unsorted_large_range", "location": ["tests14_19_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011061399709433317, "start": 1729600618.6996186, "stop": 1729600618.6997297, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_19_5.py::test_smallest_is_in_range", "location": ["tests14_19_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001623700009076856, "start": 1729600618.6998084, "stop": 1729600618.6999717, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_19_5.py::test_large_range", "location": ["tests14_19_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001587959995958954, "start": 1729600618.699791, "stop": 1729600618.6999502, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_19_5.py::test_unsorted_large_range", "location": ["tests14_19_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 30, "message": "AssertionError: assert 'None' == -725\n +  where 'None' = find_second_smallest_num([748, -900, -878, 444, -798, 582, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 8 + 1000)]", "        random.shuffle(initial_list)", "        if 4 == 8:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[4:8 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -725", "E            +  where 'None' = find_second_smallest_num([748, -900, -878, 444, -798, 582, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 8 + 1000)]", "        random.shuffle(initial_list)", "        if 4 == 8:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[4:8 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -725", "E            +  where 'None' = find_second_smallest_num([748, -900, -878, 444, -798, 582, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 30, "message": "AssertionError: assert 'None' == -725\n +  where 'None' = find_second_smallest_num([748, -900, -878, 444, -798, 582, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005373070016503334, "start": 1729600618.7000127, "stop": 1729600618.7005503, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_19_5.py::test_unsorted_large_range", "location": ["tests14_19_5.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001419670006725937, "start": 1729600618.7101955, "stop": 1729600618.710338, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_19_5.py::test_large_range", "location": ["tests14_19_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 19, "message": "AssertionError: assert 'None' == 5\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(8 + 1) * 1000)]", "        if 4 == 8:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[4 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 5", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(8 + 1) * 1000)]", "        if 4 == 8:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[4 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 5", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 19, "message": "AssertionError: assert 'None' == 5\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00047018199984449893, "start": 1729600618.7003005, "stop": 1729600618.7007713, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_19_5.py::test_large_range", "location": ["tests14_19_5.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016990199947031215, "start": 1729600618.7131243, "stop": 1729600618.7132947, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_19_5.py::test_smallest_is_in_range", "location": ["tests14_19_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-52, 240, -927, 646, -170, 70, ...]\n +  where 'None' = find_second_smallest_num([-52, 240, -927, 646, -170, 70, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(8 + 2))", "        if 4 == 8:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-52, 240, -927, 646, -170, 70, ...]", "E            +  where 'None' = find_second_smallest_num([-52, 240, -927, 646, -170, 70, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(8 + 2))", "        if 4 == 8:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-52, 240, -927, 646, -170, 70, ...]", "E            +  where 'None' = find_second_smallest_num([-52, 240, -927, 646, -170, 70, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_5/Folder_19/tests14_19_5.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-52, 240, -927, 646, -170, 70, ...]\n +  where 'None' = find_second_smallest_num([-52, 240, -927, 646, -170, 70, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030687999969813973, "start": 1729600618.7002175, "stop": 1729600618.700525, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_19_5.py::test_smallest_is_in_range", "location": ["tests14_19_5.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_19_5.py": 1, "Folder_19": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010872999700950459, "start": 1729600618.7134871, "stop": 1729600618.7135966, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "4cf41117d0d240389a3b89bb15862711", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
