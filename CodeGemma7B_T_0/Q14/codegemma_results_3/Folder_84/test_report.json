{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_84_3.py::test_unsorted_large_range", "location": ["tests14_84_3.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002263450005557388, "start": 1729599173.0641005, "stop": 1729599173.0643277, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_84_3.py::test_large_range", "location": ["tests14_84_3.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016549300198676065, "start": 1729599173.065017, "stop": 1729599173.0651834, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_84_3.py::test_smallest_is_in_range", "location": ["tests14_84_3.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017223200120497495, "start": 1729599173.06493, "stop": 1729599173.0651028, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_84_3.py::test_large_range", "location": ["tests14_84_3.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 19, "message": "AssertionError: assert 'None' == 41\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(80 + 1) * 1000)]", "        if 40 == 80:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[40 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 41", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(80 + 1) * 1000)]", "        if 40 == 80:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[40 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 41", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 19, "message": "AssertionError: assert 'None' == 41\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002375479001784697, "start": 1729599173.065541, "stop": 1729599173.067917, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_84_3.py::test_large_range", "location": ["tests14_84_3.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015518200234510005, "start": 1729599173.0849001, "stop": 1729599173.0850565, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_84_3.py::test_smallest_is_in_range", "location": ["tests14_84_3.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 10, "message": "AssertionError: assert 'None' in [35, -420, 321, -568, -425, -32, ...]\n +  where 'None' = find_second_smallest_num([35, -420, 321, -568, -425, -32, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(80 + 2))", "        if 40 == 80:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [35, -420, 321, -568, -425, -32, ...]", "E            +  where 'None' = find_second_smallest_num([35, -420, 321, -568, -425, -32, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(80 + 2))", "        if 40 == 80:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [35, -420, 321, -568, -425, -32, ...]", "E            +  where 'None' = find_second_smallest_num([35, -420, 321, -568, -425, -32, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 10, "message": "AssertionError: assert 'None' in [35, -420, 321, -568, -425, -32, ...]\n +  where 'None' = find_second_smallest_num([35, -420, 321, -568, -425, -32, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003195939934812486, "start": 1729599173.06539, "stop": 1729599173.06571, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_84_3.py::test_smallest_is_in_range", "location": ["tests14_84_3.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001533699978608638, "start": 1729599173.0907676, "stop": 1729599173.0909219, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_84_3.py::test_unsorted_large_range", "location": ["tests14_84_3.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 30, "message": "AssertionError: assert 'None' == -979\n +  where 'None' = find_second_smallest_num([651, -629, -337, 645, -497, 875, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 80 + 1000)]", "        random.shuffle(initial_list)", "        if 40 == 80:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[40:80 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -979", "E            +  where 'None' = find_second_smallest_num([651, -629, -337, 645, -497, 875, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 80 + 1000)]", "        random.shuffle(initial_list)", "        if 40 == 80:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[40:80 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -979", "E            +  where 'None' = find_second_smallest_num([651, -629, -337, 645, -497, 875, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_84/tests14_84_3.py", "lineno": 30, "message": "AssertionError: assert 'None' == -979\n +  where 'None' = find_second_smallest_num([651, -629, -337, 645, -497, 875, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009408749974681996, "start": 1729599173.0662367, "stop": 1729599173.0671782, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_84_3.py::test_unsorted_large_range", "location": ["tests14_84_3.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_84_3.py": 1, "Folder_84": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001899720009532757, "start": 1729599173.0958118, "stop": 1729599173.0960028, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "679e0982094546499b0afed5b9243352", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
