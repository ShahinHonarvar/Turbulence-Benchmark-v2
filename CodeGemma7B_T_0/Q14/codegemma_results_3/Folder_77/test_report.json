{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_77_3.py::test_unsorted_large_range", "location": ["tests14_77_3.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001505049949628301, "start": 1729599106.7803717, "stop": 1729599106.7805226, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_77_3.py::test_large_range", "location": ["tests14_77_3.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016361299640266225, "start": 1729599106.7805634, "stop": 1729599106.7807279, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_77_3.py::test_smallest_is_in_range", "location": ["tests14_77_3.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016495800082338974, "start": 1729599106.780572, "stop": 1729599106.7807376, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_77_3.py::test_unsorted_large_range", "location": ["tests14_77_3.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 30, "message": "AssertionError: assert 'None' == -975\n +  where 'None' = find_second_smallest_num([754, 943, -198, 466, 413, 619, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 975 + 1000)]", "        random.shuffle(initial_list)", "        if 639 == 975:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[639:975 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -975", "E            +  where 'None' = find_second_smallest_num([754, 943, -198, 466, 413, 619, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 975 + 1000)]", "        random.shuffle(initial_list)", "        if 639 == 975:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[639:975 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -975", "E            +  where 'None' = find_second_smallest_num([754, 943, -198, 466, 413, 619, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 30, "message": "AssertionError: assert 'None' == -975\n +  where 'None' = find_second_smallest_num([754, 943, -198, 466, 413, 619, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001020325995341409, "start": 1729599106.7808728, "stop": 1729599106.7818935, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_77_3.py::test_unsorted_large_range", "location": ["tests14_77_3.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011663099576253444, "start": 1729599106.7915413, "stop": 1729599106.7916584, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_77_3.py::test_smallest_is_in_range", "location": ["tests14_77_3.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-891, -428, 327, -16, -588, -596, ...]\n +  where 'None' = find_second_smallest_num([-891, -428, 327, -16, -588, -596, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(975 + 2))", "        if 639 == 975:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-891, -428, 327, -16, -588, -596, ...]", "E            +  where 'None' = find_second_smallest_num([-891, -428, 327, -16, -588, -596, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(975 + 2))", "        if 639 == 975:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-891, -428, 327, -16, -588, -596, ...]", "E            +  where 'None' = find_second_smallest_num([-891, -428, 327, -16, -588, -596, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-891, -428, 327, -16, -588, -596, ...]\n +  where 'None' = find_second_smallest_num([-891, -428, 327, -16, -588, -596, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004564019982353784, "start": 1729599106.7810025, "stop": 1729599106.781459, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_77_3.py::test_smallest_is_in_range", "location": ["tests14_77_3.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015272799646481872, "start": 1729599106.7975523, "stop": 1729599106.797706, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_77_3.py::test_large_range", "location": ["tests14_77_3.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 19, "message": "AssertionError: assert 'None' == 640\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(975 + 1) * 1000)]", "        if 639 == 975:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[639 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 640", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(975 + 1) * 1000)]", "        if 639 == 975:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[639 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 640", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_3/Folder_77/tests14_77_3.py", "lineno": 19, "message": "AssertionError: assert 'None' == 640\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.02568881600018358, "start": 1729599106.781098, "stop": 1729599106.8067875, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_77_3.py::test_large_range", "location": ["tests14_77_3.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_77_3.py": 1, "Folder_77": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015605400403728709, "start": 1729599106.823171, "stop": 1729599106.8233283, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "e0ce6ef28a7b4848bd00625b0c1214b0", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
