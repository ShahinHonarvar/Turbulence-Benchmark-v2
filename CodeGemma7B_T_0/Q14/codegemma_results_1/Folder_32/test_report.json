{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_32_1.py::test_smallest_is_in_range", "location": ["tests14_32_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001714390018605627, "start": 1729596624.9752967, "stop": 1729596624.975469, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_32_1.py::test_large_range", "location": ["tests14_32_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016851600230438635, "start": 1729596624.975391, "stop": 1729596624.9755602, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_32_1.py::test_unsorted_large_range", "location": ["tests14_32_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017174999811686575, "start": 1729596624.975286, "stop": 1729596624.9754584, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_32_1.py::test_smallest_is_in_range", "location": ["tests14_32_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [649, -200, 863, 395, 250, 871, ...]\n +  where 'None' = find_second_smallest_num([649, -200, 863, 395, 250, 871, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(35 + 2))", "        if 32 == 35:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [649, -200, 863, 395, 250, 871, ...]", "E            +  where 'None' = find_second_smallest_num([649, -200, 863, 395, 250, 871, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(35 + 2))", "        if 32 == 35:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [649, -200, 863, 395, 250, 871, ...]", "E            +  where 'None' = find_second_smallest_num([649, -200, 863, 395, 250, 871, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [649, -200, 863, 395, 250, 871, ...]\n +  where 'None' = find_second_smallest_num([649, -200, 863, 395, 250, 871, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030735699692741036, "start": 1729596624.9757252, "stop": 1729596624.9760327, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_32_1.py::test_smallest_is_in_range", "location": ["tests14_32_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014171899965731427, "start": 1729596624.9891417, "stop": 1729596624.9892843, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_32_1.py::test_unsorted_large_range", "location": ["tests14_32_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -111\n +  where 'None' = find_second_smallest_num([14, 1015, -745, -454, -87, -278, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 35 + 1000)]", "        random.shuffle(initial_list)", "        if 32 == 35:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[32:35 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -111", "E            +  where 'None' = find_second_smallest_num([14, 1015, -745, -454, -87, -278, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 35 + 1000)]", "        random.shuffle(initial_list)", "        if 32 == 35:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[32:35 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -111", "E            +  where 'None' = find_second_smallest_num([14, 1015, -745, -454, -87, -278, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -111\n +  where 'None' = find_second_smallest_num([14, 1015, -745, -454, -87, -278, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009873860035440885, "start": 1729596624.9758391, "stop": 1729596624.976827, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_32_1.py::test_unsorted_large_range", "location": ["tests14_32_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001504440006101504, "start": 1729596624.993712, "stop": 1729596624.9938633, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_32_1.py::test_large_range", "location": ["tests14_32_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 33\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(35 + 1) * 1000)]", "        if 32 == 35:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[32 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 33", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(35 + 1) * 1000)]", "        if 32 == 35:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[32 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 33", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_32/tests14_32_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 33\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015561789987259544, "start": 1729596624.9759488, "stop": 1729596624.9775057, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_32_1.py::test_large_range", "location": ["tests14_32_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_32_1.py": 1, "Folder_32": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014146699686534703, "start": 1729596624.9943795, "stop": 1729596624.9945216, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f6e2e85f1522453baaae8f7048ce8182", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
