{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_63_1.py::test_unsorted_large_range", "location": ["tests14_63_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017167099576909095, "start": 1729596954.0019102, "stop": 1729596954.0020826, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_63_1.py::test_smallest_is_in_range", "location": ["tests14_63_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018076600099448115, "start": 1729596954.0019941, "stop": 1729596954.002176, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_63_1.py::test_large_range", "location": ["tests14_63_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018157599697588012, "start": 1729596954.0021513, "stop": 1729596954.0023336, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_63_1.py::test_unsorted_large_range", "location": ["tests14_63_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -917\n +  where 'None' = find_second_smallest_num([975, -290, -220, 385, 322, 881, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 82 + 1000)]", "        random.shuffle(initial_list)", "        if 56 == 82:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[56:82 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -917", "E            +  where 'None' = find_second_smallest_num([975, -290, -220, 385, 322, 881, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 82 + 1000)]", "        random.shuffle(initial_list)", "        if 56 == 82:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[56:82 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -917", "E            +  where 'None' = find_second_smallest_num([975, -290, -220, 385, 322, 881, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -917\n +  where 'None' = find_second_smallest_num([975, -290, -220, 385, 322, 881, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008898300002329051, "start": 1729596954.002508, "stop": 1729596954.0033987, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_63_1.py::test_unsorted_large_range", "location": ["tests14_63_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014977899991208687, "start": 1729596954.0132818, "stop": 1729596954.0134327, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_63_1.py::test_smallest_is_in_range", "location": ["tests14_63_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-196, 432, 500, 644, -834, -901, ...]\n +  where 'None' = find_second_smallest_num([-196, 432, 500, 644, -834, -901, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(82 + 2))", "        if 56 == 82:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-196, 432, 500, 644, -834, -901, ...]", "E            +  where 'None' = find_second_smallest_num([-196, 432, 500, 644, -834, -901, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(82 + 2))", "        if 56 == 82:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-196, 432, 500, 644, -834, -901, ...]", "E            +  where 'None' = find_second_smallest_num([-196, 432, 500, 644, -834, -901, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-196, 432, 500, 644, -834, -901, ...]\n +  where 'None' = find_second_smallest_num([-196, 432, 500, 644, -834, -901, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003499789963825606, "start": 1729596954.0024672, "stop": 1729596954.0028176, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_63_1.py::test_smallest_is_in_range", "location": ["tests14_63_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001505980035290122, "start": 1729596954.019043, "stop": 1729596954.0191946, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_63_1.py::test_large_range", "location": ["tests14_63_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 57\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(82 + 1) * 1000)]", "        if 56 == 82:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[56 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 57", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(82 + 1) * 1000)]", "        if 56 == 82:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[56 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 57", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_63/tests14_63_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 57\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.003162860004522372, "start": 1729596954.00276, "stop": 1729596954.0059235, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_63_1.py::test_large_range", "location": ["tests14_63_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_63_1.py": 1, "Folder_63": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013487599790096283, "start": 1729596954.021864, "stop": 1729596954.0219998, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "bab7c8dd02674e26a47bf5028b6194e8", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
