{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_80_1.py::test_unsorted_large_range", "location": ["tests14_80_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015631200221832842, "start": 1729597115.8918126, "stop": 1729597115.8919694, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_80_1.py::test_smallest_is_in_range", "location": ["tests14_80_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023404500097967684, "start": 1729597115.891931, "stop": 1729597115.8921664, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_80_1.py::test_large_range", "location": ["tests14_80_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019546200201148167, "start": 1729597115.8912728, "stop": 1729597115.8914688, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_80_1.py::test_unsorted_large_range", "location": ["tests14_80_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -979\n +  where 'None' = find_second_smallest_num([372, -62, 598, 106, 932, -963, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 87 + 1000)]", "        random.shuffle(initial_list)", "        if 30 == 87:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[30:87 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -979", "E            +  where 'None' = find_second_smallest_num([372, -62, 598, 106, 932, -963, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 87 + 1000)]", "        random.shuffle(initial_list)", "        if 30 == 87:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[30:87 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -979", "E            +  where 'None' = find_second_smallest_num([372, -62, 598, 106, 932, -963, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -979\n +  where 'None' = find_second_smallest_num([372, -62, 598, 106, 932, -963, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00080470199463889, "start": 1729597115.8923404, "stop": 1729597115.8931458, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_80_1.py::test_unsorted_large_range", "location": ["tests14_80_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013508900156011805, "start": 1729597115.9038343, "stop": 1729597115.90397, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_80_1.py::test_large_range", "location": ["tests14_80_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 31\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(87 + 1) * 1000)]", "        if 30 == 87:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[30 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 31", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(87 + 1) * 1000)]", "        if 30 == 87:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[30 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 31", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 31\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0023400380014209077, "start": 1729597115.8918493, "stop": 1729597115.8941898, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_80_1.py::test_large_range", "location": ["tests14_80_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014834600005997345, "start": 1729597115.9071229, "stop": 1729597115.9072719, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_80_1.py::test_smallest_is_in_range", "location": ["tests14_80_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [12, 369, -798, -245, -701, 47, ...]\n +  where 'None' = find_second_smallest_num([12, 369, -798, -245, -701, 47, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(87 + 2))", "        if 30 == 87:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [12, 369, -798, -245, -701, 47, ...]", "E            +  where 'None' = find_second_smallest_num([12, 369, -798, -245, -701, 47, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(87 + 2))", "        if 30 == 87:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [12, 369, -798, -245, -701, 47, ...]", "E            +  where 'None' = find_second_smallest_num([12, 369, -798, -245, -701, 47, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_80/tests14_80_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [12, 369, -798, -245, -701, 47, ...]\n +  where 'None' = find_second_smallest_num([12, 369, -798, -245, -701, 47, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005161810040590353, "start": 1729597115.892528, "stop": 1729597115.893045, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_80_1.py::test_smallest_is_in_range", "location": ["tests14_80_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_80_1.py": 1, "Folder_80": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001387270021950826, "start": 1729597115.9145226, "stop": 1729597115.9146624, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "339647714cd1441d9230440be60ff50d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
