{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_6_1.py::test_unsorted_large_range", "location": ["tests14_6_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018768900190480053, "start": 1729596394.5619183, "stop": 1729596394.5621064, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_6_1.py::test_large_range", "location": ["tests14_6_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016412799595855176, "start": 1729596394.5619843, "stop": 1729596394.5621486, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_6_1.py::test_smallest_is_in_range", "location": ["tests14_6_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016211099864449352, "start": 1729596394.5626175, "stop": 1729596394.5627804, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_6_1.py::test_unsorted_large_range", "location": ["tests14_6_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -858\n +  where 'None' = find_second_smallest_num([588, 529, -451, 141, 1009, -203, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 79 + 1000)]", "        random.shuffle(initial_list)", "        if 29 == 79:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[29:79 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -858", "E            +  where 'None' = find_second_smallest_num([588, 529, -451, 141, 1009, -203, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 79 + 1000)]", "        random.shuffle(initial_list)", "        if 29 == 79:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[29:79 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -858", "E            +  where 'None' = find_second_smallest_num([588, 529, -451, 141, 1009, -203, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -858\n +  where 'None' = find_second_smallest_num([588, 529, -451, 141, 1009, -203, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007787520007696003, "start": 1729596394.56246, "stop": 1729596394.5632389, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_6_1.py::test_smallest_is_in_range", "location": ["tests14_6_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-957, 509, 229, -41, 656, 429, ...]\n +  where 'None' = find_second_smallest_num([-957, 509, 229, -41, 656, 429, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(79 + 2))", "        if 29 == 79:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-957, 509, 229, -41, 656, 429, ...]", "E            +  where 'None' = find_second_smallest_num([-957, 509, 229, -41, 656, 429, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(79 + 2))", "        if 29 == 79:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-957, 509, 229, -41, 656, 429, ...]", "E            +  where 'None' = find_second_smallest_num([-957, 509, 229, -41, 656, 429, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-957, 509, 229, -41, 656, 429, ...]\n +  where 'None' = find_second_smallest_num([-957, 509, 229, -41, 656, 429, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000285779002297204, "start": 1729596394.5630326, "stop": 1729596394.563319, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_6_1.py::test_unsorted_large_range", "location": ["tests14_6_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001285050020669587, "start": 1729596394.576518, "stop": 1729596394.5766475, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_6_1.py::test_smallest_is_in_range", "location": ["tests14_6_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002200980015913956, "start": 1729596394.5773437, "stop": 1729596394.5775652, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_6_1.py::test_large_range", "location": ["tests14_6_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 30\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(79 + 1) * 1000)]", "        if 29 == 79:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[29 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 30", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(79 + 1) * 1000)]", "        if 29 == 79:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[29 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 30", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_6/tests14_6_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 30\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0024293050009873696, "start": 1729596394.562552, "stop": 1729596394.5649822, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_6_1.py::test_large_range", "location": ["tests14_6_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_6_1.py": 1, "Folder_6": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013945400132797658, "start": 1729596394.5786512, "stop": 1729596394.5787911, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "f68345cc14244248bbf804d71e01d04e", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
