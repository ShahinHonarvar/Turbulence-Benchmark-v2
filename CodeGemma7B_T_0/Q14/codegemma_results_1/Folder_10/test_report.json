{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_10_1.py::test_unsorted_large_range", "location": ["tests14_10_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000126781000290066, "start": 1729596422.4454644, "stop": 1729596422.4455912, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_10_1.py::test_smallest_is_in_range", "location": ["tests14_10_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001480169958085753, "start": 1729596422.44557, "stop": 1729596422.4457188, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_10_1.py::test_large_range", "location": ["tests14_10_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001509749999968335, "start": 1729596422.4455702, "stop": 1729596422.445722, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_10_1.py::test_smallest_is_in_range", "location": ["tests14_10_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [72, 599, -109, 741, 856, 740, ...]\n +  where 'None' = find_second_smallest_num([72, 599, -109, 741, 856, 740, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(92 + 2))", "        if 62 == 92:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [72, 599, -109, 741, 856, 740, ...]", "E            +  where 'None' = find_second_smallest_num([72, 599, -109, 741, 856, 740, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(92 + 2))", "        if 62 == 92:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [72, 599, -109, 741, 856, 740, ...]", "E            +  where 'None' = find_second_smallest_num([72, 599, -109, 741, 856, 740, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 10, "message": "AssertionError: assert 'None' in [72, 599, -109, 741, 856, 740, ...]\n +  where 'None' = find_second_smallest_num([72, 599, -109, 741, 856, 740, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00027222999779041857, "start": 1729596422.4459455, "stop": 1729596422.4462185, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_10_1.py::test_smallest_is_in_range", "location": ["tests14_10_1.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015442599396919832, "start": 1729596422.458264, "stop": 1729596422.4584196, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_10_1.py::test_unsorted_large_range", "location": ["tests14_10_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -907\n +  where 'None' = find_second_smallest_num([-650, -981, -304, 793, 115, 796, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 92 + 1000)]", "        random.shuffle(initial_list)", "        if 62 == 92:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[62:92 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -907", "E            +  where 'None' = find_second_smallest_num([-650, -981, -304, 793, 115, 796, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 92 + 1000)]", "        random.shuffle(initial_list)", "        if 62 == 92:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[62:92 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -907", "E            +  where 'None' = find_second_smallest_num([-650, -981, -304, 793, 115, 796, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 30, "message": "AssertionError: assert 'None' == -907\n +  where 'None' = find_second_smallest_num([-650, -981, -304, 793, 115, 796, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006845609968877397, "start": 1729596422.4458776, "stop": 1729596422.4465623, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_10_1.py::test_unsorted_large_range", "location": ["tests14_10_1.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001291250009671785, "start": 1729596422.458569, "stop": 1729596422.4586987, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_10_1.py::test_large_range", "location": ["tests14_10_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 63\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(92 + 1) * 1000)]", "        if 62 == 92:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[62 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 63", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(92 + 1) * 1000)]", "        if 62 == 92:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[62 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 63", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_1/Folder_10/tests14_10_1.py", "lineno": 19, "message": "AssertionError: assert 'None' == 63\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0025427000000490807, "start": 1729596422.446065, "stop": 1729596422.4486082, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_10_1.py::test_large_range", "location": ["tests14_10_1.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_10_1.py": 1, "Folder_10": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001565769998705946, "start": 1729596422.4615006, "stop": 1729596422.461658, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "30b7800a636242ac9647024ffd84ca9d", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
