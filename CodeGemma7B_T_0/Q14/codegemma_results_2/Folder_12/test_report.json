{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_12_2.py::test_large_range", "location": ["tests14_12_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018061199807561934, "start": 1729597443.6550028, "stop": 1729597443.655184, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_12_2.py::test_unsorted_large_range", "location": ["tests14_12_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014492600166704506, "start": 1729597443.6554842, "stop": 1729597443.6556296, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_12_2.py::test_smallest_is_in_range", "location": ["tests14_12_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.001963497998076491, "start": 1729597443.6549048, "stop": 1729597443.6568694, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_12_2.py::test_unsorted_large_range", "location": ["tests14_12_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 30, "message": "AssertionError: assert 'None' == -940\n +  where 'None' = find_second_smallest_num([2, -706, -561, -701, -358, -745, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 72 + 1000)]", "        random.shuffle(initial_list)", "        if 31 == 72:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[31:72 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -940", "E            +  where 'None' = find_second_smallest_num([2, -706, -561, -701, -358, -745, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 72 + 1000)]", "        random.shuffle(initial_list)", "        if 31 == 72:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[31:72 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -940", "E            +  where 'None' = find_second_smallest_num([2, -706, -561, -701, -358, -745, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 30, "message": "AssertionError: assert 'None' == -940\n +  where 'None' = find_second_smallest_num([2, -706, -561, -701, -358, -745, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007293859962373972, "start": 1729597443.655959, "stop": 1729597443.6566885, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_12_2.py::test_unsorted_large_range", "location": ["tests14_12_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014045400166651234, "start": 1729597443.6695538, "stop": 1729597443.669695, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_12_2.py::test_smallest_is_in_range", "location": ["tests14_12_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 10, "message": "AssertionError: assert 'None' in [826, -24, 460, 622, -963, -116, ...]\n +  where 'None' = find_second_smallest_num([826, -24, 460, 622, -963, -116, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(72 + 2))", "        if 31 == 72:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [826, -24, 460, 622, -963, -116, ...]", "E            +  where 'None' = find_second_smallest_num([826, -24, 460, 622, -963, -116, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(72 + 2))", "        if 31 == 72:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [826, -24, 460, 622, -963, -116, ...]", "E            +  where 'None' = find_second_smallest_num([826, -24, 460, 622, -963, -116, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 10, "message": "AssertionError: assert 'None' in [826, -24, 460, 622, -963, -116, ...]\n +  where 'None' = find_second_smallest_num([826, -24, 460, 622, -963, -116, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003878170027746819, "start": 1729597443.6571994, "stop": 1729597443.657588, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_12_2.py::test_smallest_is_in_range", "location": ["tests14_12_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001554300033603795, "start": 1729597443.67052, "stop": 1729597443.6706762, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_12_2.py::test_large_range", "location": ["tests14_12_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 19, "message": "AssertionError: assert 'None' == 32\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(72 + 1) * 1000)]", "        if 31 == 72:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[31 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 32", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(72 + 1) * 1000)]", "        if 31 == 72:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[31 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 32", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_12/tests14_12_2.py", "lineno": 19, "message": "AssertionError: assert 'None' == 32\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0030844370048725978, "start": 1729597443.6556017, "stop": 1729597443.6586866, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_12_2.py::test_large_range", "location": ["tests14_12_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_12_2.py": 1, "Folder_12": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001650440026423894, "start": 1729597443.676483, "stop": 1729597443.6766496, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "232e38a33912452db5642a94fd7faaae", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
