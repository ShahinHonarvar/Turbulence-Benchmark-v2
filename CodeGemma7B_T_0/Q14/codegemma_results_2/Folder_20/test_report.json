{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests14_20_2.py::test_unsorted_large_range", "location": ["tests14_20_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014914199709892273, "start": 1729597525.5475948, "stop": 1729597525.5477448, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_20_2.py::test_large_range", "location": ["tests14_20_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018776599608827382, "start": 1729597525.5483394, "stop": 1729597525.5485282, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_20_2.py::test_smallest_is_in_range", "location": ["tests14_20_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0028852150062448345, "start": 1729597525.547621, "stop": 1729597525.5505073, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_20_2.py::test_unsorted_large_range", "location": ["tests14_20_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 30, "message": "AssertionError: assert 'None' == -571\n +  where 'None' = find_second_smallest_num([137, 280, -271, -192, 261, 225, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 94 + 1000)]", "        random.shuffle(initial_list)", "        if 75 == 94:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[75:94 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -571", "E            +  where 'None' = find_second_smallest_num([137, 280, -271, -192, 261, 225, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_unsorted_large_range():", "        initial_list = [i for i in range(-1000, 94 + 1000)]", "        random.shuffle(initial_list)", "        if 75 == 94:", "                assert find_second_smallest_num(initial_list) == None", "        else:", "            sliced_list = initial_list[75:94 + 1]", "            sliced_list.sort()", ">           assert find_second_smallest_num(initial_list) == sliced_list[1]", "E           AssertionError: assert 'None' == -571", "E            +  where 'None' = find_second_smallest_num([137, 280, -271, -192, 261, 225, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 30, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 30, "message": "AssertionError: assert 'None' == -571\n +  where 'None' = find_second_smallest_num([137, 280, -271, -192, 261, 225, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007556240016128868, "start": 1729597525.5481827, "stop": 1729597525.5489392, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_20_2.py::test_unsorted_large_range", "location": ["tests14_20_2.py", 21, "test_unsorted_large_range"], "keywords": {"test_unsorted_large_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014638100401498377, "start": 1729597525.5621395, "stop": 1729597525.5622866, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw1>"}
{"nodeid": "tests14_20_2.py::test_large_range", "location": ["tests14_20_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 19, "message": "AssertionError: assert 'None' == 76\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(94 + 1) * 1000)]", "        if 75 == 94:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[75 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 76", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_large_range():", "        large_list = [i for i in range(0,(94 + 1) * 1000)]", "        if 75 == 94:", "            assert find_second_smallest_num(large_list) == None", "        else:", "            expected_result = large_list[75 + 1]", ">           assert find_second_smallest_num(large_list) == expected_result", "E           AssertionError: assert 'None' == 76", "E            +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 19, "message": "AssertionError: assert 'None' == 76\n +  where 'None' = find_second_smallest_num([0, 1, 2, 3, 4, 5, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.005721585999708623, "start": 1729597525.5489316, "stop": 1729597525.5546541, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_20_2.py::test_large_range", "location": ["tests14_20_2.py", 12, "test_large_range"], "keywords": {"test_large_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013196700456319377, "start": 1729597525.5683627, "stop": 1729597525.5684955, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw2>"}
{"nodeid": "tests14_20_2.py::test_smallest_is_in_range", "location": ["tests14_20_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-185, -422, -379, -20, 730, -432, ...]\n +  where 'None' = find_second_smallest_num([-185, -422, -379, -20, 730, -432, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(94 + 2))", "        if 75 == 94:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-185, -422, -379, -20, 730, -432, ...]", "E            +  where 'None' = find_second_smallest_num([-185, -422, -379, -20, 730, -432, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_smallest_is_in_range():", "        large_list = random.choices(range(-1000, 1000), k=(94 + 2))", "        if 75 == 94:", "            assert find_second_smallest_num(large_list) == None", "        else:", ">           assert find_second_smallest_num(large_list) in large_list", "E           AssertionError: assert 'None' in [-185, -422, -379, -20, 730, -432, ...]", "E            +  where 'None' = find_second_smallest_num([-185, -422, -379, -20, 730, -432, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q14/codegemma_results_2/Folder_20/tests14_20_2.py", "lineno": 10, "message": "AssertionError: assert 'None' in [-185, -422, -379, -20, 730, -432, ...]\n +  where 'None' = find_second_smallest_num([-185, -422, -379, -20, 730, -432, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00046574699808843434, "start": 1729597525.5508285, "stop": 1729597525.551295, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw0>"}
{"nodeid": "tests14_20_2.py::test_smallest_is_in_range", "location": ["tests14_20_2.py", 4, "test_smallest_is_in_range"], "keywords": {"test_smallest_is_in_range": 1, "tests14_20_2.py": 1, "Folder_20": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015665699902456254, "start": 1729597525.5679617, "stop": 1729597525.5681193, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "68f7f344b90e4306840dd1261a540ed9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
