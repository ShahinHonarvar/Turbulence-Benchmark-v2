{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests48_3_2.py", "outcome": "failed", "longrepr": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/python.py:617: in _importtestmodule\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\n/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/pathlib.py:567: in import_path\n    importlib.import_module(module_name)\n/data/miniconda3/envs/benchmark/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:359: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n/data/miniconda3/envs/benchmark/lib/python3.12/ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q48/codegemma_results_2/Folder_3/tests48_3_2.py\", line 14\nE       for i in result:\nE   IndentationError: unexpected indent", "result": null, "sections": [], "$report_type": "CollectReport"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
