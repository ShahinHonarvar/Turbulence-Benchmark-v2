{
  "parameter(s)": [
    10,
    11,
    24
  ],
  "test_unsorted_large_range": [
    "failed",
    "assert [-990, -989, -988, -987, -986, -985, ...] == -102\n +  where [-990, -989, -988, -987, -986, -985, ...] = find_n_th_smallest_num([-1000, -999, -998, -997, -996, -995, ...])",
    0.00096
  ],
  "test_float_numbers": [
    "failed",
    "assert [3.3166247903554, 3.4641016151377544, 3.605551275463989, 3.7416573867739413, 3.872983346207417, 4.0, ...] == 4.58257569495584\n +  where [3.3166247903554, 3.4641016151377544, 3.605551275463989, 3.7416573867739413, 3.872983346207417, 4.0, ...] = find_n_th_smallest_num([1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979, 2.449489742783178, ...])",
    0.00037
  ],
  "test_n_th_smallest_is_in_range": [
    "failed",
    "assert [10, 11, 12, 13, 14, 15, ...] in [0, 1, 2, 3, 4, 5, ...]\n +  where [10, 11, 12, 13, 14, 15, ...] = find_n_th_smallest_num([0, 1, 2, 3, 4, 5, ...])",
    0.00113
  ]
}