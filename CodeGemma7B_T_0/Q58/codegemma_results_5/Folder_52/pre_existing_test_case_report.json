{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00045
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.11517
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -58,    4,  -35,   72,  -91,  -78,    5,  -72,  100,  -72,\\n           89,   24,   79,   65,    8,   31,   59,   72,   94,   78,\\n          -12,  -47,   12,   61,  -71,  -90,   36,  100,   40,   37,\\n           -4,   84,   96,  -73,    2,   84,   50,  -38,  -92,  -90,\\n          -20,  -84,   12,   43,  -30,   20,  -56,    2,  -49,   93,\\n          -56,   42,   42,   96,   46,  -96,   56,  -11,  -41,  -49,\\n          -65,  -10,  -16,   85,   -7,   68,   19,  -41,   27,  -66,\\n           21,   50,   14,   67,  -74,   35, -100,   79,   50,   27,\\n            9,   92,    2,  -58,  100,   82,   65,  -87,   59,   75,\\n           99,   92,   99,   80,   22,   30,   52,   89,   33,   86,\\n           61,   51,  -93,  -75,  -65,  -92,  -46,   64,   43,   21,\\n           79,   69,   99,    1,   93,   65,  -35,   29,   97,   87,\\n           32,   72,   29,   50,   84,  -11,   89,   11,  -18,  -40,\\n           33,  -81,   65,   87,  100,   52,   66,  -60,  -25,  -56,\\n           20,  -98,  -41,  -24,  -96,  -52,  -45]]))",
    0.00096
  ]
}