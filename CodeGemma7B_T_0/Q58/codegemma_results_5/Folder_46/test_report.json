{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016272199718514457, "start": 1729859735.847884, "stop": 1729859735.8480473, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_horizontal_matrix", "location": ["tests58_46_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0029846970064681955, "start": 1729859735.8508554, "stop": 1729859735.853841, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013542500528274104, "start": 1729859735.852303, "stop": 1729859735.852439, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017131999629782513, "start": 1729859735.8526652, "stop": 1729859735.8528366, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_one_integer", "location": ["tests58_46_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.185199501691386e-05, "start": 1729859735.8531442, "stop": 1729859735.8532164, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_vertical_matrix", "location": ["tests58_46_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.277099939528853e-05, "start": 1729859735.853581, "stop": 1729859735.853654, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_horizontal_matrix", "location": ["tests58_46_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 58, "message": "assert 0 == 289"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(144)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 144 < 30:", "            num = 4", "        elif 30 <= 144 < 70:", "            num = 3", "        elif 70 <= 144 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 144) + 1", ">           assert output == expected_result", "E           assert 0 == 289"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(144)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 144 < 30:", "            num = 4", "        elif 30 <= 144 < 70:", "            num = 3", "        elif 70 <= 144 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 144) + 1", ">           assert output == expected_result", "E           assert 0 == 289"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 58, "message": "assert 0 == 289"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004135799972573295, "start": 1729859735.8541064, "stop": 1729859735.8545203, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_46_5.py::test_horizontal_matrix", "location": ["tests58_46_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015671800065319985, "start": 1729859735.8852596, "stop": 1729859735.885417, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-55, -62],\\n        [-86,  29],\\n        [ 78, -56],\\n        [-10,  77],\\n        [  6, -45],\\n        [ 12,  40],\\n        [ 50,  51],\\n        [-39, -50],\\n        [-82, -19],\\n        [ 28,  46],\\n        [ 70,  17],\\n        [-85, -56],\\n        [-60,  65],\\n        [-23,  10],\\n        [ 10, -18],\\n        [ 33,  -2],\\n        [  9,  85],\\n        [-90, -26],\\n        [ -5, -66],\\n        [-83, -93],\\n        [-82,  70],\\n        [ 70, -31],\\n        [-38, -66],\\n        [-94, -60],\\n        [ 97,  -4],\\n        [ -8, -39],\\n        [ -8,  81],\\n        [-81,  48],\\n        [ 69, -76],\\n        [ 65,  20],\\n        [ 70, -74],\\n        [ -6,  12],\\n        [-90, -16],\\n        [ 17, -44],\\n        [-32,  -7],\\n        [ 41, -72],\\n        [ -2, -64],\\n        [ -3, -32],\\n        [ 25, -78],\\n        [ 22, -87],\\n        [-32,  83],\\n        [ 80,  60],\\n        [ 15,  79],\\n        [-36, -95],\\n        [-19, -58],\\n        [-96, -25],\\n        [-69, -90],\\n        [ 25,   4],\\n        [-94,  45],\\n        [ 12, -61],\\n        [ 16, -81],\\n        [-31,  72],\\n        [ 72,  63],\\n        [ 90,  97],\\n        [ 10,  65],\\n        [-25,  14],\\n        [ 42, -59],\\n        [-61, -42],\\n        [ 80, -30],\\n        [-44,  67],\\n        [-18,  70],\\n        [ 38, -18],\\n        [ 88, -73],\\n        [-15,  54],\\n        [ 66, -21],\\n        [ 38,   5],\\n        [-61, -86],\\n        [-37,  58],\\n        [ 52, -27],\\n        [ 58,  60],\\n        [ -1, -11],\\n        [-38, -40]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-55, -62],\\n        [-86,  29],\\n        [ 78, -56],\\n        [-10,  77],\\n        [  6, -45],\\n        [ 12,  40],\\n        [ 50,  51],\\n        [-39, -50],\\n        [-82, -19],\\n        [ 28,  46],\\n        [ 70,  17],\\n        [-85, -56],\\n        [-60,  65],\\n        [-23,  10],\\n        [ 10, -18],\\n        [ 33,  -2],\\n        [  9,  85],\\n        [-90, -26],\\n        [ -5, -66],\\n        [-83, -93],\\n        [-82,  70],\\n        [ 70, -31],\\n        [-38, -66],\\n        [-94, -60],\\n        [ 97,  -4],\\n        [ -8, -39],\\n        [ -8,  81],\\n        [-81,  48],\\n        [ 69, -76],\\n        [ 65,  20],\\n        [ 70, -74],\\n        [ -6,  12],\\n        [-90, -16],\\n        [ 17, -44],\\n        [-32,  -7],\\n        [ 41, -72],\\n        [ -2, -64],\\n        [ -3, -32],\\n        [ 25, -78],\\n        [ 22, -87],\\n        [-32,  83],\\n        [ 80,  60],\\n        [ 15,  79],\\n        [-36, -95],\\n        [-19, -58],\\n        [-96, -25],\\n        [-69, -90],\\n        [ 25,   4],\\n        [-94,  45],\\n        [ 12, -61],\\n        [ 16, -81],\\n        [-31,  72],\\n        [ 72,  63],\\n        [ 90,  97],\\n        [ 10,  65],\\n        [-25,  14],\\n        [ 42, -59],\\n        [-61, -42],\\n        [ 80, -30],\\n        [-44,  67],\\n        [-18,  70],\\n        [ 38, -18],\\n        [ 88, -73],\\n        [-15,  54],\\n        [ 66, -21],\\n        [ 38,   5],\\n        [-61, -86],\\n        [-37,  58],\\n        [ 52, -27],\\n        [ 58,  60],\\n        [ -1, -11],\\n        [-38, -40]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-55, -62],\\n        [-86,  29],\\n        [ 78, -56],\\n        [-10,  77],\\n        [  6, -45],\\n        [ 12,  40],\\n        [ 50,  51],\\n        [-39, -50],\\n        [-82, -19],\\n        [ 28,  46],\\n        [ 70,  17],\\n        [-85, -56],\\n        [-60,  65],\\n        [-23,  10],\\n        [ 10, -18],\\n        [ 33,  -2],\\n        [  9,  85],\\n        [-90, -26],\\n        [ -5, -66],\\n        [-83, -93],\\n        [-82,  70],\\n        [ 70, -31],\\n        [-38, -66],\\n        [-94, -60],\\n        [ 97,  -4],\\n        [ -8, -39],\\n        [ -8,  81],\\n        [-81,  48],\\n        [ 69, -76],\\n        [ 65,  20],\\n        [ 70, -74],\\n        [ -6,  12],\\n        [-90, -16],\\n        [ 17, -44],\\n        [-32,  -7],\\n        [ 41, -72],\\n        [ -2, -64],\\n        [ -3, -32],\\n        [ 25, -78],\\n        [ 22, -87],\\n        [-32,  83],\\n        [ 80,  60],\\n        [ 15,  79],\\n        [-36, -95],\\n        [-19, -58],\\n        [-96, -25],\\n        [-69, -90],\\n        [ 25,   4],\\n        [-94,  45],\\n        [ 12, -61],\\n        [ 16, -81],\\n        [-31,  72],\\n        [ 72,  63],\\n        [ 90,  97],\\n        [ 10,  65],\\n        [-25,  14],\\n        [ 42, -59],\\n        [-61, -42],\\n        [ 80, -30],\\n        [-44,  67],\\n        [-18,  70],\\n        [ 38, -18],\\n        [ 88, -73],\\n        [-15,  54],\\n        [ 66, -21],\\n        [ 38,   5],\\n        [-61, -86],\\n        [-37,  58],\\n        [ 52, -27],\\n        [ 58,  60],\\n        [ -1, -11],\\n        [-38, -40]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_46/tests58_46_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-55, -62],\\n        [-86,  29],\\n        [ 78, -56],\\n        [-10,  77],\\n        [  6, -45],\\n        [ 12,  40],\\n        [ 50,  51],\\n        [-39, -50],\\n        [-82, -19],\\n        [ 28,  46],\\n        [ 70,  17],\\n        [-85, -56],\\n        [-60,  65],\\n        [-23,  10],\\n        [ 10, -18],\\n        [ 33,  -2],\\n        [  9,  85],\\n        [-90, -26],\\n        [ -5, -66],\\n        [-83, -93],\\n        [-82,  70],\\n        [ 70, -31],\\n        [-38, -66],\\n        [-94, -60],\\n        [ 97,  -4],\\n        [ -8, -39],\\n        [ -8,  81],\\n        [-81,  48],\\n        [ 69, -76],\\n        [ 65,  20],\\n        [ 70, -74],\\n        [ -6,  12],\\n        [-90, -16],\\n        [ 17, -44],\\n        [-32,  -7],\\n        [ 41, -72],\\n        [ -2, -64],\\n        [ -3, -32],\\n        [ 25, -78],\\n        [ 22, -87],\\n        [-32,  83],\\n        [ 80,  60],\\n        [ 15,  79],\\n        [-36, -95],\\n        [-19, -58],\\n        [-96, -25],\\n        [-69, -90],\\n        [ 25,   4],\\n        [-94,  45],\\n        [ 12, -61],\\n        [ 16, -81],\\n        [-31,  72],\\n        [ 72,  63],\\n        [ 90,  97],\\n        [ 10,  65],\\n        [-25,  14],\\n        [ 42, -59],\\n        [-61, -42],\\n        [ 80, -30],\\n        [-44,  67],\\n        [-18,  70],\\n        [ 38, -18],\\n        [ 88, -73],\\n        [-15,  54],\\n        [ 66, -21],\\n        [ 38,   5],\\n        [-61, -86],\\n        [-37,  58],\\n        [ 52, -27],\\n        [ 58,  60],\\n        [ -1, -11],\\n        [-38, -40]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.025171934998070356, "start": 1729859735.8482938, "stop": 1729859735.873467, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_matrix_of_having_144_integers", "location": ["tests58_46_5.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016895800217753276, "start": 1729859735.903415, "stop": 1729859735.9035847, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_5.py::test_vertical_matrix", "location": ["tests58_46_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.47433924800134264, "start": 1729859735.853744, "stop": 1729859736.328084, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_5.py::test_vertical_matrix", "location": ["tests58_46_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_46_5.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010256899986416101, "start": 1729859736.3284461, "stop": 1729859736.3285491, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "74e5e16411ed4cb689436b94854f1342", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
