{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00027
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00047
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  49,   -9,   20,  -59,  -88,   88,   41,   13,   53,  -96,\\n          -80,  -98,   74,  -25,  -36, -100,   60,   88,   -7,    8,\\n          -41,    4,   46,  -61,   97,    2,  -99,  -91,  -27,  -97,\\n           12,  -88,  -10,  -77,   49,  -13,   30,   20,  -60,   76,\\n           33,  -87,   22,   87,   19,  -91,   92,   38,  -12,   62,\\n          -35,  -96,  -71,  -96,    7,  -46,   -4,   96,  -44,   64,\\n           83,  -92,   55,   91,   36,  -82,  -35,  -70,   26,   19,\\n          -63,   47,   51,  -45,  -81,   86,  -50,  -18,   94,  -36,\\n          -90,   33,   75,  -78,  -90,  -18,  -59,  -58,  -88,   34,\\n           24,  -73,  -34,   37,   65,  -21,   18,    9,   33,   87,\\n           21,  -50,   48,   38,   78,  -32,  -82,  -37,   92,   92,\\n           82,  -95,   -6,   -1,   98,  -65,  -25,   22,  -31,  -69,\\n          -43,  -17,   31,  -11,  -54,  -12,   27,   66,   67,   83,\\n           13,  -79,   61,   -2,   16,  -29,  -73,  -14,   35]]))",
    0.0009
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.32038
  ]
}