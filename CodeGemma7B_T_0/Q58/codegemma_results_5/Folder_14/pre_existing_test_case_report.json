{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00033
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-79,   8],\\n        [ 53,  95],\\n        [-38,  -9],\\n        [ 57, -63],\\n        [ 49,  83],\\n        [  5,  17],\\n        [-96,  37],\\n        [ 36, -35],\\n        [ 34,  77],\\n        [-19,  64],\\n        [ 14,  59],\\n        [ 51, -47],\\n        [ 33,  53],\\n        [ -1,  64],\\n        [ 83,  56],\\n        [ 81, -11],\\n        [-69, -12],\\n        [-72,  58],\\n        [ 28, -93],\\n        [ 31, -32],\\n        [ 37,   0],\\n        [-13, -31],\\n        [ 46,  11],\\n        [ 87, -67],\\n        [ 14,  33],\\n        [-68, -59],\\n        [-24,  37],\\n        [-59,  36],\\n        [-43, -42],\\n        [-22, 100],\\n        [-56, -60],\\n        [ 91, -20],\\n        [-38,  46],\\n        [ 34,  57],\\n        [ 74,  76],\\n        [  7,  71],\\n        [-16, -73],\\n        [-48,  67],\\n        [-50,  11],\\n        [ 26,  11],\\n        [-92, -10],\\n        [ 79,  53]]))",
    0.00268
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.06845
  ]
}