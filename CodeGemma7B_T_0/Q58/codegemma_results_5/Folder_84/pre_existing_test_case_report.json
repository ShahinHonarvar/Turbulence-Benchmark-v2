{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[127]]))",
    0.00054
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -83,   45,   20,   62,  -16,   11,   37,   13,   25,  -26,\\n           84,  -95,  100,   83,  -29,    6,   50,  -45,  -89,  -15,\\n          100,  -34,  -10,   34,   41,    1,   51,  -70,  -43,  -56,\\n          -45,  -71,    6,   21,   72,   37,   98,   42,   56,   81,\\n           99,    2,   39,  -92,   30,   29,  -54,   95,  -67,  -91,\\n          -36,   -9,   47,  -95,   93,   81,    8,   74,   85,   20,\\n           61,  -71,  -72,   30,   23,  -87,  -44,   52,  -93,   51,\\n          -69,  -39,   21,   41,   39,   -3,   69,  -22,   72,   51,\\n           28,   68,   28,   97,  -42,  -10,  -48,   26,   33,   64,\\n          -39,   51,   36,  -50,  -68,  -35,  -67,   53,   59,  -43,\\n           32,  -29, -100,  -25,   67,   -2,    2,   31,  -75,  -28,\\n          -22,  -15,   38,  -24,  -71,   36,   32,   48,  -96,   13,\\n            5,  -46,  -89,  -66,   32,   -8,   85]]))",
    0.00087
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.00056
  ]
}