{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00128
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00172
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  62,   47],\\n        [  66,   24],\\n        [ -45,  -56],\\n        [  71,   66],\\n        [  -1,  -71],\\n        [ -67,   53],\\n        [ -10,   13],\\n        [  96,   10],\\n        [  15,   30],\\n        [  16,   71],\\n        [  93,   78],\\n        [ -78,   76],\\n        [ -17,   99],\\n        [  75,  -31],\\n        [  83,    8],\\n        [  74,    6],\\n        [ -90,   71],\\n        [ -33,  -25],\\n        [  98,  -99],\\n        [ -66,   49],\\n        [ -21,  -59],\\n        [  54,  -30],\\n        [  37,   37],\\n        [  94,    5],\\n        [ -68,    0],\\n        [  85,  -92],\\n        [ -99,  -61],\\n        [  63,  -26],\\n        [ -48,    9],\\n        [  19,   77],\\n        [ -33,  -58],\\n        [   1,   41],\\n        [ -89,   55],\\n        [ -69,   85],\\n        [  32,   38],\\n        [ -58,  -85],\\n        [  -2,  -40],\\n        [  88, -100],\\n        [ -56,    2],\\n        [  77,   13],\\n        [  13,  -35],\\n        [ -12,  -30],\\n        [  11,  -73],\\n        [ -34,  -82],\\n        [  76,   35],\\n        [ -61,   38]]))",
    0.00818
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.14109
  ]
}