{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00115
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   6,    1],\\n        [ -85,  -29],\\n        [ -24,  -26],\\n        [  42,  -23],\\n        [ -73,  -58],\\n        [ -24,    9],\\n        [  32,  -85],\\n        [ -68,   34],\\n        [ -47,    0],\\n        [  93,   27],\\n        [ -19,  -41],\\n        [  66,  -10],\\n        [  36, -100],\\n        [  70,   53],\\n        [ -87,   64],\\n        [ -51,  -37],\\n        [  64, -100],\\n        [  80,  -66],\\n        [ -93,   47],\\n        [  33,  -17],\\n        [  -6,   14],\\n        [  26,   -3],\\n        [  59,  -40],\\n        [ 100,  -92],\\n        [  43,  -59],\\n        [  28,   41],\\n        [  96,   36],\\n        [ -13,  -33],\\n        [  -2,   18],\\n        [ -12,    4],\\n        [  49,   32],\\n        [  -3,  -64],\\n        [ -94,   79],\\n        [ -96,  -98],\\n        [ -37,   99],\\n        [ -26,  -45],\\n        [  24,  -56],\\n        [ -37, -100],\\n        [  82,  -35]]))",
    0.01619
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.0005
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.11181
  ]
}