{
  "parameter(s)": [
    193
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 387",
    0.0005
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 387",
    0.81247
  ],
  "test_matrix_of_having_193_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  80,  -16,   10,   28,   33,  -31,   -5,    9,   55,   11,\\n          -58,  -94,   47,  -22,   52,   99,  -31,   35,  -83,  -31,\\n           22,   20,   83,   30,  -98,   33,   52,   31,    4,   63,\\n           89,  -36,   11,  -49,   -4,   99,   14,   16,   63,   91,\\n          -15,  -11,   78,  -60,   73,  -41,  -32,  -11,  -35,  -76,\\n           77,   39,    6,   76,  -64,  -46,  -80,   66,   -8,  -36,\\n          -61,  -22,  -49,   73,   40,  -39,   39,  -56,  -52,   66,\\n          -60,  -83,  -90,  -53,  -65,   63,   78,    5,   67,   14,\\n           17, -100,  -88,   73,  -21,   52,  -70,    6,  -88,  -49,\\n          -10,  -86,   77,  -32,   38,   19,  -82,   49,   -5,  -77,\\n          -27,   23,  -44,   -6,  -12,   78,   25,   -8,  -16,  -46,\\n           -3,  -92,   62,   87,   31,  -25,  -23,  -30,   35,  -72,\\n          -78,   36,   -7,  -43,    8,  -90,   86,  -53,  -82,  -55,\\n           20, -100,  -86,   -2,  -92,   -1,   25,   71,   87,   84,\\n          -72,  -38,   36,   12,   34,  -29,  -11,   15,   30,   30,\\n           -5,  -55,  -74,   30,   97,  -63,  -81,  -45,   85,   -3,\\n           23,   96,  -96,   51,   86,  -81,  -70,  -61,   57,   54,\\n           57,   -7,   62,   44,  -31,    3,   26,   98,  -99,  -47,\\n           79,   46,    3,  -34,  -16,  100,  -66,  -11,   52,   63,\\n           81,   33,  -11]]))",
    0.00101
  ]
}