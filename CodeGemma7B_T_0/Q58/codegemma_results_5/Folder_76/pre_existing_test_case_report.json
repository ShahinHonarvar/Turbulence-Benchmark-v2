{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00021
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00035
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  31,   -9,   13,   -2,   15,   -2,  -29,   67,  -22,  -61,\\n           23,  -81,   37,  -37,  -42,  -11,   76,  -48,  -18,  -12,\\n           66,   61,   52,   26,  -26,  -55,  -42,   54,  -25,   40,\\n           20,   94,  -69,  -49,  -20,   40,  -41,  -72,   98,   27,\\n          -99,   40,   51,   -4,   80,   -6,  -33,   65,   -2,   95,\\n          -78,   48,   66,   71,   -3,   64,   21,  -20,   92,   -7,\\n            0,   44,  -77,  -78,  -82,  -56,  -59,  -89,   80,   20,\\n          -17,   81,  -70,   94,   41,   46,  -21,  -82,   52,  -91,\\n           32,   70,  -78,   14,   16,   -3,   39,  -25,  -32,   45,\\n          -38,   61,  -15,  -42,  -10,  -82,   19,   22,   91,  -76,\\n          -47,   16,   -5,   58,   -5,   81,  -80,  -84,   75,   16,\\n            6,  -74,  -80,   60,   96,  -90,  -89,   70,   38,  -31,\\n           41,  -66, -100,  -27,  -51,   69,   28,  -46,   15,   36,\\n           48,   16,  -66,    9,  -28,   31,   50,   88,   25,   84,\\n           44,  -52,   97,   85,  -99,  -28,   87,  -83,  -98,  -31,\\n           34,   92,  -59,   13,   43,   53,    1,  -65,   50]]))",
    0.0007
  ]
}