{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_13_5.py::test_horizontal_matrix", "location": ["tests58_13_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020809400302823633, "start": 1729859459.471604, "stop": 1729859459.4718132, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002242660048068501, "start": 1729859459.4723608, "stop": 1729859459.4725857, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001671880017966032, "start": 1729859459.4725237, "stop": 1729859459.4726915, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002295340018463321, "start": 1729859459.47295, "stop": 1729859459.4731798, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.176800474757329e-05, "start": 1729859459.47351, "stop": 1729859459.4735925, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_vertical_matrix", "location": ["tests58_13_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.410100028617308e-05, "start": 1729859459.4760568, "stop": 1729859459.4761515, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -6, -49, -14, -53,  10,  55, -47, -74,  -1, -54,  61,  -6, -37,\\n          42, -97, -11,  24,  -5, -83, -97, -20, -57, -77, -70,  42, -17,\\n         -95, -65,  83, -89,  97, -79, -76, -10,  81, -91,  96, -81, -73,\\n         -68, -52,  72, -34, -38,  14,  -3, -49,  44,  15,  74,  24,  63,\\n          24, -57, -84,  -1,  14,  -3, -12,  26,  71,  55, -34, -16,  36,\\n          95,  87, -31,  90, -36, -87, -34,   3, -73, -22, -55,  64,  27,\\n          34, -82,  78,  50, -99,  47, -76,  22,  95,  -7, -46, -55,  83,\\n         -65,  82,  12, -79,  43,  76, -55,  24, -75,  87,  96,  45, -44,\\n          42,  52, -25,  82,  88, -48,  26, -81,  80, -54,  12,  20, -90,\\n          64,  41, -65, -96, -50, -43,  85,  82,  41, -70, -63, -46, -52,\\n          43,  78, -24,  98, -96,  74, -82,  54,  90, -56,  -8, -67, -36,\\n          86, -31,  51, -38,  -8,  91, -26,  10, -41,  36,  17, -87, -85,\\n          83, -73, -19, -75,  56, -53, -65,  32,  69, -77, -99, -17,   8,\\n         -64,  90, -95, -24, -50,  42]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -6, -49, -14, -53,  10,  55, -47, -74,  -1, -54,  61,  -6, -37,\\n          42, -97, -11,  24,  -5, -83, -97, -20, -57, -77, -70,  42, -17,\\n         -95, -65,  83, -89,  97, -79, -76, -10,  81, -91,  96, -81, -73,\\n         -68, -52,  72, -34, -38,  14,  -3, -49,  44,  15,  74,  24,  63,\\n          24, -57, -84,  -1,  14,  -3, -12,  26,  71,  55, -34, -16,  36,\\n          95,  87, -31,  90, -36, -87, -34,   3, -73, -22, -55,  64,  27,\\n          34, -82,  78,  50, -99,  47, -76,  22,  95,  -7, -46, -55,  83,\\n         -65,  82,  12, -79,  43,  76, -55,  24, -75,  87,  96,  45, -44,\\n          42,  52, -25,  82,  88, -48,  26, -81,  80, -54,  12,  20, -90,\\n          64,  41, -65, -96, -50, -43,  85,  82,  41, -70, -63, -46, -52,\\n          43,  78, -24,  98, -96,  74, -82,  54,  90, -56,  -8, -67, -36,\\n          86, -31,  51, -38,  -8,  91, -26,  10, -41,  36,  17, -87, -85,\\n          83, -73, -19, -75,  56, -53, -65,  32,  69, -77, -99, -17,   8,\\n         -64,  90, -95, -24, -50,  42]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -6, -49, -14, -53,  10,  55, -47, -74,  -1, -54,  61,  -6, -37,\\n          42, -97, -11,  24,  -5, -83, -97, -20, -57, -77, -70,  42, -17,\\n         -95, -65,  83, -89,  97, -79, -76, -10,  81, -91,  96, -81, -73,\\n         -68, -52,  72, -34, -38,  14,  -3, -49,  44,  15,  74,  24,  63,\\n          24, -57, -84,  -1,  14,  -3, -12,  26,  71,  55, -34, -16,  36,\\n          95,  87, -31,  90, -36, -87, -34,   3, -73, -22, -55,  64,  27,\\n          34, -82,  78,  50, -99,  47, -76,  22,  95,  -7, -46, -55,  83,\\n         -65,  82,  12, -79,  43,  76, -55,  24, -75,  87,  96,  45, -44,\\n          42,  52, -25,  82,  88, -48,  26, -81,  80, -54,  12,  20, -90,\\n          64,  41, -65, -96, -50, -43,  85,  82,  41, -70, -63, -46, -52,\\n          43,  78, -24,  98, -96,  74, -82,  54,  90, -56,  -8, -67, -36,\\n          86, -31,  51, -38,  -8,  91, -26,  10, -41,  36,  17, -87, -85,\\n          83, -73, -19, -75,  56, -53, -65,  32,  69, -77, -99, -17,   8,\\n         -64,  90, -95, -24, -50,  42]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -6, -49, -14, -53,  10,  55, -47, -74,  -1, -54,  61,  -6, -37,\\n          42, -97, -11,  24,  -5, -83, -97, -20, -57, -77, -70,  42, -17,\\n         -95, -65,  83, -89,  97, -79, -76, -10,  81, -91,  96, -81, -73,\\n         -68, -52,  72, -34, -38,  14,  -3, -49,  44,  15,  74,  24,  63,\\n          24, -57, -84,  -1,  14,  -3, -12,  26,  71,  55, -34, -16,  36,\\n          95,  87, -31,  90, -36, -87, -34,   3, -73, -22, -55,  64,  27,\\n          34, -82,  78,  50, -99,  47, -76,  22,  95,  -7, -46, -55,  83,\\n         -65,  82,  12, -79,  43,  76, -55,  24, -75,  87,  96,  45, -44,\\n          42,  52, -25,  82,  88, -48,  26, -81,  80, -54,  12,  20, -90,\\n          64,  41, -65, -96, -50, -43,  85,  82,  41, -70, -63, -46, -52,\\n          43,  78, -24,  98, -96,  74, -82,  54,  90, -56,  -8, -67, -36,\\n          86, -31,  51, -38,  -8,  91, -26,  10, -41,  36,  17, -87, -85,\\n          83, -73, -19, -75,  56, -53, -65,  32,  69, -77, -99, -17,   8,\\n         -64,  90, -95, -24, -50,  42]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.001048040998284705, "start": 1729859459.473013, "stop": 1729859459.474062, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00022693999926559627, "start": 1729859459.5237398, "stop": 1729859459.5239677, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_13_5.py::test_horizontal_matrix", "location": ["tests58_13_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 58, "message": "assert 0 == 351"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(175)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 175 < 30:", "            num = 4", "        elif 30 <= 175 < 70:", "            num = 3", "        elif 70 <= 175 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 175) + 1", ">           assert output == expected_result", "E           assert 0 == 351"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(175)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 175 < 30:", "            num = 4", "        elif 30 <= 175 < 70:", "            num = 3", "        elif 70 <= 175 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 175) + 1", ">           assert output == expected_result", "E           assert 0 == 351"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_5/Folder_13/tests58_13_5.py", "lineno": 58, "message": "assert 0 == 351"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011108219987363555, "start": 1729859459.472798, "stop": 1729859459.4739099, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_5.py::test_horizontal_matrix", "location": ["tests58_13_5.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001636279994272627, "start": 1729859459.5298522, "stop": 1729859459.5300171, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_5.py::test_vertical_matrix", "location": ["tests58_13_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.5124101959954714, "start": 1729859459.4762714, "stop": 1729859459.9886827, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_vertical_matrix", "location": ["tests58_13_5.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001527439962956123, "start": 1729859459.989266, "stop": 1729859459.9894195, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "e7178c69422a4eb4a6a1357cd55a6aef", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
