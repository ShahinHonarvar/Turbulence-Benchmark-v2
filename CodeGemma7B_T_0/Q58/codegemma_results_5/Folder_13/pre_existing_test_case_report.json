{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    9e-05
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00111
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -6, -49, -14, -53,  10,  55, -47, -74,  -1, -54,  61,  -6, -37,\\n          42, -97, -11,  24,  -5, -83, -97, -20, -57, -77, -70,  42, -17,\\n         -95, -65,  83, -89,  97, -79, -76, -10,  81, -91,  96, -81, -73,\\n         -68, -52,  72, -34, -38,  14,  -3, -49,  44,  15,  74,  24,  63,\\n          24, -57, -84,  -1,  14,  -3, -12,  26,  71,  55, -34, -16,  36,\\n          95,  87, -31,  90, -36, -87, -34,   3, -73, -22, -55,  64,  27,\\n          34, -82,  78,  50, -99,  47, -76,  22,  95,  -7, -46, -55,  83,\\n         -65,  82,  12, -79,  43,  76, -55,  24, -75,  87,  96,  45, -44,\\n          42,  52, -25,  82,  88, -48,  26, -81,  80, -54,  12,  20, -90,\\n          64,  41, -65, -96, -50, -43,  85,  82,  41, -70, -63, -46, -52,\\n          43,  78, -24,  98, -96,  74, -82,  54,  90, -56,  -8, -67, -36,\\n          86, -31,  51, -38,  -8,  91, -26,  10, -41,  36,  17, -87, -85,\\n          83, -73, -19, -75,  56, -53, -65,  32,  69, -77, -99, -17,   8,\\n         -64,  90, -95, -24, -50,  42]]))",
    0.00105
  ]
}