{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00058
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-17, -34, -52, -33,  91,  54,  56,  45, -12,  29,  92,  81, -70,\\n          -5,  56,  75,  69,   7, -57, -10,   0, -39, -72,  38,  -4,  41,\\n          63,  68, -46, -74, -98, -63,  60,  38,  23,  48,  72,  22,  18,\\n          39,  67, -54,  63, -54, -39, -52,  23,  63, -49,  -9, -81,   7,\\n          12, -43, -31,  86,   9,  -5,  69, -33,  12, -69, -31,  73, -64,\\n         -99,  41,  87,   4, -29,  84,  59, -62, -94, -50, -12,  64, -70,\\n           9, -66,  74,  30, -10, -95, -62, -70, -73, -98, -96, -47, -62,\\n         -82,   3, -18, -57,  64, -38, -47, -26, -76,  59,  60,  62, -72,\\n         -34,  56,  55,  44, -81, -20,  18, -12,  46, -74,  96,  13,  46,\\n          -7, -62, -34, -59, -90, -90, -54,  50,  61, -69,   2,  34, -92,\\n          65,  22, -55, -69, -92,  61, -43, -22,  22]]))",
    0.00098
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.34326
  ]
}