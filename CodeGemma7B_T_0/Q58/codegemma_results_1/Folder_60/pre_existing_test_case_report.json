{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 80, -60],\\n        [ 91,  83],\\n        [-51, -60],\\n        [-54,  22],\\n        [-14, -56],\\n        [ -9, -69],\\n        [ 37, -19],\\n        [ -8,  97],\\n        [ 61,  51],\\n        [ 15, -38],\\n        [ 91, -69],\\n        [-42, -96],\\n        [-29, -16],\\n        [ 10, -84],\\n        [  8,  76],\\n        [-22,  60],\\n        [-23,  90],\\n        [-74, -45],\\n        [ 64,  99],\\n        [-95, -53],\\n        [ 78,  -7],\\n        [-49,  14],\\n        [-29,  49],\\n        [ 85,  -2],\\n        [ 87,  84],\\n        [ -6, -88],\\n        [  1, -17],\\n        [ 49, -23],\\n        [-16,  35],\\n        [ 79,   2],\\n        [-41, -65],\\n        [ 44, -18],\\n        [ 10,  39],\\n        [-48,  98],\\n        [ 80, -68],\\n        [-89, -16],\\n        [-17, -49],\\n        [-11,   2],\\n        [ 81,  11],\\n        [ 36,  61],\\n        [ 38,  76],\\n        [ 73,  45],\\n        [-50,  88],\\n        [ 69,  35]]))",
    0.00247
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00039
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.0477
  ]
}