{
  "parameter(s)": [
    173
  ],
  "test_matrix_of_having_173_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -17,    8,    5,   29,  -32,  -32,   25,   80,   90,   61,\\n          -14,  -16,   29,  -44,   -4,   53,  -14,   54,   64,   30,\\n          -40,  -12,  -26,   99,  -94,   28,   14,   88,   25,   31,\\n           54,   49,  -89,   87,  -10,   34,  -40,   29,  -25,   37,\\n           70,  -38,  -94,  -89,   55,  -65,   87,  -49,  -69,   31,\\n          -47,  -69,  -61,   -9,   13,  -33,  -74,   44,   37,  -30,\\n           28,   21,   99,  -23,   59,  -45,   -8,  -73,  -67,  -67,\\n          -65,   -6,   81,  -25,   -7,    7,   58,  -43,   22,   20,\\n           -7,  -48,  -51,  -59,   30,    7,   -8,  -63,   23,   -2,\\n           93,  -57,   30,    8,  -76,   98,   62,   79,  -30,   37,\\n           99,   76,   44,   39,   -5,   23,  -64,  -68,  -40,  -12,\\n         -100,  -63,    4,    2,   71,  -46,  -15,  -43,  -45,  -63,\\n           47,  -82,   72,  -63,    7,   61,  -88,  -18,   12,  -35,\\n          -77,  -33,  -29,   44,   27,   49,   86,   41,  -63,   31,\\n           85,   81,  -96,   44,  -61,   15,   87,    8,  -34,   72,\\n          -61,  -68,    4,   10,   42,   39,  100,  -85,  -29,  -38,\\n          -87,  -11,    3,   48,   25,  -92,  -63,   53,  -27,   50,\\n           46,  -55,    2]]))",
    0.00121
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 347",
    0.00047
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[173]]))",
    0.00057
  ]
}