{
  "parameter(s)": [
    66
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00022
  ],
  "test_matrix_of_having_66_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 48,  19],\\n        [ -5,  70],\\n        [-14, -40],\\n        [-17, -98],\\n        [  0,  40],\\n        [ 40,  -5],\\n        [ 69,  42],\\n        [-48, -93],\\n        [ 69, -92],\\n        [ 60,  98],\\n        [ 67, -21],\\n        [-95,  99],\\n        [-69,  73],\\n        [ -7, -31],\\n        [-65,  64],\\n        [-71, -24],\\n        [ 16,  91],\\n        [-48,  52],\\n        [ 93, -81],\\n        [-92, -39],\\n        [ 88,  34],\\n        [-86, -28],\\n        [ 67,   1],\\n        [  0, -49],\\n        [ 43,  20],\\n        [ 38,   2],\\n        [ 15, -99],\\n        [ 49, -82],\\n        [-17, -65],\\n        [ 41,  15],\\n        [ 93,  38],\\n        [-93,  62],\\n        [-44, -18]]))",
    0.00162
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 133",
    0.00044
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 133",
    0.035
  ]
}