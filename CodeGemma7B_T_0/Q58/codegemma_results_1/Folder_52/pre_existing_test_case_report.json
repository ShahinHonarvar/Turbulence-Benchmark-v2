{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00055
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -65,    0,   35,  -12,  -39,   31,  -96,  -35,   11,   82,\\n           93,   13,   20,  -20,   21,  -54,  -29,   93,   18,   94,\\n           -8,   57,   74,    6,  -38,   44,   36,  -23,  -23,  -19,\\n           51,  -57,   27,  -34,   -5,  -67,   75,   43,  -87,   65,\\n           44,  -98,  -49,   -3,  -63,   11,   -3,   68,  -11,   73,\\n          -33, -100,    7,   54,   54,   27,  -62, -100,   84,   29,\\n           33,    5,  -10,   31,  -52,   89,  -95,  -85,   91,  -56,\\n           62,   62,  -99,   94,  -78,  -92,  -41,  -31,    2,   92,\\n           43,  -20,  -42,   76,  -78,  -68,  -49,    0,   55,   -8,\\n           39,  -86,   97,  -49,  -34,  -14,   45,  -89,   69,   62,\\n          -10,   53,  -50,   48,  -10,  -53,  -49,  -29,  -16,   84,\\n          -15,   41,   62,   38,  -34,  -51,   64,  -91,  -67,   63,\\n          -16,   74,   83,  -86,   44,  -95,   57,   16,   71,  -29,\\n          -52,  -89,  -93,  -81,  -32,   17,  -10,   99,    6,  -55,\\n            2,   57,  -42,   32,  -90,  -46,  -20]]))",
    0.00107
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.11841
  ]
}