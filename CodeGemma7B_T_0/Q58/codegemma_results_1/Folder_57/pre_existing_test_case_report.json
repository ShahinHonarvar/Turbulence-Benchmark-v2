{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00016
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00039
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -34],\\n        [ -22,   50],\\n        [ -52,  -26],\\n        [ -29,  -75],\\n        [  48,   93],\\n        [  29,  -27],\\n        [  90,  -29],\\n        [  11,  -72],\\n        [ -98,   69],\\n        [  72,  -17],\\n        [  93,   58],\\n        [ -50,  -32],\\n        [  39,   39],\\n        [ -58,  -25],\\n        [ -20,   93],\\n        [ -31,   33],\\n        [ -61,  -51],\\n        [  11,   18],\\n        [ -11,  -53],\\n        [  75,   97],\\n        [ -90,  -16],\\n        [  82,  -89],\\n        [  13,  -90],\\n        [  25,   52],\\n        [  22,  -24],\\n        [  44,   79],\\n        [ -51,  -16],\\n        [ -38,  -44],\\n        [  20,   48],\\n        [  14,  -64],\\n        [  87,  -41],\\n        [  83,   34],\\n        [  47,  -34],\\n        [  95,  -76],\\n        [  -2,  -52],\\n        [  63,  -53],\\n        [ -93,  -89],\\n        [  10,   94],\\n        [  95,   41],\\n        [  50,  -65],\\n        [ -37,  -83],\\n        [ -43,   81],\\n        [  98,  -25],\\n        [ -23, -100],\\n        [   5,   93],\\n        [   5,  -79]]))",
    0.0239
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.13872
  ]
}