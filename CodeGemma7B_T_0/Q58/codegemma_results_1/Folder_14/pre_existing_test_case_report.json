{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00018
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -32,  -77],\\n        [ -67,   72],\\n        [  88,   54],\\n        [ -35,  -52],\\n        [ -66,   14],\\n        [  74, -100],\\n        [ -91,   76],\\n        [ -86,   88],\\n        [  55,   57],\\n        [ -16,  -81],\\n        [  81,   16],\\n        [ -10,  -58],\\n        [ -53,  -80],\\n        [  35,  -71],\\n        [  47,  -29],\\n        [  76,  -58],\\n        [ -63,   29],\\n        [  -2,  -33],\\n        [  37,  -71],\\n        [ -61,   28],\\n        [ -63,    4],\\n        [  26,  -43],\\n        [  57,   97],\\n        [ -90,  -11],\\n        [ -68,  -85],\\n        [ -11,   99],\\n        [ -76,   51],\\n        [   7,   15],\\n        [   7,   98],\\n        [ -53,  -97],\\n        [  18,   -4],\\n        [ -46,  -16],\\n        [ -55,   41],\\n        [ -97,   66],\\n        [ 100,   78],\\n        [ -27,  -38],\\n        [  46,   -8],\\n        [ -67,   67],\\n        [ -43,  -28],\\n        [   9,   -3],\\n        [ -32,   51],\\n        [  67,  -16]]))",
    0.00236
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00049
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.07816
  ]
}