{
  "parameter(s)": [
    68
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00121
  ],
  "test_matrix_of_having_68_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 45, -30],\\n        [ 41,  -7],\\n        [ 15,  28],\\n        [-72,  88],\\n        [ -6,  64],\\n        [ 16, -61],\\n        [ -6, -33],\\n        [ 81, -31],\\n        [  0,  63],\\n        [-68,  16],\\n        [-49, -33],\\n        [ 92, -73],\\n        [  0,  84],\\n        [-52, -75],\\n        [ 75,  63],\\n        [-34,  18],\\n        [ 49,  85],\\n        [ 91, -28],\\n        [ 91, -26],\\n        [ -1, -24],\\n        [ 39, -68],\\n        [ 95,   1],\\n        [-40, -29],\\n        [ -1,  17],\\n        [-32, -58],\\n        [-31,  85],\\n        [-93,  91],\\n        [ 94, -52],\\n        [-17,  55],\\n        [-68, -49],\\n        [ 40, -26],\\n        [ 76, -80],\\n        [-14, -25],\\n        [-66, -22]]))",
    0.00567
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 137",
    0.0004
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 137",
    0.04401
  ]
}