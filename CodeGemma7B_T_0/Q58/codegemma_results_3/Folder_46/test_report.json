{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_46_3.py::test_horizontal_matrix", "location": ["tests58_46_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001212819988722913, "start": 1729858080.6517217, "stop": 1729858080.6518433, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012893799430457875, "start": 1729858080.6519206, "stop": 1729858080.65205, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000149049999890849, "start": 1729858080.652246, "stop": 1729858080.6523955, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_one_integer", "location": ["tests58_46_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.053900142433122e-05, "start": 1729858080.6526458, "stop": 1729858080.6527069, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018108699441654608, "start": 1729858080.6519735, "stop": 1729858080.6521552, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_46_3.py::test_vertical_matrix", "location": ["tests58_46_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.250300066312775e-05, "start": 1729858080.6530173, "stop": 1729858080.65308, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_horizontal_matrix", "location": ["tests58_46_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 58, "message": "assert 0 == 289"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(144)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 144 < 30:", "            num = 4", "        elif 30 <= 144 < 70:", "            num = 3", "        elif 70 <= 144 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 144) + 1", ">           assert output == expected_result", "E           assert 0 == 289"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(144)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 144 < 30:", "            num = 4", "        elif 30 <= 144 < 70:", "            num = 3", "        elif 70 <= 144 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 144) + 1", ">           assert output == expected_result", "E           assert 0 == 289"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 58, "message": "assert 0 == 289"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028551900322781876, "start": 1729858080.6520147, "stop": 1729858080.6523008, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_3.py::test_horizontal_matrix", "location": ["tests58_46_3.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001144620036939159, "start": 1729858080.664453, "stop": 1729858080.6645684, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94,  93],\\n        [ 49, -73],\\n        [ 34, -36],\\n        [ 49, -61],\\n        [-96, -45],\\n        [ 79,  86],\\n        [ 42,  34],\\n        [  5, -77],\\n        [ 28, -20],\\n        [-35, -59],\\n        [ 81, -33],\\n        [ 83,  23],\\n        [ 25,  66],\\n        [ 44, -38],\\n        [-96, -20],\\n        [-68, -37],\\n        [-83,  28],\\n        [ -8,   5],\\n        [ 10, -25],\\n        [ 54, -78],\\n        [-11, -85],\\n        [ 87,  46],\\n        [ 96,  60],\\n        [ 28, -80],\\n        [ 65, -64],\\n        [-54,  13],\\n        [-17, -81],\\n        [ 57,  24],\\n        [ 45,  50],\\n        [ 63, -66],\\n        [ 35,  47],\\n        [-28,  29],\\n        [-81, -26],\\n        [ -8,  98],\\n        [-41, -64],\\n        [-73, -61],\\n        [-95,  63],\\n        [-12,  76],\\n        [-53,  -1],\\n        [ 10, -85],\\n        [ 93,  64],\\n        [ 28,  46],\\n        [-81, -61],\\n        [ 55, -83],\\n        [ 91,   7],\\n        [ 40, -99],\\n        [-76,   9],\\n        [-71, -27],\\n        [-96, -50],\\n        [  9,  37],\\n        [-56,  44],\\n        [-10, -74],\\n        [ 98,  69],\\n        [-49, -16],\\n        [-97, -74],\\n        [ 79, -61],\\n        [-78, -55],\\n        [-80,  16],\\n        [-10, -25],\\n        [ -4, -71],\\n        [ 50,  20],\\n        [ -4,  53],\\n        [-68,  72],\\n        [ 16, -87],\\n        [ 89, -34],\\n        [-89,  85],\\n        [-65,  71],\\n        [ 81,  11],\\n        [ 12, -90],\\n        [-74, -49],\\n        [ 75, -66],\\n        [ 56,  49]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-94,  93],\\n        [ 49, -73],\\n        [ 34, -36],\\n        [ 49, -61],\\n        [-96, -45],\\n        [ 79,  86],\\n        [ 42,  34],\\n        [  5, -77],\\n        [ 28, -20],\\n        [-35, -59],\\n        [ 81, -33],\\n        [ 83,  23],\\n        [ 25,  66],\\n        [ 44, -38],\\n        [-96, -20],\\n        [-68, -37],\\n        [-83,  28],\\n        [ -8,   5],\\n        [ 10, -25],\\n        [ 54, -78],\\n        [-11, -85],\\n        [ 87,  46],\\n        [ 96,  60],\\n        [ 28, -80],\\n        [ 65, -64],\\n        [-54,  13],\\n        [-17, -81],\\n        [ 57,  24],\\n        [ 45,  50],\\n        [ 63, -66],\\n        [ 35,  47],\\n        [-28,  29],\\n        [-81, -26],\\n        [ -8,  98],\\n        [-41, -64],\\n        [-73, -61],\\n        [-95,  63],\\n        [-12,  76],\\n        [-53,  -1],\\n        [ 10, -85],\\n        [ 93,  64],\\n        [ 28,  46],\\n        [-81, -61],\\n        [ 55, -83],\\n        [ 91,   7],\\n        [ 40, -99],\\n        [-76,   9],\\n        [-71, -27],\\n        [-96, -50],\\n        [  9,  37],\\n        [-56,  44],\\n        [-10, -74],\\n        [ 98,  69],\\n        [-49, -16],\\n        [-97, -74],\\n        [ 79, -61],\\n        [-78, -55],\\n        [-80,  16],\\n        [-10, -25],\\n        [ -4, -71],\\n        [ 50,  20],\\n        [ -4,  53],\\n        [-68,  72],\\n        [ 16, -87],\\n        [ 89, -34],\\n        [-89,  85],\\n        [-65,  71],\\n        [ 81,  11],\\n        [ 12, -90],\\n        [-74, -49],\\n        [ 75, -66],\\n        [ 56,  49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_144_integers():", "        if 144 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(144 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(144)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-94,  93],\\n        [ 49, -73],\\n        [ 34, -36],\\n        [ 49, -61],\\n        [-96, -45],\\n        [ 79,  86],\\n        [ 42,  34],\\n        [  5, -77],\\n        [ 28, -20],\\n        [-35, -59],\\n        [ 81, -33],\\n        [ 83,  23],\\n        [ 25,  66],\\n        [ 44, -38],\\n        [-96, -20],\\n        [-68, -37],\\n        [-83,  28],\\n        [ -8,   5],\\n        [ 10, -25],\\n        [ 54, -78],\\n        [-11, -85],\\n        [ 87,  46],\\n        [ 96,  60],\\n        [ 28, -80],\\n        [ 65, -64],\\n        [-54,  13],\\n        [-17, -81],\\n        [ 57,  24],\\n        [ 45,  50],\\n        [ 63, -66],\\n        [ 35,  47],\\n        [-28,  29],\\n        [-81, -26],\\n        [ -8,  98],\\n        [-41, -64],\\n        [-73, -61],\\n        [-95,  63],\\n        [-12,  76],\\n        [-53,  -1],\\n        [ 10, -85],\\n        [ 93,  64],\\n        [ 28,  46],\\n        [-81, -61],\\n        [ 55, -83],\\n        [ 91,   7],\\n        [ 40, -99],\\n        [-76,   9],\\n        [-71, -27],\\n        [-96, -50],\\n        [  9,  37],\\n        [-56,  44],\\n        [-10, -74],\\n        [ 98,  69],\\n        [-49, -16],\\n        [-97, -74],\\n        [ 79, -61],\\n        [-78, -55],\\n        [-80,  16],\\n        [-10, -25],\\n        [ -4, -71],\\n        [ 50,  20],\\n        [ -4,  53],\\n        [-68,  72],\\n        [ 16, -87],\\n        [ 89, -34],\\n        [-89,  85],\\n        [-65,  71],\\n        [ 81,  11],\\n        [ 12, -90],\\n        [-74, -49],\\n        [ 75, -66],\\n        [ 56,  49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_3/Folder_46/tests58_46_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-94,  93],\\n        [ 49, -73],\\n        [ 34, -36],\\n        [ 49, -61],\\n        [-96, -45],\\n        [ 79,  86],\\n        [ 42,  34],\\n        [  5, -77],\\n        [ 28, -20],\\n        [-35, -59],\\n        [ 81, -33],\\n        [ 83,  23],\\n        [ 25,  66],\\n        [ 44, -38],\\n        [-96, -20],\\n        [-68, -37],\\n        [-83,  28],\\n        [ -8,   5],\\n        [ 10, -25],\\n        [ 54, -78],\\n        [-11, -85],\\n        [ 87,  46],\\n        [ 96,  60],\\n        [ 28, -80],\\n        [ 65, -64],\\n        [-54,  13],\\n        [-17, -81],\\n        [ 57,  24],\\n        [ 45,  50],\\n        [ 63, -66],\\n        [ 35,  47],\\n        [-28,  29],\\n        [-81, -26],\\n        [ -8,  98],\\n        [-41, -64],\\n        [-73, -61],\\n        [-95,  63],\\n        [-12,  76],\\n        [-53,  -1],\\n        [ 10, -85],\\n        [ 93,  64],\\n        [ 28,  46],\\n        [-81, -61],\\n        [ 55, -83],\\n        [ 91,   7],\\n        [ 40, -99],\\n        [-76,   9],\\n        [-71, -27],\\n        [-96, -50],\\n        [  9,  37],\\n        [-56,  44],\\n        [-10, -74],\\n        [ 98,  69],\\n        [-49, -16],\\n        [-97, -74],\\n        [ 79, -61],\\n        [-78, -55],\\n        [-80,  16],\\n        [-10, -25],\\n        [ -4, -71],\\n        [ 50,  20],\\n        [ -4,  53],\\n        [-68,  72],\\n        [ 16, -87],\\n        [ 89, -34],\\n        [-89,  85],\\n        [-65,  71],\\n        [ 81,  11],\\n        [ 12, -90],\\n        [-74, -49],\\n        [ 75, -66],\\n        [ 56,  49]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.008941188003518619, "start": 1729858080.652424, "stop": 1729858080.6613662, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_46_3.py::test_matrix_of_having_144_integers", "location": ["tests58_46_3.py", 28, "test_matrix_of_having_144_integers"], "keywords": {"test_matrix_of_having_144_integers": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012193399743409827, "start": 1729858080.6739612, "stop": 1729858080.674084, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw2", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_46_3.py::test_vertical_matrix", "location": ["tests58_46_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.5557173719935236, "start": 1729858080.6531508, "stop": 1729858081.208869, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_46_3.py::test_vertical_matrix", "location": ["tests58_46_3.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_46_3.py": 1, "Folder_46": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014085799921303988, "start": 1729858081.2093935, "stop": 1729858081.209535, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "3da6e3e40b354aa3b4865b34d5f20ee9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
