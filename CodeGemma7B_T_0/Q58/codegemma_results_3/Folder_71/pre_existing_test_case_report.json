{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00023
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 53,  19],\\n        [ -2,  11],\\n        [ 17, 100],\\n        [ 70, -63],\\n        [ 69,  29],\\n        [-14, -71],\\n        [ 99, -82],\\n        [-21,  68],\\n        [-83,  53],\\n        [ 51, -74],\\n        [-93,  83],\\n        [-80,  38],\\n        [-77, -74],\\n        [ 39, -10],\\n        [ 72, -14],\\n        [-75,  46],\\n        [ 61, -31],\\n        [ 24, -73],\\n        [ 91,  52],\\n        [  8,  71],\\n        [-76, -43],\\n        [ 50, -15],\\n        [ 55,   1],\\n        [-31,  -3],\\n        [-82,   8],\\n        [ 89, -33],\\n        [ 25,  24],\\n        [-76, -10],\\n        [-68, -68],\\n        [-88, -93],\\n        [ 50,  24],\\n        [ 26, -51],\\n        [-28, -20],\\n        [-84,  78],\\n        [ 25,  94],\\n        [ 33,  37],\\n        [ 61, -94],\\n        [-42,  97],\\n        [ 74,  -3]]))",
    0.00639
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00048
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.09601
  ]
}