{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   2,   90,   18,   58,   87,  -73,  -45,  -15,  -81,  -33,\\n           68,  -41,   21,   73,   39,    5,   51,   68,   19,  -92,\\n          -23,   16,  -48,   82,  -97,    1,   16,   43,  -84,  -63,\\n          -27,  -42,   87,   -2,  -40,  -76,  -14,   85,  -69,  -25,\\n           49,  -85,  -33,  -96,   42,   99,  -41,   97,  -48,    5,\\n           94,   -1,   -1,   88, -100,   -8,  -19,  -69,   -7,   39,\\n           61,  -59,  -12,  -65,   93,  -64,  -52,  -73,   -7,   86,\\n          -19,   42,  -26,  -64,   65,  -36,  -53,  -75,   63,   99,\\n           -2,   18,   43,   54,   41,  -30,   -9,  -14,   11,   -2,\\n          -83,   81,   89,  -79,   87,  -68,   79,   60,  -86,   -7,\\n          -98,  -46,  -14,   63,   44,   41,   85,    3,   64,  -77,\\n           70,  -92,  -62,   44,  -98,   60,   19,  -52,   96,  -81,\\n          -99]]))",
    0.00537
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.00187
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[121]]))",
    0.00377
  ]
}