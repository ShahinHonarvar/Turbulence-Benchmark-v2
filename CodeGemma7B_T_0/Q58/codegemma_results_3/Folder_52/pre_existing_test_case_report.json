{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00098
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  51,   -8,   -3,  -34,   46,  -94,  -12,  -34,  -39,  -59,\\n          -79,  -18,  -25,  -90,  -60,  -43,   -5,   53,   47,  -67,\\n           11,  -37,  -26,   24,   14,   93,   48,  -40,  -60,  -94,\\n          -73,    2,    8,   91,   21,  -28,   63,   93,  -56,   -4,\\n           14,  -96,  -77,   82,   93,    1,  -14,   80,  -29,  -94,\\n          -62,  -26,  -70,  -96,  -15,   89,  -24,  -69,   42,   62,\\n          -77,  -72,   50,   18,   31,   41,   98,  -36, -100,   64,\\n          -49,   59,   59,   96,   71,  -86,  -51,  -16,   34,   17,\\n           32,   16,  -22,  -65,  -88,   94,  -29,  -63,   62,   -7,\\n          -21,   73,   81,  -35,  -66,  -80,   47,  -50,   47,  -76,\\n           82,  -38,  -40,   43,  -52,   28,  -77,   61,   43,   61,\\n          -84,   78,  -62,  -48,   48,   -3,   55,   42,   40,   87,\\n           57,   96,   68,   66,  -73,   33,   56,  -13,   40,  -45,\\n           79,   17,   55,  -14,  -49,  -94,   71,   30,   37,  -67,\\n           72,   89,    8,  -28,  -52,  -46,  -94]]))",
    0.00345
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00374
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.15124
  ]
}