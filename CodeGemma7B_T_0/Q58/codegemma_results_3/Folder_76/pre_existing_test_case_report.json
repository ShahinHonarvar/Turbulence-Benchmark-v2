{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00091
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00246
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -14,  -57,   36,   -7,   -7,   79,  -10,  -97,    8,   22,\\n          -43,   74,  -99,   -8,  -11,   17,  100,   54,  -89,   29,\\n          -46,   71,   11,   70,  -15,  -22,  -60,   85,   67,  -96,\\n           97,  -65,  -64,    6,   93,   46,   69, -100,  -66,  -91,\\n           55,  -12,  -65,    1,   88,  -86,  -24,  -88,   84,    0,\\n          -74,   97,  -90,  -74,   12,  -89,   10,  -25,   26,   64,\\n           31,  -37,    8,   41,   38,   -7,   -1,  -89,  -67,  -89,\\n          -71,   38,  -72,   91,   47,  -71,   88,  -88,   49,    3,\\n           -8,  -22,   84,   74,   54,   -3,   85,   41,  -95,  -32,\\n          -82,   53,  -87,   96,   45,  -11,   79,  -99,  -93,  -67,\\n          -65,   46,   68,   28,  -89,   33,  -31,   65,   41,    2,\\n           55,  -84,  -95,    3,  -84,  -17,  -94,   30,   83,  -37,\\n          -39,   -8,   37,   33,  -23,  -75,   81,   56,   83,   50,\\n          -69,   43,   79,   -9,  -62,  -69,   62,    4,   71,  -37,\\n           70,   46,  -59,   76,  -79,   28,   98,  -71,  -30,   53,\\n            9,   88,   21,  -38,   42,   33,   75,   88,    8]]))",
    0.00217
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.00044
  ]
}