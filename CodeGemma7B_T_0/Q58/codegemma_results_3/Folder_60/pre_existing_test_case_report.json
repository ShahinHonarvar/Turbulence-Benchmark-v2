{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.00044
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-88, -59],\\n        [ 46, -75],\\n        [ 82,  45],\\n        [  0,  59],\\n        [-81, -33],\\n        [-45,  39],\\n        [  7,  62],\\n        [-73, -64],\\n        [-32, -11],\\n        [-21, -17],\\n        [ 49,  69],\\n        [-58,  78],\\n        [-73,  34],\\n        [-20,  65],\\n        [-41,  28],\\n        [-56, -95],\\n        [  5,  17],\\n        [-98,  29],\\n        [ 71,  79],\\n        [-32, -76],\\n        [-64,   5],\\n        [ -7, -47],\\n        [ 86,  61],\\n        [-75,  53],\\n        [-76, -67],\\n        [-35, -45],\\n        [-52,  81],\\n        [-28,  40],\\n        [ 41, -17],\\n        [ 34,  50],\\n        [-67, -33],\\n        [ 43,  42],\\n        [-32, -52],\\n        [-75,  73],\\n        [-20, -35],\\n        [ 28, -22],\\n        [ 83, -41],\\n        [ 20, -73],\\n        [-40, -88],\\n        [ 44,  77],\\n        [-17,   5],\\n        [-27, -61],\\n        [-39,  70],\\n        [-32,  38]]))",
    0.00655
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.07094
  ]
}