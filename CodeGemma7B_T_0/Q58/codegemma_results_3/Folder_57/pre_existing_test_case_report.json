{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00047
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  29,   31],\\n        [ -81,  -82],\\n        [ -85,  -19],\\n        [  84,   29],\\n        [ -91,   47],\\n        [ -13,  -88],\\n        [  91,  -36],\\n        [  11,   17],\\n        [   5,  -25],\\n        [ -71,  -64],\\n        [  95,   -3],\\n        [  28,   71],\\n        [ -85,   82],\\n        [   5,  -58],\\n        [ -27,   78],\\n        [   8,   82],\\n        [  12,  -23],\\n        [  90,  -64],\\n        [ -12,  -78],\\n        [ -89,  -15],\\n        [  33,    9],\\n        [  15,   92],\\n        [ -29,  -59],\\n        [ -85,  -38],\\n        [  -2,  -69],\\n        [  83,   88],\\n        [ -43,   -2],\\n        [  -1,   51],\\n        [  91,  -60],\\n        [  55,   79],\\n        [ -92,  -57],\\n        [  19,  -90],\\n        [  92,  -66],\\n        [ -75,   24],\\n        [-100,   56],\\n        [  80,  -47],\\n        [  54,   79],\\n        [ -23,  -71],\\n        [ -35,   83],\\n        [  40,   21],\\n        [  47,  -73],\\n        [  95,  -67],\\n        [ -25,  -14],\\n        [ -50,  -33],\\n        [  -3,  -40],\\n        [  95,   22]]))",
    0.00993
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.23499
  ]
}