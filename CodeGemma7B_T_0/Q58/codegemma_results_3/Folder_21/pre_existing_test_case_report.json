{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-65, -20,  73,  96, -85,  18,  54,  25,  94,  87, 100, -34, -90,\\n         -39, -88, -56,   7,   3, -56,  98,  63, -27,  93,  39, -41, -17,\\n         -24, -70,  81, -79, -56,  66, -79,  26, -30,  20, -66,  45, -35,\\n         -25,  52,  76,  25, -99, -54, -15,  18,  87,  23, -72,  -7,  92,\\n          90,  48, -38,  59,  55, -81,  33,  49, -95, -22, -27,  33, -69,\\n          53,  68,  77, -45, -39, -50, -57, -60,  59, -76,  70, -96,  28,\\n         -41,  96, 100,  81, -88, -85,  33, -80, -79,   9,  34,  11,  95,\\n         -12,  16, -63,  18,  12, -53, -40,  14,  32,  46, -18,   6,  84,\\n           4,  87,  81, -28,  99,  80,  53,   0, -72,  79,  78, -76, -25,\\n          35,  42,  36, -19, -51,  92,  61, -22,  84, -94, -34,  55,  38,\\n          -2, -54,  99, -86, -91, -33,   6,  15,  54]]))",
    0.00656
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00297
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.47687
  ]
}