{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00039
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.06723
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-35,  79],\\n        [ 63,  49],\\n        [ 43, -59],\\n        [-55, -11],\\n        [ -9,  11],\\n        [  7, 100],\\n        [ 17,  38],\\n        [  5,  84],\\n        [-37,  73],\\n        [ 74,  69],\\n        [ 54, -90],\\n        [ 20,  33],\\n        [ 89, -88],\\n        [ 58,  46],\\n        [-83,  72],\\n        [ 61, -89],\\n        [-86, -33],\\n        [ 86, -15],\\n        [  3,  48],\\n        [-26,   8],\\n        [-57, -74],\\n        [ 13,  44],\\n        [-16,  97],\\n        [-97,  93],\\n        [ 35, -81],\\n        [-61,  20],\\n        [ 13, 100],\\n        [-15,  36],\\n        [  3,  99],\\n        [-29, -61],\\n        [ 65, -54],\\n        [-81, -33],\\n        [-46, -62],\\n        [-14, -62],\\n        [  6, -62],\\n        [ -5, -44],\\n        [-43, -13],\\n        [ -4, -35],\\n        [ 75,  -5],\\n        [-33,  51],\\n        [-33,  34],\\n        [  5, -70]]))",
    0.00318
  ]
}