{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.00013
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00043
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-38,  50,  91,  14,  65, -17, -80, -64,  91,  79,  -5, -30,  53,\\n          31, -11, -74,  81,  21, -38,  54,  17,  51, -76,  37, -64, -57,\\n          42,  83,   2, -48,  89, -48,  48, -44,  65,  97, -19, -59,  83,\\n         -71, -20, -78,  46, -39, -15,  81, -49,  11, -97,  57,  48, -40,\\n          26, -53, -46,  66,  40,  50, -66,  73,  63, -23, -35,  81,  29,\\n         -65, -72,  12,  48,  65,  69,  18,  17,   6, -57, -98,   4, -52,\\n         -18,  -5,  31,  12, -42, 100, -37, -54,  44, -39,  22, -64,  66,\\n          -9,  18, -12, -77, -10,  17,  82,  57, -62, -41,  -7, -35,   5,\\n          28, -16, -12, -13,  49, -10, -91, -95, -91, -78,  71,  71,  30,\\n          53, -56, -33,  47, -86, -51,  75, -50,  58, -39, -53, -58, -33,\\n         -33, -71, -25, -30, -27, -23,  20, -44, -12, -25,  33, -60, -44,\\n          50,  71, -55,  88, -18, -38,  27,  95, -35,  33,  99,  83,  71,\\n          24, -23,  95,  -4, -29, -31, -97, -13,  90, -32,  28, -29, -89,\\n         -30, -67,   9, -24, -34, -13]]))",
    0.00102
  ]
}