{
  "parameter(s)": [
    127
  ],
  "test_matrix_of_having_127_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-27,  83,  35, -54, -80,  80,  29,  20, -42, -92,  33, -55, -91,\\n         -73, -69,   4, -33,  58,  93,  79,  93, -41, -34, -35,  44,  33,\\n         -89, -50,  35, -94, -74, -94,  95,  74, -56,  63, -36, -68,  55,\\n          68,  30,   7, -53, -95,  75,  62,  85,  20,  90, -56,  52,  77,\\n           4, -43, -78, -13, -70,  26, -61,  36, -35,  71, -21, -69, -76,\\n          60,   4,   6, -57,  48, -53, -79,  64, -29,  -6, -96, -92,  65,\\n          99, -31, -85,  79,  44,  61,  81,  71, -55,  89,  -8,  11, -44,\\n          -1,  52, -92, -64, -20,  70, -99,  46,  98, -72,  41, -60, -78,\\n         -43, -94, -86, -40, -96,  70,   9,  43, -12, -47,  17,  15,   8,\\n         -31,  -3, -44,  20,  21,  59,  72, -48,  34, -65]]))",
    0.00271
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 255",
    0.00052
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[127]]))",
    0.00229
  ]
}