{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00046
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.05772
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-81, -64],\\n        [  5,  57],\\n        [-58, -79],\\n        [-71,  79],\\n        [-85,  41],\\n        [ 29, -22],\\n        [-22,  75],\\n        [ 63,  24],\\n        [-55,  39],\\n        [ 96,  98],\\n        [-38, -41],\\n        [-80, -82],\\n        [ 83,   8],\\n        [-45,  17],\\n        [-57, -76],\\n        [-29,  50],\\n        [-52,  63],\\n        [  1, -46],\\n        [-99, -90],\\n        [ -4, -64],\\n        [ 75,  22],\\n        [ 51, 100],\\n        [ 44,  84],\\n        [-94,  50],\\n        [-66,  60],\\n        [ 19,   8],\\n        [ 91,  74],\\n        [ -3, -73],\\n        [ 41, -68],\\n        [ 30, -74],\\n        [-78,  17],\\n        [-14,  50],\\n        [ 42,  58],\\n        [-10, -28],\\n        [ 53,  54],\\n        [ -2, -38],\\n        [ 55,  39],\\n        [-12,  -2],\\n        [  0,  98],\\n        [  1, -33],\\n        [-20,  36],\\n        [-16,  50]]))",
    0.00233
  ]
}