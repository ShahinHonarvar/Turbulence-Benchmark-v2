{
  "parameter(s)": [
    78
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_78_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-36,  69],\\n        [-57,  88],\\n        [ 12,  95],\\n        [-63, -34],\\n        [ -8, -46],\\n        [ 56, -55],\\n        [-57,  62],\\n        [-16, -88],\\n        [-52, -64],\\n        [  7,  96],\\n        [ -3, -49],\\n        [-99, -15],\\n        [ 20, -87],\\n        [ 71, -59],\\n        [ 61,  32],\\n        [-26,  -6],\\n        [ 90,  76],\\n        [ 78,   4],\\n        [ 15,  54],\\n        [-66, -68],\\n        [ 34, -52],\\n        [ 65,  59],\\n        [ 65,  67],\\n        [-72, -36],\\n        [-61, -30],\\n        [ 35,  72],\\n        [ 45, -48],\\n        [  9, -11],\\n        [-31, -59],\\n        [-32, -38],\\n        [ 52, -81],\\n        [ 11,  -6],\\n        [ 20, -30],\\n        [-67,  30],\\n        [-51,  96],\\n        [  1, -30],\\n        [-45, -96],\\n        [ 34,  83],\\n        [ 25, -81]]))",
    0.00567
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 157",
    0.00041
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 157",
    0.09372
  ]
}