{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.0001
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 371",
    0.00035
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-42, -82,  44, -39, -49,  89, -10, -70,  74,  94,   7, -89,   9,\\n          17,  84,  66,  17,  60, -28,  18,  87,  85, -49, -49,  69,  58,\\n          62,  96,  26,  41,  72, -33,   0,  61, -24,  65,  78, -11, -28,\\n         -39,  -8, -73,  85,  52,  92,  63, -13,  15, -19,   5, -96,  91,\\n         -96, -46,  13, -14, -36, -90,  82, -89, -93, -60,  38,  77, -29,\\n           1,   8,  55, -52,  50, -54, -15, -37, -56, -88,   4,  73, -20,\\n          32,  51,  25,  -9,  -7,  98,   6, -11,  39, -21, -96,  80,  70,\\n          72, -33,  11,  56,  15,  24,  62,  88,  -4,  95,   0, -18,  77,\\n         -28,  30, -88, -69,  53,  34,  66,  36,  76, -74, -82,   4, -75,\\n          77,  99, -47, -15,  22, -68,  87,  41, -50, -79,  84, -97,  13,\\n          90, -10,  20,  60, -92,  -6, -11,   6,  -7,  -2, -64,  42,  42,\\n          22,  52,  95, -32,  86,   4, -30,  31, -97, -76,  61, -60, -79,\\n         -82,  88,  79,  75, -69, -92,  75, -18, -65,  28, -99, -13, -89,\\n         -60, -51, -53, -97,  98,  81,  50, -74,  86,  59,  91,  84,  54,\\n          56,  25, -50]]))",
    0.00094
  ]
}