{
  "parameter(s)": [
    104
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00019
  ],
  "test_matrix_of_having_104_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  50,  -23],\\n        [  10,   24],\\n        [  -2,   98],\\n        [  69,   95],\\n        [  18,   65],\\n        [ -66,  -76],\\n        [  -8,  -90],\\n        [   6,  -72],\\n        [   3,  -15],\\n        [  90,  -91],\\n        [  26,   94],\\n        [ -85,   79],\\n        [  25, -100],\\n        [ -83,   84],\\n        [ -44,  -27],\\n        [   1,   83],\\n        [ -70,  -82],\\n        [  -4,   58],\\n        [  -6,   72],\\n        [ -68,   94],\\n        [ -63,   75],\\n        [ -57,  -80],\\n        [  90,   27],\\n        [ -65,    0],\\n        [ -36,   21],\\n        [ -61,  -48],\\n        [  57,  -56],\\n        [  86,   61],\\n        [  91,   13],\\n        [  97,   42],\\n        [  20,  -85],\\n        [ 100,  -94],\\n        [ -20,  -15],\\n        [ -30,  -61],\\n        [  85,  -15],\\n        [  99,  -84],\\n        [  25,   64],\\n        [  23,  -41],\\n        [ -80,   38],\\n        [ -88,  -90],\\n        [  18,  -61],\\n        [  82,  -78],\\n        [   4,   89],\\n        [  94,   36],\\n        [ -25,    1],\\n        [ -90,   46],\\n        [  92,   -1],\\n        [  46,   91],\\n        [  83,   68],\\n        [  34,   91],\\n        [  80,   98],\\n        [ -82,   -2]]))",
    0.00379
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 209",
    0.00047
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 209",
    0.06024
  ]
}