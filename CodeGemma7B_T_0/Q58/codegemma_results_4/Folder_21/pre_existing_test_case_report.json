{
  "parameter(s)": [
    139
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_139_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16,  68, -97,   4,  60,  23,  25, -51, -87, -38, -80,  10, -74,\\n         -91, -99,  10, -32, -77, -57,  31, -53, -82,  11,  33,  70, -73,\\n         -43, -38, -27, -34, -63, -58,  62,  88,  96,  37,  67, -85, -51,\\n          -6,  77,  68,  75, -86,  61, -79,  66, -64, -77,  -1, -20, -49,\\n          16,  46,  41,   9,  50,  92, -73,  36,  83,  84, -15, -70,  41,\\n          33, -45,  15,  79,  32,   4, -73,  55,  11,  13, -33,  44,  81,\\n          94, -73,  38, -94,  79,  85,  -2,  14,  93,  92, -53, -35,  24,\\n           0,  85,  25, -34, -84, -29, -91,  56,  63, -19,  61, -89, -78,\\n         -19,   3,  51,  94,  34, -79,  34,  15,  47,  31,  84,  14, -45,\\n         -72, -81,  28,  92, -84, -18, -32, -67, -28,  19,  24,  65, -26,\\n         -25,  68, -27,  88,  64,   0,  66,  92,  -7]]))",
    0.00086
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 279",
    0.00059
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 279",
    0.35903
  ]
}