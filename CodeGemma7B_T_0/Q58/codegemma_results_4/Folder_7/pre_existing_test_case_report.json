{
  "parameter(s)": [
    121
  ],
  "test_matrix_of_having_121_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  0,  28,  88,   5, -62,  69,  12, -14, -93, -68,  57, -94,  24,\\n           6,  47,  69,  -2, -21, -11,  -1,  11,  85, -54,  68, -66, -84,\\n          32, -77, -34,  67, -81,  27, -97, -74, -46,  28, -74,  36, -30,\\n         -15,  64, -14,  55, -50, -52,  -9, -70, -56,  -5,  99,  31, -57,\\n          17, -63, -17,  21, -61, -62,  50, -22,  92, -11, -70, -18,  16,\\n         -60, -97, -43,  63,  29, -99, -83,  37,  83, -93,  73, -28,  99,\\n          77, -39,  28, -48, -71,  95, -60,  -2,  85,  63, -68, -59, -68,\\n          97,   8,   5,  23,  -8,  51, -10,  85,   3, -20,  66, -54, -38,\\n          42,  21, -57, -31,  57, -50,  51, -45, -14,  95,  81,  79,  35,\\n          35, -10,  84,  59]]))",
    0.00098
  ],
  "test_matrix_of_one_integer": [
    "failed",
    "assert not 1\n +  where 1 = submatrix_with_n_numbers(matrix([[121]]))",
    0.00048
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 243",
    0.00051
  ]
}