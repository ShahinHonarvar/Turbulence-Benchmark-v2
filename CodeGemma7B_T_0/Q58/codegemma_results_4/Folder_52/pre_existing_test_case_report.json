{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00042
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   9,   63,   64,   25,   22,  -47,  -77,  -39,  -29,   55,\\n           12,    5,   -1,   39,   85,  -61,   31,  -49,   34,   98,\\n           37,    1,   24,   90,   92,  -55,  -39,   23,   23,  -65,\\n          -12,   92,  -33,  -85,   41,   40,  -25,   55,  -58,   73,\\n           14,  -41,  -30,  -24,   55,  -45,  -25,  -98,  -75,  -86,\\n          -81,   78,   82,   45,   53,   23,  -78,  -59,   47,  -43,\\n          -61,  -78,  -99,  -71,   22,   15,   92,  -43,  -66,  -35,\\n          -84,   66,   55,   58, -100,  -17,  -59,   40,  -85,  -70,\\n          -90,  100,   53,  -18,  -98,  -22,   67,  -75,   50,   79,\\n           -8,   91,  -79,   -4,   66,   -3,  -70,   85,   -9,  -35,\\n          -92,   18,    3,   83,   39,  -64,    0,   52,  -18,   -3,\\n          -75,  -71,   -4,   80,  -29,  -80,   -1,   96,  -42,  -58,\\n           35,  -97,  -96,  -15,   83,   37,    2,   45,   29,   73,\\n           81,   61,   42,  -49,  -26,  -46,  -72,  -44,  -84,  -57,\\n            8,  -29,   13,  -55,   60,   57,  -34]]))",
    0.00084
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.11711
  ]
}