{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-37,  32],\\n        [ 39,  66],\\n        [-63,  92],\\n        [ 98, -58],\\n        [ 59,  91],\\n        [100, -68],\\n        [ -9, -78],\\n        [ 56,  -4],\\n        [-45,  74],\\n        [-72,  16],\\n        [ -8,  98],\\n        [-98, -98],\\n        [-57,  91],\\n        [-49, -86],\\n        [ 43, -77],\\n        [ 46,  50],\\n        [ 59,  21],\\n        [-84,  58],\\n        [-58, -17],\\n        [-95,  40],\\n        [100,  37],\\n        [ 69,  52],\\n        [ 37,  70],\\n        [ 66, -43],\\n        [-79,  54],\\n        [ 27,  42],\\n        [-51,  11],\\n        [-87, -96],\\n        [ 82,  36],\\n        [-78,  12],\\n        [-46,  42],\\n        [ 88, -71],\\n        [-49, -30],\\n        [-86, -20],\\n        [-21,  67],\\n        [-94,   5],\\n        [-97, -58],\\n        [-70,  70],\\n        [  0, -18],\\n        [ 81, -56],\\n        [-83,  74],\\n        [-18,  26],\\n        [ 64,   2],\\n        [ -1,  52],\\n        [-85,  61],\\n        [ 22,  21]]))",
    0.00635
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.27484
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00038
  ]
}