{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    8e-05
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -65,    3,  -83,  -17,   77,   82,  -42,  -72,  -40,   13,\\n           96,   74,   82,   47,   26,   54,   85,   79,  -53,  -61,\\n            1,  -12,   -7,  -97,   35,   85,  -12,  -44,  -31,   76,\\n           84,  -51,  -14,  -31,   17,   90,  -16,   16,  -59,  -56,\\n          -17,   75,  -74,   10,   57,   45,   11,   97,  -87,   34,\\n           88,   47,  -84,  -90,   70,  -41,  -36,   85,   39,  -14,\\n          -94,  -65,   46,   17,  -65,  -77,  -43,   86,   86,   53,\\n           73,  -71,  -55,   22,  -43,   86,  -96,   16,   33,  -29,\\n           -2,   -8,   78,  -73,  -97,  -63, -100,  -79,   36,  -44,\\n           32,  -33,  -64,  -47,   12,   61,  -83,   61,  -33,   40,\\n           31,   68,   95,  -70,  -84,  -38,   33,  -38,  -90,   -9,\\n           -6,   24,   69,   48,   29,  -51,   -5,   82,   76,   60,\\n          -17,   84,  -13,  -20,   80,  -57,  -90,   93,  -14,   77,\\n          -99,  -24,   49,   35,   86,  -49,  -25,   13,  -64,   22,\\n           53,  -96,  -17,  -59,  -65,   90,  -32,  -21,   51,   71,\\n           51,   61,    3,   -4,  -91,  -72,   53,  -14,   64]]))",
    0.00115
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 319",
    0.0004
  ]
}