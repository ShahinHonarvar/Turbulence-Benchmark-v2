{
  "parameter(s)": [
    84
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 169",
    0.00068
  ],
  "test_matrix_of_having_84_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-27, -43],\\n        [-90,  58],\\n        [ 71,  43],\\n        [ 60, -66],\\n        [-88,  -3],\\n        [ 36,  39],\\n        [ -7, -44],\\n        [ 94, -75],\\n        [-69,  69],\\n        [-28,  60],\\n        [-88,  51],\\n        [ 99, -24],\\n        [-42,  88],\\n        [-19,  85],\\n        [-31, -36],\\n        [-76,   8],\\n        [ 37,  34],\\n        [-56, -39],\\n        [-67,  18],\\n        [ 74, -86],\\n        [ 94, -17],\\n        [-47, -39],\\n        [ 40, -21],\\n        [-78, -60],\\n        [ 17,  53],\\n        [-12,  37],\\n        [-69, -59],\\n        [ 91,  -9],\\n        [ 87, -60],\\n        [ 44,  53],\\n        [-85, -64],\\n        [ -8, -59],\\n        [-78, -65],\\n        [  1, -42],\\n        [ 37,  -4],\\n        [  9, -79],\\n        [-91, -41],\\n        [  6,  93],\\n        [ 66, -42],\\n        [-55,  29],\\n        [-46, -63],\\n        [ 35,  96]]))",
    0.00225
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 169",
    0.09177
  ]
}