{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests58_13_2.py::test_matrix_of_one_integer", "location": ["tests58_13_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0007734870014246553, "start": 1729857024.403815, "stop": 1729857024.4045897, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_2.py::test_matrix_of_one_integer", "location": ["tests58_13_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002261929985252209, "start": 1729857024.40491, "stop": 1729857024.4051368, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_2.py::test_matrix_of_one_integer", "location": ["tests58_13_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.328200394520536e-05, "start": 1729857024.4055312, "stop": 1729857024.4056249, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_2.py::test_vertical_matrix", "location": ["tests58_13_2.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.54549977905117e-05, "start": 1729857024.4061112, "stop": 1729857024.406207, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_2.py::test_matrix_of_having_175_integers", "location": ["tests58_13_2.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001633179999771528, "start": 1729857024.406575, "stop": 1729857024.4067388, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_2.py::test_horizontal_matrix", "location": ["tests58_13_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017716499860398471, "start": 1729857024.422445, "stop": 1729857024.4226227, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_13_2.py::test_matrix_of_having_175_integers", "location": ["tests58_13_2.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -8,  74,  25, -15,  67, -52, -63,  31, -94,  79, -29, -51, -73,\\n          67, -86,  48, -71,  55,  -6, -18,  83, -60,  54,  41,  91,  91,\\n          63, -85,  56, -17, -18,  42,  46,  19,  88,  86,  47, -87, -64,\\n          33, -46, -99,  57, -36,  90,  24,  61, -30,  94,  59,  41, -91,\\n         -86,  89,  36,  29,  33,  29,  66,  22,  94,  45, -10,  70,  45,\\n          79, -68,  17,  -5, -48, -10, -75,  48, -76,  94, -64,  37,  84,\\n         -55,  54,  -1, -68, -52,  -4,  -8,  34, -48,  69,  67,  24,  10,\\n          15, -27,   9,  37,  26, -35,  99, -25, -15,  72, -45, -13,  37,\\n         -97, -58, -88,   1, -60, -67, -78, -58, -11, -70,   4, -76, -61,\\n           1,  66, -79, -40, -77, -21, -10,  52, -27,  42,  33,  98,  56,\\n         -79,   3,  16,  20, -49,  -4,  61,  92,   0, -41, -33,  -3,   3,\\n          56,  -5,  -5,  81, -31, -76,  23,  93,  92,  11, -44,  23, -45,\\n          63,  62,  17, -31,  91,  23, -25,  76,  45, -75, -32,  -2, -45,\\n         -80, -70,  -9,   8,  76,  31]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -8,  74,  25, -15,  67, -52, -63,  31, -94,  79, -29, -51, -73,\\n          67, -86,  48, -71,  55,  -6, -18,  83, -60,  54,  41,  91,  91,\\n          63, -85,  56, -17, -18,  42,  46,  19,  88,  86,  47, -87, -64,\\n          33, -46, -99,  57, -36,  90,  24,  61, -30,  94,  59,  41, -91,\\n         -86,  89,  36,  29,  33,  29,  66,  22,  94,  45, -10,  70,  45,\\n          79, -68,  17,  -5, -48, -10, -75,  48, -76,  94, -64,  37,  84,\\n         -55,  54,  -1, -68, -52,  -4,  -8,  34, -48,  69,  67,  24,  10,\\n          15, -27,   9,  37,  26, -35,  99, -25, -15,  72, -45, -13,  37,\\n         -97, -58, -88,   1, -60, -67, -78, -58, -11, -70,   4, -76, -61,\\n           1,  66, -79, -40, -77, -21, -10,  52, -27,  42,  33,  98,  56,\\n         -79,   3,  16,  20, -49,  -4,  61,  92,   0, -41, -33,  -3,   3,\\n          56,  -5,  -5,  81, -31, -76,  23,  93,  92,  11, -44,  23, -45,\\n          63,  62,  17, -31,  91,  23, -25,  76,  45, -75, -32,  -2, -45,\\n         -80, -70,  -9,   8,  76,  31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -8,  74,  25, -15,  67, -52, -63,  31, -94,  79, -29, -51, -73,\\n          67, -86,  48, -71,  55,  -6, -18,  83, -60,  54,  41,  91,  91,\\n          63, -85,  56, -17, -18,  42,  46,  19,  88,  86,  47, -87, -64,\\n          33, -46, -99,  57, -36,  90,  24,  61, -30,  94,  59,  41, -91,\\n         -86,  89,  36,  29,  33,  29,  66,  22,  94,  45, -10,  70,  45,\\n          79, -68,  17,  -5, -48, -10, -75,  48, -76,  94, -64,  37,  84,\\n         -55,  54,  -1, -68, -52,  -4,  -8,  34, -48,  69,  67,  24,  10,\\n          15, -27,   9,  37,  26, -35,  99, -25, -15,  72, -45, -13,  37,\\n         -97, -58, -88,   1, -60, -67, -78, -58, -11, -70,   4, -76, -61,\\n           1,  66, -79, -40, -77, -21, -10,  52, -27,  42,  33,  98,  56,\\n         -79,   3,  16,  20, -49,  -4,  61,  92,   0, -41, -33,  -3,   3,\\n          56,  -5,  -5,  81, -31, -76,  23,  93,  92,  11, -44,  23, -45,\\n          63,  62,  17, -31,  91,  23, -25,  76,  45, -75, -32,  -2, -45,\\n         -80, -70,  -9,   8,  76,  31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -8,  74,  25, -15,  67, -52, -63,  31, -94,  79, -29, -51, -73,\\n          67, -86,  48, -71,  55,  -6, -18,  83, -60,  54,  41,  91,  91,\\n          63, -85,  56, -17, -18,  42,  46,  19,  88,  86,  47, -87, -64,\\n          33, -46, -99,  57, -36,  90,  24,  61, -30,  94,  59,  41, -91,\\n         -86,  89,  36,  29,  33,  29,  66,  22,  94,  45, -10,  70,  45,\\n          79, -68,  17,  -5, -48, -10, -75,  48, -76,  94, -64,  37,  84,\\n         -55,  54,  -1, -68, -52,  -4,  -8,  34, -48,  69,  67,  24,  10,\\n          15, -27,   9,  37,  26, -35,  99, -25, -15,  72, -45, -13,  37,\\n         -97, -58, -88,   1, -60, -67, -78, -58, -11, -70,   4, -76, -61,\\n           1,  66, -79, -40, -77, -21, -10,  52, -27,  42,  33,  98,  56,\\n         -79,   3,  16,  20, -49,  -4,  61,  92,   0, -41, -33,  -3,   3,\\n          56,  -5,  -5,  81, -31, -76,  23,  93,  92,  11, -44,  23, -45,\\n          63,  62,  17, -31,  91,  23, -25,  76,  45, -75, -32,  -2, -45,\\n         -80, -70,  -9,   8,  76,  31]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000775301996327471, "start": 1729857024.4069853, "stop": 1729857024.4077609, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_2.py::test_matrix_of_having_175_integers", "location": ["tests58_13_2.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001522210004623048, "start": 1729857024.4469297, "stop": 1729857024.4470828, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_2.py::test_horizontal_matrix", "location": ["tests58_13_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 58, "message": "assert 0 == 351"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(175)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 175 < 30:", "            num = 4", "        elif 30 <= 175 < 70:", "            num = 3", "        elif 70 <= 175 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 175) + 1", ">           assert output == expected_result", "E           assert 0 == 351"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_horizontal_matrix():", "        mat = [[random.randint(-10, 10) for _ in range(175)]]", "        mat = np.asmatrix(mat)", "        m = np.concatenate((mat, mat), axis=1)", "        if 175 < 30:", "            num = 4", "        elif 30 <= 175 < 70:", "            num = 3", "        elif 70 <= 175 < 150:", "            num = 2", "        else:", "            num = 1", "        for i in range(num):", "            m = np.concatenate((m, mat), axis=1)", "            output = submatrix_with_n_numbers(m)", "            expected_result = ((i + 2) * 175) + 1", ">           assert output == expected_result", "E           assert 0 == 351"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q58/codegemma_results_2/Folder_13/tests58_13_2.py", "lineno": 58, "message": "assert 0 == 351"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00044264300231589004, "start": 1729857024.4228814, "stop": 1729857024.4233243, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_13_2.py::test_horizontal_matrix", "location": ["tests58_13_2.py", 40, "test_horizontal_matrix"], "keywords": {"test_horizontal_matrix": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014280500181484967, "start": 1729857024.456565, "stop": 1729857024.456709, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw2>"}
{"nodeid": "tests58_13_2.py::test_vertical_matrix", "location": ["tests58_13_2.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.27154324000002816, "start": 1729857024.4063187, "stop": 1729857024.6778626, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw1>"}
{"nodeid": "tests58_13_2.py::test_vertical_matrix", "location": ["tests58_13_2.py", 60, "test_vertical_matrix"], "keywords": {"test_vertical_matrix": 1, "__wrapped__": 1, "tests58_13_2.py": 1, "Folder_13": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.239499922841787e-05, "start": 1729857024.678211, "stop": 1729857024.6783037, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "99b89adba1e0415f8d6258c1a1aa4129", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
