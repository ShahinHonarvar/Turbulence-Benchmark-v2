{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00077
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    0.0001
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -8,  74,  25, -15,  67, -52, -63,  31, -94,  79, -29, -51, -73,\\n          67, -86,  48, -71,  55,  -6, -18,  83, -60,  54,  41,  91,  91,\\n          63, -85,  56, -17, -18,  42,  46,  19,  88,  86,  47, -87, -64,\\n          33, -46, -99,  57, -36,  90,  24,  61, -30,  94,  59,  41, -91,\\n         -86,  89,  36,  29,  33,  29,  66,  22,  94,  45, -10,  70,  45,\\n          79, -68,  17,  -5, -48, -10, -75,  48, -76,  94, -64,  37,  84,\\n         -55,  54,  -1, -68, -52,  -4,  -8,  34, -48,  69,  67,  24,  10,\\n          15, -27,   9,  37,  26, -35,  99, -25, -15,  72, -45, -13,  37,\\n         -97, -58, -88,   1, -60, -67, -78, -58, -11, -70,   4, -76, -61,\\n           1,  66, -79, -40, -77, -21, -10,  52, -27,  42,  33,  98,  56,\\n         -79,   3,  16,  20, -49,  -4,  61,  92,   0, -41, -33,  -3,   3,\\n          56,  -5,  -5,  81, -31, -76,  23,  93,  92,  11, -44,  23, -45,\\n          63,  62,  17, -31,  91,  23, -25,  76,  45, -75, -32,  -2, -45,\\n         -80, -70,  -9,   8,  76,  31]]))",
    0.00078
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 351",
    0.00044
  ]
}