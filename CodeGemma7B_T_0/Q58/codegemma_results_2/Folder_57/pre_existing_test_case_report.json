{
  "parameter(s)": [
    92
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_matrix_of_having_92_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -60,   96],\\n        [ -40,  -39],\\n        [   9,  -19],\\n        [  46,   22],\\n        [ -17,  -57],\\n        [  14,   25],\\n        [  14,  -73],\\n        [  87,   20],\\n        [  49,    3],\\n        [  72,   12],\\n        [  22,  -75],\\n        [  38,   35],\\n        [  68,   28],\\n        [ -52,  -58],\\n        [  -9,  -67],\\n        [ -21,   39],\\n        [ -87,  -69],\\n        [  62,   56],\\n        [ -42,   95],\\n        [  86,   27],\\n        [  67,   39],\\n        [  18,  -50],\\n        [  58,  100],\\n        [ 100,   63],\\n        [  16,   85],\\n        [  94,  -55],\\n        [  35,  -64],\\n        [ -69,  -35],\\n        [  -4,   23],\\n        [  56,    2],\\n        [  96,  -43],\\n        [  35,  -65],\\n        [  86,  -40],\\n        [  12,    8],\\n        [ -40, -100],\\n        [  95,   54],\\n        [  20,  -52],\\n        [  15,  -76],\\n        [   2,   48],\\n        [  -5,   88],\\n        [  21,   81],\\n        [  49,   66],\\n        [ -61,  -72],\\n        [ -38,    2],\\n        [ -61,   37],\\n        [  29,   48]]))",
    0.00861
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 185",
    0.00075
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 185",
    0.14018
  ]
}