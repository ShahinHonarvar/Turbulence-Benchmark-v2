{
  "parameter(s)": [
    147
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0002
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 295",
    0.00045
  ],
  "test_matrix_of_having_147_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -68,  -89,  -47,  -60,  -64,   19,   33,   64,   51,  -35,\\n           88,  -45,  -93,   35,  -22,   49,   53,   -8,  -80,  -58,\\n          -35,  -71,  -94, -100,   47,   92,   74,   45,  -59,  -28,\\n          -74,  -43,  -54,   27,  -57,   -1,  -14,   20,   74,  -37,\\n           40,   74,   86,  -38,   17,  -70,  -99,  -60,   -7,   97,\\n           65,   63,   64,   79,   28,  -61,   95,   75,  -24,  -73,\\n           -4,   87,  -26,   29,  -51,   72,  -89,  -43,  -45,   43,\\n           14,   39,  -59,   46,  -10,   60,    4,   68,  -60,  -51,\\n          -26,  -27,   78,   29,  -68,   87,   77,   85,  -70,   42,\\n           26,    9,  -99,   57,   91,   68,   19,  -56,  -83,   98,\\n           34,  -71,  -53,   59,   -4,  -44,   71,    2,   90,  -49,\\n           20,  -97,  -84,    8,   44,   59,   64,  -41,   40,   32,\\n           81,  -47,   52,   -7,   47,   68,   27,  -27,   93,   -3,\\n          -79,   -9,  -28,   96,   57,  -67,  -55,  -83,  -17,  -44,\\n           93,   56,  -40,   79,  -71,  -80,   99]]))",
    0.0009
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 295",
    0.16522
  ]
}