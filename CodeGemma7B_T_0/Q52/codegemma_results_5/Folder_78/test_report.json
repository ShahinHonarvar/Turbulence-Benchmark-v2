{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_78_5.py::test_string_of_identical_nums", "location": ["tests52_78_5.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0015570580035273451, "start": 1729834227.2064466, "stop": 1729834227.2080042, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_78_5.py::test_string_of_spaces_and_letters", "location": ["tests52_78_5.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017675900016911328, "start": 1729834227.2072277, "stop": 1729834227.207405, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_spaces_and_letters", "location": ["tests52_78_5.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005171430020709522, "start": 1729834227.207675, "stop": 1729834227.2081926, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_spaces_and_letters", "location": ["tests52_78_5.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010326000119675882, "start": 1729834227.2085555, "stop": 1729834227.2086592, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_many_chars", "location": ["tests52_78_5.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.002461132000462385, "start": 1729834227.2065852, "stop": 1729834227.209047, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_78_5.py::test_string_of_many_chars", "location": ["tests52_78_5.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003666909979074262, "start": 1729834227.2093995, "stop": 1729834227.209767, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_78_5.py::test_string_of_many_chars", "location": ["tests52_78_5.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001179430000775028, "start": 1729834227.2102165, "stop": 1729834227.2103353, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_78_5.py::test_string_of_punctuations_and_letters", "location": ["tests52_78_5.py", 21, "test_string_of_punctuations_and_letters"], "keywords": {"test_string_of_punctuations_and_letters": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016894399959710427, "start": 1729834227.2135165, "stop": 1729834227.2136862, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_punctuations_and_letters", "location": ["tests52_78_5.py", 21, "test_string_of_punctuations_and_letters"], "keywords": {"test_string_of_punctuations_and_letters": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016689099720679224, "start": 1729834227.213859, "stop": 1729834227.2140265, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_punctuations_and_letters", "location": ["tests52_78_5.py", 21, "test_string_of_punctuations_and_letters"], "keywords": {"test_string_of_punctuations_and_letters": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010318700151401572, "start": 1729834227.2143338, "stop": 1729834227.2144375, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_length_of_palindrome", "location": ["tests52_78_5.py", 36, "test_length_of_palindrome"], "keywords": {"test_length_of_palindrome": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001085539988707751, "start": 1729834227.2155461, "stop": 1729834227.2156549, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_length_of_palindrome", "location": ["tests52_78_5.py", 36, "test_length_of_palindrome"], "keywords": {"test_length_of_palindrome": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007193569981609471, "start": 1729834227.2157662, "stop": 1729834227.2164865, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_length_of_palindrome", "location": ["tests52_78_5.py", 36, "test_length_of_palindrome"], "keywords": {"test_length_of_palindrome": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.295900235883892e-05, "start": 1729834227.2168167, "stop": 1729834227.2169101, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_spaces", "location": ["tests52_78_5.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018769099915516563, "start": 1729834227.2156513, "stop": 1729834227.21584, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_78_5.py::test_length_equal_to_48", "location": ["tests52_78_5.py", 49, "test_length_equal_to_48"], "keywords": {"test_length_equal_to_48": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001275750000786502, "start": 1729834227.218103, "stop": 1729834227.2182312, "$report_type": "TestReport", "item_index": 8, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_length_equal_to_48", "location": ["tests52_78_5.py", 49, "test_length_equal_to_48"], "keywords": {"test_length_equal_to_48": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002770270002656616, "start": 1729834227.2183647, "stop": 1729834227.2186422, "extras": [], "$report_type": "TestReport", "item_index": 8, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_length_equal_to_48", "location": ["tests52_78_5.py", 49, "test_length_equal_to_48"], "keywords": {"test_length_equal_to_48": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.617200001026504e-05, "start": 1729834227.2188916, "stop": 1729834227.2189784, "$report_type": "TestReport", "item_index": 8, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_identical_punctuations", "location": ["tests52_78_5.py", 54, "test_string_of_identical_punctuations"], "keywords": {"test_string_of_identical_punctuations": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001156149992311839, "start": 1729834227.219877, "stop": 1729834227.2199934, "$report_type": "TestReport", "item_index": 9, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_identical_punctuations", "location": ["tests52_78_5.py", 54, "test_string_of_identical_punctuations"], "keywords": {"test_string_of_identical_punctuations": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "re.error: unterminated character set at position 4"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_punctuations():", "        s = '@' * (48 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/tests52_78_5.py", "lineno": 57, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(pattern, text))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/generated_answer.py", "lineno": 6, "message": "in palindrome_of_length_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 979, "message": "in parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 775, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, sub_verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 862, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _parse(source, state, verbose, nested, first=False):", "        # parse a simple pattern", "        subpattern = SubPattern(state)", "    ", "        # precompute constants into local variables", "        subpatternappend = subpattern.append", "        sourceget = source.get", "        sourcematch = source.match", "        _len = len", "        _ord = ord", "    ", "        while True:", "    ", "            this = source.next", "            if this is None:", "                break # end of pattern", "            if this in \"|)\":", "                break # end of subpattern", "            sourceget()", "    ", "            if verbose:", "                # skip whitespace and comments", "                if this in WHITESPACE:", "                    continue", "                if this == \"#\":", "                    while True:", "                        this = sourceget()", "                        if this is None or this == \"\\n\":", "                            break", "                    continue", "    ", "            if this[0] == \"\\\\\":", "                code = _escape(source, this, state)", "                subpatternappend(code)", "    ", "            elif this not in SPECIAL_CHARS:", "                subpatternappend((LITERAL, _ord(this)))", "    ", "            elif this == \"[\":", "                here = source.tell() - 1", "                # character set", "                set = []", "                setappend = set.append", "    ##          if sourcematch(\":\"):", "    ##              pass # handle character classes", "                if source.next == '[':", "                    import warnings", "                    warnings.warn(", "                        'Possible nested set at position %d' % source.tell(),", "                        FutureWarning, stacklevel=nested + 6", "                    )", "                negate = sourcematch(\"^\")", "                # check remaining characters", "                while True:", "                    this = sourceget()", "                    if this is None:", ">                       raise source.error(\"unterminated character set\",", "                                           source.tell() - here)", "E                       re.error: unterminated character set at position 4"], "reprfuncargs": {"args": [["source", "<re._parser.Tokenizer object at 0x78ac99db5b80>"], ["state", "<re._parser.State object at 0x78ac99db4560>"], ["verbose", "0"], ["nested", "5"], ["first", "False"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_punctuations():", "        s = '@' * (48 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/tests52_78_5.py", "lineno": 57, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(pattern, text))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/generated_answer.py", "lineno": 6, "message": "in palindrome_of_length_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 979, "message": "in parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 775, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, sub_verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 862, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _parse(source, state, verbose, nested, first=False):", "        # parse a simple pattern", "        subpattern = SubPattern(state)", "    ", "        # precompute constants into local variables", "        subpatternappend = subpattern.append", "        sourceget = source.get", "        sourcematch = source.match", "        _len = len", "        _ord = ord", "    ", "        while True:", "    ", "            this = source.next", "            if this is None:", "                break # end of pattern", "            if this in \"|)\":", "                break # end of subpattern", "            sourceget()", "    ", "            if verbose:", "                # skip whitespace and comments", "                if this in WHITESPACE:", "                    continue", "                if this == \"#\":", "                    while True:", "                        this = sourceget()", "                        if this is None or this == \"\\n\":", "                            break", "                    continue", "    ", "            if this[0] == \"\\\\\":", "                code = _escape(source, this, state)", "                subpatternappend(code)", "    ", "            elif this not in SPECIAL_CHARS:", "                subpatternappend((LITERAL, _ord(this)))", "    ", "            elif this == \"[\":", "                here = source.tell() - 1", "                # character set", "                set = []", "                setappend = set.append", "    ##          if sourcematch(\":\"):", "    ##              pass # handle character classes", "                if source.next == '[':", "                    import warnings", "                    warnings.warn(", "                        'Possible nested set at position %d' % source.tell(),", "                        FutureWarning, stacklevel=nested + 6", "                    )", "                negate = sourcematch(\"^\")", "                # check remaining characters", "                while True:", "                    this = sourceget()", "                    if this is None:", ">                       raise source.error(\"unterminated character set\",", "                                           source.tell() - here)", "E                       re.error: unterminated character set at position 4"], "reprfuncargs": {"args": [["source", "<re._parser.Tokenizer object at 0x78ac99db5b80>"], ["state", "<re._parser.State object at 0x78ac99db4560>"], ["verbose", "0"], ["nested", "5"], ["first", "False"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "re.error: unterminated character set at position 4"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00019965399769716896, "start": 1729834227.2201328, "stop": 1729834227.220333, "extras": [], "$report_type": "TestReport", "item_index": 9, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_identical_punctuations", "location": ["tests52_78_5.py", 54, "test_string_of_identical_punctuations"], "keywords": {"test_string_of_identical_punctuations": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000997929000732256, "start": 1729834227.3030682, "stop": 1729834227.3040674, "$report_type": "TestReport", "item_index": 9, "worker_id": "gw1", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_78_5.py::test_string_of_spaces", "location": ["tests52_78_5.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "re.error: unterminated character set at position 4"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (48 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/tests52_78_5.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(pattern, text))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/generated_answer.py", "lineno": 6, "message": "in palindrome_of_length_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 979, "message": "in parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 775, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, sub_verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 862, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _parse(source, state, verbose, nested, first=False):", "        # parse a simple pattern", "        subpattern = SubPattern(state)", "    ", "        # precompute constants into local variables", "        subpatternappend = subpattern.append", "        sourceget = source.get", "        sourcematch = source.match", "        _len = len", "        _ord = ord", "    ", "        while True:", "    ", "            this = source.next", "            if this is None:", "                break # end of pattern", "            if this in \"|)\":", "                break # end of subpattern", "            sourceget()", "    ", "            if verbose:", "                # skip whitespace and comments", "                if this in WHITESPACE:", "                    continue", "                if this == \"#\":", "                    while True:", "                        this = sourceget()", "                        if this is None or this == \"\\n\":", "                            break", "                    continue", "    ", "            if this[0] == \"\\\\\":", "                code = _escape(source, this, state)", "                subpatternappend(code)", "    ", "            elif this not in SPECIAL_CHARS:", "                subpatternappend((LITERAL, _ord(this)))", "    ", "            elif this == \"[\":", "                here = source.tell() - 1", "                # character set", "                set = []", "                setappend = set.append", "    ##          if sourcematch(\":\"):", "    ##              pass # handle character classes", "                if source.next == '[':", "                    import warnings", "                    warnings.warn(", "                        'Possible nested set at position %d' % source.tell(),", "                        FutureWarning, stacklevel=nested + 6", "                    )", "                negate = sourcematch(\"^\")", "                # check remaining characters", "                while True:", "                    this = sourceget()", "                    if this is None:", ">                       raise source.error(\"unterminated character set\",", "                                           source.tell() - here)", "E                       re.error: unterminated character set at position 4"], "reprfuncargs": {"args": [["source", "<re._parser.Tokenizer object at 0x7a40d1905d30>"], ["state", "<re._parser.State object at 0x7a40d1905c10>"], ["verbose", "0"], ["nested", "5"], ["first", "False"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (48 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/tests52_78_5.py", "lineno": 14, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(pattern, text))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/generated_answer.py", "lineno": 6, "message": "in palindrome_of_length_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 979, "message": "in parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 775, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, sub_verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 862, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _parse(source, state, verbose, nested, first=False):", "        # parse a simple pattern", "        subpattern = SubPattern(state)", "    ", "        # precompute constants into local variables", "        subpatternappend = subpattern.append", "        sourceget = source.get", "        sourcematch = source.match", "        _len = len", "        _ord = ord", "    ", "        while True:", "    ", "            this = source.next", "            if this is None:", "                break # end of pattern", "            if this in \"|)\":", "                break # end of subpattern", "            sourceget()", "    ", "            if verbose:", "                # skip whitespace and comments", "                if this in WHITESPACE:", "                    continue", "                if this == \"#\":", "                    while True:", "                        this = sourceget()", "                        if this is None or this == \"\\n\":", "                            break", "                    continue", "    ", "            if this[0] == \"\\\\\":", "                code = _escape(source, this, state)", "                subpatternappend(code)", "    ", "            elif this not in SPECIAL_CHARS:", "                subpatternappend((LITERAL, _ord(this)))", "    ", "            elif this == \"[\":", "                here = source.tell() - 1", "                # character set", "                set = []", "                setappend = set.append", "    ##          if sourcematch(\":\"):", "    ##              pass # handle character classes", "                if source.next == '[':", "                    import warnings", "                    warnings.warn(", "                        'Possible nested set at position %d' % source.tell(),", "                        FutureWarning, stacklevel=nested + 6", "                    )", "                negate = sourcematch(\"^\")", "                # check remaining characters", "                while True:", "                    this = sourceget()", "                    if this is None:", ">                       raise source.error(\"unterminated character set\",", "                                           source.tell() - here)", "E                       re.error: unterminated character set at position 4"], "reprfuncargs": {"args": [["source", "<re._parser.Tokenizer object at 0x7a40d1905d30>"], ["state", "<re._parser.State object at 0x7a40d1905c10>"], ["verbose", "0"], ["nested", "5"], ["first", "False"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "re.error: unterminated character set at position 4"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023146400053519756, "start": 1729834227.2160296, "stop": 1729834227.2162619, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_78_5.py::test_string_of_spaces", "location": ["tests52_78_5.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0013160749986127485, "start": 1729834227.3093426, "stop": 1729834227.3106604, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_78_5.py::test_string_of_identical_nums", "location": ["tests52_78_5.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "re.error: unterminated character set at position 4"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (48 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/tests52_78_5.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(pattern, text))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/generated_answer.py", "lineno": 6, "message": "in palindrome_of_length_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 979, "message": "in parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 775, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, sub_verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 862, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _parse(source, state, verbose, nested, first=False):", "        # parse a simple pattern", "        subpattern = SubPattern(state)", "    ", "        # precompute constants into local variables", "        subpatternappend = subpattern.append", "        sourceget = source.get", "        sourcematch = source.match", "        _len = len", "        _ord = ord", "    ", "        while True:", "    ", "            this = source.next", "            if this is None:", "                break # end of pattern", "            if this in \"|)\":", "                break # end of subpattern", "            sourceget()", "    ", "            if verbose:", "                # skip whitespace and comments", "                if this in WHITESPACE:", "                    continue", "                if this == \"#\":", "                    while True:", "                        this = sourceget()", "                        if this is None or this == \"\\n\":", "                            break", "                    continue", "    ", "            if this[0] == \"\\\\\":", "                code = _escape(source, this, state)", "                subpatternappend(code)", "    ", "            elif this not in SPECIAL_CHARS:", "                subpatternappend((LITERAL, _ord(this)))", "    ", "            elif this == \"[\":", "                here = source.tell() - 1", "                # character set", "                set = []", "                setappend = set.append", "    ##          if sourcematch(\":\"):", "    ##              pass # handle character classes", "                if source.next == '[':", "                    import warnings", "                    warnings.warn(", "                        'Possible nested set at position %d' % source.tell(),", "                        FutureWarning, stacklevel=nested + 6", "                    )", "                negate = sourcematch(\"^\")", "                # check remaining characters", "                while True:", "                    this = sourceget()", "                    if this is None:", ">                       raise source.error(\"unterminated character set\",", "                                           source.tell() - here)", "E                       re.error: unterminated character set at position 4"], "reprfuncargs": {"args": [["source", "<re._parser.Tokenizer object at 0x7fbfca879a30>"], ["state", "<re._parser.State object at 0x7fbfcae2e4e0>"], ["verbose", "0"], ["nested", "5"], ["first", "False"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (48 * 2)", ">       assert not palindrome_of_length_n(s)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/tests52_78_5.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    return set(re.findall(pattern, text))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_5/Folder_78/generated_answer.py", "lineno": 6, "message": "in palindrome_of_length_n"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return _compile(pattern, flags).findall(string)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 217, "message": "in findall"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _compiler.compile(pattern, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/__init__.py", "lineno": 307, "message": "in _compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parser.parse(p, flags)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_compiler.py", "lineno": 745, "message": "in compile"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 979, "message": "in parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 775, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    p = _parse_sub(source, state, sub_verbose, nested + 1)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 862, "message": "in _parse"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    itemsappend(_parse(source, state, verbose, nested + 1,"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 460, "message": "in _parse_sub"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def _parse(source, state, verbose, nested, first=False):", "        # parse a simple pattern", "        subpattern = SubPattern(state)", "    ", "        # precompute constants into local variables", "        subpatternappend = subpattern.append", "        sourceget = source.get", "        sourcematch = source.match", "        _len = len", "        _ord = ord", "    ", "        while True:", "    ", "            this = source.next", "            if this is None:", "                break # end of pattern", "            if this in \"|)\":", "                break # end of subpattern", "            sourceget()", "    ", "            if verbose:", "                # skip whitespace and comments", "                if this in WHITESPACE:", "                    continue", "                if this == \"#\":", "                    while True:", "                        this = sourceget()", "                        if this is None or this == \"\\n\":", "                            break", "                    continue", "    ", "            if this[0] == \"\\\\\":", "                code = _escape(source, this, state)", "                subpatternappend(code)", "    ", "            elif this not in SPECIAL_CHARS:", "                subpatternappend((LITERAL, _ord(this)))", "    ", "            elif this == \"[\":", "                here = source.tell() - 1", "                # character set", "                set = []", "                setappend = set.append", "    ##          if sourcematch(\":\"):", "    ##              pass # handle character classes", "                if source.next == '[':", "                    import warnings", "                    warnings.warn(", "                        'Possible nested set at position %d' % source.tell(),", "                        FutureWarning, stacklevel=nested + 6", "                    )", "                negate = sourcematch(\"^\")", "                # check remaining characters", "                while True:", "                    this = sourceget()", "                    if this is None:", ">                       raise source.error(\"unterminated character set\",", "                                           source.tell() - here)", "E                       re.error: unterminated character set at position 4"], "reprfuncargs": {"args": [["source", "<re._parser.Tokenizer object at 0x7fbfca879a30>"], ["state", "<re._parser.State object at 0x7fbfcae2e4e0>"], ["verbose", "0"], ["nested", "5"], ["first", "False"]]}, "reprlocals": null, "reprfileloc": {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "error"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/miniconda3/envs/benchmark/lib/python3.12/re/_parser.py", "lineno": 568, "message": "re.error: unterminated character set at position 4"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006131270019977819, "start": 1729834227.2085488, "stop": 1729834227.2091625, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_78_5.py::test_string_of_identical_nums", "location": ["tests52_78_5.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_78_5.py": 1, "Folder_78": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017829600255936384, "start": 1729834227.312871, "stop": 1729834227.3130503, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "13b2eed921e143e69af99c1d636d172e", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
