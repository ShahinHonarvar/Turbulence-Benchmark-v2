{
  "parameter(s)": [
    68
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_identical_nums": [
    "passed",
    "",
    0.00019
  ],
  "test_string_of_spaces": [
    "passed",
    "",
    0.00023
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', ...}\n +  where {'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')",
    0.00997
  ],
  "test_string_of_numbers_and_letters": [
    "failed",
    "AssertionError: assert not {'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', ...}\n +  where {'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaa', ...} = palindrome_of_length_n('a1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1aa1a')",
    0.00792
  ],
  "test_length_of_palindrome": [
    "failed",
    "AssertionError: assert 126 == 68\n +  where 126 = len('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')",
    0.03204
  ]
}