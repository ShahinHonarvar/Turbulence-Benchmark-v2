{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests52_75_3.py::test_string_of_spaces_and_letters", "location": ["tests52_75_3.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001944899995578453, "start": 1729832919.6684248, "stop": 1729832919.66862, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_75_3.py::test_string_of_identical_nums", "location": ["tests52_75_3.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0006247710007301066, "start": 1729832919.6683202, "stop": 1729832919.6689456, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_75_3.py::test_string_of_many_chars", "location": ["tests52_75_3.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021536799977184273, "start": 1729832919.6683142, "stop": 1729832919.6685302, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_75_3.py::test_string_of_many_chars", "location": ["tests52_75_3.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001807000007829629, "start": 1729832919.6688535, "stop": 1729832919.6690347, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_75_3.py::test_string_of_many_chars", "location": ["tests52_75_3.py", 6, "test_string_of_many_chars"], "keywords": {"test_string_of_many_chars": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012981699910596944, "start": 1729832919.669437, "stop": 1729832919.6695673, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_75_3.py::test_string_of_spaces", "location": ["tests52_75_3.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019391800015000626, "start": 1729832919.6793277, "stop": 1729832919.6795223, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_75_3.py::test_string_of_identical_nums", "location": ["tests52_75_3.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 29, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (80 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_identical_nums():", "        s = '0' * (80 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {'00000000000000000000000000000000000000000000000000000000000000000000000000000000', '000000000000000000000000000000000000000000000000000000000000000000000000000000000', '0000000000000000000000000000000000000000000000000000000000000000000000000000000000', '00000000000000000000000000000000000000000000000000000000000000000000000000000000000', '000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000', ...}", "E        +  where {} = palindrome_of_length_n('0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 29, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 29, "message": "AssertionError: assert not {}\n +  where {'00000000000000000000000000000000000000000000000000000000000000000000000000000000', '000000000000000000000000000000000000000000000000000000000000000000000000000000000', '0000000000000000000000000000000000000000000000000000000000000000000000000000000000', '00000000000000000000000000000000000000000000000000000000000000000000000000000000000', '000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000', ...} = palindrome_of_length_n('0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0028141939983470365, "start": 1729832919.669247, "stop": 1729832919.672062, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_75_3.py::test_string_of_identical_nums", "location": ["tests52_75_3.py", 26, "test_string_of_identical_nums"], "keywords": {"test_string_of_identical_nums": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005560930003412068, "start": 1729832919.6905158, "stop": 1729832919.6910732, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw2>"}
{"nodeid": "tests52_75_3.py::test_string_of_spaces", "location": ["tests52_75_3.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 14, "message": "AssertionError: assert not {'                                                                                ', '                                                                                 ', '                                                                                  ', '                                                                                   ', '                                                                                    ', '                                                                                     ', ...}\n +  where {} = palindrome_of_length_n('                                                                                                                                                                ')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (80 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('                                                                                                                                                                ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces():", "        s = ' ' * (80 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {}", "E        +  where {} = palindrome_of_length_n('                                                                                                                                                                ')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 14, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 14, "message": "AssertionError: assert not {}\n +  where {} = palindrome_of_length_n('                                                                                                                                                                ')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017267719995288644, "start": 1729832919.6796906, "stop": 1729832919.681418, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_75_3.py::test_string_of_spaces", "location": ["tests52_75_3.py", 11, "test_string_of_spaces"], "keywords": {"test_string_of_spaces": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017228000069735572, "start": 1729832919.6990469, "stop": 1729832919.69922, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw0>"}
{"nodeid": "tests52_75_3.py::test_string_of_spaces_and_letters", "location": ["tests52_75_3.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 19, "message": "AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}\n +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (80 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}", "E        +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_string_of_spaces_and_letters():", "        s = 'a a' * (80 * 2)", ">       assert not palindrome_of_length_n(s)", "E       AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}", "E        +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 19, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/CodeGemma7B_T_0/Q52/codegemma_results_3/Folder_75/tests52_75_3.py", "lineno": 19, "message": "AssertionError: assert not {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...}\n +  where {' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ' aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa ', ...} = palindrome_of_length_n('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa a')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.041764158002479235, "start": 1729832919.6689103, "stop": 1729832919.7106757, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw1>"}
{"nodeid": "tests52_75_3.py::test_string_of_spaces_and_letters", "location": ["tests52_75_3.py", 16, "test_string_of_spaces_and_letters"], "keywords": {"test_string_of_spaces_and_letters": 1, "tests52_75_3.py": 1, "Folder_75": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013015399963478558, "start": 1729832919.7272677, "stop": 1729832919.7273986, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "345fe32f467844758194b245bc4fa85d", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
