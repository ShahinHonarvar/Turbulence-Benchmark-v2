{
  "parameter(s)": [
    16,
    0,
    15
  ],
  "test_result_is_smaller": [
    "failed",
    "assert 11 == (16 - 16)\n +  where 16 = len(\"EwbW .9'{pken&+@\")",
    0.00027
  ],
  "test_result_is_in_given_string": [
    "failed",
    "assert '0' in '87KQZWqGTv)]s4d`'\n +  where '0' = return_nth_smallest_ascii('87KQZWqGTv)]s4d`CRIUNmL0n5$^{6?/Pu1y_aYHSJbi=|t,EgjM@\"Ok(Bl>*.V}\\'3&<9+F~ wAe\\\\f!rxDzo;Xpc#%2h[')",
    0.00022
  ],
  "test_result_is_larger": [
    "failed",
    "assert 2 == (16 - 1)",
    0.00029
  ]
}