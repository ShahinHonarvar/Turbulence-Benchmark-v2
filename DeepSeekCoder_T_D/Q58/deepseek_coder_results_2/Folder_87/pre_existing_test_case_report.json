{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 46,  64],\\n        [ 62,  86],\\n        [ 58, -13],\\n        [-50, 100],\\n        [-83,   2],\\n        [-31, -13],\\n        [ 67, -26],\\n        [ 72,  65],\\n        [ 18,  78],\\n        [-81,  52],\\n        [-44,   3],\\n        [ 79,  35],\\n        [ 17, -40],\\n        [-86,   2],\\n        [ 70, -32],\\n        [-83, -78],\\n        [-46, -36],\\n        [ 30, -33],\\n        [ 41,  45],\\n        [-31, -89],\\n        [ 61,  66],\\n        [ 97, -58],\\n        [ 71,  10],\\n        [ 13,  77],\\n        [ 36,  30],\\n        [ 95, -20],\\n        [-37,  -3],\\n        [-79,  74],\\n        [-48, -57],\\n        [  0, -44],\\n        [-18, -12],\\n        [-73, -14],\\n        [ 23, -32],\\n        [-86, -14],\\n        [ 88, -77],\\n        [ 70,  45],\\n        [ 30, -51],\\n        [ 82,  93],\\n        [ 12, -28],\\n        [ 53,   4],\\n        [-43, -98],\\n        [ 61,  16],\\n        [-58,   4],\\n        [ 65, -32],\\n        [-35,   9],\\n        [-10, -13],\\n        [ 47,  25],\\n        [ -7,  15]]))",
    0.00059
  ]
}