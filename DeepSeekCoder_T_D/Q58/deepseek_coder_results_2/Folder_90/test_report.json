{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014752615243196487, "start": 1738525760.982083, "stop": 1738525760.9822314, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8454589cc05a439a972a19d96d14b9f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016037095338106155, "start": 1738525760.9824088, "stop": 1738525760.9825695, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8454589cc05a439a972a19d96d14b9f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.074527770280838e-05, "start": 1738525760.982881, "stop": 1738525760.9829721, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8454589cc05a439a972a19d96d14b9f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012644194066524506, "start": 1738525760.984459, "stop": 1738525760.984586, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8454589cc05a439a972a19d96d14b9f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/DeepSeekCoder_T_D/Q58/deepseek_coder_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 40,  36],\\n        [-45, -54],\\n        [ 56, -81],\\n        [ 51, -67],\\n        [ 68,  82],\\n        [ 59, -21],\\n        [100, -14],\\n        [ 76, -91],\\n        [-83,  68],\\n        [ 52,  -6],\\n        [ 91,  77],\\n        [-37,   8],\\n        [ 55,  84],\\n        [-79, -58],\\n        [ 37, -94],\\n        [ 20, -75],\\n        [ 70, -97],\\n        [ 12, 100],\\n        [ 77,  83],\\n        [ 99, -76],\\n        [-38,  68],\\n        [ 22,  -4],\\n        [ 52,  79],\\n        [ 27, -85],\\n        [ 82,  65],\\n        [-10, -93],\\n        [ 87,  88],\\n        [-91, -96],\\n        [ 60, -73],\\n        [ -2,  41],\\n        [ 91,  12],\\n        [ 56,   8],\\n        [-61, -65],\\n        [ 24,  13],\\n        [ 23, -74],\\n        [ 89, -61],\\n        [-53, -98],\\n        [-34,  61],\\n        [ 84, -20],\\n        [  7,  80],\\n        [-10, -18],\\n        [-58,  96],\\n        [ 84,  46],\\n        [-48,  63],\\n        [-71, -12],\\n        [ 91,  33],\\n        [ 61, -83],\\n        [  3,  16],\\n        [-95,  39],\\n        [-61, -20],\\n        [ 85, -29],\\n        [ -3, -65],\\n        [-92, -58],\\n        [-14,  79],\\n        [ 43,  83],\\n        [ 92,  31],\\n        [ 29,   6],\\n        [-18,  -7],\\n        [ -4,  63],\\n        [-74, -21],\\n        [ 83,  40],\\n        [ 89,   2],\\n        [ 54, -30],\\n        [ 57,  50],\\n        [ 71, -36],\\n        [-70, -16],\\n        [-17,   1],\\n        [-14,  56],\\n        [-43,  64],\\n        [-90,  19],\\n        [-56,  69],\\n        [-76,  89],\\n        [-47, -94],\\n        [-23,  43],\\n        [ 96, -69],\\n        [  1,   6],\\n        [-21,  98],\\n        [ 71, -88],\\n        [  4,  21],\\n        [ 26,  40],\\n        [-85, -94],\\n        [-13, -29],\\n        [-93, -14],\\n        [ 46, -63],\\n        [-70,  40],\\n        [ 13, -86],\\n        [-74,  73],\\n        [-60, -67]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 40,  36],\\n        [-45, -54],\\n        [ 56, -81],\\n        [ 51, -67],\\n        [ 68,  82],\\n        [ 59, -21],\\n        [100, -14],\\n        [ 76, -91],\\n        [-83,  68],\\n        [ 52,  -6],\\n        [ 91,  77],\\n        [-37,   8],\\n        [ 55,  84],\\n        [-79, -58],\\n        [ 37, -94],\\n        [ 20, -75],\\n        [ 70, -97],\\n        [ 12, 100],\\n        [ 77,  83],\\n        [ 99, -76],\\n        [-38,  68],\\n        [ 22,  -4],\\n        [ 52,  79],\\n        [ 27, -85],\\n        [ 82,  65],\\n        [-10, -93],\\n        [ 87,  88],\\n        [-91, -96],\\n        [ 60, -73],\\n        [ -2,  41],\\n        [ 91,  12],\\n        [ 56,   8],\\n        [-61, -65],\\n        [ 24,  13],\\n        [ 23, -74],\\n        [ 89, -61],\\n        [-53, -98],\\n        [-34,  61],\\n        [ 84, -20],\\n        [  7,  80],\\n        [-10, -18],\\n        [-58,  96],\\n        [ 84,  46],\\n        [-48,  63],\\n        [-71, -12],\\n        [ 91,  33],\\n        [ 61, -83],\\n        [  3,  16],\\n        [-95,  39],\\n        [-61, -20],\\n        [ 85, -29],\\n        [ -3, -65],\\n        [-92, -58],\\n        [-14,  79],\\n        [ 43,  83],\\n        [ 92,  31],\\n        [ 29,   6],\\n        [-18,  -7],\\n        [ -4,  63],\\n        [-74, -21],\\n        [ 83,  40],\\n        [ 89,   2],\\n        [ 54, -30],\\n        [ 57,  50],\\n        [ 71, -36],\\n        [-70, -16],\\n        [-17,   1],\\n        [-14,  56],\\n        [-43,  64],\\n        [-90,  19],\\n        [-56,  69],\\n        [-76,  89],\\n        [-47, -94],\\n        [-23,  43],\\n        [ 96, -69],\\n        [  1,   6],\\n        [-21,  98],\\n        [ 71, -88],\\n        [  4,  21],\\n        [ 26,  40],\\n        [-85, -94],\\n        [-13, -29],\\n        [-93, -14],\\n        [ 46, -63],\\n        [-70,  40],\\n        [ 13, -86],\\n        [-74,  73],\\n        [-60, -67]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/deepseek_coder_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 40,  36],\\n        [-45, -54],\\n        [ 56, -81],\\n        [ 51, -67],\\n        [ 68,  82],\\n        [ 59, -21],\\n        [100, -14],\\n        [ 76, -91],\\n        [-83,  68],\\n        [ 52,  -6],\\n        [ 91,  77],\\n        [-37,   8],\\n        [ 55,  84],\\n        [-79, -58],\\n        [ 37, -94],\\n        [ 20, -75],\\n        [ 70, -97],\\n        [ 12, 100],\\n        [ 77,  83],\\n        [ 99, -76],\\n        [-38,  68],\\n        [ 22,  -4],\\n        [ 52,  79],\\n        [ 27, -85],\\n        [ 82,  65],\\n        [-10, -93],\\n        [ 87,  88],\\n        [-91, -96],\\n        [ 60, -73],\\n        [ -2,  41],\\n        [ 91,  12],\\n        [ 56,   8],\\n        [-61, -65],\\n        [ 24,  13],\\n        [ 23, -74],\\n        [ 89, -61],\\n        [-53, -98],\\n        [-34,  61],\\n        [ 84, -20],\\n        [  7,  80],\\n        [-10, -18],\\n        [-58,  96],\\n        [ 84,  46],\\n        [-48,  63],\\n        [-71, -12],\\n        [ 91,  33],\\n        [ 61, -83],\\n        [  3,  16],\\n        [-95,  39],\\n        [-61, -20],\\n        [ 85, -29],\\n        [ -3, -65],\\n        [-92, -58],\\n        [-14,  79],\\n        [ 43,  83],\\n        [ 92,  31],\\n        [ 29,   6],\\n        [-18,  -7],\\n        [ -4,  63],\\n        [-74, -21],\\n        [ 83,  40],\\n        [ 89,   2],\\n        [ 54, -30],\\n        [ 57,  50],\\n        [ 71, -36],\\n        [-70, -16],\\n        [-17,   1],\\n        [-14,  56],\\n        [-43,  64],\\n        [-90,  19],\\n        [-56,  69],\\n        [-76,  89],\\n        [-47, -94],\\n        [-23,  43],\\n        [ 96, -69],\\n        [  1,   6],\\n        [-21,  98],\\n        [ 71, -88],\\n        [  4,  21],\\n        [ 26,  40],\\n        [-85, -94],\\n        [-13, -29],\\n        [-93, -14],\\n        [ 46, -63],\\n        [-70,  40],\\n        [ 13, -86],\\n        [-74,  73],\\n        [-60, -67]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/deepseek_coder_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/DeepSeekCoder_T_D/Q58/deepseek_coder_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 40,  36],\\n        [-45, -54],\\n        [ 56, -81],\\n        [ 51, -67],\\n        [ 68,  82],\\n        [ 59, -21],\\n        [100, -14],\\n        [ 76, -91],\\n        [-83,  68],\\n        [ 52,  -6],\\n        [ 91,  77],\\n        [-37,   8],\\n        [ 55,  84],\\n        [-79, -58],\\n        [ 37, -94],\\n        [ 20, -75],\\n        [ 70, -97],\\n        [ 12, 100],\\n        [ 77,  83],\\n        [ 99, -76],\\n        [-38,  68],\\n        [ 22,  -4],\\n        [ 52,  79],\\n        [ 27, -85],\\n        [ 82,  65],\\n        [-10, -93],\\n        [ 87,  88],\\n        [-91, -96],\\n        [ 60, -73],\\n        [ -2,  41],\\n        [ 91,  12],\\n        [ 56,   8],\\n        [-61, -65],\\n        [ 24,  13],\\n        [ 23, -74],\\n        [ 89, -61],\\n        [-53, -98],\\n        [-34,  61],\\n        [ 84, -20],\\n        [  7,  80],\\n        [-10, -18],\\n        [-58,  96],\\n        [ 84,  46],\\n        [-48,  63],\\n        [-71, -12],\\n        [ 91,  33],\\n        [ 61, -83],\\n        [  3,  16],\\n        [-95,  39],\\n        [-61, -20],\\n        [ 85, -29],\\n        [ -3, -65],\\n        [-92, -58],\\n        [-14,  79],\\n        [ 43,  83],\\n        [ 92,  31],\\n        [ 29,   6],\\n        [-18,  -7],\\n        [ -4,  63],\\n        [-74, -21],\\n        [ 83,  40],\\n        [ 89,   2],\\n        [ 54, -30],\\n        [ 57,  50],\\n        [ 71, -36],\\n        [-70, -16],\\n        [-17,   1],\\n        [-14,  56],\\n        [-43,  64],\\n        [-90,  19],\\n        [-56,  69],\\n        [-76,  89],\\n        [-47, -94],\\n        [-23,  43],\\n        [ 96, -69],\\n        [  1,   6],\\n        [-21,  98],\\n        [ 71, -88],\\n        [  4,  21],\\n        [ 26,  40],\\n        [-85, -94],\\n        [-13, -29],\\n        [-93, -14],\\n        [ 46, -63],\\n        [-70,  40],\\n        [ 13, -86],\\n        [-74,  73],\\n        [-60, -67]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0039914390072226524, "start": 1738525760.9846876, "stop": 1738525760.9886794, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8454589cc05a439a972a19d96d14b9f0", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.5427967607975e-05, "start": 1738525761.0200357, "stop": 1738525761.0201316, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8454589cc05a439a972a19d96d14b9f0", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
