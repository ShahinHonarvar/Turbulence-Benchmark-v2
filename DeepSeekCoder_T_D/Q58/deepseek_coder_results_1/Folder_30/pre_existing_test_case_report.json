{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00038
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  19,   -2],\\n        [ -43,   93],\\n        [ -26,  -73],\\n        [ -27,    4],\\n        [  -5,    9],\\n        [  37,  -28],\\n        [  38,    6],\\n        [ -41,   26],\\n        [ -87,  -66],\\n        [ -83,  -22],\\n        [ -18,  -96],\\n        [  -8,  -66],\\n        [   9,  -84],\\n        [ -47,  -77],\\n        [  24,   57],\\n        [ -37,   -9],\\n        [  35,   35],\\n        [  99,   14],\\n        [  53,  -81],\\n        [  80, -100],\\n        [  29,   27],\\n        [  78,    2],\\n        [ -72,  -63],\\n        [ -50,  -78],\\n        [  83,  -82],\\n        [ -45,  -79],\\n        [ -87,  -25],\\n        [  82,   40],\\n        [ -29,   35],\\n        [  71,   12],\\n        [  -5,   66],\\n        [  46,  -35],\\n        [ -40,   96],\\n        [ -76,  -43],\\n        [ -53,   81],\\n        [  50,  -32],\\n        [ -24,  -26],\\n        [  40,   62],\\n        [ -22,   -9],\\n        [ -25,   88],\\n        [  54,   43],\\n        [  21,   42],\\n        [ -54,  -90],\\n        [ -32,  -42],\\n        [  53,   -6],\\n        [  40,   20],\\n        [ -55,   95]]))",
    0.00094
  ]
}