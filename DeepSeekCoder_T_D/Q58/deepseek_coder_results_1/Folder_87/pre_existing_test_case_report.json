{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00046
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  53,   85],\\n        [  43,  -81],\\n        [  20,  -61],\\n        [  15,   50],\\n        [ -77,  -53],\\n        [ -84,    2],\\n        [  95,   -1],\\n        [  84,    3],\\n        [ -53,   66],\\n        [  48,   -2],\\n        [ -27,   75],\\n        [ -87,  -33],\\n        [ 100,   47],\\n        [  36,   23],\\n        [  85,   17],\\n        [ -98,   56],\\n        [  57,   84],\\n        [  36,  -45],\\n        [ -74,  -24],\\n        [  43,   97],\\n        [ -93,  -49],\\n        [  42,   81],\\n        [ -75,    2],\\n        [  61,  -72],\\n        [ -72,   14],\\n        [ -96,  -97],\\n        [  52,   60],\\n        [  32,  -11],\\n        [  60,  -18],\\n        [ -61,    2],\\n        [ -22,   -8],\\n        [ -53,   44],\\n        [  14,   12],\\n        [  -3,  -10],\\n        [-100,   61],\\n        [ -63,  -77],\\n        [ -99,   -1],\\n        [ -62,  -79],\\n        [ -18,  -73],\\n        [  62,   88],\\n        [ -61,  -64],\\n        [  -7,   88],\\n        [  66,  -42],\\n        [  23,  -37],\\n        [  82,   20],\\n        [  62,  -51],\\n        [  93,  -20],\\n        [  69,   86]]))",
    0.00099
  ]
}