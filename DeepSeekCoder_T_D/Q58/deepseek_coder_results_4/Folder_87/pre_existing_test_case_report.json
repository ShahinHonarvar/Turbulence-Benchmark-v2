{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  90,  -49],\\n        [  42,  -66],\\n        [  62,  -67],\\n        [ -88,   92],\\n        [ -26,  -14],\\n        [  -2,    0],\\n        [  98,   66],\\n        [  19,  -75],\\n        [ -89,  -64],\\n        [ -78,  -67],\\n        [  67,   41],\\n        [ -61,  -33],\\n        [   8,  -85],\\n        [   4,  -36],\\n        [ -47,   59],\\n        [  12,   17],\\n        [  -4,  -57],\\n        [ -62,   34],\\n        [  58,  -91],\\n        [ -35,  -63],\\n        [  84,   81],\\n        [ -81,  -42],\\n        [ -50,  -36],\\n        [  65,   95],\\n        [  42,   22],\\n        [  81,  -12],\\n        [ -75,  -85],\\n        [  61,   73],\\n        [ -30,  -98],\\n        [  18,  -46],\\n        [ -31,    2],\\n        [   1,  -24],\\n        [ -37,  -54],\\n        [ -96,  -39],\\n        [  15,  -81],\\n        [  34,  -75],\\n        [ -18,  -57],\\n        [ -85,   62],\\n        [   0,  -17],\\n        [ 100,  -61],\\n        [-100,   91],\\n        [  22,   59],\\n        [  27,    8],\\n        [ -43,  -14],\\n        [  51,  -56],\\n        [  35,  -20],\\n        [  59,   26],\\n        [  55,   95]]))",
    0.00063
  ]
}