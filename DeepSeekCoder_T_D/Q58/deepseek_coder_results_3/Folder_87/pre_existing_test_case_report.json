{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -40,   84],\\n        [  -3,  -23],\\n        [   4,  -69],\\n        [ -36, -100],\\n        [ -27,   99],\\n        [  87,  -76],\\n        [  37,   -9],\\n        [ -36,  -10],\\n        [ -98,   26],\\n        [  -8,  -57],\\n        [  -1,   84],\\n        [  63,   15],\\n        [ -42,  -85],\\n        [ -77,   69],\\n        [  53,  -52],\\n        [ -73,  -96],\\n        [  56,  -16],\\n        [  94,   75],\\n        [  11,   92],\\n        [ -84,  -77],\\n        [  80,  -83],\\n        [  13,   90],\\n        [  44,   33],\\n        [  84,  -66],\\n        [ -17,  -60],\\n        [  62,   -7],\\n        [ -16,   -9],\\n        [  78,  -32],\\n        [  54,    8],\\n        [  98,  -73],\\n        [  -2,   20],\\n        [ -84,  -54],\\n        [  24,  -31],\\n        [ -15,    2],\\n        [ -63,   57],\\n        [  -4,   70],\\n        [ -61,   79],\\n        [ -64,   -6],\\n        [ -96,  -72],\\n        [  -3,  -61],\\n        [ -63,   33],\\n        [ -44,  -56],\\n        [ -84,  -46],\\n        [ -74,   33],\\n        [  53,  -23],\\n        [  99,   75],\\n        [ -59,  -37],\\n        [ -17,   31]]))",
    0.00065
  ]
}