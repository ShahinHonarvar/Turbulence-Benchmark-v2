Message(id='msg_01HuP5HvMJSfqutx4JQMisct', content=[TextBlock(text="Here's the implementation of the function based on the specified requirements:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(num_tuple):\n    x = num_tuple[54]\n    result = []\n    \n    for n in range(x, 11, -1):\n        if '0' in str(n):\n            continue\n        \n        is_truncatable = True\n        temp = n\n        \n        while temp > 0:\n            if not is_prime(temp):\n                is_truncatable = False\n                break\n            temp //= 10\n        \n        temp = n\n        num_str = str(temp)\n        \n        while len(num_str) > 1:\n            num_str = num_str[1:]\n            if not is_prime(int(num_str)):\n                is_truncatable = False\n                break\n        \n        if is_truncatable:\n            result.append(n)\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. The `is_prime` helper function checks if a given number is prime.\n\n2. The `all_left_right_truncatable_prime` function takes a tuple as input and uses the integer at index 54 as the upper limit.\n\n3. It iterates through numbers from x down to 12 (since the smallest left-and-right-truncatable prime is 11).\n\n4. For each number, it first checks if the number contains a 0. If it does, it skips to the next number.\n\n5. It then checks if the number remains prime when digits are removed from the left and right successively.\n\n6. If a number passes both checks, it is added to the result list.\n\n7. The function returns the list of left-and-right-truncatable primes in descending order.\n\nThe function will return an empty list if no such primes exist in the given range.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=497))