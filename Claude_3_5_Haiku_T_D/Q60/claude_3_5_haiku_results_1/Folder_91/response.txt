Message(id='msg_016Z2qVESt2WeZ9iNKm9kcaq', content=[TextBlock(text="Here's a Python implementation of the `all_left_right_truncatable_prime` function:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_left_right_truncatable_prime(num):\n    str_num = str(num)\n    if '0' in str_num:\n        return False\n    \n    while len(str_num) > 1:\n        if not is_prime(int(str_num)):\n            return False\n        str_num = str_num[1:-1]\n    \n    return is_prime(int(str_num))\n\ndef all_left_right_truncatable_prime(args):\n    x = args[0]\n    truncatable_primes = []\n    \n    for num in range(x, 11, -1):\n        if is_prime(num) and is_left_right_truncatable_prime(num):\n            truncatable_primes.append(num)\n    \n    return truncatable_primes\n```\n\nThis implementation works as follows:\n\n1. `is_prime(n)` is a helper function that checks if a given number is prime by testing divisibility up to the square root of the number.\n\n2. `is_left_right_truncatable_prime(num)` checks if a number is left-and-right-truncatable by:\n   - Checking if the number contains any 0\n   - Successively removing the leftmost and rightmost digits\n   - Checking if each truncated number is prime\n   - Finally checking if the remaining one or two-digit number is prime\n\n3. `all_left_right_truncatable_prime(args)` finds all left-and-right-truncatable prime numbers less than or equal to the input number:\n   - Iterates from the input number down to 12\n   - Checks each number for both primality and left-right truncatable property\n   - Adds qualifying numbers to the result list\n   - Returns the list sorted in descending order\n\nThe function will return an empty list if no left-and-right-truncatable prime numbers are found.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=530))