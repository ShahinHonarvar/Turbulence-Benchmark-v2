Message(id='msg_01BtbDTfvqNCnG8GqLzkfyhq', content=[TextBlock(text="Here's the Python implementation based on the specification:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[945]\n    result = []\n    \n    for num in range(x, 11, -1):\n        if '0' in str(num):\n            continue\n        \n        is_truncatable = True\n        \n        # Check left truncation\n        left_num = num\n        while left_num > 0:\n            if not is_prime(left_num):\n                is_truncatable = False\n                break\n            left_num //= 10\n        \n        # Check right truncation\n        if is_truncatable:\n            right_num = num\n            while right_num > 0:\n                if not is_prime(right_num):\n                    is_truncatable = False\n                    break\n                right_num %= 10 ** (len(str(right_num)) - 1)\n        \n        if is_truncatable:\n            result.append(num)\n    \n    return sorted(result, reverse=True)\n```\n\nThis implementation does the following:\n\n1. `is_prime(n)` is a helper function to check if a number is prime.\n\n2. `all_left_right_truncatable_prime(nums)` is the main function:\n   - It extracts the number at index 945 from the input tuple.\n   - It iterates through numbers from x down to 12.\n   - It skips numbers containing 0.\n   - It checks if the number is left-truncatable by repeatedly removing digits from the left and checking primality.\n   - It checks if the number is right-truncatable by repeatedly removing digits from the right and checking primality.\n   - If a number passes both checks, it is added to the result list.\n   - Finally, it returns the result list sorted in descending order.\n\nThe function handles the requirements of finding left-and-right-truncatable prime numbers less than or equal to x, ensuring that each truncation remains prime and no 0 is present.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=539))