Message(id='msg_01GMpLV67mhDjH9F2r5EGNDj', content=[TextBlock(text="Here's a Python implementation that solves the problem:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(input_tuple):\n    x = input_tuple[0]\n    truncatable_primes = []\n    \n    for num in range(x, 11, -1):\n        if '0' in str(num):\n            continue\n        \n        is_truncatable = True\n        \n        # Check right truncation\n        right_trunc = num\n        while right_trunc > 0:\n            if not is_prime(right_trunc):\n                is_truncatable = False\n                break\n            right_trunc //= 10\n        \n        # Check left truncation\n        left_trunc = num\n        str_left_trunc = str(left_trunc)\n        while len(str_left_trunc) > 1:\n            str_left_trunc = str_left_trunc[1:]\n            if not is_prime(int(str_left_trunc)):\n                is_truncatable = False\n                break\n        \n        if is_truncatable:\n            truncatable_primes.append(num)\n    \n    return truncatable_primes\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=344))