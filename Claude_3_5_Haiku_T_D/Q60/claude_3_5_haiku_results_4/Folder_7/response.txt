Message(id='msg_016QvyZ3akr5LbZ6CW2KmnMz', content=[TextBlock(text="Here's the Python implementation for the specified problem:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[803]\n    truncatable_primes = []\n    \n    for num in range(2, x + 1):\n        if '0' in str(num):\n            continue\n        \n        if not is_prime(num):\n            continue\n        \n        left_right_truncatable = True\n        temp_num = num\n        \n        while temp_num > 0:\n            if not is_prime(temp_num):\n                left_right_truncatable = False\n                break\n            temp_num //= 10\n        \n        temp_num = num\n        num_str = str(temp_num)\n        \n        while len(num_str) > 1:\n            num_str = num_str[1:]\n            if not is_prime(int(num_str)):\n                left_right_truncatable = False\n                break\n        \n        if left_right_truncatable:\n            truncatable_primes.append(num)\n    \n    return sorted(truncatable_primes)\n```\n\nThis implementation does the following:\n\n1. The `is_prime` helper function checks if a number is prime by testing divisibility up to its square root.\n\n2. The `all_left_right_truncatable_prime` function takes a tuple of positive integers and uses the integer at index 803 as the upper limit.\n\n3. It iterates through numbers from 2 to x (inclusive) and checks each number for left-and-right-truncatable prime properties:\n   - Skip numbers containing 0\n   - Skip non-prime numbers\n   - Truncate from right to left, checking primality\n   - Truncate from left to right, checking primality\n\n4. If a number is left-and-right-truncatable prime, it's added to the list.\n\n5. Finally, the function returns the sorted list of left-and-right-truncatable prime numbers.\n\nThe implementation ensures that only numbers satisfying the specified conditions are included in the result.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=210, output_tokens=544))