Message(id='msg_019uhSJf1Gftz97VVcsVtzBh', content=[TextBlock(text="Here's the Python implementation based on the specification:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[41]\n    truncatable_primes = []\n    \n    for num in range(x, 11, -1):\n        if '0' in str(num):\n            continue\n        \n        is_left_right_truncatable = True\n        \n        # Check right-truncatable\n        current_num = num\n        while current_num > 0:\n            if not is_prime(current_num):\n                is_left_right_truncatable = False\n                break\n            current_num //= 10\n        \n        # Check left-truncatable\n        if is_left_right_truncatable:\n            str_num = str(num)\n            for i in range(len(str_num)):\n                current_num = int(str_num[i:])\n                if not is_prime(current_num):\n                    is_left_right_truncatable = False\n                    break\n        \n        if is_left_right_truncatable:\n            truncatable_primes.append(num)\n    \n    return sorted(truncatable_primes, reverse=True)\n```\n\nThis implementation does the following:\n\n1. The `is_prime` helper function checks if a given number is prime.\n\n2. In the `all_left_right_truncatable_prime` function:\n   - Get the value at index 41 of the input tuple as `x`\n   - Iterate through numbers from `x` down to 12\n   - Skip numbers containing 0\n   - Check if number is right-truncatable by successively removing digits from the right and checking primality\n   - Check if number is left-truncatable by taking substrings from the left and checking primality\n   - Collect numbers that are both left-and-right-truncatable\n   - Return the list of such numbers in descending order\n\nThe function handles the specification by checking primality at each truncation step and ensuring no 0 is present in the number.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=539))