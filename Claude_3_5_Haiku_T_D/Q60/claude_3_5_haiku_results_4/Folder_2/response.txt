Message(id='msg_01VdRd3xPdUJ3MQEMgUZWp6Q', content=[TextBlock(text="Here's a Python implementation that solves the problem:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[618]\n    truncatable_primes = []\n    \n    for n in range(2, x + 1):\n        if '0' in str(n):\n            continue\n        \n        is_left_right_truncatable = True\n        temp = n\n        \n        while temp > 0:\n            if not is_prime(temp):\n                is_left_right_truncatable = False\n                break\n            temp //= 10\n        \n        temp = n\n        digit_length = len(str(n))\n        \n        while digit_length > 1:\n            temp %= 10 ** (digit_length - 1)\n            if not is_prime(temp):\n                is_left_right_truncatable = False\n                break\n            digit_length -= 1\n        \n        if is_left_right_truncatable and is_prime(n):\n            truncatable_primes.append(n)\n    \n    return sorted(truncatable_primes)\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=210, output_tokens=327))