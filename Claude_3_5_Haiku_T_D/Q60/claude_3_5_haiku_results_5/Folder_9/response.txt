Message(id='msg_01B9ooZgjesDCKwUKMgcehSC', content=[TextBlock(text="Here's the Python implementation:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_left_right_truncatable_prime(num):\n    str_num = str(num)\n    if '0' in str_num:\n        return False\n    \n    for length in range(len(str_num), 0, -1):\n        left_trunc = int(str_num[-length:])\n        right_trunc = int(str_num[:length])\n        \n        while len(str(left_trunc)) > 1:\n            if not is_prime(left_trunc):\n                return False\n            left_trunc //= 10\n        \n        while len(str(right_trunc)) > 1:\n            if not is_prime(right_trunc):\n                return False\n            right_trunc //= 10\n        \n        if not is_prime(left_trunc) or not is_prime(right_trunc):\n            return False\n    \n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[29]\n    truncatable_primes = [num for num in range(2, x + 1) if is_prime(num) and is_left_right_truncatable_prime(num)]\n    return sorted(truncatable_primes, reverse=True)\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=372))