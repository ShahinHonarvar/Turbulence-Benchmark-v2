Message(id='msg_011N6rMVGreU22Q8awNifMsU', content=[TextBlock(text="Here's a Python implementation that solves the specified problem:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[618]\n    truncatable_primes = []\n    \n    for num in range(2, x + 1):\n        if '0' not in str(num):\n            is_truncatable = True\n            \n            # Check left truncatability\n            for i in range(len(str(num))):\n                if not is_prime(int(str(num)[i:])):\n                    is_truncatable = False\n                    break\n            \n            # Check right truncatability\n            for i in range(len(str(num))):\n                if not is_prime(int(str(num)[:len(str(num))-i])):\n                    is_truncatable = False\n                    break\n            \n            if is_truncatable and is_prime(num):\n                truncatable_primes.append(num)\n    \n    return sorted(truncatable_primes)\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=210, output_tokens=304))