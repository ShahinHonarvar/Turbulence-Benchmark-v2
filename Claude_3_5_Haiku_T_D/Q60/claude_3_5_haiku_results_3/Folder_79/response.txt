Message(id='msg_0133oc1FhSQw5P7MxYPmsSdP', content=[TextBlock(text="Here's a Python implementation that solves the problem:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef is_left_right_truncatable_prime(num):\n    if '0' in str(num):\n        return False\n    \n    temp_num = num\n    while temp_num > 9:\n        temp_num //= 10\n        if not is_prime(temp_num):\n            return False\n    \n    full_str = str(num)\n    while len(full_str) > 1:\n        full_str = full_str[1:]\n        if not is_prime(int(full_str)):\n            return False\n    \n    return True\n\ndef all_left_right_truncatable_prime(tup):\n    x = tup[91]\n    result = []\n    \n    for num in range(2, x + 1):\n        if is_prime(num) and is_left_right_truncatable_prime(num):\n            result.append(num)\n    \n    return sorted(result)\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=210, output_tokens=299))