Message(id='msg_013ZW7dfdxtZDwdtpDCB9dzM', content=[TextBlock(text="Here's a Python implementation that solves the specification:\n\n```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef all_left_right_truncatable_prime(nums):\n    x = nums[429]\n    truncatable_primes = []\n    \n    for num in range(x, 11, -1):\n        if '0' in str(num):\n            continue\n        \n        is_left_right_truncatable = True\n        current_num = num\n        \n        while current_num > 9:\n            current_num_str = str(current_num)\n            left_truncated = int(current_num_str[1:])\n            right_truncated = int(current_num_str[:-1])\n            \n            if not (is_prime(left_truncated) and is_prime(right_truncated)):\n                is_left_right_truncatable = False\n                break\n            \n            current_num = left_truncated\n        \n        if is_left_right_truncatable and is_prime(current_num) and is_prime(num):\n            truncatable_primes.append(num)\n    \n    return sorted(truncatable_primes, reverse=True)\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=211, output_tokens=335))