Message(id='msg_01BCXRDZMxTMiFf4Jtt9GvMu', content=[TextBlock(text="Here's the implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -13:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a 2D numpy matrix as input.\n2. It uses nested loops to generate all possible submatrices by selecting different start and end rows and columns.\n3. For each submatrix, it calculates the sum using `np.sum()`.\n4. If the sum of the submatrix is exactly -13, it adds the submatrix to the result list.\n5. After checking all possible submatrices, it returns the list of submatrices with a sum of -13.\n6. If no submatrix with a sum of -13 is found, an empty list is returned.\n\nThe function handles the requirements by:\n- Generating all possible submatrices using row and column ranges\n- Checking the sum of each submatrix\n- Collecting and returning submatrices that match the specific sum condition\n- Working with numpy matrices for efficient slicing and summing", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=372))