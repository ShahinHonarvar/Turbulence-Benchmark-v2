Message(id='msg_01CGQddKWC1ngzMCUJ1WV1G3', content=[TextBlock(text="Here's the implementation of the function:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 997:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a two-dimensional numpy matrix as input.\n\n2. It uses four nested loops to generate all possible submatrices:\n   - `r1` and `r2` define the row range\n   - `c1` and `c2` define the column range\n\n3. For each submatrix, it checks if the sum of all elements equals 997.\n\n4. If a submatrix with sum 997 is found, it converts the submatrix to a list and appends it to the `result` list.\n\n5. Finally, it returns the list of all submatrices with a sum of 997.\n\n6. If no submatrices with a sum of 997 are found, an empty list is returned.\n\nThe function uses numpy's slicing to extract submatrices and `np.sum()` to calculate the sum of elements in each submatrix.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=369))