Message(id='msg_01XXACajXCXoF3g7Nv6ghVCz', content=[TextBlock(text="Here's the implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 1:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a numpy matrix as input.\n\n2. It uses nested loops to generate all possible submatrices by selecting different start and end rows and columns.\n\n3. For each submatrix:\n   - It extracts the submatrix using numpy slicing\n   - Checks if the sum of all elements in the submatrix is equal to 1\n   - If the sum is 1, it converts the submatrix to a list and adds it to the result list\n\n4. If no submatrices with a sum of 1 are found, an empty list is returned.\n\n5. The function returns a list of all submatrices that have a sum of 1, with each submatrix represented as a list of lists.\n\nThe function covers all possible rectangular submatrices, including single elements, rows, columns, and the entire matrix.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=363))