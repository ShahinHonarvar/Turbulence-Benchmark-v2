Message(id='msg_0123A34W3wukQHEK15qU9s4g', content=[TextBlock(text="Here's the Python implementation:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -617:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThis function does the following:\n\n1. It takes a numpy matrix as input.\n2. It uses nested loops to generate all possible submatrices by selecting different combinations of row and column start and end indices.\n3. For each submatrix, it checks if the sum of all elements equals -617.\n4. If a submatrix with sum -617 is found, it is added to the result list.\n5. After checking all possible submatrices, the function returns the list of submatrices with sum -617.\n6. If no submatrix is found with sum -617, an empty list is returned.\n\nThe time complexity is O(rows^2 * cols^2), as it checks all possible submatrices.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=322))