Message(id='msg_01KCNpLTGyxt3mRr379f8NxZ', content=[TextBlock(text='```python\nimport numpy as np\nimport itertools\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 64:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a NumPy matrix as input\n2. Uses nested loops to generate all possible submatrices\n3. Uses matrix slicing to extract each submatrix\n4. Checks if the sum of each submatrix is exactly 64\n5. Appends submatrices with a sum of 64 to the result list\n6. Returns the list of submatrices (or an empty list if no submatrices sum to 64)\n\nThe function covers all possible submatrices by varying the start and end rows (r1, r2) and columns (c1, c2), ensuring comprehensive checking.', type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=302))