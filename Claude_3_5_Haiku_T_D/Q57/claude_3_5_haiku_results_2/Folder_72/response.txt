Message(id='msg_01SSpydAiJXxkoy1Q3TuuK22', content=[TextBlock(text='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 41:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. The function takes a numpy matrix as input.\n2. It finds the number of rows and columns in the matrix.\n3. It creates an empty list called `result` to store submatrices.\n4. It uses nested loops to iterate through all possible submatrices:\n   - `r1` and `r2` define the row range\n   - `c1` and `c2` define the column range\n5. For each submatrix, it calculates the sum using `np.sum()`\n6. If the sum equals 41, the submatrix is converted to a list and added to `result`\n7. After checking all possible submatrices, the function returns the `result` list\n\nThe function will return an empty list if no submatrices with a sum of 41 are found.', type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=345))