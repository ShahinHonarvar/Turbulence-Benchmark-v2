Message(id='msg_01Hrwtyqp6UjNoz4TgHAfXEf', content=[TextBlock(text="Here's the implementation of the function according to the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 56:\n                        result.append((r1, c1, r2, c2))\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a two-dimensional numpy matrix as input.\n2. It uses nested loops to generate all possible submatrices.\n3. For each submatrix, it calculates the sum using `np.sum()`.\n4. If the sum of the submatrix is exactly 56, it adds the coordinates of the submatrix to the result list.\n5. The coordinates are stored as a tuple (row_start, col_start, row_end, col_end).\n6. If no submatrix with a sum of 56 is found, an empty list is returned.\n\nThe function can be used like this:\n```python\nmatrix = np.array([[10, 20, 30], [40, 5, 11], [1, 2, 3]])\nprint(submatrix_with_particular_sum(matrix))\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=372))