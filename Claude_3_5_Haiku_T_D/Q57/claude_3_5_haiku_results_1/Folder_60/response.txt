Message(id='msg_01XMvGvR5KrXnjNZcBC7gghU', content=[TextBlock(text="```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 94:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. Takes a two-dimensional NumPy matrix as input\n2. Initializes an empty list `result` to store submatrices\n3. Uses nested loops to generate all possible submatrices\n4. Checks if the sum of each submatrix is exactly 94\n5. If a submatrix with sum 94 is found, it is added to the `result` list\n6. Returns the list of submatrices (or an empty list if no submatrix is found)\n\nThe function uses four nested loops:\n- `r1` and `r2` control the row range of the submatrix\n- `c1` and `c2` control the column range of the submatrix\n\nNumPy's slicing and `np.sum()` are used to extract and calculate the sum of submatrices efficiently.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=346))