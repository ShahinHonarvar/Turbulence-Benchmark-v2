Message(id='msg_0169n6hwNjtd2AgTud6TKreS', content=[TextBlock(text="Here's the implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    matrix = np.array(matrix)\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -26:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. Convert the input matrix to a NumPy array for easier manipulation.\n2. Get the number of rows and columns in the matrix.\n3. Initialize an empty list to store submatrices with the target sum.\n4. Use nested loops to generate all possible submatrices:\n   - `r1` and `r2` define the row range of the submatrix.\n   - `c1` and `c2` define the column range of the submatrix.\n5. Extract each submatrix using NumPy array slicing.\n6. Check if the sum of the submatrix equals -26.\n7. If the sum matches, convert the submatrix to a list and append it to the result.\n8. Return the list of submatrices with the target sum.\n\nThe function will return a list of all submatrices with a sum of -26, or an empty list if no such submatrices exist.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=395))