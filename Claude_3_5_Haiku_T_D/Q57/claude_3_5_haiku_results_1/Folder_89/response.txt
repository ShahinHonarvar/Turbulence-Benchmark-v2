Message(id='msg_01QRSgyUuon2SB8TxVfvZV9c', content=[TextBlock(text="Here's the Python implementation:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 80:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThis function does the following:\n\n1. It takes a 2D numpy matrix as input.\n2. It uses nested loops to iterate through all possible submatrices.\n3. For each possible submatrix defined by the start and end rows (r1, r2) and columns (c1, c2):\n   - It extracts the submatrix using numpy slicing\n   - It checks if the sum of the submatrix is exactly 80\n   - If the sum is 80, it adds the submatrix to the result list\n4. After checking all possible submatrices, it returns the list of submatrices with a sum of 80.\n5. If no submatrices are found with a sum of 80, it returns an empty list.\n\nThe function uses numpy's shape attribute and sum() method to efficiently iterate and calculate submatrix sums.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=353))