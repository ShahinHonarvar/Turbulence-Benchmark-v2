Message(id='msg_01LUNKUdTmMQ689BR5PixnUq', content=[TextBlock(text="Here's the Python implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -90:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a numpy matrix as input.\n\n2. It uses nested loops to generate all possible submatrices:\n   - `r1` and `r2` define the row range\n   - `c1` and `c2` define the column range\n\n3. For each submatrix:\n   - It extracts the submatrix using numpy slicing\n   - Calculates the sum of the submatrix using `np.sum()`\n   - If the sum equals -90, it adds the submatrix (converted to a list) to the result\n\n4. Finally, it returns the list of submatrices with a sum of -90.\n\n5. If no submatrices with a sum of -90 are found, an empty list is returned.\n\nThe function handles:\n- Different matrix sizes\n- Rectangular (non-square) matrices\n- Submatrices of various sizes\n- Finding multiple submatrices with the given sum", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=389))