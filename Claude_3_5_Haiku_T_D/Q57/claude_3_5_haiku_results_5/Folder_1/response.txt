Message(id='msg_01RVzwXjnyKoG8jHhJiskZYJ', content=[TextBlock(text="Here's the implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n\n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -25:\n                        result.append(submatrix.tolist())\n\n    return result\n```\n\nThis function does the following:\n\n1. It takes a numpy matrix as input.\n2. It uses nested loops to generate all possible submatrices of the input matrix.\n3. For each submatrix, it calculates the sum of its elements.\n4. If the sum of a submatrix is exactly -25, it converts the submatrix to a list and adds it to the result list.\n5. After checking all possible submatrices, it returns the list of submatrices with a sum of -25.\n6. If no submatrix is found with a sum of -25, it returns an empty list.\n\nThe function uses numpy for efficient matrix slicing and sum calculation. It considers all possible rectangular subarrays within the original matrix, including single elements, rows, columns, and the entire matrix.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=343))