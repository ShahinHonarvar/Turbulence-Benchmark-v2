Message(id='msg_01WiNhj3nyFCBhJW9bUofo5o', content=[TextBlock(text='```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == 78:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. The function takes a numpy matrix as input.\n2. It uses nested loops to generate all possible submatrices by selecting different starting and ending rows and columns.\n3. For each submatrix, it calculates the sum using `np.sum()`.\n4. If the sum of a submatrix is exactly 78, that submatrix is added to the `result` list.\n5. After checking all possible submatrices, the function returns the list of submatrices with a sum of 78.\n6. If no submatrix is found with a sum of 78, an empty list is returned.\n\nExample usage:\n```python\nmatrix = np.array([[10, 20, 30], [40, 5, 33], [15, 25, 3]])\nresult = submatrix_with_particular_sum(matrix)\n```', type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=353))