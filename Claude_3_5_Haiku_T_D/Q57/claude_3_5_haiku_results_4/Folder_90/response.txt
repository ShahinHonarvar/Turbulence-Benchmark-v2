Message(id='msg_01Q7DLitmcx8K7BTucMG6Wp4', content=[TextBlock(text="Here's the implementation of the function according to the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -452:\n                        result.append(submatrix)\n    \n    return result\n```\n\nThe function `submatrix_with_particular_sum` does the following:\n\n1. It takes a two-dimensional NumPy matrix as input.\n2. It uses nested loops to generate all possible submatrices.\n3. For each submatrix, it checks if the sum of its elements is exactly -452.\n4. If a submatrix with sum -452 is found, it is added to the `result` list.\n5. Finally, it returns the list of all submatrices with sum -452, or an empty list if no such submatrices exist.\n\nThe function works by:\n- Using `r1`, `r2` to define row range\n- Using `c1`, `c2` to define column range\n- Extracting submatrix using NumPy slicing\n- Using `np.sum()` to calculate submatrix sum\n- Comparing sum to -452\n- Storing matching submatrices in the result list", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=380))