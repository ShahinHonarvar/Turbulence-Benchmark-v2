Message(id='msg_01Dxww5kTkrn2KxHGvmw1FFR', content=[TextBlock(text="Here's the implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -617:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThe function does the following:\n\n1. It takes a numpy matrix as input.\n2. It calculates the number of rows and columns in the matrix.\n3. It initializes an empty list to store submatrices.\n4. It uses nested loops to generate all possible submatrices:\n   - `r1` and `r2` define the row range\n   - `c1` and `c2` define the column range\n5. For each submatrix, it checks if the sum is exactly -617.\n6. If a submatrix with sum -617 is found, it's converted to a list and added to the result.\n7. Finally, it returns the list of submatrices with sum -617, or an empty list if none are found.\n\nThe function handles submatrices of various sizes and positions within the original matrix.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=357))