Message(id='msg_019qgYnJp1sC9QVN9wcmHMfs', content=[TextBlock(text="Here's the implementation of the function according to the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_particular_sum(matrix):\n    rows, cols = matrix.shape\n    result = []\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix) == -93:\n                        result.append(submatrix.tolist())\n    \n    return result\n```\n\nThis implementation does the following:\n\n1. It takes a NumPy matrix as input.\n2. It uses nested loops to generate all possible submatrices.\n3. For each submatrix:\n   - It calculates the sum of all elements in the submatrix\n   - If the sum equals -93, it converts the submatrix to a list and adds it to the result\n4. It returns a list of all submatrices that have a sum of -93\n5. If no submatrices are found with a sum of -93, an empty list is returned\n\nThe function can be used like this:\n```python\nmatrix = np.array([\n    [1, 2, 3],\n    [-50, -40, -3],\n    [10, 20, 30]\n])\nresult = submatrix_with_particular_sum(matrix)\n```", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=140, output_tokens=366))