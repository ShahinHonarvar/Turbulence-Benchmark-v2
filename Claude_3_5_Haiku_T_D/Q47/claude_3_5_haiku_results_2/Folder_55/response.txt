Message(id='msg_01C96TCfPYfUXofd5ZvDhyxW', content=[TextBlock(text="Here's the Python implementation:\n\n```python\ndef palindromes_of_specific_lengths(s):\n    s = s.lower()\n    result = set()\n    for length in range(10, 21):\n        for start in range(10, 76 - length + 1):\n            substring = s[start:start+length]\n            if substring == substring[::-1] and substring.isalpha():\n                result.add(substring)\n    return result\n```\n\nThis function does the following:\n\n1. Convert the input string to lowercase to perform case-insensitive palindrome checking.\n2. Initialize an empty set to store the palindromes.\n3. Iterate through palindrome lengths from 10 to 20.\n4. For each length, iterate through possible starting indices from 10 to 75.\n5. Extract a substring of the specified length.\n6. Check if the substring is a palindrome by comparing it with its reverse.\n7. Ensure the substring contains only alphabetic characters using `isalpha()`.\n8. If a palindrome is found, add it to the result set.\n9. Return the set of palindromes.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=207, output_tokens=267))