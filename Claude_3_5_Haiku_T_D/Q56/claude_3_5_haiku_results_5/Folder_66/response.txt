Message(id='msg_01VBJz1hxFuMjMGxMjx4cAtG', content=[TextBlock(text="Here's the Python implementation of the function based on the specification:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 26:\n        return []\n    \n    result = []\n    for i in range(len(s) - 25):\n        substring = s[i:i+26]\n        if len(set(substring)) == 26:\n            result.append(substring)\n    \n    return list(set(result))\n```\n\nThis function does the following:\n\n1. First, it checks if the input string's length is less than 26. If so, it returns an empty list since no valid substrings can exist.\n\n2. It initializes an empty list `result` to store the valid substrings.\n\n3. It iterates through the string, creating substrings of length 26 starting from each index.\n\n4. For each substring, it checks if the length of its unique characters (using `set()`) is 26.\n   - This ensures that the substring has no duplicate characters.\n\n5. If a substring meets the criteria, it's added to the `result` list.\n\n6. Finally, it converts the result to a set and then back to a list to remove any potential duplicates.\n\n7. The function returns the list of valid substrings.\n\nThe function meets all the specified requirements:\n- Takes a string as input\n- Returns substrings of length 26\n- Ensures no duplicate characters in the substring\n- Returns an empty list if no such substrings exist\n- Handles order of returned substrings as not important", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=363))