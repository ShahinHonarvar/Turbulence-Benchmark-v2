Message(id='msg_01KN42C6YQ5ZDzjFqWnkn7Sv', content=[TextBlock(text="Here's the implementation of the function based on the specification:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 90:\n        return []\n    \n    unique_substrings = set()\n    \n    for i in range(len(s) - 89):\n        substring = s[i:i+90]\n        if len(set(substring)) == 90:\n            unique_substrings.add(substring)\n    \n    return list(unique_substrings)\n```\n\nThis function does the following:\n\n1. First, it checks if the input string's length is less than 90. If so, it returns an empty list since no 90-character substrings can exist.\n\n2. It creates an empty set `unique_substrings` to store distinct substrings.\n\n3. It iterates through the string using a sliding window of 90 characters:\n   - For each iteration, it extracts a substring of length 90\n   - Checks if the substring has exactly 90 unique characters using `set()`\n   - If the substring has 90 unique characters, it adds it to the `unique_substrings` set\n\n4. Finally, it converts the set to a list and returns it.\n\nThe function ensures that:\n- Only substrings of exactly 90 characters are considered\n- Only substrings with no duplicate characters are included\n- Duplicate substrings are eliminated by using a set\n- If no such substrings exist, an empty list is returned", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=353))