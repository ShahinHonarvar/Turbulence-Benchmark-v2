Message(id='msg_0148mBgQRUPiPfWLnLv7FaTX', content=[TextBlock(text="Here's a Python implementation that meets the specified requirements:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 96:\n        return []\n    \n    unique_substrings = set()\n    \n    for i in range(len(s) - 95):\n        substring = s[i:i+96]\n        \n        if len(set(substring)) == 96:\n            unique_substrings.add(substring)\n    \n    return list(unique_substrings)\n```\n\nThis function does the following:\n\n1. First, it checks if the input string is less than 96 characters long. If so, it returns an empty list since no substrings of length 96 can exist.\n\n2. It initializes an empty set `unique_substrings` to store distinct substrings.\n\n3. It iterates through the string, extracting substrings of length 96 starting from each index.\n\n4. For each substring, it checks if the substring contains 96 unique characters using `len(set(substring)) == 96`.\n\n5. If a substring has 96 unique characters, it is added to the `unique_substrings` set.\n\n6. Finally, the set is converted to a list and returned. Since it's a set, duplicates are automatically removed.\n\nThe function will return an empty list if no substrings with 96 unique characters are found, and will return a list of all distinct substrings of length 96 with no duplicate characters otherwise.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=353))