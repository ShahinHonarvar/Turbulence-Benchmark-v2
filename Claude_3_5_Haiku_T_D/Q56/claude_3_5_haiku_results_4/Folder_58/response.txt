Message(id='msg_01VMcyEXJv9nfJw4tZWffzqf', content=[TextBlock(text="Here's the Python implementation of the specified function:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 127:\n        return []\n    \n    result = []\n    for i in range(len(s) - 126):\n        substring = s[i:i+127]\n        if len(set(substring)) == 127:\n            result.append(substring)\n    \n    return list(set(result))\n```\n\nThis implementation does the following:\n\n1. First, it checks if the input string `s` is shorter than 127 characters. If so, it returns an empty list since no 127-character substrings can exist.\n\n2. It initializes an empty list `result` to store the valid substrings.\n\n3. It iterates through the string, taking 127-character substrings starting from each position.\n\n4. For each substring, it checks if the substring contains 127 unique characters using `len(set(substring)) == 127`.\n\n5. If a substring has 127 unique characters, it is added to the `result` list.\n\n6. Finally, it converts the result to a set and back to a list to remove any potential duplicates, and returns the list.\n\nThe function handles the requirements by:\n- Returning substrings exactly 127 characters long\n- Ensuring each substring contains no duplicate characters\n- Returning an empty list if no such substrings exist\n- Not being sensitive to the order of substrings in the returned list", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=348))