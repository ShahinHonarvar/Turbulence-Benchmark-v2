Message(id='msg_014XFhtDax2F8KXoRhRxbUyy', content=[TextBlock(text="Here's the Python implementation of the specified function:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 149:\n        return []\n    \n    unique_substrings = set()\n    \n    for i in range(len(s) - 148):\n        substring = s[i:i+149]\n        if len(set(substring)) == 149:\n            unique_substrings.add(substring)\n    \n    return list(unique_substrings)\n```\n\nThis function does the following:\n\n1. First, it checks if the input string's length is less than 149. If so, it returns an empty list since no 149-character substrings can exist.\n\n2. It creates an empty set `unique_substrings` to store the distinct substrings.\n\n3. It iterates through the string, creating substrings of length 149 starting from each index.\n\n4. For each substring, it checks if the length of its unique characters (using `set()`) is exactly 149. This ensures no duplicate characters.\n\n5. If a substring passes the uniqueness check, it is added to the `unique_substrings` set.\n\n6. Finally, the set is converted to a list and returned.\n\nThe function efficiently handles the requirements:\n- Returns substrings of exactly 149 characters\n- Ensures no duplicate characters in each substring\n- Returns an empty list if no such substrings exist\n- Preserves distinct substrings without order constraint", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=348))