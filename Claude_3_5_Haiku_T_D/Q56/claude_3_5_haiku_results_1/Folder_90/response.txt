Message(id='msg_01FyWD5Ajrpw9m5KMv3KtZ5c', content=[TextBlock(text="Here's the Python implementation of the function based on the specification:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 130:\n        return []\n    \n    unique_substrings = set()\n    \n    for i in range(len(s) - 129):\n        substring = s[i:i+130]\n        if len(set(substring)) == 130:\n            unique_substrings.add(substring)\n    \n    return list(unique_substrings)\n```\n\nThis function does the following:\n\n1. First, it checks if the input string is shorter than 130 characters. If so, it returns an empty list since no 130-character substrings can exist.\n\n2. It creates an empty set `unique_substrings` to store distinct substrings.\n\n3. It iterates through the string, extracting all possible 130-character substrings.\n\n4. For each substring, it checks if the substring contains exactly 130 unique characters using `len(set(substring)) == 130`.\n\n5. If a substring meets this condition, it is added to the `unique_substrings` set.\n\n6. Finally, it converts the set of unique substrings to a list and returns it.\n\nThe function ensures that:\n- Only substrings of exactly 130 characters are considered\n- Each substring must have 130 unique characters\n- Duplicate substrings are automatically removed by using a set\n- The order doesn't matter as it returns a list of the unique substrings", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=358))