Message(id='msg_015C1dwyBPiFfW1cyrzLTYmB', content=[TextBlock(text="Here's a Python implementation of the function that meets the specified requirements:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 97:\n        return []\n    \n    unique_substrings = set()\n    \n    for i in range(len(s) - 96):\n        substring = s[i:i+97]\n        if len(set(substring)) == 97:\n            unique_substrings.add(substring)\n    \n    return list(unique_substrings)\n```\n\nThis implementation does the following:\n\n1. First, it checks if the input string `s` is shorter than 97 characters. If so, it returns an empty list since no 97-character substrings can exist.\n\n2. It creates an empty set `unique_substrings` to store distinct substrings.\n\n3. It iterates through the string using a sliding window approach:\n   - For each iteration, it extracts a substring of length 97\n   - It checks if the substring contains 97 unique characters using `len(set(substring)) == 97`\n   - If a substring has 97 unique characters, it adds the substring to the `unique_substrings` set\n\n4. Finally, it converts the set of unique substrings to a list and returns it.\n\nThe function ensures:\n- Only substrings of exactly 97 characters are considered\n- Only substrings with no duplicate characters are included\n- Duplicate substrings are automatically removed by using a set\n- Returns an empty list if no such substrings exist", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=364))