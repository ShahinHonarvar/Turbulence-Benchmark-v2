Message(id='msg_01XV1vkYvEUT9vufNtqikUfN', content=[TextBlock(text="Here's a Python implementation of the specified function:\n\n```python\ndef all_substring_of_size_n(s):\n    if len(s) < 49:\n        return []\n    \n    distinct_substrings = set()\n    \n    for i in range(len(s) - 48):\n        substring = s[i:i+49]\n        if len(set(substring)) == 49:\n            distinct_substrings.add(substring)\n    \n    return list(distinct_substrings)\n```\n\nThis function does the following:\n\n1. First, it checks if the length of the input string is less than 49. If so, it returns an empty list since no 49-character substrings can exist.\n\n2. It creates an empty set `distinct_substrings` to store unique substrings.\n\n3. It iterates through the string, extracting 49-character substrings starting from each possible position.\n\n4. For each substring, it checks if the number of unique characters is exactly 49 using `len(set(substring)) == 49`.\n\n5. If a substring has exactly 49 unique characters, it's added to the `distinct_substrings` set.\n\n6. Finally, it converts the set to a list and returns it.\n\nThe function ensures that:\n- Only substrings of exactly 49 characters are considered\n- Each substring has unique characters\n- Duplicate substrings are not included in the result\n- An empty list is returned if no such substrings exist\n\nThe time complexity is O(n), where n is the length of the input string, and the space complexity is O(n) to store the unique substrings.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=145, output_tokens=386))