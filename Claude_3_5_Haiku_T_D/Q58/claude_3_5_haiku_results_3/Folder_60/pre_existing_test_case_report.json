{
  "parameter(s)": [
    88
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_88_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -4, -21],\\n        [ -5,  17],\\n        [ 64,  47],\\n        [ 37,  87],\\n        [-77,  87],\\n        [ 94,  15],\\n        [-73, -81],\\n        [ -8,  58],\\n        [ -7,  -7],\\n        [-91, -10],\\n        [-83, -62],\\n        [  3,   5],\\n        [-74, -83],\\n        [  9, -72],\\n        [-96,  39],\\n        [ 96,  83],\\n        [ -3,   1],\\n        [ 74, -67],\\n        [-71,  -4],\\n        [ -4,   9],\\n        [-22,  57],\\n        [-59,  63],\\n        [ 46,  17],\\n        [ 87, -38],\\n        [  3,  25],\\n        [-81, -51],\\n        [-21, -48],\\n        [-98,  98],\\n        [ 62,  69],\\n        [-95,  62],\\n        [ 31, -26],\\n        [-96,  30],\\n        [-97, -26],\\n        [ 71,  85],\\n        [  2,  23],\\n        [-80,  41],\\n        [-58,  13],\\n        [-90, -69],\\n        [-59,  -8],\\n        [ 27, -23],\\n        [-71,  -3],\\n        [ 30,  35],\\n        [ 46,  37],\\n        [ 89, -46]]))",
    0.02911
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 0 == 177",
    0.09522
  ],
  "test_vertical_matrix": [
    "failed",
    "assert 0 == 177",
    0.09374
  ]
}