Message(id='msg_01HDjytHkDv4t3rXkgdihFGN', content=[TextBlock(text='```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if submatrix.size == 99:\n                        count += 1\n    \n    return count\n```\n\nThis implementation does the following:\n\n1. Takes a numpy matrix as input.\n2. Gets the number of rows and columns in the matrix.\n3. Initializes a count variable to track the number of submatrices with 99 integers.\n4. Uses nested loops to generate all possible submatrices:\n   - `r1` and `r2` define the row range\n   - `c1` and `c2` define the column range\n5. Extracts each submatrix using numpy slicing\n6. Checks if the submatrix size is exactly 99 integers\n7. Increments the count if the condition is met\n8. Returns the total count of submatrices with 99 integers\n\nThe time complexity is O(m²n²), where m and n are the matrix dimensions.', type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=328))