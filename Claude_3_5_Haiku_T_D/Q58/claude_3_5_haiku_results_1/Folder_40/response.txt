Message(id='msg_01RnG2kStfX7KEfi5EMAQPdS', content=[TextBlock(text="Here's a Python implementation of the function based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.sum(submatrix == 1) == 1:\n                        count += 1\n    \n    return count\n```\n\nThis implementation does the following:\n\n1. The function takes a 2D numpy matrix as input.\n\n2. It uses nested loops to generate all possible submatrices by selecting different start and end rows and columns.\n\n3. For each submatrix:\n   - It extracts the submatrix using numpy slicing\n   - It checks if the number of 1's in the submatrix is exactly 1\n   - If so, it increments the count\n\n4. After checking all possible submatrices, it returns the total count of submatrices with exactly one 1.\n\n5. If no such submatrix is found, the function will return 0.\n\nThe function uses numpy's `sum()` method with a boolean condition to count the number of 1's in each submatrix, which provides an efficient way to check the condition.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=352))