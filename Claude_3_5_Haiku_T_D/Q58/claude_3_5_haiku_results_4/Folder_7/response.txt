Message(id='msg_01LTAEHB3DDp7xQE2EJyLRFw', content=[TextBlock(text="Here's the Python implementation:\n\n```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for height in range(1, rows + 1):\n        for width in range(1, cols + 1):\n            for r_start in range(rows - height + 1):\n                for c_start in range(cols - width + 1):\n                    submatrix = matrix[r_start:r_start+height, c_start:c_start+width]\n                    if submatrix.size == 121:\n                        count += 1\n    \n    return count\n```\n\nThis function does the following:\n\n1. It takes a numpy matrix as input.\n2. It determines the dimensions (rows and columns) of the matrix.\n3. It initializes a count variable to keep track of submatrices with 121 elements.\n4. It uses nested loops to:\n   - Iterate through possible submatrix heights\n   - Iterate through possible submatrix widths\n   - Iterate through possible starting row and column positions\n5. For each iteration, it extracts a submatrix using numpy array slicing.\n6. It checks if the submatrix size is exactly 121.\n7. If a submatrix with 121 elements is found, it increments the count.\n8. Finally, it returns the total count of submatrices with 121 elements.\n\nThe function handles different matrix sizes and configurations, finding all possible submatrices of the given size.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=367))