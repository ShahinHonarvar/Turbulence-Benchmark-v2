Message(id='msg_01Ak2TTUFummMaVK4kRg5WFF', content=[TextBlock(text="```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if submatrix.size == 48:\n                        count += 1\n    \n    return count\n```\n\nThis function does the following:\n1. Takes a 2D numpy matrix as input\n2. Initializes a count variable to track submatrices with 48 integers\n3. Uses nested loops to generate all possible submatrices\n4. Checks each submatrix's total size\n5. Increments count if a submatrix has exactly 48 integers\n6. Returns the total count of such submatrices, or 0 if none found\n\nThe function works by:\n- Iterating through all possible starting row (r1) and column (c1)\n- Iterating through all possible ending row (r2) and column (c2)\n- Creating each submatrix using numpy slicing\n- Checking if the total number of elements is exactly 48\n- Counting such submatrices\n\nTime complexity is O(n^4), where n is the matrix dimension.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=345))