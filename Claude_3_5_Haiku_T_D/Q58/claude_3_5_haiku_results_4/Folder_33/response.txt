Message(id='msg_014mQUoyq15Urs46vVVJvNKC', content=[TextBlock(text='```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if submatrix.size == 118:\n                        count += 1\n    \n    return count\n```\n\nThis implementation does the following:\n\n1. It takes a 2D NumPy matrix as input.\n2. It uses nested loops to iterate through all possible submatrices of the input matrix.\n3. For each submatrix, it checks if the total number of elements is exactly 118.\n4. If a submatrix with 118 elements is found, it increments a counter.\n5. Finally, it returns the total count of submatrices with 118 elements.\n\nThe function works as follows:\n- The outer two loops (r1 and r2) define the range of rows for the submatrix.\n- The inner two loops (c1 and c2) define the range of columns for the submatrix.\n- `matrix[r1:r2+1, c1:c2+1]` extracts the submatrix.\n- `submatrix.size` gives the total number of elements in the submatrix.\n- If the size is exactly 118, the count is incremented.\n\nIf no submatrix with 118 elements is found, the function returns 0.', type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=396))