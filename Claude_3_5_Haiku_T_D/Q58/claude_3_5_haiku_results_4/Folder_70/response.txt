Message(id='msg_01C9VoJDi93Dxb6KeA2biXse', content=[TextBlock(text="Here's the Python implementation:\n\n```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if submatrix.size == 173:\n                        count += 1\n    \n    return count\n```\n\nThis function does the following:\n\n1. It takes a NumPy 2D matrix as input.\n2. It determines the number of rows and columns in the matrix.\n3. It initializes a count variable to track submatrices with 173 elements.\n4. It uses nested loops to generate all possible submatrices by varying start and end row and column indices.\n5. For each submatrix, it checks if the total number of elements is exactly 173.\n6. If a submatrix has 173 elements, the count is incremented.\n7. Finally, it returns the total count of submatrices with 173 elements.\n\nThe function uses efficient NumPy slicing to extract submatrices and determines their size using the `.size` attribute.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=325))