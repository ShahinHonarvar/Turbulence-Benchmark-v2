{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_vertical_matrix": [
    "passed",
    "",
    6e-05
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  19,  -40],\\n        [ -35,   24],\\n        [  31,   54],\\n        [   4,   63],\\n        [ -55,   80],\\n        [  60,  -70],\\n        [  84,   84],\\n        [   0,   74],\\n        [ -33,   75],\\n        [ -20,   86],\\n        [  90,   -3],\\n        [ -81,   15],\\n        [  30,   21],\\n        [  30,   64],\\n        [ -33,  -66],\\n        [   6,   18],\\n        [ -69,    3],\\n        [ -60,  -77],\\n        [   8,   -1],\\n        [ -65,   31],\\n        [ -28,  -95],\\n        [  36,  -65],\\n        [ -91,   -8],\\n        [ -59,  -21],\\n        [  95,  -72],\\n        [ -18,   93],\\n        [ -72,   69],\\n        [  78,   31],\\n        [ -25,   83],\\n        [ -21,  -25],\\n        [ -98,   90],\\n        [ -18,  -92],\\n        [ -86,  -23],\\n        [ -74,   58],\\n        [ -30,   35],\\n        [  15,    6],\\n        [  75,  -60],\\n        [  12,   64],\\n        [ -50,  100],\\n        [  62,  -67],\\n        [  -1,    4],\\n        [-100,  -90],\\n        [ -65,    8],\\n        [  46,    9],\\n        [   4,  -33],\\n        [ -17,   88],\\n        [  91,  -39]]))",
    0.00297
  ],
  "test_horizontal_matrix": [
    "failed",
    "assert 194 == 189",
    0.02543
  ]
}