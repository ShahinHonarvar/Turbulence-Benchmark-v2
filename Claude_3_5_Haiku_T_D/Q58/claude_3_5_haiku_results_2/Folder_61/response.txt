Message(id='msg_01VZo5JHgQjSGCDjxVjKnuVW', content=[TextBlock(text="Here's the Python solution using NumPy:\n\n```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n\n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if submatrix.size == 4 and len(np.unique(submatrix)) == 4:\n                        count += 1\n\n    return count\n```\n\nThis solution does the following:\n\n1. Takes a 2D NumPy matrix as input.\n2. Iterates through all possible submatrices using nested loops.\n3. For each submatrix, checks if:\n   - The submatrix has exactly 4 elements (`submatrix.size == 4`)\n   - All 4 elements are unique (`len(np.unique(submatrix)) == 4`)\n4. Increments a counter for each valid submatrix.\n5. Returns the total count of submatrices with 4 unique integers.\n\nThe time complexity is O(m²n²), where m and n are the dimensions of the input matrix.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=323))