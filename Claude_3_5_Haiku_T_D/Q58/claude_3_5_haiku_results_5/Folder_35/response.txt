Message(id='msg_016W7HdLRMTxjFfVAaTszfNg', content=[TextBlock(text='```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if np.size(submatrix) > 0 and np.count_nonzero(submatrix) == 111:\n                        count += 1\n    \n    return count\n```\n\nThe solution does the following:\n1. Takes a numpy matrix as input\n2. Uses nested loops to generate all possible submatrices\n3. For each submatrix, checks if:\n   - The submatrix is not empty\n   - The number of non-zero elements is exactly 111\n4. Increments a counter for each valid submatrix\n5. Returns the total count of submatrices with 111 numbers\n6. Returns 0 if no such submatrices are found\n\nThe time complexity is O(rows²cols²), and it handles different matrix sizes and configurations.', type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=298))