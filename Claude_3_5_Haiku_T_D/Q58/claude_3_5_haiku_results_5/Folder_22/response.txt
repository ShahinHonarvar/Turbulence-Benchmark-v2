Message(id='msg_016DHS4NZgKxNMQcFEixFpft', content=[TextBlock(text="Here's the Python implementation based on the specification:\n\n```python\nimport numpy as np\n\ndef submatrix_with_n_numbers(matrix):\n    rows, cols = matrix.shape\n    count = 0\n    \n    for r1 in range(rows):\n        for r2 in range(r1, rows):\n            for c1 in range(cols):\n                for c2 in range(c1, cols):\n                    submatrix = matrix[r1:r2+1, c1:c2+1]\n                    if submatrix.size == 21:\n                        count += 1\n    \n    return count\n```\n\nThis implementation does the following:\n\n1. Takes a two-dimensional numpy matrix as input\n2. Initializes a counter `count` to 0\n3. Uses nested loops to generate all possible submatrices by selecting different start and end rows and columns\n4. Creates a submatrix using numpy slicing\n5. Checks if the size of the submatrix is exactly 21\n6. If a submatrix with 21 elements is found, increments the counter\n7. Returns the total count of submatrices with 21 elements\n\nThe time complexity is O(rows^2 * cols^2), as it generates all possible submatrices by checking their sizes.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=131, output_tokens=307))