Message(id='msg_018zmB7hBJDU7xiJt3KLqAwy', content=[TextBlock(text="Here's a Python implementation of the specified function:\n\n```python\ndef if_contains_anagrams(words):\n    def is_anagram(word1, word2):\n        return len(word1) == len(word2) and sorted(word1.lower()) == sorted(word2.lower())\n\n    def count_anagram_pairs(words):\n        anagram_count = 0\n        n = len(words)\n        for i in range(n):\n            for j in range(i+1, n):\n                if len(words[i]) >= 3 and len(words[j]) >= 3 and is_anagram(words[i], words[j]):\n                    anagram_count += 1\n        return anagram_count\n\n    return count_anagram_pairs(words) <= 181\n```\n\nThis implementation does the following:\n\n1. The `is_anagram` helper function checks if two words are anagrams by:\n   - Ensuring they have the same length\n   - Converting both words to lowercase\n   - Comparing their sorted characters\n\n2. The `count_anagram_pairs` helper function:\n   - Iterates through all possible pairs of words\n   - Checks if each pair is at least 3 characters long\n   - Calls `is_anagram` to determine if the pair are anagrams\n   - Counts the number of anagram pairs found\n\n3. The main function `if_contains_anagrams`:\n   - Calls `count_anagram_pairs` to get the total number of anagram pairs\n   - Returns `True` if the number of pairs is less than or equal to 181\n   - Returns `False` otherwise", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=160, output_tokens=390))