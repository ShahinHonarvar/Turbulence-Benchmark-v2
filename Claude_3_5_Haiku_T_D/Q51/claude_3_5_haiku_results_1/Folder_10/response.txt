Message(id='msg_01JkUg4QqVTC8d79LcFLTbAa', content=[TextBlock(text="Here's the Python implementation of the specified function:\n\n```python\ndef if_contains_anagrams(words):\n    def is_valid_anagram(word1, word2):\n        return len(word1) >= 3 and len(word2) >= 3 and sorted(word1.lower()) == sorted(word2.lower())\n\n    anagram_pairs = 0\n    n = len(words)\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if is_valid_anagram(words[i], words[j]):\n                anagram_pairs += 1\n                if anagram_pairs > 21:\n                    return False\n\n    return True\n```\n\nThis function does the following:\n\n1. It defines an inner helper function `is_valid_anagram` that checks if two words are anagrams:\n   - Both words must have at least 3 characters\n   - The words are compared case-insensitively by converting them to lowercase\n   - The sorted characters of both words must be identical\n\n2. It initializes a counter `anagram_pairs` to track the number of anagram pairs found\n\n3. It uses nested loops to compare each word with every other word in the list:\n   - If an anagram pair is found, it increments `anagram_pairs`\n   - If the number of anagram pairs exceeds 21, it immediately returns `False`\n\n4. If the total number of anagram pairs is 21 or less, the function returns `True`\n\nThe function efficiently checks for anagram pairs and stops as soon as more than 21 pairs are found.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=160, output_tokens=378))