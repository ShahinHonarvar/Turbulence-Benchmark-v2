Message(id='msg_0153RJStXVf9VEmhXJ2Z8vvt', content=[TextBlock(text="Here's the Python implementation:\n\n```python\ndef if_contains_anagrams(strings):\n    def is_anagram(s1, s2):\n        s1 = ''.join(c.lower() for c in s1 if c.isalpha())\n        s2 = ''.join(c.lower() for c in s2 if c.isalpha())\n        return len(s1) >= 3 and len(s2) >= 3 and sorted(s1) == sorted(s2)\n\n    anagram_pairs = 0\n    for i in range(len(strings)):\n        for j in range(i + 1, len(strings)):\n            if is_anagram(strings[i], strings[j]):\n                anagram_pairs += 1\n                if anagram_pairs > 289:\n                    return False\n    return True\n```\n\nThis function does the following:\n\n1. It defines an inner function `is_anagram()` that checks if two strings are anagrams:\n   - It converts both strings to lowercase\n   - Removes non-alphabetic characters\n   - Checks if both strings are at least 3 characters long\n   - Checks if the sorted characters of both strings are the same\n\n2. It iterates through all pairs of strings in the input list\n   - For each pair, it checks if they are anagrams using `is_anagram()`\n   - Keeps track of the number of anagram pairs\n   - Returns `False` if the number of anagram pairs exceeds 289\n   - Returns `True` if the total number of anagram pairs is 289 or less", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=160, output_tokens=381))