Message(id='msg_01Kj4gg9ULDWsAQbA4jq6vzK', content=[TextBlock(text="Here's the Python implementation:\n\n```python\ndef if_decimal_is_divisible(binary_str):\n    def fibonacci_at_index(n):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        \n        a, b = 0, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b\n\n    fib_19 = fibonacci_at_index(19)\n    decimal_value = int(binary_str, 2)\n    \n    return decimal_value % fib_19 == 0\n```\n\nThis function does the following:\n\n1. It defines an inner helper function `fibonacci_at_index(n)` that calculates the Fibonacci number at a given index. \n   - If the index is 0, it returns 0\n   - If the index is 1, it returns 1\n   - For other indices, it uses an iterative approach to calculate the Fibonacci number efficiently\n\n2. It calculates the 19th Fibonacci number using `fibonacci_at_index(19)`\n\n3. It converts the binary string to its decimal equivalent using `int(binary_str, 2)`\n\n4. It checks if the decimal value is divisible by the 19th Fibonacci number by using the modulo operator `%`\n\n5. It returns `True` if the decimal value is divisible by the 19th Fibonacci number, `False` otherwise\n\nThe function handles binary strings representing non-negative decimal integers, starting with the most significant digit.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=156, output_tokens=366))