Message(id='msg_01Mjpnje7Zc6MvZZqTBbBV6M', content=[TextBlock(text="Here's the Python implementation of the specified function:\n\n```python\nfrom collections import defaultdict\n\ndef if_contains_anagrams(strings):\n    anagram_count = 0\n    signature_map = defaultdict(list)\n    \n    for string in strings:\n        if len(string) >= 3:\n            sorted_chars = ''.join(sorted(string.lower()))\n            signature_map[sorted_chars].append(string)\n    \n    for group in signature_map.values():\n        if len(group) > 1:\n            pair_count = len(group) * (len(group) - 1) // 2\n            anagram_count += pair_count\n    \n    return anagram_count >= 91\n```\n\nThis implementation does the following:\n\n1. It creates a defaultdict called `signature_map` to group strings by their sorted, lowercase characters.\n\n2. It iterates through the input list of strings, considering only those with length at least 3.\n\n3. For each string, it creates a signature by sorting its lowercase characters.\n\n4. It adds each string to a group in `signature_map` based on its signature.\n\n5. It calculates the number of anagram pairs by iterating through the groups with more than one string.\n\n6. For each group, it calculates the number of pairs using the combination formula `n * (n-1) // 2`.\n\n7. It sums up the total number of anagram pairs.\n\n8. It returns `True` if the total number of anagram pairs is at least 91, and `False` otherwise.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=146, output_tokens=364))