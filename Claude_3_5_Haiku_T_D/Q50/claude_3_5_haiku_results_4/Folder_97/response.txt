Message(id='msg_01KA8qMcqj67UXWEVRM9MVbN', content=[TextBlock(text="Here's a Python implementation of the specified function:\n\n```python\ndef if_contains_anagrams(lst):\n    def is_anagram(s1, s2):\n        return sorted(s1.lower()) == sorted(s2.lower())\n    \n    anagram_pairs = 0\n    n = len(lst)\n    \n    for i in range(n):\n        for j in range(i+1, n):\n            if len(lst[i]) >= 3 and len(lst[j]) >= 3 and is_anagram(lst[i], lst[j]):\n                anagram_pairs += 1\n    \n    return anagram_pairs >= 123\n```\n\nThe function works as follows:\n\n1. It defines an inner helper function `is_anagram()` that checks if two strings are anagrams by comparing their sorted lowercase characters.\n\n2. It initializes a `anagram_pairs` counter to track the number of anagram pairs.\n\n3. It uses nested loops to compare each string with every other string in the list.\n\n4. For each pair of strings:\n   - It checks if both strings are at least 3 characters long\n   - It checks if they are anagrams using the `is_anagram()` function\n   - If they are, it increments the `anagram_pairs` counter\n\n5. Finally, it returns `True` if the number of anagram pairs is at least 123, and `False` otherwise.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=146, output_tokens=338))