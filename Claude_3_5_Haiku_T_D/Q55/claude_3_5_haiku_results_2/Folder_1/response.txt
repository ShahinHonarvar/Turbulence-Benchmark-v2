Message(id='msg_01SkfzyXVBcNp9xB9dTYksEv', content=[TextBlock(text="Here's a Python implementation of the specified function:\n\n```python\ndef lists_with_product_equal_n(circular_list):\n    n = len(circular_list)\n    result = []\n    \n    for start in range(n):\n        for end in range(start, start + n):\n            sublist = []\n            product = 1\n            \n            for i in range(start, end + 1):\n                current_index = i % n\n                sublist.append(circular_list[current_index])\n                product *= circular_list[current_index]\n            \n            if product == -51 and sublist:\n                result.append(sublist)\n    \n    return result\n```\n\nThis implementation follows the requirements:\n\n1. The function takes a circular list of integers as input.\n2. It explores all possible contiguous sublists in a circular manner.\n3. For each sublist, it calculates the product of its elements.\n4. If the product is exactly -51, the sublist is added to the result list.\n5. The function handles circular list wrapping using modulo arithmetic.\n6. It allows sublists of any size up to the length of the input list.\n7. If no sublists with product -51 are found, an empty list is returned.\n8. Duplicate sublists are preserved in the result.\n\nThe time complexity is O(nÂ³), where n is the length of the input list.", type='text')], model='claude-3-5-haiku-20241022', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=214, output_tokens=329))