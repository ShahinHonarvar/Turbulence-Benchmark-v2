{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_50_2.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.157000002029235e-05, "start": 1732101233.6809409, "stop": 1732101233.6810226, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_of_length_two", "location": ["tests50_50_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011701100004302134, "start": 1732101233.6810825, "stop": 1732101233.6811996, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_50_2.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014133000001947948, "start": 1732101233.6812134, "stop": 1732101233.6813552, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_50_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_50_2.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017612800002098083, "start": 1732101233.6815512, "stop": 1732101233.6817276, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_50_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_50_2.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.820099997639772e-05, "start": 1732101233.681997, "stop": 1732101233.6820657, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_of_length_two", "location": ["tests50_50_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.613100007754838e-05, "start": 1732101233.6813447, "stop": 1732101233.6814413, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_of_length_two", "location": ["tests50_50_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 5.72879999936049e-05, "start": 1732101233.6816647, "stop": 1732101233.6817226, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_anagrams_of_size_n", "location": ["tests50_50_2.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 6.134399995971762e-05, "start": 1732101233.6830726, "stop": 1732101233.6831338, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_50_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_50_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.7531000038579805e-05, "start": 1732101233.6831362, "stop": 1732101233.683194, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_50_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 7.656499997210631e-05, "start": 1732101233.68326, "stop": 1732101233.6833367, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_50_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 4.601300008744147e-05, "start": 1732101233.683501, "stop": 1732101233.6835475, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_including_one_same_lowercase_char_2", "location": ["tests50_50_2.py", 60, "test_list_of_strings_including_one_same_lowercase_char_2"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_2": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 5.734199999096745e-05, "start": 1732101233.684053, "stop": 1732101233.6841106, "$report_type": "TestReport", "item_index": 7, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_50_2.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError: can only concatenate str (not \"list\") to str"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/tests50_50_2.py", "lineno": 43, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(string_list):", "        anagrams = []", "        for word in string_list:", "            if len(word) < 3:", "                continue", "            sorted_word = ''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))", "            if sorted_word in anagrams:", ">               anagrams[anagrams.index(sorted_word)] += [''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))]", "E               TypeError: can only concatenate str (not \"list\") to str"], "reprfuncargs": {"args": [["string_list", "['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaa...aaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/tests50_50_2.py", "lineno": 43, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(string_list):", "        anagrams = []", "        for word in string_list:", "            if len(word) < 3:", "                continue", "            sorted_word = ''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))", "            if sorted_word in anagrams:", ">               anagrams[anagrams.index(sorted_word)] += [''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))]", "E               TypeError: can only concatenate str (not \"list\") to str"], "reprfuncargs": {"args": [["string_list", "['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaa...aaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...]"]]}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError: can only concatenate str (not \"list\") to str"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013291899995238055, "start": 1732101233.6811419, "stop": 1732101233.6812751, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_50_2.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.780900009242032e-05, "start": 1732101233.6903903, "stop": 1732101233.6904786, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_including_one_same_lowercase_char_2", "location": ["tests50_50_2.py", 60, "test_list_of_strings_including_one_same_lowercase_char_2"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_2": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError: can only concatenate str (not \"list\") to str"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_2():", "        s = 'A' * 6", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", "        if 20 < 16:", "            assert if_contains_anagrams(l)", "        else:", ">           assert not if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/tests50_50_2.py", "lineno": 67, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(string_list):", "        anagrams = []", "        for word in string_list:", "            if len(word) < 3:", "                continue", "            sorted_word = ''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))", "            if sorted_word in anagrams:", ">               anagrams[anagrams.index(sorted_word)] += [''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))]", "E               TypeError: can only concatenate str (not \"list\") to str"], "reprfuncargs": {"args": [["string_list", "['aAAAAA', 'AaAAAA', 'AAaAAA', 'AAAaAA', 'AAAAaA', 'AAAAAa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_2():", "        s = 'A' * 6", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", "        if 20 < 16:", "            assert if_contains_anagrams(l)", "        else:", ">           assert not if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/tests50_50_2.py", "lineno": 67, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(string_list):", "        anagrams = []", "        for word in string_list:", "            if len(word) < 3:", "                continue", "            sorted_word = ''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))", "            if sorted_word in anagrams:", ">               anagrams[anagrams.index(sorted_word)] += [''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))]", "E               TypeError: can only concatenate str (not \"list\") to str"], "reprfuncargs": {"args": [["string_list", "['aAAAAA', 'AaAAAA', 'AAaAAA', 'AAAaAA', 'AAAAaA', 'AAAAAa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError: can only concatenate str (not \"list\") to str"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 9.627899999031797e-05, "start": 1732101233.68418, "stop": 1732101233.6842766, "extras": [], "$report_type": "TestReport", "item_index": 7, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_50_2.py::test_list_of_anagrams_of_size_n", "location": ["tests50_50_2.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError: can only concatenate str (not \"list\") to str"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 20 < 16:", "                    assert if_contains_anagrams(l)", "                else:", ">                   assert not if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/tests50_50_2.py", "lineno": 30, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(string_list):", "        anagrams = []", "        for word in string_list:", "            if len(word) < 3:", "                continue", "            sorted_word = ''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))", "            if sorted_word in anagrams:", ">               anagrams[anagrams.index(sorted_word)] += [''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))]", "E               TypeError: can only concatenate str (not \"list\") to str"], "reprfuncargs": {"args": [["string_list", "['aBc', 'acB', 'Bac', 'Bca', 'caB', 'cBa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 20 < 16:", "                    assert if_contains_anagrams(l)", "                else:", ">                   assert not if_contains_anagrams(l)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/tests50_50_2.py", "lineno": 30, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def if_contains_anagrams(string_list):", "        anagrams = []", "        for word in string_list:", "            if len(word) < 3:", "                continue", "            sorted_word = ''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))", "            if sorted_word in anagrams:", ">               anagrams[anagrams.index(sorted_word)] += [''.join(sorted(word.lower().translate(str.maketrans('', '', string.punctuation))))]", "E               TypeError: can only concatenate str (not \"list\") to str"], "reprfuncargs": {"args": [["string_list", "['aBc', 'acB', 'Bac', 'Bca', 'caB', 'cBa']"]]}, "reprlocals": null, "reprfileloc": {"path": "Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q50/dbrx_results_2/Folder_50/generated_answer.py", "lineno": 10, "message": "TypeError: can only concatenate str (not \"list\") to str"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00010347100010221766, "start": 1732101233.6832037, "stop": 1732101233.6833072, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_50_2.py::test_list_of_anagrams_of_size_n", "location": ["tests50_50_2.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.653199992953887e-05, "start": 1732101233.6932385, "stop": 1732101233.6933355, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_50_2.py::test_list_of_strings_including_one_same_lowercase_char_2", "location": ["tests50_50_2.py", 60, "test_list_of_strings_including_one_same_lowercase_char_2"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_2": 1, "tests50_50_2.py": 1, "Folder_50": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.59430000446082e-05, "start": 1732101233.6931503, "stop": 1732101233.693237, "$report_type": "TestReport", "item_index": 7, "worker_id": "gw0", "testrun_uid": "45a769c1357446b7892c67a6415a9c59", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
