{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests42_61_2.py::test_list_of_primes", "location": ["tests42_61_2.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests42_61_2.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.443223148584366e-05, "start": 1738489900.6949077, "stop": 1738489900.6949823, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "de122e6311b245ed95f9727add352b13", "node": "<WorkerController gw0>"}
{"nodeid": "tests42_61_2.py::test_list_of_primes", "location": ["tests42_61_2.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests42_61_2.py": 1, "Folder_61": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q42/dbrx_results_2/Folder_61/tests42_61_2.py", "lineno": 8, "message": "assert 2 == {2}\n +  where 2 = prime_factors([2, 2, 2, 2, 2, 2, ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range((8 + 1) * 10)]", ">           assert prime_factors(list_of_primes) == {n}", "E           assert 2 == {2}", "E            +  where 2 = prime_factors([2, 2, 2, 2, 2, 2, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q42/dbrx_results_2/Folder_61/tests42_61_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_primes():", "        for n in [2, 3, 5, 7, 11, 13, 17]:", "            list_of_primes = [n for _ in range((8 + 1) * 10)]", ">           assert prime_factors(list_of_primes) == {n}", "E           assert 2 == {2}", "E            +  where 2 = prime_factors([2, 2, 2, 2, 2, 2, ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q42/dbrx_results_2/Folder_61/tests42_61_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q42/dbrx_results_2/Folder_61/tests42_61_2.py", "lineno": 8, "message": "assert 2 == {2}\n +  where 2 = prime_factors([2, 2, 2, 2, 2, 2, ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00020262692123651505, "start": 1738489900.6950965, "stop": 1738489900.6952994, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "de122e6311b245ed95f9727add352b13", "node": "<WorkerController gw0>"}
{"nodeid": "tests42_61_2.py::test_list_of_primes", "location": ["tests42_61_2.py", 4, "test_list_of_primes"], "keywords": {"test_list_of_primes": 1, "tests42_61_2.py": 1, "Folder_61": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.144082337617874e-05, "start": 1738489900.7030878, "stop": 1738489900.7031596, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "de122e6311b245ed95f9727add352b13", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
