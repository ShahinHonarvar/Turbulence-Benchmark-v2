ChatCompletion(id='gen-1730364851-wg8aJCwlHVe1MrS79oyp', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Give your function the following definition with input validation:\n\n```python\ndef is_valid_circular_list(input_list):\n    if not all(isinstance(item, int) for item in input_list):\n        raise ValueError("All elements of the input list must be integers.")\n    if not input_list:\n        raise ValueError("The input list cannot be empty.")\n    \n    return True   \n      \n\n\ndef lists_with_product_equal_n(input_list: list, n: int = -968, allow_duplicates: bool = False) -> list:\n    if not is_valid_circular_list(input_list):\n        raise ValueError("The input list is not a valid circular list.")\n    \n    if n == 0:\n        return [[]] if 0 in input_list else []\n\n    result = []\n    for i in range(len(input_list)):\n        head = []\n        tail = []\n        for j in range(i, len(input_list)):\n            head.append(input_list[j])\n            tail.extend(input_list[i:j])\n            product = functools.reduce(lambda x, y: x * y, head + tail, 1)\n            if product == n:\n                if not allow_duplicates or [head + tail] != result[-1:]:\n                    result.append(head + tail)\n\n    circular_result = []\n    for sublist in result:\n        circular_result.extend([sublist[-i:] + sublist[:-i] for i in range(1, len(sublist) + 1)])\n\n    return circular_result\n```', refusal='', role='assistant', function_call=None, tool_calls=None))], created=1730364851, model='databricks/dbrx-instruct', object='chat.completion', service_tier=None, system_fingerprint=None, usage=CompletionUsage(completion_tokens=293, prompt_tokens=208, total_tokens=501), provider='Together')