{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040307361632585526, "start": 1738500928.6140437, "stop": 1738500928.614447, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2726374f72c44e5384e51ceeab48ef4c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00043198559433221817, "start": 1738500928.6147172, "stop": 1738500928.6151495, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2726374f72c44e5384e51ceeab48ef4c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_one_integer", "location": ["tests58_77_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.687415927648544e-05, "start": 1738500928.6154497, "stop": 1738500928.615527, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2726374f72c44e5384e51ceeab48ef4c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025478191673755646, "start": 1738500928.6166427, "stop": 1738500928.616898, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2726374f72c44e5384e51ceeab48ef4c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -78,  -95,  -40,  -59,   62,  -40,   50,  -85,  -29,   66,\\n          -77,   83,   41,   73,   50,  -58,  -35,   64,   91,   48,\\n           55,  -68,   86,  -49,   85,   71,   11,   47,   37,    7,\\n          -42,   16,  -42,  -78,  -14,  -70,   87,  -16,  -85,   48,\\n          -57,  -63,   26,   78,   27,   40,  -28,  -92,   79,   57,\\n           25,  -35,   11,   11,    5,  -40,   14,    0,  -55,  -62,\\n          -97,  -91,   50,  -34,   75,   85,   15,  -63,  -38,  -29,\\n          -29,  -78,   78,    7,   -5,   89,  -79,   81,  -54,   -4,\\n           65,   -2,  -19,   63, -100,   22,   60,  -44,   57,   87,\\n          -74,  -58,   85,   71,  -28,   -7,   51,   67,  -20,    4,\\n          -92,  -31,  -43,   41,  -49,   32,   51,    3,   30,    9,\\n           43,   90,  -76,   83,   96,   18,   68,  -10,  -49,  -72,\\n          100,  -10,  -76,   20,  -63,  -61,  -74,   -3,    0,  -62,\\n          -44,   28,  -45,   61,   92,  -81,  -30,   70,    7,   11,\\n           99,    9,  -36,  -40,   66,  -73,  -58,  -90,  -44,  -68,\\n          -82,  -16,  -20,  -33,  -12,  -92,  -87,  -24,  -26,   76,\\n          -47,  -29,  -18,  -40,  -97,  -48,  -75,   14,   -7,  -75,\\n           62,   82,  -47,  -61,   99,   51,   50,   64,  -20]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -78,  -95,  -40,  -59,   62,  -40,   50,  -85,  -29,   66,\\n          -77,   83,   41,   73,   50,  -58,  -35,   64,   91,   48,\\n           55,  -68,   86,  -49,   85,   71,   11,   47,   37,    7,\\n          -42,   16,  -42,  -78,  -14,  -70,   87,  -16,  -85,   48,\\n          -57,  -63,   26,   78,   27,   40,  -28,  -92,   79,   57,\\n           25,  -35,   11,   11,    5,  -40,   14,    0,  -55,  -62,\\n          -97,  -91,   50,  -34,   75,   85,   15,  -63,  -38,  -29,\\n          -29,  -78,   78,    7,   -5,   89,  -79,   81,  -54,   -4,\\n           65,   -2,  -19,   63, -100,   22,   60,  -44,   57,   87,\\n          -74,  -58,   85,   71,  -28,   -7,   51,   67,  -20,    4,\\n          -92,  -31,  -43,   41,  -49,   32,   51,    3,   30,    9,\\n           43,   90,  -76,   83,   96,   18,   68,  -10,  -49,  -72,\\n          100,  -10,  -76,   20,  -63,  -61,  -74,   -3,    0,  -62,\\n          -44,   28,  -45,   61,   92,  -81,  -30,   70,    7,   11,\\n           99,    9,  -36,  -40,   66,  -73,  -58,  -90,  -44,  -68,\\n          -82,  -16,  -20,  -33,  -12,  -92,  -87,  -24,  -26,   76,\\n          -47,  -29,  -18,  -40,  -97,  -48,  -75,   14,   -7,  -75,\\n           62,   82,  -47,  -61,   99,   51,   50,   64,  -20]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -78,  -95,  -40,  -59,   62,  -40,   50,  -85,  -29,   66,\\n          -77,   83,   41,   73,   50,  -58,  -35,   64,   91,   48,\\n           55,  -68,   86,  -49,   85,   71,   11,   47,   37,    7,\\n          -42,   16,  -42,  -78,  -14,  -70,   87,  -16,  -85,   48,\\n          -57,  -63,   26,   78,   27,   40,  -28,  -92,   79,   57,\\n           25,  -35,   11,   11,    5,  -40,   14,    0,  -55,  -62,\\n          -97,  -91,   50,  -34,   75,   85,   15,  -63,  -38,  -29,\\n          -29,  -78,   78,    7,   -5,   89,  -79,   81,  -54,   -4,\\n           65,   -2,  -19,   63, -100,   22,   60,  -44,   57,   87,\\n          -74,  -58,   85,   71,  -28,   -7,   51,   67,  -20,    4,\\n          -92,  -31,  -43,   41,  -49,   32,   51,    3,   30,    9,\\n           43,   90,  -76,   83,   96,   18,   68,  -10,  -49,  -72,\\n          100,  -10,  -76,   20,  -63,  -61,  -74,   -3,    0,  -62,\\n          -44,   28,  -45,   61,   92,  -81,  -30,   70,    7,   11,\\n           99,    9,  -36,  -40,   66,  -73,  -58,  -90,  -44,  -68,\\n          -82,  -16,  -20,  -33,  -12,  -92,  -87,  -24,  -26,   76,\\n          -47,  -29,  -18,  -40,  -97,  -48,  -75,   14,   -7,  -75,\\n           62,   82,  -47,  -61,   99,   51,   50,   64,  -20]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_77/tests58_77_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -78,  -95,  -40,  -59,   62,  -40,   50,  -85,  -29,   66,\\n          -77,   83,   41,   73,   50,  -58,  -35,   64,   91,   48,\\n           55,  -68,   86,  -49,   85,   71,   11,   47,   37,    7,\\n          -42,   16,  -42,  -78,  -14,  -70,   87,  -16,  -85,   48,\\n          -57,  -63,   26,   78,   27,   40,  -28,  -92,   79,   57,\\n           25,  -35,   11,   11,    5,  -40,   14,    0,  -55,  -62,\\n          -97,  -91,   50,  -34,   75,   85,   15,  -63,  -38,  -29,\\n          -29,  -78,   78,    7,   -5,   89,  -79,   81,  -54,   -4,\\n           65,   -2,  -19,   63, -100,   22,   60,  -44,   57,   87,\\n          -74,  -58,   85,   71,  -28,   -7,   51,   67,  -20,    4,\\n          -92,  -31,  -43,   41,  -49,   32,   51,    3,   30,    9,\\n           43,   90,  -76,   83,   96,   18,   68,  -10,  -49,  -72,\\n          100,  -10,  -76,   20,  -63,  -61,  -74,   -3,    0,  -62,\\n          -44,   28,  -45,   61,   92,  -81,  -30,   70,    7,   11,\\n           99,    9,  -36,  -40,   66,  -73,  -58,  -90,  -44,  -68,\\n          -82,  -16,  -20,  -33,  -12,  -92,  -87,  -24,  -26,   76,\\n          -47,  -29,  -18,  -40,  -97,  -48,  -75,   14,   -7,  -75,\\n           62,   82,  -47,  -61,   99,   51,   50,   64,  -20]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009303120896220207, "start": 1738500928.617, "stop": 1738500928.617931, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2726374f72c44e5384e51ceeab48ef4c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_5.py::test_matrix_of_having_179_integers", "location": ["tests58_77_5.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_5.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.555462747812271e-05, "start": 1738500928.6357596, "stop": 1738500928.6358557, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2726374f72c44e5384e51ceeab48ef4c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
