{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003931354731321335, "start": 1738500944.9804277, "stop": 1738500944.9808216, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cf201afcade3455aa93ad4a4aadb0d31", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014812033623456955, "start": 1738500944.981089, "stop": 1738500944.9812374, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cf201afcade3455aa93ad4a4aadb0d31", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_one_integer", "location": ["tests58_97_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006376681849360466, "start": 1738500944.981517, "stop": 1738500944.982155, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cf201afcade3455aa93ad4a4aadb0d31", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002757785841822624, "start": 1738500944.9828413, "stop": 1738500944.9831176, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cf201afcade3455aa93ad4a4aadb0d31", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  64,   75],\\n        [ -13,  100],\\n        [ -18,  -20],\\n        [  74,    0],\\n        [  99,  -82],\\n        [ -29, -100],\\n        [  22,   15],\\n        [  -8,   -4],\\n        [  65,   -9],\\n        [ -57,  -61],\\n        [ -52,  -95],\\n        [  69,  -76],\\n        [  46,   93],\\n        [ -66,  -49],\\n        [ -16,   68],\\n        [  36,   49],\\n        [  90,   66],\\n        [  57,   37],\\n        [ -53,  -76],\\n        [ -64,  -64],\\n        [  67,  -45],\\n        [  33,   -4],\\n        [ -32,   87],\\n        [  18,  -28],\\n        [ -74,  -39],\\n        [  81,   58],\\n        [ -30,   78],\\n        [  46,   28],\\n        [  22,  -20],\\n        [ -13,  -66],\\n        [  16,   -1],\\n        [ -27,  -68],\\n        [  28,  -45],\\n        [   2,   68],\\n        [ -80,   31],\\n        [ -31,   82],\\n        [ -20,  -64],\\n        [  43,   14],\\n        [ -99,    0],\\n        [ -78,   46],\\n        [  93,   48],\\n        [  26,   27],\\n        [  79,    9],\\n        [ -86,   20],\\n        [  57,   94],\\n        [ -78,   61],\\n        [ -42,   74],\\n        [  52,   -3],\\n        [ -96,   42],\\n        [  39,  -43],\\n        [  62,   32],\\n        [ -74,  -75],\\n        [  60,    1],\\n        [  96,  -33],\\n        [  99,  -24],\\n        [   5,  -30],\\n        [ -49,  -69],\\n        [   7,  -42],\\n        [  86,   39],\\n        [  89,  -43]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  64,   75],\\n        [ -13,  100],\\n        [ -18,  -20],\\n        [  74,    0],\\n        [  99,  -82],\\n        [ -29, -100],\\n        [  22,   15],\\n        [  -8,   -4],\\n        [  65,   -9],\\n        [ -57,  -61],\\n        [ -52,  -95],\\n        [  69,  -76],\\n        [  46,   93],\\n        [ -66,  -49],\\n        [ -16,   68],\\n        [  36,   49],\\n        [  90,   66],\\n        [  57,   37],\\n        [ -53,  -76],\\n        [ -64,  -64],\\n        [  67,  -45],\\n        [  33,   -4],\\n        [ -32,   87],\\n        [  18,  -28],\\n        [ -74,  -39],\\n        [  81,   58],\\n        [ -30,   78],\\n        [  46,   28],\\n        [  22,  -20],\\n        [ -13,  -66],\\n        [  16,   -1],\\n        [ -27,  -68],\\n        [  28,  -45],\\n        [   2,   68],\\n        [ -80,   31],\\n        [ -31,   82],\\n        [ -20,  -64],\\n        [  43,   14],\\n        [ -99,    0],\\n        [ -78,   46],\\n        [  93,   48],\\n        [  26,   27],\\n        [  79,    9],\\n        [ -86,   20],\\n        [  57,   94],\\n        [ -78,   61],\\n        [ -42,   74],\\n        [  52,   -3],\\n        [ -96,   42],\\n        [  39,  -43],\\n        [  62,   32],\\n        [ -74,  -75],\\n        [  60,    1],\\n        [  96,  -33],\\n        [  99,  -24],\\n        [   5,  -30],\\n        [ -49,  -69],\\n        [   7,  -42],\\n        [  86,   39],\\n        [  89,  -43]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  64,   75],\\n        [ -13,  100],\\n        [ -18,  -20],\\n        [  74,    0],\\n        [  99,  -82],\\n        [ -29, -100],\\n        [  22,   15],\\n        [  -8,   -4],\\n        [  65,   -9],\\n        [ -57,  -61],\\n        [ -52,  -95],\\n        [  69,  -76],\\n        [  46,   93],\\n        [ -66,  -49],\\n        [ -16,   68],\\n        [  36,   49],\\n        [  90,   66],\\n        [  57,   37],\\n        [ -53,  -76],\\n        [ -64,  -64],\\n        [  67,  -45],\\n        [  33,   -4],\\n        [ -32,   87],\\n        [  18,  -28],\\n        [ -74,  -39],\\n        [  81,   58],\\n        [ -30,   78],\\n        [  46,   28],\\n        [  22,  -20],\\n        [ -13,  -66],\\n        [  16,   -1],\\n        [ -27,  -68],\\n        [  28,  -45],\\n        [   2,   68],\\n        [ -80,   31],\\n        [ -31,   82],\\n        [ -20,  -64],\\n        [  43,   14],\\n        [ -99,    0],\\n        [ -78,   46],\\n        [  93,   48],\\n        [  26,   27],\\n        [  79,    9],\\n        [ -86,   20],\\n        [  57,   94],\\n        [ -78,   61],\\n        [ -42,   74],\\n        [  52,   -3],\\n        [ -96,   42],\\n        [  39,  -43],\\n        [  62,   32],\\n        [ -74,  -75],\\n        [  60,    1],\\n        [  96,  -33],\\n        [  99,  -24],\\n        [   5,  -30],\\n        [ -49,  -69],\\n        [   7,  -42],\\n        [  86,   39],\\n        [  89,  -43]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_97/tests58_97_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  64,   75],\\n        [ -13,  100],\\n        [ -18,  -20],\\n        [  74,    0],\\n        [  99,  -82],\\n        [ -29, -100],\\n        [  22,   15],\\n        [  -8,   -4],\\n        [  65,   -9],\\n        [ -57,  -61],\\n        [ -52,  -95],\\n        [  69,  -76],\\n        [  46,   93],\\n        [ -66,  -49],\\n        [ -16,   68],\\n        [  36,   49],\\n        [  90,   66],\\n        [  57,   37],\\n        [ -53,  -76],\\n        [ -64,  -64],\\n        [  67,  -45],\\n        [  33,   -4],\\n        [ -32,   87],\\n        [  18,  -28],\\n        [ -74,  -39],\\n        [  81,   58],\\n        [ -30,   78],\\n        [  46,   28],\\n        [  22,  -20],\\n        [ -13,  -66],\\n        [  16,   -1],\\n        [ -27,  -68],\\n        [  28,  -45],\\n        [   2,   68],\\n        [ -80,   31],\\n        [ -31,   82],\\n        [ -20,  -64],\\n        [  43,   14],\\n        [ -99,    0],\\n        [ -78,   46],\\n        [  93,   48],\\n        [  26,   27],\\n        [  79,    9],\\n        [ -86,   20],\\n        [  57,   94],\\n        [ -78,   61],\\n        [ -42,   74],\\n        [  52,   -3],\\n        [ -96,   42],\\n        [  39,  -43],\\n        [  62,   32],\\n        [ -74,  -75],\\n        [  60,    1],\\n        [  96,  -33],\\n        [  99,  -24],\\n        [   5,  -30],\\n        [ -49,  -69],\\n        [   7,  -42],\\n        [  86,   39],\\n        [  89,  -43]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010732254013419151, "start": 1738500944.9834032, "stop": 1738500944.9844773, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cf201afcade3455aa93ad4a4aadb0d31", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_5.py::test_matrix_of_having_120_integers", "location": ["tests58_97_5.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_5.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00063290074467659, "start": 1738500945.0008311, "stop": 1738500945.0014646, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cf201afcade3455aa93ad4a4aadb0d31", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
