{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_5.py::test_matrix_of_one_integer", "location": ["tests58_90_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011599529534578323, "start": 1738500938.5341072, "stop": 1738500938.5342233, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d30604f7029a4764a5982882c23febcb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_one_integer", "location": ["tests58_90_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001424141228199005, "start": 1738500938.534386, "stop": 1738500938.5345287, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d30604f7029a4764a5982882c23febcb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_one_integer", "location": ["tests58_90_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.69980251789093e-05, "start": 1738500938.534816, "stop": 1738500938.5348933, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d30604f7029a4764a5982882c23febcb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_having_176_integers", "location": ["tests58_90_5.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.06804746389389e-05, "start": 1738500938.5373728, "stop": 1738500938.5374541, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d30604f7029a4764a5982882c23febcb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_having_176_integers", "location": ["tests58_90_5.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 39, -56],\\n        [-93, -81],\\n        [-70,  37],\\n        [-76,  16],\\n        [ 40,  51],\\n        [-85,  91],\\n        [-66, -37],\\n        [ 74,  13],\\n        [-28, -75],\\n        [ 89, -29],\\n        [  0,   6],\\n        [ 36,  -8],\\n        [-84, -59],\\n        [-47,  86],\\n        [ 37,  40],\\n        [ 70,  66],\\n        [-26, -18],\\n        [-63,   5],\\n        [-95,  20],\\n        [-21,  29],\\n        [  6,  99],\\n        [ 62,   3],\\n        [-68, -37],\\n        [ 18, -23],\\n        [ 95,  19],\\n        [ 22,   7],\\n        [ 55, -37],\\n        [-40,  92],\\n        [ 53,  96],\\n        [  9, -41],\\n        [ 97,  46],\\n        [ 27,  95],\\n        [ 37,  37],\\n        [-33,  81],\\n        [-52,  18],\\n        [-16, -49],\\n        [-50, -21],\\n        [  0, -38],\\n        [-46, -95],\\n        [-64,  28],\\n        [-31,  15],\\n        [-50,  25],\\n        [-69,  -7],\\n        [-97,  35],\\n        [-74, -48],\\n        [-62, -68],\\n        [ 66,  31],\\n        [ 28,  28],\\n        [-73, -33],\\n        [ 79,  33],\\n        [ 19,  22],\\n        [ 81, -19],\\n        [ -8, -27],\\n        [-56,   2],\\n        [-21, -88],\\n        [-63,   1],\\n        [ -6, -16],\\n        [ 28,   7],\\n        [ 12, -30],\\n        [ 44,  37],\\n        [ 11,  70],\\n        [ 36,  -6],\\n        [ 32,  14],\\n        [-19, -73],\\n        [ -9,  45],\\n        [-18, -69],\\n        [-86,   3],\\n        [ 23,  91],\\n        [-95,  -8],\\n        [-95,  84],\\n        [-72, -28],\\n        [ 44, -69],\\n        [-34,  -9],\\n        [-12,  93],\\n        [ 65, -41],\\n        [ 27, -82],\\n        [ -1, -76],\\n        [ 26,   6],\\n        [-87, -92],\\n        [ 62, -41],\\n        [ 39,  25],\\n        [ 17,  39],\\n        [-82, -55],\\n        [-27, -96],\\n        [ 90,   8],\\n        [-84,  -8],\\n        [-78,  -1],\\n        [-59,   8]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 39, -56],\\n        [-93, -81],\\n        [-70,  37],\\n        [-76,  16],\\n        [ 40,  51],\\n        [-85,  91],\\n        [-66, -37],\\n        [ 74,  13],\\n        [-28, -75],\\n        [ 89, -29],\\n        [  0,   6],\\n        [ 36,  -8],\\n        [-84, -59],\\n        [-47,  86],\\n        [ 37,  40],\\n        [ 70,  66],\\n        [-26, -18],\\n        [-63,   5],\\n        [-95,  20],\\n        [-21,  29],\\n        [  6,  99],\\n        [ 62,   3],\\n        [-68, -37],\\n        [ 18, -23],\\n        [ 95,  19],\\n        [ 22,   7],\\n        [ 55, -37],\\n        [-40,  92],\\n        [ 53,  96],\\n        [  9, -41],\\n        [ 97,  46],\\n        [ 27,  95],\\n        [ 37,  37],\\n        [-33,  81],\\n        [-52,  18],\\n        [-16, -49],\\n        [-50, -21],\\n        [  0, -38],\\n        [-46, -95],\\n        [-64,  28],\\n        [-31,  15],\\n        [-50,  25],\\n        [-69,  -7],\\n        [-97,  35],\\n        [-74, -48],\\n        [-62, -68],\\n        [ 66,  31],\\n        [ 28,  28],\\n        [-73, -33],\\n        [ 79,  33],\\n        [ 19,  22],\\n        [ 81, -19],\\n        [ -8, -27],\\n        [-56,   2],\\n        [-21, -88],\\n        [-63,   1],\\n        [ -6, -16],\\n        [ 28,   7],\\n        [ 12, -30],\\n        [ 44,  37],\\n        [ 11,  70],\\n        [ 36,  -6],\\n        [ 32,  14],\\n        [-19, -73],\\n        [ -9,  45],\\n        [-18, -69],\\n        [-86,   3],\\n        [ 23,  91],\\n        [-95,  -8],\\n        [-95,  84],\\n        [-72, -28],\\n        [ 44, -69],\\n        [-34,  -9],\\n        [-12,  93],\\n        [ 65, -41],\\n        [ 27, -82],\\n        [ -1, -76],\\n        [ 26,   6],\\n        [-87, -92],\\n        [ 62, -41],\\n        [ 39,  25],\\n        [ 17,  39],\\n        [-82, -55],\\n        [-27, -96],\\n        [ 90,   8],\\n        [-84,  -8],\\n        [-78,  -1],\\n        [-59,   8]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 39, -56],\\n        [-93, -81],\\n        [-70,  37],\\n        [-76,  16],\\n        [ 40,  51],\\n        [-85,  91],\\n        [-66, -37],\\n        [ 74,  13],\\n        [-28, -75],\\n        [ 89, -29],\\n        [  0,   6],\\n        [ 36,  -8],\\n        [-84, -59],\\n        [-47,  86],\\n        [ 37,  40],\\n        [ 70,  66],\\n        [-26, -18],\\n        [-63,   5],\\n        [-95,  20],\\n        [-21,  29],\\n        [  6,  99],\\n        [ 62,   3],\\n        [-68, -37],\\n        [ 18, -23],\\n        [ 95,  19],\\n        [ 22,   7],\\n        [ 55, -37],\\n        [-40,  92],\\n        [ 53,  96],\\n        [  9, -41],\\n        [ 97,  46],\\n        [ 27,  95],\\n        [ 37,  37],\\n        [-33,  81],\\n        [-52,  18],\\n        [-16, -49],\\n        [-50, -21],\\n        [  0, -38],\\n        [-46, -95],\\n        [-64,  28],\\n        [-31,  15],\\n        [-50,  25],\\n        [-69,  -7],\\n        [-97,  35],\\n        [-74, -48],\\n        [-62, -68],\\n        [ 66,  31],\\n        [ 28,  28],\\n        [-73, -33],\\n        [ 79,  33],\\n        [ 19,  22],\\n        [ 81, -19],\\n        [ -8, -27],\\n        [-56,   2],\\n        [-21, -88],\\n        [-63,   1],\\n        [ -6, -16],\\n        [ 28,   7],\\n        [ 12, -30],\\n        [ 44,  37],\\n        [ 11,  70],\\n        [ 36,  -6],\\n        [ 32,  14],\\n        [-19, -73],\\n        [ -9,  45],\\n        [-18, -69],\\n        [-86,   3],\\n        [ 23,  91],\\n        [-95,  -8],\\n        [-95,  84],\\n        [-72, -28],\\n        [ 44, -69],\\n        [-34,  -9],\\n        [-12,  93],\\n        [ 65, -41],\\n        [ 27, -82],\\n        [ -1, -76],\\n        [ 26,   6],\\n        [-87, -92],\\n        [ 62, -41],\\n        [ 39,  25],\\n        [ 17,  39],\\n        [-82, -55],\\n        [-27, -96],\\n        [ 90,   8],\\n        [-84,  -8],\\n        [-78,  -1],\\n        [-59,   8]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_90/tests58_90_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 39, -56],\\n        [-93, -81],\\n        [-70,  37],\\n        [-76,  16],\\n        [ 40,  51],\\n        [-85,  91],\\n        [-66, -37],\\n        [ 74,  13],\\n        [-28, -75],\\n        [ 89, -29],\\n        [  0,   6],\\n        [ 36,  -8],\\n        [-84, -59],\\n        [-47,  86],\\n        [ 37,  40],\\n        [ 70,  66],\\n        [-26, -18],\\n        [-63,   5],\\n        [-95,  20],\\n        [-21,  29],\\n        [  6,  99],\\n        [ 62,   3],\\n        [-68, -37],\\n        [ 18, -23],\\n        [ 95,  19],\\n        [ 22,   7],\\n        [ 55, -37],\\n        [-40,  92],\\n        [ 53,  96],\\n        [  9, -41],\\n        [ 97,  46],\\n        [ 27,  95],\\n        [ 37,  37],\\n        [-33,  81],\\n        [-52,  18],\\n        [-16, -49],\\n        [-50, -21],\\n        [  0, -38],\\n        [-46, -95],\\n        [-64,  28],\\n        [-31,  15],\\n        [-50,  25],\\n        [-69,  -7],\\n        [-97,  35],\\n        [-74, -48],\\n        [-62, -68],\\n        [ 66,  31],\\n        [ 28,  28],\\n        [-73, -33],\\n        [ 79,  33],\\n        [ 19,  22],\\n        [ 81, -19],\\n        [ -8, -27],\\n        [-56,   2],\\n        [-21, -88],\\n        [-63,   1],\\n        [ -6, -16],\\n        [ 28,   7],\\n        [ 12, -30],\\n        [ 44,  37],\\n        [ 11,  70],\\n        [ 36,  -6],\\n        [ 32,  14],\\n        [-19, -73],\\n        [ -9,  45],\\n        [-18, -69],\\n        [-86,   3],\\n        [ 23,  91],\\n        [-95,  -8],\\n        [-95,  84],\\n        [-72, -28],\\n        [ 44, -69],\\n        [-34,  -9],\\n        [-12,  93],\\n        [ 65, -41],\\n        [ 27, -82],\\n        [ -1, -76],\\n        [ 26,   6],\\n        [-87, -92],\\n        [ 62, -41],\\n        [ 39,  25],\\n        [ 17,  39],\\n        [-82, -55],\\n        [-27, -96],\\n        [ 90,   8],\\n        [-84,  -8],\\n        [-78,  -1],\\n        [-59,   8]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009087249636650085, "start": 1738500938.537549, "stop": 1738500938.538461, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d30604f7029a4764a5982882c23febcb", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_5.py::test_matrix_of_having_176_integers", "location": ["tests58_90_5.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_5.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011339318007230759, "start": 1738500938.5660892, "stop": 1738500938.5662034, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "d30604f7029a4764a5982882c23febcb", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
