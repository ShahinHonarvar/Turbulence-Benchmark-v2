{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_76_5.py::test_matrix_of_one_integer", "location": ["tests58_76_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_5.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011655502021312714, "start": 1738500927.912062, "stop": 1738500927.912179, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0954500fc51e48c88e117c92efd4e6a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_5.py::test_matrix_of_one_integer", "location": ["tests58_76_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_5.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015789829194545746, "start": 1738500927.9123287, "stop": 1738500927.912487, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0954500fc51e48c88e117c92efd4e6a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_5.py::test_matrix_of_one_integer", "location": ["tests58_76_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_5.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.720384746789932e-05, "start": 1738500927.91276, "stop": 1738500927.9128377, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0954500fc51e48c88e117c92efd4e6a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_5.py::test_matrix_of_having_159_integers", "location": ["tests58_76_5.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_5.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.885283023118973e-05, "start": 1738500927.9143193, "stop": 1738500927.9144084, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0954500fc51e48c88e117c92efd4e6a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_5.py::test_matrix_of_having_159_integers", "location": ["tests58_76_5.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_5.py": 1, "Folder_76": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_76/tests58_76_5.py", "lineno": 38, "message": "assert 0.0 == 1\n +  where 0.0 = submatrix_with_n_numbers(matrix([[  9, -12, -65,  35,  38,  58,  50, -48,  26, -57, -30,   6, -54,\\n          -7, -19,  -3,  40,  62,  63, -14,  45,  25,  43, -14, -29,  28,\\n          11, -55, -34, -67, -70, -11,  10,  77, -22,  19, -51, 100, -53,\\n         -60, -70,  25,   3,  94,  -4,  10, -76, -37, -24, -36, -38, -81,\\n         -21, -89, -39, -10, -17, -58,  34, -70, -11,  81,  24, -40, -16,\\n         -67, -68,  86, -82, -74,  52, -16, -56,  56,  67, -27, -14,  49,\\n         -94,  62,  37, -40,  -1,  63,  89, -81, -67,  64,  -7, -63,  84,\\n         -54,  -8,  43, -31,  29,  47, -49,  15, -47, -63,  78, -98, -90,\\n          75, -28,  18,  37,  80, -50, -77,  35,  86,  -7,  36,  67,  69,\\n          48, -27,   3, -53, -97, -58, -75, -36,  64,  12,  57,  65, -27,\\n         -29, -33, -65,  21, -20,  98,   2,  -1, -90, -40, -54,  -3,  40,\\n          77,  86,  72,  27,  49,  22,  18,  11, -94,  97,  88, -76,  -8,\\n         -84,  46,  19]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0.0 == 1", "E        +  where 0.0 = submatrix_with_n_numbers(matrix([[  9, -12, -65,  35,  38,  58,  50, -48,  26, -57, -30,   6, -54,\\n          -7, -19,  -3,  40,  62,  63, -14,  45,  25,  43, -14, -29,  28,\\n          11, -55, -34, -67, -70, -11,  10,  77, -22,  19, -51, 100, -53,\\n         -60, -70,  25,   3,  94,  -4,  10, -76, -37, -24, -36, -38, -81,\\n         -21, -89, -39, -10, -17, -58,  34, -70, -11,  81,  24, -40, -16,\\n         -67, -68,  86, -82, -74,  52, -16, -56,  56,  67, -27, -14,  49,\\n         -94,  62,  37, -40,  -1,  63,  89, -81, -67,  64,  -7, -63,  84,\\n         -54,  -8,  43, -31,  29,  47, -49,  15, -47, -63,  78, -98, -90,\\n          75, -28,  18,  37,  80, -50, -77,  35,  86,  -7,  36,  67,  69,\\n          48, -27,   3, -53, -97, -58, -75, -36,  64,  12,  57,  65, -27,\\n         -29, -33, -65,  21, -20,  98,   2,  -1, -90, -40, -54,  -3,  40,\\n          77,  86,  72,  27,  49,  22,  18,  11, -94,  97,  88, -76,  -8,\\n         -84,  46,  19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_76/tests58_76_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0.0 == 1", "E        +  where 0.0 = submatrix_with_n_numbers(matrix([[  9, -12, -65,  35,  38,  58,  50, -48,  26, -57, -30,   6, -54,\\n          -7, -19,  -3,  40,  62,  63, -14,  45,  25,  43, -14, -29,  28,\\n          11, -55, -34, -67, -70, -11,  10,  77, -22,  19, -51, 100, -53,\\n         -60, -70,  25,   3,  94,  -4,  10, -76, -37, -24, -36, -38, -81,\\n         -21, -89, -39, -10, -17, -58,  34, -70, -11,  81,  24, -40, -16,\\n         -67, -68,  86, -82, -74,  52, -16, -56,  56,  67, -27, -14,  49,\\n         -94,  62,  37, -40,  -1,  63,  89, -81, -67,  64,  -7, -63,  84,\\n         -54,  -8,  43, -31,  29,  47, -49,  15, -47, -63,  78, -98, -90,\\n          75, -28,  18,  37,  80, -50, -77,  35,  86,  -7,  36,  67,  69,\\n          48, -27,   3, -53, -97, -58, -75, -36,  64,  12,  57,  65, -27,\\n         -29, -33, -65,  21, -20,  98,   2,  -1, -90, -40, -54,  -3,  40,\\n          77,  86,  72,  27,  49,  22,  18,  11, -94,  97,  88, -76,  -8,\\n         -84,  46,  19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_76/tests58_76_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_76/tests58_76_5.py", "lineno": 38, "message": "assert 0.0 == 1\n +  where 0.0 = submatrix_with_n_numbers(matrix([[  9, -12, -65,  35,  38,  58,  50, -48,  26, -57, -30,   6, -54,\\n          -7, -19,  -3,  40,  62,  63, -14,  45,  25,  43, -14, -29,  28,\\n          11, -55, -34, -67, -70, -11,  10,  77, -22,  19, -51, 100, -53,\\n         -60, -70,  25,   3,  94,  -4,  10, -76, -37, -24, -36, -38, -81,\\n         -21, -89, -39, -10, -17, -58,  34, -70, -11,  81,  24, -40, -16,\\n         -67, -68,  86, -82, -74,  52, -16, -56,  56,  67, -27, -14,  49,\\n         -94,  62,  37, -40,  -1,  63,  89, -81, -67,  64,  -7, -63,  84,\\n         -54,  -8,  43, -31,  29,  47, -49,  15, -47, -63,  78, -98, -90,\\n          75, -28,  18,  37,  80, -50, -77,  35,  86,  -7,  36,  67,  69,\\n          48, -27,   3, -53, -97, -58, -75, -36,  64,  12,  57,  65, -27,\\n         -29, -33, -65,  21, -20,  98,   2,  -1, -90, -40, -54,  -3,  40,\\n          77,  86,  72,  27,  49,  22,  18,  11, -94,  97,  88, -76,  -8,\\n         -84,  46,  19]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007721390575170517, "start": 1738500927.9145103, "stop": 1738500927.915283, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0954500fc51e48c88e117c92efd4e6a6", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_5.py::test_matrix_of_having_159_integers", "location": ["tests58_76_5.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_5.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010431744158267975, "start": 1738500927.9474022, "stop": 1738500927.9475067, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0954500fc51e48c88e117c92efd4e6a6", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
