{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_48_5.py::test_matrix_of_one_integer", "location": ["tests58_48_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00042856670916080475, "start": 1738500902.7751522, "stop": 1738500902.775581, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a97f49a2cf564d228a44b81c6d69796a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_one_integer", "location": ["tests58_48_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004373257979750633, "start": 1738500902.7758553, "stop": 1738500902.776293, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a97f49a2cf564d228a44b81c6d69796a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_one_integer", "location": ["tests58_48_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.020829409360886e-05, "start": 1738500902.7765915, "stop": 1738500902.776672, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "a97f49a2cf564d228a44b81c6d69796a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_having_130_integers", "location": ["tests58_48_5.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025239400565624237, "start": 1738500902.7778094, "stop": 1738500902.778062, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a97f49a2cf564d228a44b81c6d69796a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_having_130_integers", "location": ["tests58_48_5.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-46,  53],\\n        [-20, -17],\\n        [-99,  58],\\n        [ 17, -27],\\n        [-11,  -5],\\n        [ -3, -97],\\n        [-90, -39],\\n        [-83, -60],\\n        [-73, -59],\\n        [ -9,  66],\\n        [ 72,  28],\\n        [ 35, -69],\\n        [ 79,  33],\\n        [  0, -83],\\n        [ 99, -76],\\n        [-82, -86],\\n        [-62, -86],\\n        [ 73,  38],\\n        [ 15, -36],\\n        [  5,  65],\\n        [-84, -16],\\n        [-54, -43],\\n        [ 92,  23],\\n        [100, -16],\\n        [ 13, -53],\\n        [ 32,   3],\\n        [ 17,  24],\\n        [-24,  19],\\n        [ 74, -82],\\n        [ 27, -32],\\n        [-46, -29],\\n        [ 89, -31],\\n        [-35, -44],\\n        [-34, -96],\\n        [ 84,   4],\\n        [ 46, -16],\\n        [ 66,  88],\\n        [ 83,  -5],\\n        [ -3,  94],\\n        [ 83, -69],\\n        [-44, -78],\\n        [ 38,  81],\\n        [ 65,  34],\\n        [-39,  13],\\n        [ -7, -88],\\n        [-24, -30],\\n        [-67,   1],\\n        [-15,  10],\\n        [-66, -80],\\n        [ -4, -67],\\n        [-26,  22],\\n        [-96,  20],\\n        [ 17, -80],\\n        [  6, -45],\\n        [-53,   7],\\n        [-50,  12],\\n        [ -1, -91],\\n        [ 11,  36],\\n        [-13, -72],\\n        [ 61,  82],\\n        [-38,  70],\\n        [ 19, -57],\\n        [-82,  81],\\n        [ 82,  -1],\\n        [-26,  -2]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-46,  53],\\n        [-20, -17],\\n        [-99,  58],\\n        [ 17, -27],\\n        [-11,  -5],\\n        [ -3, -97],\\n        [-90, -39],\\n        [-83, -60],\\n        [-73, -59],\\n        [ -9,  66],\\n        [ 72,  28],\\n        [ 35, -69],\\n        [ 79,  33],\\n        [  0, -83],\\n        [ 99, -76],\\n        [-82, -86],\\n        [-62, -86],\\n        [ 73,  38],\\n        [ 15, -36],\\n        [  5,  65],\\n        [-84, -16],\\n        [-54, -43],\\n        [ 92,  23],\\n        [100, -16],\\n        [ 13, -53],\\n        [ 32,   3],\\n        [ 17,  24],\\n        [-24,  19],\\n        [ 74, -82],\\n        [ 27, -32],\\n        [-46, -29],\\n        [ 89, -31],\\n        [-35, -44],\\n        [-34, -96],\\n        [ 84,   4],\\n        [ 46, -16],\\n        [ 66,  88],\\n        [ 83,  -5],\\n        [ -3,  94],\\n        [ 83, -69],\\n        [-44, -78],\\n        [ 38,  81],\\n        [ 65,  34],\\n        [-39,  13],\\n        [ -7, -88],\\n        [-24, -30],\\n        [-67,   1],\\n        [-15,  10],\\n        [-66, -80],\\n        [ -4, -67],\\n        [-26,  22],\\n        [-96,  20],\\n        [ 17, -80],\\n        [  6, -45],\\n        [-53,   7],\\n        [-50,  12],\\n        [ -1, -91],\\n        [ 11,  36],\\n        [-13, -72],\\n        [ 61,  82],\\n        [-38,  70],\\n        [ 19, -57],\\n        [-82,  81],\\n        [ 82,  -1],\\n        [-26,  -2]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_130_integers():", "        if 130 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(130 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(130)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-46,  53],\\n        [-20, -17],\\n        [-99,  58],\\n        [ 17, -27],\\n        [-11,  -5],\\n        [ -3, -97],\\n        [-90, -39],\\n        [-83, -60],\\n        [-73, -59],\\n        [ -9,  66],\\n        [ 72,  28],\\n        [ 35, -69],\\n        [ 79,  33],\\n        [  0, -83],\\n        [ 99, -76],\\n        [-82, -86],\\n        [-62, -86],\\n        [ 73,  38],\\n        [ 15, -36],\\n        [  5,  65],\\n        [-84, -16],\\n        [-54, -43],\\n        [ 92,  23],\\n        [100, -16],\\n        [ 13, -53],\\n        [ 32,   3],\\n        [ 17,  24],\\n        [-24,  19],\\n        [ 74, -82],\\n        [ 27, -32],\\n        [-46, -29],\\n        [ 89, -31],\\n        [-35, -44],\\n        [-34, -96],\\n        [ 84,   4],\\n        [ 46, -16],\\n        [ 66,  88],\\n        [ 83,  -5],\\n        [ -3,  94],\\n        [ 83, -69],\\n        [-44, -78],\\n        [ 38,  81],\\n        [ 65,  34],\\n        [-39,  13],\\n        [ -7, -88],\\n        [-24, -30],\\n        [-67,   1],\\n        [-15,  10],\\n        [-66, -80],\\n        [ -4, -67],\\n        [-26,  22],\\n        [-96,  20],\\n        [ 17, -80],\\n        [  6, -45],\\n        [-53,   7],\\n        [-50,  12],\\n        [ -1, -91],\\n        [ 11,  36],\\n        [-13, -72],\\n        [ 61,  82],\\n        [-38,  70],\\n        [ 19, -57],\\n        [-82,  81],\\n        [ 82,  -1],\\n        [-26,  -2]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_48/tests58_48_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-46,  53],\\n        [-20, -17],\\n        [-99,  58],\\n        [ 17, -27],\\n        [-11,  -5],\\n        [ -3, -97],\\n        [-90, -39],\\n        [-83, -60],\\n        [-73, -59],\\n        [ -9,  66],\\n        [ 72,  28],\\n        [ 35, -69],\\n        [ 79,  33],\\n        [  0, -83],\\n        [ 99, -76],\\n        [-82, -86],\\n        [-62, -86],\\n        [ 73,  38],\\n        [ 15, -36],\\n        [  5,  65],\\n        [-84, -16],\\n        [-54, -43],\\n        [ 92,  23],\\n        [100, -16],\\n        [ 13, -53],\\n        [ 32,   3],\\n        [ 17,  24],\\n        [-24,  19],\\n        [ 74, -82],\\n        [ 27, -32],\\n        [-46, -29],\\n        [ 89, -31],\\n        [-35, -44],\\n        [-34, -96],\\n        [ 84,   4],\\n        [ 46, -16],\\n        [ 66,  88],\\n        [ 83,  -5],\\n        [ -3,  94],\\n        [ 83, -69],\\n        [-44, -78],\\n        [ 38,  81],\\n        [ 65,  34],\\n        [-39,  13],\\n        [ -7, -88],\\n        [-24, -30],\\n        [-67,   1],\\n        [-15,  10],\\n        [-66, -80],\\n        [ -4, -67],\\n        [-26,  22],\\n        [-96,  20],\\n        [ 17, -80],\\n        [  6, -45],\\n        [-53,   7],\\n        [-50,  12],\\n        [ -1, -91],\\n        [ 11,  36],\\n        [-13, -72],\\n        [ 61,  82],\\n        [-38,  70],\\n        [ 19, -57],\\n        [-82,  81],\\n        [ 82,  -1],\\n        [-26,  -2]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009514046832919121, "start": 1738500902.7781658, "stop": 1738500902.7791176, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a97f49a2cf564d228a44b81c6d69796a", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_48_5.py::test_matrix_of_having_130_integers", "location": ["tests58_48_5.py", 28, "test_matrix_of_having_130_integers"], "keywords": {"test_matrix_of_having_130_integers": 1, "__wrapped__": 1, "tests58_48_5.py": 1, "Folder_48": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.858515113592148e-05, "start": 1738500902.796383, "stop": 1738500902.7964818, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "a97f49a2cf564d228a44b81c6d69796a", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
