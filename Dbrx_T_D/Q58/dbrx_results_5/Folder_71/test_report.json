{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_71_5.py::test_matrix_of_one_integer", "location": ["tests58_71_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011483393609523773, "start": 1738500924.1640644, "stop": 1738500924.1641798, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cb545991f0724546b3ab7fced959d5d5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_one_integer", "location": ["tests58_71_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001379065215587616, "start": 1738500924.1643302, "stop": 1738500924.1644685, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cb545991f0724546b3ab7fced959d5d5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_one_integer", "location": ["tests58_71_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.965788245201111e-05, "start": 1738500924.1647358, "stop": 1738500924.1648157, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cb545991f0724546b3ab7fced959d5d5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_having_78_integers", "location": ["tests58_71_5.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.245317101478577e-05, "start": 1738500924.1669116, "stop": 1738500924.166984, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cb545991f0724546b3ab7fced959d5d5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_having_78_integers", "location": ["tests58_71_5.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  68,  -73],\\n        [ -20,   10],\\n        [  46,  -56],\\n        [  76,  -34],\\n        [ -42,   81],\\n        [  86,   24],\\n        [ -44,   83],\\n        [  93,  -47],\\n        [ -92,   79],\\n        [ -96,   -8],\\n        [ -56,   85],\\n        [  73,   22],\\n        [ -29,   68],\\n        [-100,   17],\\n        [ -49,  -73],\\n        [   5,   21],\\n        [  86,   44],\\n        [ -42,   78],\\n        [  72,   96],\\n        [  21,   33],\\n        [ -29,   33],\\n        [ -38,   87],\\n        [ -97,   47],\\n        [  -9,   86],\\n        [  32,  -76],\\n        [ -81,  -26],\\n        [ -55,  -17],\\n        [ -83,   22],\\n        [  51,  -69],\\n        [ -92,  -91],\\n        [  81,   -9],\\n        [  44,   21],\\n        [  25,   96],\\n        [ -77,  -53],\\n        [  61, -100],\\n        [  -8,   95],\\n        [  88,   14],\\n        [ -20,   96],\\n        [  -7,   10]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  68,  -73],\\n        [ -20,   10],\\n        [  46,  -56],\\n        [  76,  -34],\\n        [ -42,   81],\\n        [  86,   24],\\n        [ -44,   83],\\n        [  93,  -47],\\n        [ -92,   79],\\n        [ -96,   -8],\\n        [ -56,   85],\\n        [  73,   22],\\n        [ -29,   68],\\n        [-100,   17],\\n        [ -49,  -73],\\n        [   5,   21],\\n        [  86,   44],\\n        [ -42,   78],\\n        [  72,   96],\\n        [  21,   33],\\n        [ -29,   33],\\n        [ -38,   87],\\n        [ -97,   47],\\n        [  -9,   86],\\n        [  32,  -76],\\n        [ -81,  -26],\\n        [ -55,  -17],\\n        [ -83,   22],\\n        [  51,  -69],\\n        [ -92,  -91],\\n        [  81,   -9],\\n        [  44,   21],\\n        [  25,   96],\\n        [ -77,  -53],\\n        [  61, -100],\\n        [  -8,   95],\\n        [  88,   14],\\n        [ -20,   96],\\n        [  -7,   10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_78_integers():", "        if 78 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(78 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(78)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  68,  -73],\\n        [ -20,   10],\\n        [  46,  -56],\\n        [  76,  -34],\\n        [ -42,   81],\\n        [  86,   24],\\n        [ -44,   83],\\n        [  93,  -47],\\n        [ -92,   79],\\n        [ -96,   -8],\\n        [ -56,   85],\\n        [  73,   22],\\n        [ -29,   68],\\n        [-100,   17],\\n        [ -49,  -73],\\n        [   5,   21],\\n        [  86,   44],\\n        [ -42,   78],\\n        [  72,   96],\\n        [  21,   33],\\n        [ -29,   33],\\n        [ -38,   87],\\n        [ -97,   47],\\n        [  -9,   86],\\n        [  32,  -76],\\n        [ -81,  -26],\\n        [ -55,  -17],\\n        [ -83,   22],\\n        [  51,  -69],\\n        [ -92,  -91],\\n        [  81,   -9],\\n        [  44,   21],\\n        [  25,   96],\\n        [ -77,  -53],\\n        [  61, -100],\\n        [  -8,   95],\\n        [  88,   14],\\n        [ -20,   96],\\n        [  -7,   10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_71/tests58_71_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  68,  -73],\\n        [ -20,   10],\\n        [  46,  -56],\\n        [  76,  -34],\\n        [ -42,   81],\\n        [  86,   24],\\n        [ -44,   83],\\n        [  93,  -47],\\n        [ -92,   79],\\n        [ -96,   -8],\\n        [ -56,   85],\\n        [  73,   22],\\n        [ -29,   68],\\n        [-100,   17],\\n        [ -49,  -73],\\n        [   5,   21],\\n        [  86,   44],\\n        [ -42,   78],\\n        [  72,   96],\\n        [  21,   33],\\n        [ -29,   33],\\n        [ -38,   87],\\n        [ -97,   47],\\n        [  -9,   86],\\n        [  32,  -76],\\n        [ -81,  -26],\\n        [ -55,  -17],\\n        [ -83,   22],\\n        [  51,  -69],\\n        [ -92,  -91],\\n        [  81,   -9],\\n        [  44,   21],\\n        [  25,   96],\\n        [ -77,  -53],\\n        [  61, -100],\\n        [  -8,   95],\\n        [  88,   14],\\n        [ -20,   96],\\n        [  -7,   10]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000545538030564785, "start": 1738500924.167069, "stop": 1738500924.1676147, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cb545991f0724546b3ab7fced959d5d5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_71_5.py::test_matrix_of_having_78_integers", "location": ["tests58_71_5.py", 28, "test_matrix_of_having_78_integers"], "keywords": {"test_matrix_of_having_78_integers": 1, "__wrapped__": 1, "tests58_71_5.py": 1, "Folder_71": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011831987649202347, "start": 1738500924.1963515, "stop": 1738500924.1964703, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cb545991f0724546b3ab7fced959d5d5", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
