{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00037882663309574127, "start": 1738500875.900948, "stop": 1738500875.9013274, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3ffc5ed122364b0e8744a3790c531d52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014946423470973969, "start": 1738500875.9015934, "stop": 1738500875.9017432, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3ffc5ed122364b0e8744a3790c531d52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_one_integer", "location": ["tests58_13_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006665550172328949, "start": 1738500875.9020216, "stop": 1738500875.9026885, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3ffc5ed122364b0e8744a3790c531d52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002719461917877197, "start": 1738500875.903401, "stop": 1738500875.9036734, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3ffc5ed122364b0e8744a3790c531d52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  23,   77,  -46,  -70,   61,  -99,  -60,  -78,  -42,  -40,\\n           94,   29,   56,   13,  -41,   96,   54,  -17,   42,   34,\\n          -89,   43,  -32,   60,   67,  -57,  -90,    8,  -40,   37,\\n           59,   66,  -37,  -10,   42,   41,   29,  -85,   97,   14,\\n           41,    1,  -80,   50,  -80,   23,  -25,  -51,  -97,   88,\\n          -28,  -41,  -45,   45,   59,   -9,  -86,    8,   11, -100,\\n          -13,   58,   19,   37,    9,  -14,  -12,  -36,   45,   49,\\n           67,  -24,  -31,   65,  -18,  -49,  -95,   74,   20,   93,\\n           60,  -70,  -90,   42,   14,  -51,   16,   77,   67,   32,\\n          -10,  -41,   57,  -60,  -15,   65,  -38,   24,  -31,  -47,\\n          -92,   -9,    2,  -90,   41,  -86,  -99,   -1,  -33,   91,\\n          -38,   21,   21,   79,  -38,  -70,   82,  -50,  -27,  -73,\\n           74,   34,  -85,  -27,  -97,  -98,   65,   54,  -33,   75,\\n           56,  -12,  -79,   35,  -20,  -32,  -97,  -78,  -63,  -52,\\n           31,    2, -100,  -83,  -67,  -92,   81,  -48,   94,  -38,\\n            0,   -4,   28,  -99,   25,   26,   28,  -79,  -38,  -89,\\n           -9,   12,  -60,    9,  -44,   17,   92,  -24,   75,   46,\\n          -33,  -23,   68,   69,   66]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  23,   77,  -46,  -70,   61,  -99,  -60,  -78,  -42,  -40,\\n           94,   29,   56,   13,  -41,   96,   54,  -17,   42,   34,\\n          -89,   43,  -32,   60,   67,  -57,  -90,    8,  -40,   37,\\n           59,   66,  -37,  -10,   42,   41,   29,  -85,   97,   14,\\n           41,    1,  -80,   50,  -80,   23,  -25,  -51,  -97,   88,\\n          -28,  -41,  -45,   45,   59,   -9,  -86,    8,   11, -100,\\n          -13,   58,   19,   37,    9,  -14,  -12,  -36,   45,   49,\\n           67,  -24,  -31,   65,  -18,  -49,  -95,   74,   20,   93,\\n           60,  -70,  -90,   42,   14,  -51,   16,   77,   67,   32,\\n          -10,  -41,   57,  -60,  -15,   65,  -38,   24,  -31,  -47,\\n          -92,   -9,    2,  -90,   41,  -86,  -99,   -1,  -33,   91,\\n          -38,   21,   21,   79,  -38,  -70,   82,  -50,  -27,  -73,\\n           74,   34,  -85,  -27,  -97,  -98,   65,   54,  -33,   75,\\n           56,  -12,  -79,   35,  -20,  -32,  -97,  -78,  -63,  -52,\\n           31,    2, -100,  -83,  -67,  -92,   81,  -48,   94,  -38,\\n            0,   -4,   28,  -99,   25,   26,   28,  -79,  -38,  -89,\\n           -9,   12,  -60,    9,  -44,   17,   92,  -24,   75,   46,\\n          -33,  -23,   68,   69,   66]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_175_integers():", "        if 175 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(175 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(175)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  23,   77,  -46,  -70,   61,  -99,  -60,  -78,  -42,  -40,\\n           94,   29,   56,   13,  -41,   96,   54,  -17,   42,   34,\\n          -89,   43,  -32,   60,   67,  -57,  -90,    8,  -40,   37,\\n           59,   66,  -37,  -10,   42,   41,   29,  -85,   97,   14,\\n           41,    1,  -80,   50,  -80,   23,  -25,  -51,  -97,   88,\\n          -28,  -41,  -45,   45,   59,   -9,  -86,    8,   11, -100,\\n          -13,   58,   19,   37,    9,  -14,  -12,  -36,   45,   49,\\n           67,  -24,  -31,   65,  -18,  -49,  -95,   74,   20,   93,\\n           60,  -70,  -90,   42,   14,  -51,   16,   77,   67,   32,\\n          -10,  -41,   57,  -60,  -15,   65,  -38,   24,  -31,  -47,\\n          -92,   -9,    2,  -90,   41,  -86,  -99,   -1,  -33,   91,\\n          -38,   21,   21,   79,  -38,  -70,   82,  -50,  -27,  -73,\\n           74,   34,  -85,  -27,  -97,  -98,   65,   54,  -33,   75,\\n           56,  -12,  -79,   35,  -20,  -32,  -97,  -78,  -63,  -52,\\n           31,    2, -100,  -83,  -67,  -92,   81,  -48,   94,  -38,\\n            0,   -4,   28,  -99,   25,   26,   28,  -79,  -38,  -89,\\n           -9,   12,  -60,    9,  -44,   17,   92,  -24,   75,   46,\\n          -33,  -23,   68,   69,   66]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_13/tests58_13_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  23,   77,  -46,  -70,   61,  -99,  -60,  -78,  -42,  -40,\\n           94,   29,   56,   13,  -41,   96,   54,  -17,   42,   34,\\n          -89,   43,  -32,   60,   67,  -57,  -90,    8,  -40,   37,\\n           59,   66,  -37,  -10,   42,   41,   29,  -85,   97,   14,\\n           41,    1,  -80,   50,  -80,   23,  -25,  -51,  -97,   88,\\n          -28,  -41,  -45,   45,   59,   -9,  -86,    8,   11, -100,\\n          -13,   58,   19,   37,    9,  -14,  -12,  -36,   45,   49,\\n           67,  -24,  -31,   65,  -18,  -49,  -95,   74,   20,   93,\\n           60,  -70,  -90,   42,   14,  -51,   16,   77,   67,   32,\\n          -10,  -41,   57,  -60,  -15,   65,  -38,   24,  -31,  -47,\\n          -92,   -9,    2,  -90,   41,  -86,  -99,   -1,  -33,   91,\\n          -38,   21,   21,   79,  -38,  -70,   82,  -50,  -27,  -73,\\n           74,   34,  -85,  -27,  -97,  -98,   65,   54,  -33,   75,\\n           56,  -12,  -79,   35,  -20,  -32,  -97,  -78,  -63,  -52,\\n           31,    2, -100,  -83,  -67,  -92,   81,  -48,   94,  -38,\\n            0,   -4,   28,  -99,   25,   26,   28,  -79,  -38,  -89,\\n           -9,   12,  -60,    9,  -44,   17,   92,  -24,   75,   46,\\n          -33,  -23,   68,   69,   66]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006996328011155128, "start": 1738500875.903953, "stop": 1738500875.9046533, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3ffc5ed122364b0e8744a3790c531d52", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_13_5.py::test_matrix_of_having_175_integers", "location": ["tests58_13_5.py", 28, "test_matrix_of_having_175_integers"], "keywords": {"test_matrix_of_having_175_integers": 1, "__wrapped__": 1, "tests58_13_5.py": 1, "Folder_13": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000683145597577095, "start": 1738500875.921172, "stop": 1738500875.9218554, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3ffc5ed122364b0e8744a3790c531d52", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
