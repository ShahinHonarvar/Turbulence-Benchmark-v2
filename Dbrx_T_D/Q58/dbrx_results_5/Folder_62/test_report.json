{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_5.py::test_matrix_of_one_integer", "location": ["tests58_62_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004050908610224724, "start": 1738500916.007897, "stop": 1738500916.0083025, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2c41166e94994884b21a8ddbd7f3bb5e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_one_integer", "location": ["tests58_62_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0004386603832244873, "start": 1738500916.0085735, "stop": 1738500916.0090127, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2c41166e94994884b21a8ddbd7f3bb5e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_one_integer", "location": ["tests58_62_5.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.842667400836945e-05, "start": 1738500916.009312, "stop": 1738500916.0093908, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "2c41166e94994884b21a8ddbd7f3bb5e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_having_186_integers", "location": ["tests58_62_5.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026206113398075104, "start": 1738500916.0105093, "stop": 1738500916.0107718, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2c41166e94994884b21a8ddbd7f3bb5e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_having_186_integers", "location": ["tests58_62_5.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  45,   65],\\n        [  97,  -87],\\n        [   5,  -46],\\n        [  75,   44],\\n        [ -28,   21],\\n        [ -78,  -11],\\n        [ -73,  -41],\\n        [  51,  -29],\\n        [ -64,   24],\\n        [ -87,  -69],\\n        [ -30,  -74],\\n        [  14,   56],\\n        [ -69,  -39],\\n        [  90,  -72],\\n        [ -29,  -36],\\n        [  67,  -98],\\n        [ -92,  -80],\\n        [  31,   67],\\n        [  80,  -71],\\n        [  77,   63],\\n        [ -86,   20],\\n        [ -92,   -2],\\n        [  36,  -64],\\n        [ -36,   57],\\n        [ -13,  -30],\\n        [  -2,   67],\\n        [  71,   85],\\n        [  81,    1],\\n        [ -38,  -67],\\n        [   0,   97],\\n        [  87,  -41],\\n        [ -94,   92],\\n        [  53,  100],\\n        [  24,   72],\\n        [ -53,   48],\\n        [ -36,  -17],\\n        [ -31,   32],\\n        [  12,  -79],\\n        [  29,   48],\\n        [   5,   73],\\n        [ -56,  -99],\\n        [  26,  -71],\\n        [  15, -100],\\n        [  91,  -16],\\n        [ -87,   16],\\n        [  31,  -19],\\n        [  34,   65],\\n        [ -96,  -36],\\n        [  85,   88],\\n        [ -23,   69],\\n        [ -21,   60],\\n        [  23,   78],\\n        [   4,   93],\\n        [  58,  -44],\\n        [  66,  -51],\\n        [  21,   -9],\\n        [  96,   74],\\n        [ -28,  -26],\\n        [  93,  -99],\\n        [  -8,   24],\\n        [  55,   -3],\\n        [  53,   54],\\n        [ -39,  -91],\\n        [  20,   77],\\n        [  82,   50],\\n        [ -12,  -79],\\n        [  78,  -75],\\n        [  29,   52],\\n        [ -51,   71],\\n        [  80,   97],\\n        [ -86,  -39],\\n        [ -60,    6],\\n        [  -3,  -19],\\n        [ -18,    2],\\n        [  25,  -53],\\n        [  27,   24],\\n        [ -19,   90],\\n        [  61,   55],\\n        [  89,  -76],\\n        [ -28,   38],\\n        [   6,   97],\\n        [ -93,  -82],\\n        [  -5,   65],\\n        [  75,   98],\\n        [  26,   80],\\n        [  35,  -23],\\n        [  25,   -7],\\n        [  43,  -41],\\n        [ -65,   76],\\n        [  43,    0],\\n        [  45,   74],\\n        [ -13,   57],\\n        [  69,  -10]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  45,   65],\\n        [  97,  -87],\\n        [   5,  -46],\\n        [  75,   44],\\n        [ -28,   21],\\n        [ -78,  -11],\\n        [ -73,  -41],\\n        [  51,  -29],\\n        [ -64,   24],\\n        [ -87,  -69],\\n        [ -30,  -74],\\n        [  14,   56],\\n        [ -69,  -39],\\n        [  90,  -72],\\n        [ -29,  -36],\\n        [  67,  -98],\\n        [ -92,  -80],\\n        [  31,   67],\\n        [  80,  -71],\\n        [  77,   63],\\n        [ -86,   20],\\n        [ -92,   -2],\\n        [  36,  -64],\\n        [ -36,   57],\\n        [ -13,  -30],\\n        [  -2,   67],\\n        [  71,   85],\\n        [  81,    1],\\n        [ -38,  -67],\\n        [   0,   97],\\n        [  87,  -41],\\n        [ -94,   92],\\n        [  53,  100],\\n        [  24,   72],\\n        [ -53,   48],\\n        [ -36,  -17],\\n        [ -31,   32],\\n        [  12,  -79],\\n        [  29,   48],\\n        [   5,   73],\\n        [ -56,  -99],\\n        [  26,  -71],\\n        [  15, -100],\\n        [  91,  -16],\\n        [ -87,   16],\\n        [  31,  -19],\\n        [  34,   65],\\n        [ -96,  -36],\\n        [  85,   88],\\n        [ -23,   69],\\n        [ -21,   60],\\n        [  23,   78],\\n        [   4,   93],\\n        [  58,  -44],\\n        [  66,  -51],\\n        [  21,   -9],\\n        [  96,   74],\\n        [ -28,  -26],\\n        [  93,  -99],\\n        [  -8,   24],\\n        [  55,   -3],\\n        [  53,   54],\\n        [ -39,  -91],\\n        [  20,   77],\\n        [  82,   50],\\n        [ -12,  -79],\\n        [  78,  -75],\\n        [  29,   52],\\n        [ -51,   71],\\n        [  80,   97],\\n        [ -86,  -39],\\n        [ -60,    6],\\n        [  -3,  -19],\\n        [ -18,    2],\\n        [  25,  -53],\\n        [  27,   24],\\n        [ -19,   90],\\n        [  61,   55],\\n        [  89,  -76],\\n        [ -28,   38],\\n        [   6,   97],\\n        [ -93,  -82],\\n        [  -5,   65],\\n        [  75,   98],\\n        [  26,   80],\\n        [  35,  -23],\\n        [  25,   -7],\\n        [  43,  -41],\\n        [ -65,   76],\\n        [  43,    0],\\n        [  45,   74],\\n        [ -13,   57],\\n        [  69,  -10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  45,   65],\\n        [  97,  -87],\\n        [   5,  -46],\\n        [  75,   44],\\n        [ -28,   21],\\n        [ -78,  -11],\\n        [ -73,  -41],\\n        [  51,  -29],\\n        [ -64,   24],\\n        [ -87,  -69],\\n        [ -30,  -74],\\n        [  14,   56],\\n        [ -69,  -39],\\n        [  90,  -72],\\n        [ -29,  -36],\\n        [  67,  -98],\\n        [ -92,  -80],\\n        [  31,   67],\\n        [  80,  -71],\\n        [  77,   63],\\n        [ -86,   20],\\n        [ -92,   -2],\\n        [  36,  -64],\\n        [ -36,   57],\\n        [ -13,  -30],\\n        [  -2,   67],\\n        [  71,   85],\\n        [  81,    1],\\n        [ -38,  -67],\\n        [   0,   97],\\n        [  87,  -41],\\n        [ -94,   92],\\n        [  53,  100],\\n        [  24,   72],\\n        [ -53,   48],\\n        [ -36,  -17],\\n        [ -31,   32],\\n        [  12,  -79],\\n        [  29,   48],\\n        [   5,   73],\\n        [ -56,  -99],\\n        [  26,  -71],\\n        [  15, -100],\\n        [  91,  -16],\\n        [ -87,   16],\\n        [  31,  -19],\\n        [  34,   65],\\n        [ -96,  -36],\\n        [  85,   88],\\n        [ -23,   69],\\n        [ -21,   60],\\n        [  23,   78],\\n        [   4,   93],\\n        [  58,  -44],\\n        [  66,  -51],\\n        [  21,   -9],\\n        [  96,   74],\\n        [ -28,  -26],\\n        [  93,  -99],\\n        [  -8,   24],\\n        [  55,   -3],\\n        [  53,   54],\\n        [ -39,  -91],\\n        [  20,   77],\\n        [  82,   50],\\n        [ -12,  -79],\\n        [  78,  -75],\\n        [  29,   52],\\n        [ -51,   71],\\n        [  80,   97],\\n        [ -86,  -39],\\n        [ -60,    6],\\n        [  -3,  -19],\\n        [ -18,    2],\\n        [  25,  -53],\\n        [  27,   24],\\n        [ -19,   90],\\n        [  61,   55],\\n        [  89,  -76],\\n        [ -28,   38],\\n        [   6,   97],\\n        [ -93,  -82],\\n        [  -5,   65],\\n        [  75,   98],\\n        [  26,   80],\\n        [  35,  -23],\\n        [  25,   -7],\\n        [  43,  -41],\\n        [ -65,   76],\\n        [  43,    0],\\n        [  45,   74],\\n        [ -13,   57],\\n        [  69,  -10]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_5/Folder_62/tests58_62_5.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  45,   65],\\n        [  97,  -87],\\n        [   5,  -46],\\n        [  75,   44],\\n        [ -28,   21],\\n        [ -78,  -11],\\n        [ -73,  -41],\\n        [  51,  -29],\\n        [ -64,   24],\\n        [ -87,  -69],\\n        [ -30,  -74],\\n        [  14,   56],\\n        [ -69,  -39],\\n        [  90,  -72],\\n        [ -29,  -36],\\n        [  67,  -98],\\n        [ -92,  -80],\\n        [  31,   67],\\n        [  80,  -71],\\n        [  77,   63],\\n        [ -86,   20],\\n        [ -92,   -2],\\n        [  36,  -64],\\n        [ -36,   57],\\n        [ -13,  -30],\\n        [  -2,   67],\\n        [  71,   85],\\n        [  81,    1],\\n        [ -38,  -67],\\n        [   0,   97],\\n        [  87,  -41],\\n        [ -94,   92],\\n        [  53,  100],\\n        [  24,   72],\\n        [ -53,   48],\\n        [ -36,  -17],\\n        [ -31,   32],\\n        [  12,  -79],\\n        [  29,   48],\\n        [   5,   73],\\n        [ -56,  -99],\\n        [  26,  -71],\\n        [  15, -100],\\n        [  91,  -16],\\n        [ -87,   16],\\n        [  31,  -19],\\n        [  34,   65],\\n        [ -96,  -36],\\n        [  85,   88],\\n        [ -23,   69],\\n        [ -21,   60],\\n        [  23,   78],\\n        [   4,   93],\\n        [  58,  -44],\\n        [  66,  -51],\\n        [  21,   -9],\\n        [  96,   74],\\n        [ -28,  -26],\\n        [  93,  -99],\\n        [  -8,   24],\\n        [  55,   -3],\\n        [  53,   54],\\n        [ -39,  -91],\\n        [  20,   77],\\n        [  82,   50],\\n        [ -12,  -79],\\n        [  78,  -75],\\n        [  29,   52],\\n        [ -51,   71],\\n        [  80,   97],\\n        [ -86,  -39],\\n        [ -60,    6],\\n        [  -3,  -19],\\n        [ -18,    2],\\n        [  25,  -53],\\n        [  27,   24],\\n        [ -19,   90],\\n        [  61,   55],\\n        [  89,  -76],\\n        [ -28,   38],\\n        [   6,   97],\\n        [ -93,  -82],\\n        [  -5,   65],\\n        [  75,   98],\\n        [  26,   80],\\n        [  35,  -23],\\n        [  25,   -7],\\n        [  43,  -41],\\n        [ -65,   76],\\n        [  43,    0],\\n        [  45,   74],\\n        [ -13,   57],\\n        [  69,  -10]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011863373219966888, "start": 1738500916.0108743, "stop": 1738500916.012061, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2c41166e94994884b21a8ddbd7f3bb5e", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_5.py::test_matrix_of_having_186_integers", "location": ["tests58_62_5.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_5.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.212549775838852e-05, "start": 1738500916.0291011, "stop": 1738500916.0291936, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "2c41166e94994884b21a8ddbd7f3bb5e", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
