{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00041834916919469833, "start": 1738500678.4827847, "stop": 1738500678.4832036, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "09f78753239e4d68a38ee6009c23bfda", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017752870917320251, "start": 1738500678.4835236, "stop": 1738500678.4837012, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "09f78753239e4d68a38ee6009c23bfda", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_one_integer", "location": ["tests58_90_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000733640044927597, "start": 1738500678.4840147, "stop": 1738500678.484749, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "09f78753239e4d68a38ee6009c23bfda", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.93501564860344e-05, "start": 1738500678.4856987, "stop": 1738500678.4857886, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "09f78753239e4d68a38ee6009c23bfda", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 35,  71],\\n        [ 81,  70],\\n        [  1,  59],\\n        [ 21,  61],\\n        [-13,  51],\\n        [100,  -1],\\n        [ 99, -74],\\n        [-77,  82],\\n        [-78,  61],\\n        [ 58, -84],\\n        [-88, -14],\\n        [-17,  98],\\n        [ 66, -77],\\n        [ 55,  14],\\n        [ 97, -67],\\n        [ 10, -43],\\n        [  6,  96],\\n        [-52, -33],\\n        [ -2, -35],\\n        [-69, -67],\\n        [-80, -75],\\n        [ 70,  82],\\n        [-34, -92],\\n        [-36,  53],\\n        [-88, -19],\\n        [-36,   8],\\n        [ 71,  -6],\\n        [-12, -26],\\n        [-34, -56],\\n        [ 82, -99],\\n        [ 42, -14],\\n        [-94,  20],\\n        [ -5,  87],\\n        [ 60, -64],\\n        [ 28, -26],\\n        [ 71,  30],\\n        [-23,  31],\\n        [ -3, -95],\\n        [ 62,  18],\\n        [100,  22],\\n        [  3, -26],\\n        [-36, -55],\\n        [ -9, -22],\\n        [ 64,  80],\\n        [ -5, -88],\\n        [-59,   6],\\n        [ -2,  93],\\n        [ 79,  16],\\n        [ 87,  12],\\n        [-55,  -5],\\n        [ 54,  42],\\n        [-40, -17],\\n        [-20,  87],\\n        [ 49, -68],\\n        [ 96,  89],\\n        [ -7, -92],\\n        [-41, -25],\\n        [ 31,  50],\\n        [-45,  91],\\n        [ 58, -49],\\n        [-35,  78],\\n        [-71,  82],\\n        [-34, -15],\\n        [ 31,  87],\\n        [ 60, -58],\\n        [ -6,  28],\\n        [ 75, -86],\\n        [ 95,  15],\\n        [ 88, -49],\\n        [  3,  32],\\n        [ 63, -57],\\n        [ 37, -96],\\n        [ 13, -40],\\n        [ 81,  83],\\n        [-61,  65],\\n        [ 26, -70],\\n        [ 67, -23],\\n        [-52, -48],\\n        [ 17, -47],\\n        [-20,  93],\\n        [-90,  18],\\n        [-73, -80],\\n        [ 94, -29],\\n        [ 18,  98],\\n        [-95, -78],\\n        [ 83, -74],\\n        [-92,  -6],\\n        [  7, -97]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 35,  71],\\n        [ 81,  70],\\n        [  1,  59],\\n        [ 21,  61],\\n        [-13,  51],\\n        [100,  -1],\\n        [ 99, -74],\\n        [-77,  82],\\n        [-78,  61],\\n        [ 58, -84],\\n        [-88, -14],\\n        [-17,  98],\\n        [ 66, -77],\\n        [ 55,  14],\\n        [ 97, -67],\\n        [ 10, -43],\\n        [  6,  96],\\n        [-52, -33],\\n        [ -2, -35],\\n        [-69, -67],\\n        [-80, -75],\\n        [ 70,  82],\\n        [-34, -92],\\n        [-36,  53],\\n        [-88, -19],\\n        [-36,   8],\\n        [ 71,  -6],\\n        [-12, -26],\\n        [-34, -56],\\n        [ 82, -99],\\n        [ 42, -14],\\n        [-94,  20],\\n        [ -5,  87],\\n        [ 60, -64],\\n        [ 28, -26],\\n        [ 71,  30],\\n        [-23,  31],\\n        [ -3, -95],\\n        [ 62,  18],\\n        [100,  22],\\n        [  3, -26],\\n        [-36, -55],\\n        [ -9, -22],\\n        [ 64,  80],\\n        [ -5, -88],\\n        [-59,   6],\\n        [ -2,  93],\\n        [ 79,  16],\\n        [ 87,  12],\\n        [-55,  -5],\\n        [ 54,  42],\\n        [-40, -17],\\n        [-20,  87],\\n        [ 49, -68],\\n        [ 96,  89],\\n        [ -7, -92],\\n        [-41, -25],\\n        [ 31,  50],\\n        [-45,  91],\\n        [ 58, -49],\\n        [-35,  78],\\n        [-71,  82],\\n        [-34, -15],\\n        [ 31,  87],\\n        [ 60, -58],\\n        [ -6,  28],\\n        [ 75, -86],\\n        [ 95,  15],\\n        [ 88, -49],\\n        [  3,  32],\\n        [ 63, -57],\\n        [ 37, -96],\\n        [ 13, -40],\\n        [ 81,  83],\\n        [-61,  65],\\n        [ 26, -70],\\n        [ 67, -23],\\n        [-52, -48],\\n        [ 17, -47],\\n        [-20,  93],\\n        [-90,  18],\\n        [-73, -80],\\n        [ 94, -29],\\n        [ 18,  98],\\n        [-95, -78],\\n        [ 83, -74],\\n        [-92,  -6],\\n        [  7, -97]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ 35,  71],\\n        [ 81,  70],\\n        [  1,  59],\\n        [ 21,  61],\\n        [-13,  51],\\n        [100,  -1],\\n        [ 99, -74],\\n        [-77,  82],\\n        [-78,  61],\\n        [ 58, -84],\\n        [-88, -14],\\n        [-17,  98],\\n        [ 66, -77],\\n        [ 55,  14],\\n        [ 97, -67],\\n        [ 10, -43],\\n        [  6,  96],\\n        [-52, -33],\\n        [ -2, -35],\\n        [-69, -67],\\n        [-80, -75],\\n        [ 70,  82],\\n        [-34, -92],\\n        [-36,  53],\\n        [-88, -19],\\n        [-36,   8],\\n        [ 71,  -6],\\n        [-12, -26],\\n        [-34, -56],\\n        [ 82, -99],\\n        [ 42, -14],\\n        [-94,  20],\\n        [ -5,  87],\\n        [ 60, -64],\\n        [ 28, -26],\\n        [ 71,  30],\\n        [-23,  31],\\n        [ -3, -95],\\n        [ 62,  18],\\n        [100,  22],\\n        [  3, -26],\\n        [-36, -55],\\n        [ -9, -22],\\n        [ 64,  80],\\n        [ -5, -88],\\n        [-59,   6],\\n        [ -2,  93],\\n        [ 79,  16],\\n        [ 87,  12],\\n        [-55,  -5],\\n        [ 54,  42],\\n        [-40, -17],\\n        [-20,  87],\\n        [ 49, -68],\\n        [ 96,  89],\\n        [ -7, -92],\\n        [-41, -25],\\n        [ 31,  50],\\n        [-45,  91],\\n        [ 58, -49],\\n        [-35,  78],\\n        [-71,  82],\\n        [-34, -15],\\n        [ 31,  87],\\n        [ 60, -58],\\n        [ -6,  28],\\n        [ 75, -86],\\n        [ 95,  15],\\n        [ 88, -49],\\n        [  3,  32],\\n        [ 63, -57],\\n        [ 37, -96],\\n        [ 13, -40],\\n        [ 81,  83],\\n        [-61,  65],\\n        [ 26, -70],\\n        [ 67, -23],\\n        [-52, -48],\\n        [ 17, -47],\\n        [-20,  93],\\n        [-90,  18],\\n        [-73, -80],\\n        [ 94, -29],\\n        [ 18,  98],\\n        [-95, -78],\\n        [ 83, -74],\\n        [-92,  -6],\\n        [  7, -97]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_90/tests58_90_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 35,  71],\\n        [ 81,  70],\\n        [  1,  59],\\n        [ 21,  61],\\n        [-13,  51],\\n        [100,  -1],\\n        [ 99, -74],\\n        [-77,  82],\\n        [-78,  61],\\n        [ 58, -84],\\n        [-88, -14],\\n        [-17,  98],\\n        [ 66, -77],\\n        [ 55,  14],\\n        [ 97, -67],\\n        [ 10, -43],\\n        [  6,  96],\\n        [-52, -33],\\n        [ -2, -35],\\n        [-69, -67],\\n        [-80, -75],\\n        [ 70,  82],\\n        [-34, -92],\\n        [-36,  53],\\n        [-88, -19],\\n        [-36,   8],\\n        [ 71,  -6],\\n        [-12, -26],\\n        [-34, -56],\\n        [ 82, -99],\\n        [ 42, -14],\\n        [-94,  20],\\n        [ -5,  87],\\n        [ 60, -64],\\n        [ 28, -26],\\n        [ 71,  30],\\n        [-23,  31],\\n        [ -3, -95],\\n        [ 62,  18],\\n        [100,  22],\\n        [  3, -26],\\n        [-36, -55],\\n        [ -9, -22],\\n        [ 64,  80],\\n        [ -5, -88],\\n        [-59,   6],\\n        [ -2,  93],\\n        [ 79,  16],\\n        [ 87,  12],\\n        [-55,  -5],\\n        [ 54,  42],\\n        [-40, -17],\\n        [-20,  87],\\n        [ 49, -68],\\n        [ 96,  89],\\n        [ -7, -92],\\n        [-41, -25],\\n        [ 31,  50],\\n        [-45,  91],\\n        [ 58, -49],\\n        [-35,  78],\\n        [-71,  82],\\n        [-34, -15],\\n        [ 31,  87],\\n        [ 60, -58],\\n        [ -6,  28],\\n        [ 75, -86],\\n        [ 95,  15],\\n        [ 88, -49],\\n        [  3,  32],\\n        [ 63, -57],\\n        [ 37, -96],\\n        [ 13, -40],\\n        [ 81,  83],\\n        [-61,  65],\\n        [ 26, -70],\\n        [ 67, -23],\\n        [-52, -48],\\n        [ 17, -47],\\n        [-20,  93],\\n        [-90,  18],\\n        [-73, -80],\\n        [ 94, -29],\\n        [ 18,  98],\\n        [-95, -78],\\n        [ 83, -74],\\n        [-92,  -6],\\n        [  7, -97]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009658364579081535, "start": 1738500678.4859624, "stop": 1738500678.4869287, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "09f78753239e4d68a38ee6009c23bfda", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_2.py::test_matrix_of_having_176_integers", "location": ["tests58_90_2.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_2.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.35802236199379e-05, "start": 1738500678.5035384, "stop": 1738500678.5036325, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "09f78753239e4d68a38ee6009c23bfda", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
