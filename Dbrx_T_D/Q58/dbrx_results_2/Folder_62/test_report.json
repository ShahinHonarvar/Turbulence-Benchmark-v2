{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_2.py::test_matrix_of_one_integer", "location": ["tests58_62_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011370144784450531, "start": 1738500654.434026, "stop": 1738500654.4341402, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "042187a9aae74fdab5a100b99bf039d2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_one_integer", "location": ["tests58_62_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013455748558044434, "start": 1738500654.434293, "stop": 1738500654.4344282, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "042187a9aae74fdab5a100b99bf039d2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_one_integer", "location": ["tests58_62_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.245782762765884e-05, "start": 1738500654.4347205, "stop": 1738500654.4347935, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "042187a9aae74fdab5a100b99bf039d2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_having_186_integers", "location": ["tests58_62_2.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.110942482948303e-05, "start": 1738500654.4389398, "stop": 1738500654.4390314, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "042187a9aae74fdab5a100b99bf039d2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_having_186_integers", "location": ["tests58_62_2.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  63,  -39],\\n        [ -41,  -70],\\n        [ -94,   15],\\n        [ -37,    8],\\n        [  59,  -60],\\n        [  19,   81],\\n        [ -56,  -34],\\n        [  47,    5],\\n        [ -69,   -4],\\n        [   9,  -57],\\n        [  -2,   63],\\n        [  18,  -70],\\n        [  43,   19],\\n        [  53,   35],\\n        [ -10,   14],\\n        [ -12,  -27],\\n        [  88,   65],\\n        [   4,   69],\\n        [  -1,   99],\\n        [ -23,   43],\\n        [  73,  -68],\\n        [  33,   79],\\n        [ -62,  -50],\\n        [ -77,  -41],\\n        [ -81,  -95],\\n        [  42,  -82],\\n        [ -36,   86],\\n        [  55,   31],\\n        [ -39,   -7],\\n        [-100,   93],\\n        [ -61, -100],\\n        [ -31,   51],\\n        [  55,   87],\\n        [ -92,  -84],\\n        [ -51,   23],\\n        [  47,  -82],\\n        [ -45,  -72],\\n        [  50,   52],\\n        [  37,  -53],\\n        [  98,    3],\\n        [ -16,   14],\\n        [  78,   27],\\n        [ -75,  -84],\\n        [   1,   39],\\n        [  -2,  -98],\\n        [  34,   61],\\n        [ -40,   23],\\n        [ -85,  -37],\\n        [  84,   87],\\n        [  85,   -2],\\n        [  -9,   72],\\n        [ -37,   14],\\n        [  16,  -32],\\n        [  24,  -80],\\n        [   6,   27],\\n        [  25,  -41],\\n        [  33,   -7],\\n        [ -25,  -64],\\n        [  27,  -39],\\n        [ -86,  -32],\\n        [  80,  -90],\\n        [ -28,  -42],\\n        [ -67,   83],\\n        [ -40,   53],\\n        [  71,    1],\\n        [  15,   35],\\n        [ -91,   18],\\n        [ -61,  -95],\\n        [ 100,  -36],\\n        [ -66,   41],\\n        [  60,    7],\\n        [  61,    7],\\n        [ -64,   56],\\n        [  79,   29],\\n        [  10,  -36],\\n        [  28,  -77],\\n        [ -92,   68],\\n        [   7,  -64],\\n        [ -11,   73],\\n        [ -60,   -9],\\n        [  20,    6],\\n        [ -41,  -63],\\n        [  30,   94],\\n        [ -34,  -47],\\n        [ -66,   11],\\n        [  -6,   40],\\n        [   0,   92],\\n        [  32,  -76],\\n        [ -91,   -9],\\n        [  59,  -64],\\n        [ -45,   27],\\n        [ -59,  -43],\\n        [ -83,   62]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  63,  -39],\\n        [ -41,  -70],\\n        [ -94,   15],\\n        [ -37,    8],\\n        [  59,  -60],\\n        [  19,   81],\\n        [ -56,  -34],\\n        [  47,    5],\\n        [ -69,   -4],\\n        [   9,  -57],\\n        [  -2,   63],\\n        [  18,  -70],\\n        [  43,   19],\\n        [  53,   35],\\n        [ -10,   14],\\n        [ -12,  -27],\\n        [  88,   65],\\n        [   4,   69],\\n        [  -1,   99],\\n        [ -23,   43],\\n        [  73,  -68],\\n        [  33,   79],\\n        [ -62,  -50],\\n        [ -77,  -41],\\n        [ -81,  -95],\\n        [  42,  -82],\\n        [ -36,   86],\\n        [  55,   31],\\n        [ -39,   -7],\\n        [-100,   93],\\n        [ -61, -100],\\n        [ -31,   51],\\n        [  55,   87],\\n        [ -92,  -84],\\n        [ -51,   23],\\n        [  47,  -82],\\n        [ -45,  -72],\\n        [  50,   52],\\n        [  37,  -53],\\n        [  98,    3],\\n        [ -16,   14],\\n        [  78,   27],\\n        [ -75,  -84],\\n        [   1,   39],\\n        [  -2,  -98],\\n        [  34,   61],\\n        [ -40,   23],\\n        [ -85,  -37],\\n        [  84,   87],\\n        [  85,   -2],\\n        [  -9,   72],\\n        [ -37,   14],\\n        [  16,  -32],\\n        [  24,  -80],\\n        [   6,   27],\\n        [  25,  -41],\\n        [  33,   -7],\\n        [ -25,  -64],\\n        [  27,  -39],\\n        [ -86,  -32],\\n        [  80,  -90],\\n        [ -28,  -42],\\n        [ -67,   83],\\n        [ -40,   53],\\n        [  71,    1],\\n        [  15,   35],\\n        [ -91,   18],\\n        [ -61,  -95],\\n        [ 100,  -36],\\n        [ -66,   41],\\n        [  60,    7],\\n        [  61,    7],\\n        [ -64,   56],\\n        [  79,   29],\\n        [  10,  -36],\\n        [  28,  -77],\\n        [ -92,   68],\\n        [   7,  -64],\\n        [ -11,   73],\\n        [ -60,   -9],\\n        [  20,    6],\\n        [ -41,  -63],\\n        [  30,   94],\\n        [ -34,  -47],\\n        [ -66,   11],\\n        [  -6,   40],\\n        [   0,   92],\\n        [  32,  -76],\\n        [ -91,   -9],\\n        [  59,  -64],\\n        [ -45,   27],\\n        [ -59,  -43],\\n        [ -83,   62]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  63,  -39],\\n        [ -41,  -70],\\n        [ -94,   15],\\n        [ -37,    8],\\n        [  59,  -60],\\n        [  19,   81],\\n        [ -56,  -34],\\n        [  47,    5],\\n        [ -69,   -4],\\n        [   9,  -57],\\n        [  -2,   63],\\n        [  18,  -70],\\n        [  43,   19],\\n        [  53,   35],\\n        [ -10,   14],\\n        [ -12,  -27],\\n        [  88,   65],\\n        [   4,   69],\\n        [  -1,   99],\\n        [ -23,   43],\\n        [  73,  -68],\\n        [  33,   79],\\n        [ -62,  -50],\\n        [ -77,  -41],\\n        [ -81,  -95],\\n        [  42,  -82],\\n        [ -36,   86],\\n        [  55,   31],\\n        [ -39,   -7],\\n        [-100,   93],\\n        [ -61, -100],\\n        [ -31,   51],\\n        [  55,   87],\\n        [ -92,  -84],\\n        [ -51,   23],\\n        [  47,  -82],\\n        [ -45,  -72],\\n        [  50,   52],\\n        [  37,  -53],\\n        [  98,    3],\\n        [ -16,   14],\\n        [  78,   27],\\n        [ -75,  -84],\\n        [   1,   39],\\n        [  -2,  -98],\\n        [  34,   61],\\n        [ -40,   23],\\n        [ -85,  -37],\\n        [  84,   87],\\n        [  85,   -2],\\n        [  -9,   72],\\n        [ -37,   14],\\n        [  16,  -32],\\n        [  24,  -80],\\n        [   6,   27],\\n        [  25,  -41],\\n        [  33,   -7],\\n        [ -25,  -64],\\n        [  27,  -39],\\n        [ -86,  -32],\\n        [  80,  -90],\\n        [ -28,  -42],\\n        [ -67,   83],\\n        [ -40,   53],\\n        [  71,    1],\\n        [  15,   35],\\n        [ -91,   18],\\n        [ -61,  -95],\\n        [ 100,  -36],\\n        [ -66,   41],\\n        [  60,    7],\\n        [  61,    7],\\n        [ -64,   56],\\n        [  79,   29],\\n        [  10,  -36],\\n        [  28,  -77],\\n        [ -92,   68],\\n        [   7,  -64],\\n        [ -11,   73],\\n        [ -60,   -9],\\n        [  20,    6],\\n        [ -41,  -63],\\n        [  30,   94],\\n        [ -34,  -47],\\n        [ -66,   11],\\n        [  -6,   40],\\n        [   0,   92],\\n        [  32,  -76],\\n        [ -91,   -9],\\n        [  59,  -64],\\n        [ -45,   27],\\n        [ -59,  -43],\\n        [ -83,   62]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_62/tests58_62_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  63,  -39],\\n        [ -41,  -70],\\n        [ -94,   15],\\n        [ -37,    8],\\n        [  59,  -60],\\n        [  19,   81],\\n        [ -56,  -34],\\n        [  47,    5],\\n        [ -69,   -4],\\n        [   9,  -57],\\n        [  -2,   63],\\n        [  18,  -70],\\n        [  43,   19],\\n        [  53,   35],\\n        [ -10,   14],\\n        [ -12,  -27],\\n        [  88,   65],\\n        [   4,   69],\\n        [  -1,   99],\\n        [ -23,   43],\\n        [  73,  -68],\\n        [  33,   79],\\n        [ -62,  -50],\\n        [ -77,  -41],\\n        [ -81,  -95],\\n        [  42,  -82],\\n        [ -36,   86],\\n        [  55,   31],\\n        [ -39,   -7],\\n        [-100,   93],\\n        [ -61, -100],\\n        [ -31,   51],\\n        [  55,   87],\\n        [ -92,  -84],\\n        [ -51,   23],\\n        [  47,  -82],\\n        [ -45,  -72],\\n        [  50,   52],\\n        [  37,  -53],\\n        [  98,    3],\\n        [ -16,   14],\\n        [  78,   27],\\n        [ -75,  -84],\\n        [   1,   39],\\n        [  -2,  -98],\\n        [  34,   61],\\n        [ -40,   23],\\n        [ -85,  -37],\\n        [  84,   87],\\n        [  85,   -2],\\n        [  -9,   72],\\n        [ -37,   14],\\n        [  16,  -32],\\n        [  24,  -80],\\n        [   6,   27],\\n        [  25,  -41],\\n        [  33,   -7],\\n        [ -25,  -64],\\n        [  27,  -39],\\n        [ -86,  -32],\\n        [  80,  -90],\\n        [ -28,  -42],\\n        [ -67,   83],\\n        [ -40,   53],\\n        [  71,    1],\\n        [  15,   35],\\n        [ -91,   18],\\n        [ -61,  -95],\\n        [ 100,  -36],\\n        [ -66,   41],\\n        [  60,    7],\\n        [  61,    7],\\n        [ -64,   56],\\n        [  79,   29],\\n        [  10,  -36],\\n        [  28,  -77],\\n        [ -92,   68],\\n        [   7,  -64],\\n        [ -11,   73],\\n        [ -60,   -9],\\n        [  20,    6],\\n        [ -41,  -63],\\n        [  30,   94],\\n        [ -34,  -47],\\n        [ -66,   11],\\n        [  -6,   40],\\n        [   0,   92],\\n        [  32,  -76],\\n        [ -91,   -9],\\n        [  59,  -64],\\n        [ -45,   27],\\n        [ -59,  -43],\\n        [ -83,   62]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.002932176925241947, "start": 1738500654.4391334, "stop": 1738500654.4420662, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "042187a9aae74fdab5a100b99bf039d2", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_2.py::test_matrix_of_having_186_integers", "location": ["tests58_62_2.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_2.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012971367686986923, "start": 1738500654.4806828, "stop": 1738500654.480813, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "042187a9aae74fdab5a100b99bf039d2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
