{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_2.py::test_matrix_of_one_integer", "location": ["tests58_59_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00040085893124341965, "start": 1738500651.9596033, "stop": 1738500651.9600046, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3d634f6f5b05481b9f171d22e6ed7a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_one_integer", "location": ["tests58_59_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016405992209911346, "start": 1738500651.9605045, "stop": 1738500651.960669, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3d634f6f5b05481b9f171d22e6ed7a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_one_integer", "location": ["tests58_59_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.701851427555084e-05, "start": 1738500651.9609647, "stop": 1738500651.961042, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "3d634f6f5b05481b9f171d22e6ed7a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_having_76_integers", "location": ["tests58_59_2.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.422788232564926e-05, "start": 1738500651.9622912, "stop": 1738500651.9623759, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3d634f6f5b05481b9f171d22e6ed7a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_having_76_integers", "location": ["tests58_59_2.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -13,  -19],\\n        [ -60,   24],\\n        [ -16,  -50],\\n        [  49,  -80],\\n        [ -71,   35],\\n        [   5,   98],\\n        [   6,   90],\\n        [  32,  -71],\\n        [  -2,  -83],\\n        [ -33,    0],\\n        [ -70,  -82],\\n        [   0,   62],\\n        [ -55,  -92],\\n        [ -61,   87],\\n        [  99,  -28],\\n        [  83,  -58],\\n        [  32,  -30],\\n        [  24,   24],\\n        [ -26,    1],\\n        [ -29,  -83],\\n        [  70,   69],\\n        [  66,  -73],\\n        [  81,  -54],\\n        [ -86,  -67],\\n        [ -14,   74],\\n        [  40,   92],\\n        [-100,   -5],\\n        [  68,  -76],\\n        [  13,   22],\\n        [ -85,  -83],\\n        [ -41,   78],\\n        [  85,  -90],\\n        [  39,   75],\\n        [   2,   13],\\n        [   5,  -49],\\n        [ -10,   45],\\n        [ -51,  -40],\\n        [  73,    5]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -13,  -19],\\n        [ -60,   24],\\n        [ -16,  -50],\\n        [  49,  -80],\\n        [ -71,   35],\\n        [   5,   98],\\n        [   6,   90],\\n        [  32,  -71],\\n        [  -2,  -83],\\n        [ -33,    0],\\n        [ -70,  -82],\\n        [   0,   62],\\n        [ -55,  -92],\\n        [ -61,   87],\\n        [  99,  -28],\\n        [  83,  -58],\\n        [  32,  -30],\\n        [  24,   24],\\n        [ -26,    1],\\n        [ -29,  -83],\\n        [  70,   69],\\n        [  66,  -73],\\n        [  81,  -54],\\n        [ -86,  -67],\\n        [ -14,   74],\\n        [  40,   92],\\n        [-100,   -5],\\n        [  68,  -76],\\n        [  13,   22],\\n        [ -85,  -83],\\n        [ -41,   78],\\n        [  85,  -90],\\n        [  39,   75],\\n        [   2,   13],\\n        [   5,  -49],\\n        [ -10,   45],\\n        [ -51,  -40],\\n        [  73,    5]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -13,  -19],\\n        [ -60,   24],\\n        [ -16,  -50],\\n        [  49,  -80],\\n        [ -71,   35],\\n        [   5,   98],\\n        [   6,   90],\\n        [  32,  -71],\\n        [  -2,  -83],\\n        [ -33,    0],\\n        [ -70,  -82],\\n        [   0,   62],\\n        [ -55,  -92],\\n        [ -61,   87],\\n        [  99,  -28],\\n        [  83,  -58],\\n        [  32,  -30],\\n        [  24,   24],\\n        [ -26,    1],\\n        [ -29,  -83],\\n        [  70,   69],\\n        [  66,  -73],\\n        [  81,  -54],\\n        [ -86,  -67],\\n        [ -14,   74],\\n        [  40,   92],\\n        [-100,   -5],\\n        [  68,  -76],\\n        [  13,   22],\\n        [ -85,  -83],\\n        [ -41,   78],\\n        [  85,  -90],\\n        [  39,   75],\\n        [   2,   13],\\n        [   5,  -49],\\n        [ -10,   45],\\n        [ -51,  -40],\\n        [  73,    5]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_59/tests58_59_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -13,  -19],\\n        [ -60,   24],\\n        [ -16,  -50],\\n        [  49,  -80],\\n        [ -71,   35],\\n        [   5,   98],\\n        [   6,   90],\\n        [  32,  -71],\\n        [  -2,  -83],\\n        [ -33,    0],\\n        [ -70,  -82],\\n        [   0,   62],\\n        [ -55,  -92],\\n        [ -61,   87],\\n        [  99,  -28],\\n        [  83,  -58],\\n        [  32,  -30],\\n        [  24,   24],\\n        [ -26,    1],\\n        [ -29,  -83],\\n        [  70,   69],\\n        [  66,  -73],\\n        [  81,  -54],\\n        [ -86,  -67],\\n        [ -14,   74],\\n        [  40,   92],\\n        [-100,   -5],\\n        [  68,  -76],\\n        [  13,   22],\\n        [ -85,  -83],\\n        [ -41,   78],\\n        [  85,  -90],\\n        [  39,   75],\\n        [   2,   13],\\n        [   5,  -49],\\n        [ -10,   45],\\n        [ -51,  -40],\\n        [  73,    5]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007948027923703194, "start": 1738500651.9624748, "stop": 1738500651.9632702, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3d634f6f5b05481b9f171d22e6ed7a37", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_2.py::test_matrix_of_having_76_integers", "location": ["tests58_59_2.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_2.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.118672460317612e-05, "start": 1738500651.9800515, "stop": 1738500651.9801428, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "3d634f6f5b05481b9f171d22e6ed7a37", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
