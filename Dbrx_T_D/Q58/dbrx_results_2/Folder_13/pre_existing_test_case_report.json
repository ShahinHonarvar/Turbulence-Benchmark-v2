{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0001
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 24, -96,  13,  61,  95, -40,  15, -38,  75, -87,  54, -64, -28,\\n          48,  89,  71, -93, -76, -81,  63,  -1,  97, -91,  51, -59,  41,\\n          -7,   3, -28, -80,  11,  77,  -8,  18, -85, -89, -27, -33,  -9,\\n          27,  48,  24, -63,  48,  62, -75, -67, -30, -91,  71,  -7, -82,\\n         -31,  31, -69,  35,  12, -67,  52,  69,  41,  -5,  97,  25, -75,\\n          60,  80,  63,  64, -73,   0,  93,  -2,  34, -67, -48,  41, -94,\\n          52, -13,  68,  88, -70,  93,  -8, -27,  74, -84, -36,  76, -56,\\n          -1,   5, -88, -76, -60,  40,  52, -65,  23,  79,  85, -77,  34,\\n          -2,  44, -51,   4,   6, -73,  37, -49, -10, -84,  26,  89,  73,\\n          12,  -1,  98,  90,  81, -40, -31, -13, -39, -26,  52, -43,  12,\\n          89,  43,  69,  -8,  64, -28, -12,  92,   3,   9, -11,  72,  48,\\n          19,  -1, -53, -21,  97,  33, -47,  59,  43, -76, -23, -52,  -2,\\n          70,  64, -13,  31,  41, -37,  70, -43,  34,  43, -81, -70,  95,\\n          64, -45, -92,   8, -52,  -5]]))",
    0.0007
  ]
}