{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_2.py::test_matrix_of_one_integer", "location": ["tests58_97_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011953618377447128, "start": 1738500684.7510512, "stop": 1738500684.7511714, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97b4b7bfa0414ce8b3c580ce16fb980f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_one_integer", "location": ["tests58_97_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001524491235613823, "start": 1738500684.7513518, "stop": 1738500684.7515044, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97b4b7bfa0414ce8b3c580ce16fb980f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_one_integer", "location": ["tests58_97_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.067209273576736e-05, "start": 1738500684.7518299, "stop": 1738500684.7519107, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "97b4b7bfa0414ce8b3c580ce16fb980f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_having_120_integers", "location": ["tests58_97_2.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.764250040054321e-05, "start": 1738500684.7529721, "stop": 1738500684.75305, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97b4b7bfa0414ce8b3c580ce16fb980f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_having_120_integers", "location": ["tests58_97_2.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -21,  -90],\\n        [  76,  -87],\\n        [ -50,  -32],\\n        [ -84,  -82],\\n        [ -75,   20],\\n        [  66,   -1],\\n        [ -67,   40],\\n        [  67,  -19],\\n        [ -17,  -50],\\n        [  26,   97],\\n        [ -44,   82],\\n        [ -81,   90],\\n        [ -40,   59],\\n        [ -29,  -13],\\n        [-100,   75],\\n        [  -1,   93],\\n        [ -92,  -59],\\n        [  79,   30],\\n        [  35,  -23],\\n        [  -9,  -11],\\n        [  -5,    3],\\n        [ -82,  -81],\\n        [ -21,   89],\\n        [ -55,  -38],\\n        [  40,   81],\\n        [  15,  -48],\\n        [  88,  -21],\\n        [  86,   79],\\n        [ -41,  -95],\\n        [ -73,  -32],\\n        [  61,   35],\\n        [  23,   21],\\n        [ -16,  -74],\\n        [   1,  -83],\\n        [ -79,   22],\\n        [  83,  -60],\\n        [  37,   87],\\n        [  89,   94],\\n        [  99,  -94],\\n        [  37,  -11],\\n        [  55,   28],\\n        [ -37,   36],\\n        [  54,  -70],\\n        [ -69,  -54],\\n        [ -51,   25],\\n        [  27,  -30],\\n        [ -62,  -59],\\n        [ -42,  -44],\\n        [  -4,  -49],\\n        [ -33,   24],\\n        [ -44,   78],\\n        [  36,   89],\\n        [  50,   42],\\n        [  49,   94],\\n        [  96,   10],\\n        [  36,   40],\\n        [  71,   73],\\n        [ -95,  -79],\\n        [ -30,   25],\\n        [  35,   24]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -21,  -90],\\n        [  76,  -87],\\n        [ -50,  -32],\\n        [ -84,  -82],\\n        [ -75,   20],\\n        [  66,   -1],\\n        [ -67,   40],\\n        [  67,  -19],\\n        [ -17,  -50],\\n        [  26,   97],\\n        [ -44,   82],\\n        [ -81,   90],\\n        [ -40,   59],\\n        [ -29,  -13],\\n        [-100,   75],\\n        [  -1,   93],\\n        [ -92,  -59],\\n        [  79,   30],\\n        [  35,  -23],\\n        [  -9,  -11],\\n        [  -5,    3],\\n        [ -82,  -81],\\n        [ -21,   89],\\n        [ -55,  -38],\\n        [  40,   81],\\n        [  15,  -48],\\n        [  88,  -21],\\n        [  86,   79],\\n        [ -41,  -95],\\n        [ -73,  -32],\\n        [  61,   35],\\n        [  23,   21],\\n        [ -16,  -74],\\n        [   1,  -83],\\n        [ -79,   22],\\n        [  83,  -60],\\n        [  37,   87],\\n        [  89,   94],\\n        [  99,  -94],\\n        [  37,  -11],\\n        [  55,   28],\\n        [ -37,   36],\\n        [  54,  -70],\\n        [ -69,  -54],\\n        [ -51,   25],\\n        [  27,  -30],\\n        [ -62,  -59],\\n        [ -42,  -44],\\n        [  -4,  -49],\\n        [ -33,   24],\\n        [ -44,   78],\\n        [  36,   89],\\n        [  50,   42],\\n        [  49,   94],\\n        [  96,   10],\\n        [  36,   40],\\n        [  71,   73],\\n        [ -95,  -79],\\n        [ -30,   25],\\n        [  35,   24]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -21,  -90],\\n        [  76,  -87],\\n        [ -50,  -32],\\n        [ -84,  -82],\\n        [ -75,   20],\\n        [  66,   -1],\\n        [ -67,   40],\\n        [  67,  -19],\\n        [ -17,  -50],\\n        [  26,   97],\\n        [ -44,   82],\\n        [ -81,   90],\\n        [ -40,   59],\\n        [ -29,  -13],\\n        [-100,   75],\\n        [  -1,   93],\\n        [ -92,  -59],\\n        [  79,   30],\\n        [  35,  -23],\\n        [  -9,  -11],\\n        [  -5,    3],\\n        [ -82,  -81],\\n        [ -21,   89],\\n        [ -55,  -38],\\n        [  40,   81],\\n        [  15,  -48],\\n        [  88,  -21],\\n        [  86,   79],\\n        [ -41,  -95],\\n        [ -73,  -32],\\n        [  61,   35],\\n        [  23,   21],\\n        [ -16,  -74],\\n        [   1,  -83],\\n        [ -79,   22],\\n        [  83,  -60],\\n        [  37,   87],\\n        [  89,   94],\\n        [  99,  -94],\\n        [  37,  -11],\\n        [  55,   28],\\n        [ -37,   36],\\n        [  54,  -70],\\n        [ -69,  -54],\\n        [ -51,   25],\\n        [  27,  -30],\\n        [ -62,  -59],\\n        [ -42,  -44],\\n        [  -4,  -49],\\n        [ -33,   24],\\n        [ -44,   78],\\n        [  36,   89],\\n        [  50,   42],\\n        [  49,   94],\\n        [  96,   10],\\n        [  36,   40],\\n        [  71,   73],\\n        [ -95,  -79],\\n        [ -30,   25],\\n        [  35,   24]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_97/tests58_97_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -21,  -90],\\n        [  76,  -87],\\n        [ -50,  -32],\\n        [ -84,  -82],\\n        [ -75,   20],\\n        [  66,   -1],\\n        [ -67,   40],\\n        [  67,  -19],\\n        [ -17,  -50],\\n        [  26,   97],\\n        [ -44,   82],\\n        [ -81,   90],\\n        [ -40,   59],\\n        [ -29,  -13],\\n        [-100,   75],\\n        [  -1,   93],\\n        [ -92,  -59],\\n        [  79,   30],\\n        [  35,  -23],\\n        [  -9,  -11],\\n        [  -5,    3],\\n        [ -82,  -81],\\n        [ -21,   89],\\n        [ -55,  -38],\\n        [  40,   81],\\n        [  15,  -48],\\n        [  88,  -21],\\n        [  86,   79],\\n        [ -41,  -95],\\n        [ -73,  -32],\\n        [  61,   35],\\n        [  23,   21],\\n        [ -16,  -74],\\n        [   1,  -83],\\n        [ -79,   22],\\n        [  83,  -60],\\n        [  37,   87],\\n        [  89,   94],\\n        [  99,  -94],\\n        [  37,  -11],\\n        [  55,   28],\\n        [ -37,   36],\\n        [  54,  -70],\\n        [ -69,  -54],\\n        [ -51,   25],\\n        [  27,  -30],\\n        [ -62,  -59],\\n        [ -42,  -44],\\n        [  -4,  -49],\\n        [ -33,   24],\\n        [ -44,   78],\\n        [  36,   89],\\n        [  50,   42],\\n        [  49,   94],\\n        [  96,   10],\\n        [  36,   40],\\n        [  71,   73],\\n        [ -95,  -79],\\n        [ -30,   25],\\n        [  35,   24]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008750427514314651, "start": 1738500684.7531435, "stop": 1738500684.754019, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97b4b7bfa0414ce8b3c580ce16fb980f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_2.py::test_matrix_of_having_120_integers", "location": ["tests58_97_2.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_2.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012915674597024918, "start": 1738500684.7801754, "stop": 1738500684.7803054, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "97b4b7bfa0414ce8b3c580ce16fb980f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
