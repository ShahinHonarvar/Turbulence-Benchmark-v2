{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_84_2.py::test_matrix_of_one_integer", "location": ["tests58_84_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0004064589738845825, "start": 1738500673.0191813, "stop": 1738500673.019588, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "efd6947a4c0c4f248a14190217be307c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_one_integer", "location": ["tests58_84_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00037949439138174057, "start": 1738500673.0199046, "stop": 1738500673.0202842, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "efd6947a4c0c4f248a14190217be307c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_one_integer", "location": ["tests58_84_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.355321526527405e-05, "start": 1738500673.0205672, "stop": 1738500673.0206614, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "efd6947a4c0c4f248a14190217be307c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_having_127_integers", "location": ["tests58_84_2.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002790139988064766, "start": 1738500673.0217078, "stop": 1738500673.0219874, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "efd6947a4c0c4f248a14190217be307c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_having_127_integers", "location": ["tests58_84_2.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-100,   40,   33,  -59,   52,  -67,  -69,   67,  -83,   50,\\n          -96,  -35,  -98,   47,    9,  -13,   64,  -53,  -78,   40,\\n           28,   58,   -7,  -93,   52,  -57,  -55,   63,  -46,  -81,\\n           11,   14,   28,  -60,    5,  -88,  -37,  -47,  -96,   34,\\n           -4,    5,  -94,   50,   40,  -86,  -85,   -8,  -33,  -72,\\n          -71,  -86,  -22,  -21,    2,   64,  -62,  -66,   26,   14,\\n          100,    8,   67,  -76,   -3,   95,  -18,  -29,   91,  -67,\\n          -15,   67,   47,  -24,   65,   -6,   92,  -58,  -37,   40,\\n           52,   -7,  -18,  -70,   47,   42,  -95,  -31,  -38,   17,\\n          -84,  -15,   11,   34,   -2,   72,  -55,  -11,   95,   22,\\n          -17,  -32,    9,   61,  -88,  -61,   88,  -27,   74,    9,\\n           93,   61,    4,   65,  -20,   11,   19,   18,   75,   18,\\n           19,    2,  -17,   99,    8,   95,  -99]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-100,   40,   33,  -59,   52,  -67,  -69,   67,  -83,   50,\\n          -96,  -35,  -98,   47,    9,  -13,   64,  -53,  -78,   40,\\n           28,   58,   -7,  -93,   52,  -57,  -55,   63,  -46,  -81,\\n           11,   14,   28,  -60,    5,  -88,  -37,  -47,  -96,   34,\\n           -4,    5,  -94,   50,   40,  -86,  -85,   -8,  -33,  -72,\\n          -71,  -86,  -22,  -21,    2,   64,  -62,  -66,   26,   14,\\n          100,    8,   67,  -76,   -3,   95,  -18,  -29,   91,  -67,\\n          -15,   67,   47,  -24,   65,   -6,   92,  -58,  -37,   40,\\n           52,   -7,  -18,  -70,   47,   42,  -95,  -31,  -38,   17,\\n          -84,  -15,   11,   34,   -2,   72,  -55,  -11,   95,   22,\\n          -17,  -32,    9,   61,  -88,  -61,   88,  -27,   74,    9,\\n           93,   61,    4,   65,  -20,   11,   19,   18,   75,   18,\\n           19,    2,  -17,   99,    8,   95,  -99]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-100,   40,   33,  -59,   52,  -67,  -69,   67,  -83,   50,\\n          -96,  -35,  -98,   47,    9,  -13,   64,  -53,  -78,   40,\\n           28,   58,   -7,  -93,   52,  -57,  -55,   63,  -46,  -81,\\n           11,   14,   28,  -60,    5,  -88,  -37,  -47,  -96,   34,\\n           -4,    5,  -94,   50,   40,  -86,  -85,   -8,  -33,  -72,\\n          -71,  -86,  -22,  -21,    2,   64,  -62,  -66,   26,   14,\\n          100,    8,   67,  -76,   -3,   95,  -18,  -29,   91,  -67,\\n          -15,   67,   47,  -24,   65,   -6,   92,  -58,  -37,   40,\\n           52,   -7,  -18,  -70,   47,   42,  -95,  -31,  -38,   17,\\n          -84,  -15,   11,   34,   -2,   72,  -55,  -11,   95,   22,\\n          -17,  -32,    9,   61,  -88,  -61,   88,  -27,   74,    9,\\n           93,   61,    4,   65,  -20,   11,   19,   18,   75,   18,\\n           19,    2,  -17,   99,    8,   95,  -99]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_84/tests58_84_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-100,   40,   33,  -59,   52,  -67,  -69,   67,  -83,   50,\\n          -96,  -35,  -98,   47,    9,  -13,   64,  -53,  -78,   40,\\n           28,   58,   -7,  -93,   52,  -57,  -55,   63,  -46,  -81,\\n           11,   14,   28,  -60,    5,  -88,  -37,  -47,  -96,   34,\\n           -4,    5,  -94,   50,   40,  -86,  -85,   -8,  -33,  -72,\\n          -71,  -86,  -22,  -21,    2,   64,  -62,  -66,   26,   14,\\n          100,    8,   67,  -76,   -3,   95,  -18,  -29,   91,  -67,\\n          -15,   67,   47,  -24,   65,   -6,   92,  -58,  -37,   40,\\n           52,   -7,  -18,  -70,   47,   42,  -95,  -31,  -38,   17,\\n          -84,  -15,   11,   34,   -2,   72,  -55,  -11,   95,   22,\\n          -17,  -32,    9,   61,  -88,  -61,   88,  -27,   74,    9,\\n           93,   61,    4,   65,  -20,   11,   19,   18,   75,   18,\\n           19,    2,  -17,   99,    8,   95,  -99]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009160730987787247, "start": 1738500673.0220888, "stop": 1738500673.0230052, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "efd6947a4c0c4f248a14190217be307c", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_2.py::test_matrix_of_having_127_integers", "location": ["tests58_84_2.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_2.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.924957364797592e-05, "start": 1738500673.0400405, "stop": 1738500673.0401301, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "efd6947a4c0c4f248a14190217be307c", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
