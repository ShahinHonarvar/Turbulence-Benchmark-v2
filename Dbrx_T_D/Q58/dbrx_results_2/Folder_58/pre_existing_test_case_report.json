{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 50,  26, -64,  75,  -7,  65,   8, -38, -84,  -1,  63,  31,  17,\\n         -85,  18, -58,  61,  64,   5, -61, -41, -47,  94,  50,  72,  37,\\n           3, -30, -24,  85, -22, -35,  94,  -7, -85,  53, -58,  52, -22,\\n          62, -91,  87, -81, -19,  87, -28, -31, -98,  12, -92, -27,  29,\\n          78, -10,  47,  53, -20,   3,  30, -17, -44,  56, -21,  44,  62,\\n         -54, -18,  34, -35, -12,  27,  85, -27,  98,  98, -44,  34,  22,\\n          40, -42, -99,   2,  27, -41, -93, -72,  55, -43, -37, -37,  39,\\n          71,  66, -44, -31, -64,  73,  10, -60,   6, -50, -92,  85, -26,\\n          34,  30,  28, -86, -25,  97,  -1,  48,  96,  69, -70,  76, -35,\\n         -72,  -3,  33, -97, -62,  28, 100, -81, -92,  -2,  32,  45, -33,\\n          57,  79, -43, -48, -92,  24, -27,  62,  15,   7,  50,  90,  56,\\n           1, -41,   1,  62,  42,   6,   1, -38, -22, 100, -72,  41,  26,\\n         -79,  50, -94,  63,  20,  83,  48, -77,  78,  62, -71,  61,   7,\\n         -35,  47, -30,  65,  92, -13, -55,  22, -67,  81,  40,  -9,  -6,\\n          12, -45, -94]]))",
    0.0007
  ]
}