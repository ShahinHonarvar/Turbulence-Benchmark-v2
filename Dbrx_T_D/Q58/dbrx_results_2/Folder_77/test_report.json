{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_77_2.py::test_matrix_of_one_integer", "location": ["tests58_77_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_2.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001107165589928627, "start": 1738500666.6303694, "stop": 1738500666.6304805, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b04de01aa8af481795eba8dc71189570", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_2.py::test_matrix_of_one_integer", "location": ["tests58_77_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_2.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013158004730939865, "start": 1738500666.630632, "stop": 1738500666.630764, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b04de01aa8af481795eba8dc71189570", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_2.py::test_matrix_of_one_integer", "location": ["tests58_77_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_2.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.985384970903397e-05, "start": 1738500666.6310303, "stop": 1738500666.6311004, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b04de01aa8af481795eba8dc71189570", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_2.py::test_matrix_of_having_179_integers", "location": ["tests58_77_2.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_2.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.572451770305634e-05, "start": 1738500666.633937, "stop": 1738500666.634023, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b04de01aa8af481795eba8dc71189570", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_2.py::test_matrix_of_having_179_integers", "location": ["tests58_77_2.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_2.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_77/tests58_77_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  31,   84,   80,  -67,  -75,   83,   66,   14,   45,   -6,\\n          -33,    5,  -77,   74,   92,  -70,  -93,   -2,  -33,    0,\\n          -59,   92,  -28,  -14,  -18,  -79,   61,    6,   -5,   37,\\n           89,  -23,  -88,    8,  -20,  -39,  -72,   60,  -74,   33,\\n           11,   45,   24,  -85,   95,    1,  -36,   19,   -4,  -60,\\n           78,    8,  -79,   97,  -74,   55,   62,  -33,  -91,  -31,\\n          -72,  -41,   25,   16,  -10,  -47,   46,   73,  -76,   96,\\n           22,  -10,   99,   38,   99,   73,   32,  -72,   13,  -39,\\n           90,  -55,  100,    6,   89,   53,  -86,   60,   75,  -45,\\n          -98,  -67,   49,  -68,  -34,   31,  -51,  -65,  -95,  -71,\\n           30,  -88,  -37,   44,   78,   32,  -91,   25,   75,  -13,\\n          -83,  -88,   55,   -8,   81,   64,  -74,  100,  -66,   75,\\n           36,   65,   20,   63,    7,  -91,   -4,   14,  -68,   58,\\n           39,    7,   33,  -77,   46,  -66,  -16,   12,   -5,  -64,\\n           42,  -41,  -43,  -35,   11,  -91,  -52,  -41,  -34,   25,\\n            3,   27,   61,  -56,  -24,  -38,  -28,  -11,   32,   80,\\n          -14,   -6,   41,  -91,    0,   49,   10,   53,   96,  -50,\\n         -100,   19,   10,   -8,   87,   14,   -3,  -99,   54]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  31,   84,   80,  -67,  -75,   83,   66,   14,   45,   -6,\\n          -33,    5,  -77,   74,   92,  -70,  -93,   -2,  -33,    0,\\n          -59,   92,  -28,  -14,  -18,  -79,   61,    6,   -5,   37,\\n           89,  -23,  -88,    8,  -20,  -39,  -72,   60,  -74,   33,\\n           11,   45,   24,  -85,   95,    1,  -36,   19,   -4,  -60,\\n           78,    8,  -79,   97,  -74,   55,   62,  -33,  -91,  -31,\\n          -72,  -41,   25,   16,  -10,  -47,   46,   73,  -76,   96,\\n           22,  -10,   99,   38,   99,   73,   32,  -72,   13,  -39,\\n           90,  -55,  100,    6,   89,   53,  -86,   60,   75,  -45,\\n          -98,  -67,   49,  -68,  -34,   31,  -51,  -65,  -95,  -71,\\n           30,  -88,  -37,   44,   78,   32,  -91,   25,   75,  -13,\\n          -83,  -88,   55,   -8,   81,   64,  -74,  100,  -66,   75,\\n           36,   65,   20,   63,    7,  -91,   -4,   14,  -68,   58,\\n           39,    7,   33,  -77,   46,  -66,  -16,   12,   -5,  -64,\\n           42,  -41,  -43,  -35,   11,  -91,  -52,  -41,  -34,   25,\\n            3,   27,   61,  -56,  -24,  -38,  -28,  -11,   32,   80,\\n          -14,   -6,   41,  -91,    0,   49,   10,   53,   96,  -50,\\n         -100,   19,   10,   -8,   87,   14,   -3,  -99,   54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_77/tests58_77_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  31,   84,   80,  -67,  -75,   83,   66,   14,   45,   -6,\\n          -33,    5,  -77,   74,   92,  -70,  -93,   -2,  -33,    0,\\n          -59,   92,  -28,  -14,  -18,  -79,   61,    6,   -5,   37,\\n           89,  -23,  -88,    8,  -20,  -39,  -72,   60,  -74,   33,\\n           11,   45,   24,  -85,   95,    1,  -36,   19,   -4,  -60,\\n           78,    8,  -79,   97,  -74,   55,   62,  -33,  -91,  -31,\\n          -72,  -41,   25,   16,  -10,  -47,   46,   73,  -76,   96,\\n           22,  -10,   99,   38,   99,   73,   32,  -72,   13,  -39,\\n           90,  -55,  100,    6,   89,   53,  -86,   60,   75,  -45,\\n          -98,  -67,   49,  -68,  -34,   31,  -51,  -65,  -95,  -71,\\n           30,  -88,  -37,   44,   78,   32,  -91,   25,   75,  -13,\\n          -83,  -88,   55,   -8,   81,   64,  -74,  100,  -66,   75,\\n           36,   65,   20,   63,    7,  -91,   -4,   14,  -68,   58,\\n           39,    7,   33,  -77,   46,  -66,  -16,   12,   -5,  -64,\\n           42,  -41,  -43,  -35,   11,  -91,  -52,  -41,  -34,   25,\\n            3,   27,   61,  -56,  -24,  -38,  -28,  -11,   32,   80,\\n          -14,   -6,   41,  -91,    0,   49,   10,   53,   96,  -50,\\n         -100,   19,   10,   -8,   87,   14,   -3,  -99,   54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_77/tests58_77_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_77/tests58_77_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  31,   84,   80,  -67,  -75,   83,   66,   14,   45,   -6,\\n          -33,    5,  -77,   74,   92,  -70,  -93,   -2,  -33,    0,\\n          -59,   92,  -28,  -14,  -18,  -79,   61,    6,   -5,   37,\\n           89,  -23,  -88,    8,  -20,  -39,  -72,   60,  -74,   33,\\n           11,   45,   24,  -85,   95,    1,  -36,   19,   -4,  -60,\\n           78,    8,  -79,   97,  -74,   55,   62,  -33,  -91,  -31,\\n          -72,  -41,   25,   16,  -10,  -47,   46,   73,  -76,   96,\\n           22,  -10,   99,   38,   99,   73,   32,  -72,   13,  -39,\\n           90,  -55,  100,    6,   89,   53,  -86,   60,   75,  -45,\\n          -98,  -67,   49,  -68,  -34,   31,  -51,  -65,  -95,  -71,\\n           30,  -88,  -37,   44,   78,   32,  -91,   25,   75,  -13,\\n          -83,  -88,   55,   -8,   81,   64,  -74,  100,  -66,   75,\\n           36,   65,   20,   63,    7,  -91,   -4,   14,  -68,   58,\\n           39,    7,   33,  -77,   46,  -66,  -16,   12,   -5,  -64,\\n           42,  -41,  -43,  -35,   11,  -91,  -52,  -41,  -34,   25,\\n            3,   27,   61,  -56,  -24,  -38,  -28,  -11,   32,   80,\\n          -14,   -6,   41,  -91,    0,   49,   10,   53,   96,  -50,\\n         -100,   19,   10,   -8,   87,   14,   -3,  -99,   54]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006792908534407616, "start": 1738500666.6341207, "stop": 1738500666.6348002, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b04de01aa8af481795eba8dc71189570", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_2.py::test_matrix_of_having_179_integers", "location": ["tests58_77_2.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_2.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.449424058198929e-05, "start": 1738500666.6512325, "stop": 1738500666.6513178, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b04de01aa8af481795eba8dc71189570", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
