{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-16, -38],\\n        [-59, -61],\\n        [ -7, -50],\\n        [-95,  49],\\n        [ 43,  55],\\n        [ 53, -49],\\n        [-41,  -8],\\n        [ 51,   1],\\n        [-21, -80],\\n        [ 45,  48],\\n        [ 17,  69],\\n        [-28, -18],\\n        [ 78,  95],\\n        [-54, -11],\\n        [ 61, -92],\\n        [100,  62],\\n        [-37, -25],\\n        [-75,  41],\\n        [ 64, -35],\\n        [ 83, -92],\\n        [-78,  56],\\n        [ 86, -54],\\n        [-39,   4],\\n        [ 37,  61],\\n        [-54, -43],\\n        [-31, -73],\\n        [-27, -10],\\n        [ 31, 100],\\n        [-47,   5],\\n        [-62,  86],\\n        [ 17, -45],\\n        [-48, -32],\\n        [ 24, -97],\\n        [ 53, -16],\\n        [-10, -26],\\n        [ 36, -52],\\n        [ 25, -52],\\n        [  1, -73],\\n        [-68, -35],\\n        [ 80,  89],\\n        [-77, -82],\\n        [ 15,   8],\\n        [-37, -30],\\n        [-10, -51],\\n        [-73,  28],\\n        [ 66, -79],\\n        [-73, -38],\\n        [ 59, -11]]))",
    0.00063
  ]
}