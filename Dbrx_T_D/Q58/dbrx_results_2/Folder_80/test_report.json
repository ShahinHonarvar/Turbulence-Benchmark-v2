{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011313334107398987, "start": 1738500668.99902, "stop": 1738500668.9991333, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8cc7fa29cf5443ca9949e3d3782c71e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013446342200040817, "start": 1738500668.9992857, "stop": 1738500668.9994204, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8cc7fa29cf5443ca9949e3d3782c71e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_one_integer", "location": ["tests58_80_2.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.207877933979034e-05, "start": 1738500668.9996917, "stop": 1738500668.9997642, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8cc7fa29cf5443ca9949e3d3782c71e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.956661283969879e-05, "start": 1738500669.001219, "stop": 1738500669.001299, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8cc7fa29cf5443ca9949e3d3782c71e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   9,  -40],\\n        [ -14,   41],\\n        [ -64,    4],\\n        [ -42, -100],\\n        [   7,  -77],\\n        [  73,   49],\\n        [ 100,   82],\\n        [  14,  -93],\\n        [ -16,   48],\\n        [  69,  -33],\\n        [ -89,   19],\\n        [  55,  -10],\\n        [ -68,  -43],\\n        [ -26,   64],\\n        [ -61,   18],\\n        [ -14,  -77],\\n        [ -26,   66],\\n        [ -73,   61],\\n        [ -20,  -94],\\n        [ -15,  -82],\\n        [ -37,    2],\\n        [ -86,   69],\\n        [ -16,  -94],\\n        [ -97,   66],\\n        [  86,   95],\\n        [ -32, -100],\\n        [  95,  -55],\\n        [  29,   80],\\n        [   2,   73],\\n        [  -1,  -78],\\n        [ -95,   90],\\n        [  54,   26],\\n        [ -54,   13],\\n        [   9,    5],\\n        [  15,   74],\\n        [  35,    1],\\n        [ -17,   90],\\n        [ -70,   33],\\n        [  10,   73],\\n        [  72,   12],\\n        [ -95,   48],\\n        [ -19,    4],\\n        [  93,   12],\\n        [  99,   23],\\n        [  56,   79],\\n        [   0,  -13],\\n        [ -16,    1],\\n        [  87,   99],\\n        [  -7,   85],\\n        [ -12,   44],\\n        [ -91,   28],\\n        [ -60,  -68],\\n        [  -1,   -3],\\n        [ -95,    5],\\n        [  29,   64],\\n        [ -45,  -17],\\n        [  31,    7],\\n        [ -50,   25],\\n        [ -16,   79],\\n        [ -50,   26],\\n        [ -97,  -72],\\n        [ -47,   78],\\n        [ -11,  -93],\\n        [ -63,   19],\\n        [  38,   71],\\n        [  -2,  -67],\\n        [  41,  -78],\\n        [   2,   -3],\\n        [  68,   99],\\n        [  19,   79],\\n        [ -69,   74],\\n        [ -78,  -52],\\n        [ -24,   29],\\n        [ -26,  -36],\\n        [ -10,   89],\\n        [ -63,   46],\\n        [ -79,  -16],\\n        [  23,  -74],\\n        [ -48,  -89],\\n        [   2,  -84],\\n        [ -53,   70],\\n        [ -62,  -61],\\n        [ -17,    7],\\n        [ -80,  -67],\\n        [  17,   75],\\n        [ -85,  -70],\\n        [ -87,  -99],\\n        [  15,   69],\\n        [  64,   54],\\n        [  80,    7]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   9,  -40],\\n        [ -14,   41],\\n        [ -64,    4],\\n        [ -42, -100],\\n        [   7,  -77],\\n        [  73,   49],\\n        [ 100,   82],\\n        [  14,  -93],\\n        [ -16,   48],\\n        [  69,  -33],\\n        [ -89,   19],\\n        [  55,  -10],\\n        [ -68,  -43],\\n        [ -26,   64],\\n        [ -61,   18],\\n        [ -14,  -77],\\n        [ -26,   66],\\n        [ -73,   61],\\n        [ -20,  -94],\\n        [ -15,  -82],\\n        [ -37,    2],\\n        [ -86,   69],\\n        [ -16,  -94],\\n        [ -97,   66],\\n        [  86,   95],\\n        [ -32, -100],\\n        [  95,  -55],\\n        [  29,   80],\\n        [   2,   73],\\n        [  -1,  -78],\\n        [ -95,   90],\\n        [  54,   26],\\n        [ -54,   13],\\n        [   9,    5],\\n        [  15,   74],\\n        [  35,    1],\\n        [ -17,   90],\\n        [ -70,   33],\\n        [  10,   73],\\n        [  72,   12],\\n        [ -95,   48],\\n        [ -19,    4],\\n        [  93,   12],\\n        [  99,   23],\\n        [  56,   79],\\n        [   0,  -13],\\n        [ -16,    1],\\n        [  87,   99],\\n        [  -7,   85],\\n        [ -12,   44],\\n        [ -91,   28],\\n        [ -60,  -68],\\n        [  -1,   -3],\\n        [ -95,    5],\\n        [  29,   64],\\n        [ -45,  -17],\\n        [  31,    7],\\n        [ -50,   25],\\n        [ -16,   79],\\n        [ -50,   26],\\n        [ -97,  -72],\\n        [ -47,   78],\\n        [ -11,  -93],\\n        [ -63,   19],\\n        [  38,   71],\\n        [  -2,  -67],\\n        [  41,  -78],\\n        [   2,   -3],\\n        [  68,   99],\\n        [  19,   79],\\n        [ -69,   74],\\n        [ -78,  -52],\\n        [ -24,   29],\\n        [ -26,  -36],\\n        [ -10,   89],\\n        [ -63,   46],\\n        [ -79,  -16],\\n        [  23,  -74],\\n        [ -48,  -89],\\n        [   2,  -84],\\n        [ -53,   70],\\n        [ -62,  -61],\\n        [ -17,    7],\\n        [ -80,  -67],\\n        [  17,   75],\\n        [ -85,  -70],\\n        [ -87,  -99],\\n        [  15,   69],\\n        [  64,   54],\\n        [  80,    7]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   9,  -40],\\n        [ -14,   41],\\n        [ -64,    4],\\n        [ -42, -100],\\n        [   7,  -77],\\n        [  73,   49],\\n        [ 100,   82],\\n        [  14,  -93],\\n        [ -16,   48],\\n        [  69,  -33],\\n        [ -89,   19],\\n        [  55,  -10],\\n        [ -68,  -43],\\n        [ -26,   64],\\n        [ -61,   18],\\n        [ -14,  -77],\\n        [ -26,   66],\\n        [ -73,   61],\\n        [ -20,  -94],\\n        [ -15,  -82],\\n        [ -37,    2],\\n        [ -86,   69],\\n        [ -16,  -94],\\n        [ -97,   66],\\n        [  86,   95],\\n        [ -32, -100],\\n        [  95,  -55],\\n        [  29,   80],\\n        [   2,   73],\\n        [  -1,  -78],\\n        [ -95,   90],\\n        [  54,   26],\\n        [ -54,   13],\\n        [   9,    5],\\n        [  15,   74],\\n        [  35,    1],\\n        [ -17,   90],\\n        [ -70,   33],\\n        [  10,   73],\\n        [  72,   12],\\n        [ -95,   48],\\n        [ -19,    4],\\n        [  93,   12],\\n        [  99,   23],\\n        [  56,   79],\\n        [   0,  -13],\\n        [ -16,    1],\\n        [  87,   99],\\n        [  -7,   85],\\n        [ -12,   44],\\n        [ -91,   28],\\n        [ -60,  -68],\\n        [  -1,   -3],\\n        [ -95,    5],\\n        [  29,   64],\\n        [ -45,  -17],\\n        [  31,    7],\\n        [ -50,   25],\\n        [ -16,   79],\\n        [ -50,   26],\\n        [ -97,  -72],\\n        [ -47,   78],\\n        [ -11,  -93],\\n        [ -63,   19],\\n        [  38,   71],\\n        [  -2,  -67],\\n        [  41,  -78],\\n        [   2,   -3],\\n        [  68,   99],\\n        [  19,   79],\\n        [ -69,   74],\\n        [ -78,  -52],\\n        [ -24,   29],\\n        [ -26,  -36],\\n        [ -10,   89],\\n        [ -63,   46],\\n        [ -79,  -16],\\n        [  23,  -74],\\n        [ -48,  -89],\\n        [   2,  -84],\\n        [ -53,   70],\\n        [ -62,  -61],\\n        [ -17,    7],\\n        [ -80,  -67],\\n        [  17,   75],\\n        [ -85,  -70],\\n        [ -87,  -99],\\n        [  15,   69],\\n        [  64,   54],\\n        [  80,    7]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_2/Folder_80/tests58_80_2.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   9,  -40],\\n        [ -14,   41],\\n        [ -64,    4],\\n        [ -42, -100],\\n        [   7,  -77],\\n        [  73,   49],\\n        [ 100,   82],\\n        [  14,  -93],\\n        [ -16,   48],\\n        [  69,  -33],\\n        [ -89,   19],\\n        [  55,  -10],\\n        [ -68,  -43],\\n        [ -26,   64],\\n        [ -61,   18],\\n        [ -14,  -77],\\n        [ -26,   66],\\n        [ -73,   61],\\n        [ -20,  -94],\\n        [ -15,  -82],\\n        [ -37,    2],\\n        [ -86,   69],\\n        [ -16,  -94],\\n        [ -97,   66],\\n        [  86,   95],\\n        [ -32, -100],\\n        [  95,  -55],\\n        [  29,   80],\\n        [   2,   73],\\n        [  -1,  -78],\\n        [ -95,   90],\\n        [  54,   26],\\n        [ -54,   13],\\n        [   9,    5],\\n        [  15,   74],\\n        [  35,    1],\\n        [ -17,   90],\\n        [ -70,   33],\\n        [  10,   73],\\n        [  72,   12],\\n        [ -95,   48],\\n        [ -19,    4],\\n        [  93,   12],\\n        [  99,   23],\\n        [  56,   79],\\n        [   0,  -13],\\n        [ -16,    1],\\n        [  87,   99],\\n        [  -7,   85],\\n        [ -12,   44],\\n        [ -91,   28],\\n        [ -60,  -68],\\n        [  -1,   -3],\\n        [ -95,    5],\\n        [  29,   64],\\n        [ -45,  -17],\\n        [  31,    7],\\n        [ -50,   25],\\n        [ -16,   79],\\n        [ -50,   26],\\n        [ -97,  -72],\\n        [ -47,   78],\\n        [ -11,  -93],\\n        [ -63,   19],\\n        [  38,   71],\\n        [  -2,  -67],\\n        [  41,  -78],\\n        [   2,   -3],\\n        [  68,   99],\\n        [  19,   79],\\n        [ -69,   74],\\n        [ -78,  -52],\\n        [ -24,   29],\\n        [ -26,  -36],\\n        [ -10,   89],\\n        [ -63,   46],\\n        [ -79,  -16],\\n        [  23,  -74],\\n        [ -48,  -89],\\n        [   2,  -84],\\n        [ -53,   70],\\n        [ -62,  -61],\\n        [ -17,    7],\\n        [ -80,  -67],\\n        [  17,   75],\\n        [ -85,  -70],\\n        [ -87,  -99],\\n        [  15,   69],\\n        [  64,   54],\\n        [  80,    7]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007907990366220474, "start": 1738500669.0013885, "stop": 1738500669.0021799, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8cc7fa29cf5443ca9949e3d3782c71e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_2.py::test_matrix_of_having_180_integers", "location": ["tests58_80_2.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_2.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010140705853700638, "start": 1738500669.036667, "stop": 1738500669.036769, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8cc7fa29cf5443ca9949e3d3782c71e1", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
