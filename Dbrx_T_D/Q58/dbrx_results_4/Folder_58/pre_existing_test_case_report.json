{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  -8,   82,   53,   75,   87,  -51,  -56,   41,   75,   75,\\n          -15,    7,   -9,  -50,   15,   84,  -12,  -91,   -3,  -74,\\n           59,   72,  -90,  -35,   -6,  -69,   61,    1,  -48,   32,\\n          -19,   38,   84,  -28,  -30,   -3,   33,  -53,   54,  -49,\\n          -73,   86,  -81,   -8,    3,  -47,   69,  -88,   -4,    7,\\n          -82,   33,  -10,    2,   47,  -51,  -74,  -21,   10,   73,\\n            2,   75,   -9,  -79,    8,   16,   21,  -50,   -1,   52,\\n           85,  -34,   94,   86,   80,   53,   88,   84,    5,   16,\\n           97,   18,  -33,  -60,  -71, -100,  -28,   -2,  -24,   30,\\n         -100,   95,  -44,   25,   57,  -19,  -13,    3,  -57,   31,\\n           34,   11,  -40,  -16,  -66,  -60,  -39,    6,  -39,  -30,\\n          -41,   -3,   37,  -65,   55,  -45,    1,  -31, -100,  -65,\\n          -41,  -70,   66,  -54,  -15,  -45,  -76,   96,  -93,   53,\\n           96,   95,   54,   18,  -58,   41,  -59,  -74,   45,   23,\\n          -11,   67,  -50,   14,   16,  -50,   27,  -16,  -86,   15,\\n           13,   77,   33,  -38,   85,   18,   90,  -75,    3,   63,\\n           76,   73,   64,  -25,  -93,  -56,   66,  -71,   64,   84,\\n          -93,   35,  -55,   92,  -80,  -75,  -54,  -25,   76,  -63,\\n          -13,  -34,  -53,  -84,  -43]]))",
    0.00069
  ]
}