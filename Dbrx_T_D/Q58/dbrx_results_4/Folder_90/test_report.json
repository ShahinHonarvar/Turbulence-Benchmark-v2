{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001104939728975296, "start": 1738500854.885846, "stop": 1738500854.885957, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00af309714434db791e22cfa274f4172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013338401913642883, "start": 1738500854.886111, "stop": 1738500854.8862445, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00af309714434db791e22cfa274f4172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006394274532794952, "start": 1738500854.8865237, "stop": 1738500854.8871636, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "00af309714434db791e22cfa274f4172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002907104790210724, "start": 1738500854.8880916, "stop": 1738500854.8883827, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00af309714434db791e22cfa274f4172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-62,  73],\\n        [-12, -17],\\n        [ 58, -60],\\n        [-45,  89],\\n        [  1, -52],\\n        [ 36,  51],\\n        [ 67, -88],\\n        [ 90, -87],\\n        [ 22, -41],\\n        [ 79, -28],\\n        [ 59, -97],\\n        [-20, -52],\\n        [-55,   3],\\n        [-79, -46],\\n        [ 56, -82],\\n        [  1, -12],\\n        [-77,  89],\\n        [ 57, -40],\\n        [ 24,  29],\\n        [-85, -72],\\n        [-16, -98],\\n        [-55,  15],\\n        [-59, -28],\\n        [ 81,  68],\\n        [-92,  -1],\\n        [-82, -47],\\n        [-15, -73],\\n        [-77, -65],\\n        [-86, -67],\\n        [ 62,  59],\\n        [ 70,  92],\\n        [ 89, -75],\\n        [-80, -40],\\n        [ 67,   0],\\n        [-61,  -8],\\n        [-35,  -2],\\n        [  6,  61],\\n        [  0, -17],\\n        [-42, -22],\\n        [-61,  67],\\n        [-30, -49],\\n        [ 93, -90],\\n        [-53,  18],\\n        [ 17, -90],\\n        [-77,  49],\\n        [-20,   5],\\n        [-38,   9],\\n        [-12, -80],\\n        [-61, -81],\\n        [ 93, -95],\\n        [-62,  51],\\n        [-17,  59],\\n        [ 60,  87],\\n        [ 43,  60],\\n        [ 15,   3],\\n        [-85,   9],\\n        [ -5, -86],\\n        [-30, -13],\\n        [ 74, -25],\\n        [ 48,  41],\\n        [ 21,  85],\\n        [-19,  -7],\\n        [  3, -76],\\n        [ 83,  19],\\n        [ 58,  17],\\n        [-25,  18],\\n        [ 84, -29],\\n        [-65,  -3],\\n        [ 86,  16],\\n        [ -5, -27],\\n        [-65,  18],\\n        [-54, -79],\\n        [-94, -75],\\n        [ 30,  79],\\n        [-44,  19],\\n        [-70,  62],\\n        [-15,  70],\\n        [-87, -75],\\n        [-27, -99],\\n        [-99, -39],\\n        [ 55, -27],\\n        [ 26,  81],\\n        [ 73, -84],\\n        [-27, -50],\\n        [ 81, -18],\\n        [ 50, -76],\\n        [ 91,  10],\\n        [ 98,   0]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-62,  73],\\n        [-12, -17],\\n        [ 58, -60],\\n        [-45,  89],\\n        [  1, -52],\\n        [ 36,  51],\\n        [ 67, -88],\\n        [ 90, -87],\\n        [ 22, -41],\\n        [ 79, -28],\\n        [ 59, -97],\\n        [-20, -52],\\n        [-55,   3],\\n        [-79, -46],\\n        [ 56, -82],\\n        [  1, -12],\\n        [-77,  89],\\n        [ 57, -40],\\n        [ 24,  29],\\n        [-85, -72],\\n        [-16, -98],\\n        [-55,  15],\\n        [-59, -28],\\n        [ 81,  68],\\n        [-92,  -1],\\n        [-82, -47],\\n        [-15, -73],\\n        [-77, -65],\\n        [-86, -67],\\n        [ 62,  59],\\n        [ 70,  92],\\n        [ 89, -75],\\n        [-80, -40],\\n        [ 67,   0],\\n        [-61,  -8],\\n        [-35,  -2],\\n        [  6,  61],\\n        [  0, -17],\\n        [-42, -22],\\n        [-61,  67],\\n        [-30, -49],\\n        [ 93, -90],\\n        [-53,  18],\\n        [ 17, -90],\\n        [-77,  49],\\n        [-20,   5],\\n        [-38,   9],\\n        [-12, -80],\\n        [-61, -81],\\n        [ 93, -95],\\n        [-62,  51],\\n        [-17,  59],\\n        [ 60,  87],\\n        [ 43,  60],\\n        [ 15,   3],\\n        [-85,   9],\\n        [ -5, -86],\\n        [-30, -13],\\n        [ 74, -25],\\n        [ 48,  41],\\n        [ 21,  85],\\n        [-19,  -7],\\n        [  3, -76],\\n        [ 83,  19],\\n        [ 58,  17],\\n        [-25,  18],\\n        [ 84, -29],\\n        [-65,  -3],\\n        [ 86,  16],\\n        [ -5, -27],\\n        [-65,  18],\\n        [-54, -79],\\n        [-94, -75],\\n        [ 30,  79],\\n        [-44,  19],\\n        [-70,  62],\\n        [-15,  70],\\n        [-87, -75],\\n        [-27, -99],\\n        [-99, -39],\\n        [ 55, -27],\\n        [ 26,  81],\\n        [ 73, -84],\\n        [-27, -50],\\n        [ 81, -18],\\n        [ 50, -76],\\n        [ 91,  10],\\n        [ 98,   0]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-62,  73],\\n        [-12, -17],\\n        [ 58, -60],\\n        [-45,  89],\\n        [  1, -52],\\n        [ 36,  51],\\n        [ 67, -88],\\n        [ 90, -87],\\n        [ 22, -41],\\n        [ 79, -28],\\n        [ 59, -97],\\n        [-20, -52],\\n        [-55,   3],\\n        [-79, -46],\\n        [ 56, -82],\\n        [  1, -12],\\n        [-77,  89],\\n        [ 57, -40],\\n        [ 24,  29],\\n        [-85, -72],\\n        [-16, -98],\\n        [-55,  15],\\n        [-59, -28],\\n        [ 81,  68],\\n        [-92,  -1],\\n        [-82, -47],\\n        [-15, -73],\\n        [-77, -65],\\n        [-86, -67],\\n        [ 62,  59],\\n        [ 70,  92],\\n        [ 89, -75],\\n        [-80, -40],\\n        [ 67,   0],\\n        [-61,  -8],\\n        [-35,  -2],\\n        [  6,  61],\\n        [  0, -17],\\n        [-42, -22],\\n        [-61,  67],\\n        [-30, -49],\\n        [ 93, -90],\\n        [-53,  18],\\n        [ 17, -90],\\n        [-77,  49],\\n        [-20,   5],\\n        [-38,   9],\\n        [-12, -80],\\n        [-61, -81],\\n        [ 93, -95],\\n        [-62,  51],\\n        [-17,  59],\\n        [ 60,  87],\\n        [ 43,  60],\\n        [ 15,   3],\\n        [-85,   9],\\n        [ -5, -86],\\n        [-30, -13],\\n        [ 74, -25],\\n        [ 48,  41],\\n        [ 21,  85],\\n        [-19,  -7],\\n        [  3, -76],\\n        [ 83,  19],\\n        [ 58,  17],\\n        [-25,  18],\\n        [ 84, -29],\\n        [-65,  -3],\\n        [ 86,  16],\\n        [ -5, -27],\\n        [-65,  18],\\n        [-54, -79],\\n        [-94, -75],\\n        [ 30,  79],\\n        [-44,  19],\\n        [-70,  62],\\n        [-15,  70],\\n        [-87, -75],\\n        [-27, -99],\\n        [-99, -39],\\n        [ 55, -27],\\n        [ 26,  81],\\n        [ 73, -84],\\n        [-27, -50],\\n        [ 81, -18],\\n        [ 50, -76],\\n        [ 91,  10],\\n        [ 98,   0]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-62,  73],\\n        [-12, -17],\\n        [ 58, -60],\\n        [-45,  89],\\n        [  1, -52],\\n        [ 36,  51],\\n        [ 67, -88],\\n        [ 90, -87],\\n        [ 22, -41],\\n        [ 79, -28],\\n        [ 59, -97],\\n        [-20, -52],\\n        [-55,   3],\\n        [-79, -46],\\n        [ 56, -82],\\n        [  1, -12],\\n        [-77,  89],\\n        [ 57, -40],\\n        [ 24,  29],\\n        [-85, -72],\\n        [-16, -98],\\n        [-55,  15],\\n        [-59, -28],\\n        [ 81,  68],\\n        [-92,  -1],\\n        [-82, -47],\\n        [-15, -73],\\n        [-77, -65],\\n        [-86, -67],\\n        [ 62,  59],\\n        [ 70,  92],\\n        [ 89, -75],\\n        [-80, -40],\\n        [ 67,   0],\\n        [-61,  -8],\\n        [-35,  -2],\\n        [  6,  61],\\n        [  0, -17],\\n        [-42, -22],\\n        [-61,  67],\\n        [-30, -49],\\n        [ 93, -90],\\n        [-53,  18],\\n        [ 17, -90],\\n        [-77,  49],\\n        [-20,   5],\\n        [-38,   9],\\n        [-12, -80],\\n        [-61, -81],\\n        [ 93, -95],\\n        [-62,  51],\\n        [-17,  59],\\n        [ 60,  87],\\n        [ 43,  60],\\n        [ 15,   3],\\n        [-85,   9],\\n        [ -5, -86],\\n        [-30, -13],\\n        [ 74, -25],\\n        [ 48,  41],\\n        [ 21,  85],\\n        [-19,  -7],\\n        [  3, -76],\\n        [ 83,  19],\\n        [ 58,  17],\\n        [-25,  18],\\n        [ 84, -29],\\n        [-65,  -3],\\n        [ 86,  16],\\n        [ -5, -27],\\n        [-65,  18],\\n        [-54, -79],\\n        [-94, -75],\\n        [ 30,  79],\\n        [-44,  19],\\n        [-70,  62],\\n        [-15,  70],\\n        [-87, -75],\\n        [-27, -99],\\n        [-99, -39],\\n        [ 55, -27],\\n        [ 26,  81],\\n        [ 73, -84],\\n        [-27, -50],\\n        [ 81, -18],\\n        [ 50, -76],\\n        [ 91,  10],\\n        [ 98,   0]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009912485256791115, "start": 1738500854.888561, "stop": 1738500854.8895526, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00af309714434db791e22cfa274f4172", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000823519192636013, "start": 1738500854.9063287, "stop": 1738500854.9071524, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "00af309714434db791e22cfa274f4172", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
