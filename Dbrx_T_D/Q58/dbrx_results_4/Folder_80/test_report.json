{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_4.py::test_matrix_of_one_integer", "location": ["tests58_80_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012626592069864273, "start": 1738500844.9911582, "stop": 1738500844.991285, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "57bfa7645eef41a0ace5e2f76194148f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_one_integer", "location": ["tests58_80_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016062334179878235, "start": 1738500844.9915593, "stop": 1738500844.9917202, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "57bfa7645eef41a0ace5e2f76194148f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_one_integer", "location": ["tests58_80_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.407289326190948e-05, "start": 1738500844.9956393, "stop": 1738500844.9957337, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "57bfa7645eef41a0ace5e2f76194148f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_having_180_integers", "location": ["tests58_80_4.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011461693793535233, "start": 1738500844.999141, "stop": 1738500844.999256, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "57bfa7645eef41a0ace5e2f76194148f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_having_180_integers", "location": ["tests58_80_4.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -75,    1],\\n        [ -38,  -84],\\n        [  74,  -32],\\n        [ -71,  -47],\\n        [ -78,   71],\\n        [  74,   39],\\n        [  88,   -2],\\n        [ -19,  -30],\\n        [  -3,  -71],\\n        [   5,    4],\\n        [  34,  -35],\\n        [  91,   51],\\n        [ -36,  -93],\\n        [  57,   60],\\n        [  95,  -68],\\n        [ -70,   94],\\n        [ -66,   -1],\\n        [ -73,   51],\\n        [ -83,   45],\\n        [ -37,   65],\\n        [ -76,   59],\\n        [ -76,   44],\\n        [ 100,   12],\\n        [  90,  -56],\\n        [  65,  100],\\n        [  -6,   41],\\n        [  42,   36],\\n        [ -78,  -53],\\n        [   6,  -46],\\n        [ -54,   84],\\n        [ -91,  -52],\\n        [  54,   50],\\n        [ -95,  -38],\\n        [  38,   14],\\n        [ -70,  -57],\\n        [  27,   46],\\n        [  36,  -28],\\n        [ -54,   -2],\\n        [  53,  -73],\\n        [ -75,  -31],\\n        [  11,   93],\\n        [ -11,  -21],\\n        [ -74,   64],\\n        [ -22,  -17],\\n        [  32,  -28],\\n        [  80,   41],\\n        [  52,   39],\\n        [ -59,   82],\\n        [ -30,  -20],\\n        [ -64,  -35],\\n        [ -61,  -80],\\n        [  16,    5],\\n        [  -5,   93],\\n        [  15,   42],\\n        [ -80,   62],\\n        [  14,   21],\\n        [  92,  -80],\\n        [ -86,   52],\\n        [ -78,  -69],\\n        [ -70,   41],\\n        [   7,   96],\\n        [  42,   37],\\n        [  27,   67],\\n        [  53,   -4],\\n        [  66,   78],\\n        [ -14,   82],\\n        [ -75,   40],\\n        [  58,   88],\\n        [  81, -100],\\n        [  94,  -50],\\n        [ -97,   38],\\n        [  36,   32],\\n        [  11,   -2],\\n        [  12,  -38],\\n        [ -66,  -66],\\n        [ -38,   52],\\n        [ -96,   72],\\n        [ -94,  -99],\\n        [ -81,  100],\\n        [  77,   96],\\n        [  33,   95],\\n        [  48,   99],\\n        [  95,   13],\\n        [  57,  -66],\\n        [ -84,  -23],\\n        [ -54,  -87],\\n        [ -67,  -88],\\n        [  11,  -48],\\n        [ -38,   80],\\n        [  58,   49]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -75,    1],\\n        [ -38,  -84],\\n        [  74,  -32],\\n        [ -71,  -47],\\n        [ -78,   71],\\n        [  74,   39],\\n        [  88,   -2],\\n        [ -19,  -30],\\n        [  -3,  -71],\\n        [   5,    4],\\n        [  34,  -35],\\n        [  91,   51],\\n        [ -36,  -93],\\n        [  57,   60],\\n        [  95,  -68],\\n        [ -70,   94],\\n        [ -66,   -1],\\n        [ -73,   51],\\n        [ -83,   45],\\n        [ -37,   65],\\n        [ -76,   59],\\n        [ -76,   44],\\n        [ 100,   12],\\n        [  90,  -56],\\n        [  65,  100],\\n        [  -6,   41],\\n        [  42,   36],\\n        [ -78,  -53],\\n        [   6,  -46],\\n        [ -54,   84],\\n        [ -91,  -52],\\n        [  54,   50],\\n        [ -95,  -38],\\n        [  38,   14],\\n        [ -70,  -57],\\n        [  27,   46],\\n        [  36,  -28],\\n        [ -54,   -2],\\n        [  53,  -73],\\n        [ -75,  -31],\\n        [  11,   93],\\n        [ -11,  -21],\\n        [ -74,   64],\\n        [ -22,  -17],\\n        [  32,  -28],\\n        [  80,   41],\\n        [  52,   39],\\n        [ -59,   82],\\n        [ -30,  -20],\\n        [ -64,  -35],\\n        [ -61,  -80],\\n        [  16,    5],\\n        [  -5,   93],\\n        [  15,   42],\\n        [ -80,   62],\\n        [  14,   21],\\n        [  92,  -80],\\n        [ -86,   52],\\n        [ -78,  -69],\\n        [ -70,   41],\\n        [   7,   96],\\n        [  42,   37],\\n        [  27,   67],\\n        [  53,   -4],\\n        [  66,   78],\\n        [ -14,   82],\\n        [ -75,   40],\\n        [  58,   88],\\n        [  81, -100],\\n        [  94,  -50],\\n        [ -97,   38],\\n        [  36,   32],\\n        [  11,   -2],\\n        [  12,  -38],\\n        [ -66,  -66],\\n        [ -38,   52],\\n        [ -96,   72],\\n        [ -94,  -99],\\n        [ -81,  100],\\n        [  77,   96],\\n        [  33,   95],\\n        [  48,   99],\\n        [  95,   13],\\n        [  57,  -66],\\n        [ -84,  -23],\\n        [ -54,  -87],\\n        [ -67,  -88],\\n        [  11,  -48],\\n        [ -38,   80],\\n        [  58,   49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -75,    1],\\n        [ -38,  -84],\\n        [  74,  -32],\\n        [ -71,  -47],\\n        [ -78,   71],\\n        [  74,   39],\\n        [  88,   -2],\\n        [ -19,  -30],\\n        [  -3,  -71],\\n        [   5,    4],\\n        [  34,  -35],\\n        [  91,   51],\\n        [ -36,  -93],\\n        [  57,   60],\\n        [  95,  -68],\\n        [ -70,   94],\\n        [ -66,   -1],\\n        [ -73,   51],\\n        [ -83,   45],\\n        [ -37,   65],\\n        [ -76,   59],\\n        [ -76,   44],\\n        [ 100,   12],\\n        [  90,  -56],\\n        [  65,  100],\\n        [  -6,   41],\\n        [  42,   36],\\n        [ -78,  -53],\\n        [   6,  -46],\\n        [ -54,   84],\\n        [ -91,  -52],\\n        [  54,   50],\\n        [ -95,  -38],\\n        [  38,   14],\\n        [ -70,  -57],\\n        [  27,   46],\\n        [  36,  -28],\\n        [ -54,   -2],\\n        [  53,  -73],\\n        [ -75,  -31],\\n        [  11,   93],\\n        [ -11,  -21],\\n        [ -74,   64],\\n        [ -22,  -17],\\n        [  32,  -28],\\n        [  80,   41],\\n        [  52,   39],\\n        [ -59,   82],\\n        [ -30,  -20],\\n        [ -64,  -35],\\n        [ -61,  -80],\\n        [  16,    5],\\n        [  -5,   93],\\n        [  15,   42],\\n        [ -80,   62],\\n        [  14,   21],\\n        [  92,  -80],\\n        [ -86,   52],\\n        [ -78,  -69],\\n        [ -70,   41],\\n        [   7,   96],\\n        [  42,   37],\\n        [  27,   67],\\n        [  53,   -4],\\n        [  66,   78],\\n        [ -14,   82],\\n        [ -75,   40],\\n        [  58,   88],\\n        [  81, -100],\\n        [  94,  -50],\\n        [ -97,   38],\\n        [  36,   32],\\n        [  11,   -2],\\n        [  12,  -38],\\n        [ -66,  -66],\\n        [ -38,   52],\\n        [ -96,   72],\\n        [ -94,  -99],\\n        [ -81,  100],\\n        [  77,   96],\\n        [  33,   95],\\n        [  48,   99],\\n        [  95,   13],\\n        [  57,  -66],\\n        [ -84,  -23],\\n        [ -54,  -87],\\n        [ -67,  -88],\\n        [  11,  -48],\\n        [ -38,   80],\\n        [  58,   49]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_80/tests58_80_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -75,    1],\\n        [ -38,  -84],\\n        [  74,  -32],\\n        [ -71,  -47],\\n        [ -78,   71],\\n        [  74,   39],\\n        [  88,   -2],\\n        [ -19,  -30],\\n        [  -3,  -71],\\n        [   5,    4],\\n        [  34,  -35],\\n        [  91,   51],\\n        [ -36,  -93],\\n        [  57,   60],\\n        [  95,  -68],\\n        [ -70,   94],\\n        [ -66,   -1],\\n        [ -73,   51],\\n        [ -83,   45],\\n        [ -37,   65],\\n        [ -76,   59],\\n        [ -76,   44],\\n        [ 100,   12],\\n        [  90,  -56],\\n        [  65,  100],\\n        [  -6,   41],\\n        [  42,   36],\\n        [ -78,  -53],\\n        [   6,  -46],\\n        [ -54,   84],\\n        [ -91,  -52],\\n        [  54,   50],\\n        [ -95,  -38],\\n        [  38,   14],\\n        [ -70,  -57],\\n        [  27,   46],\\n        [  36,  -28],\\n        [ -54,   -2],\\n        [  53,  -73],\\n        [ -75,  -31],\\n        [  11,   93],\\n        [ -11,  -21],\\n        [ -74,   64],\\n        [ -22,  -17],\\n        [  32,  -28],\\n        [  80,   41],\\n        [  52,   39],\\n        [ -59,   82],\\n        [ -30,  -20],\\n        [ -64,  -35],\\n        [ -61,  -80],\\n        [  16,    5],\\n        [  -5,   93],\\n        [  15,   42],\\n        [ -80,   62],\\n        [  14,   21],\\n        [  92,  -80],\\n        [ -86,   52],\\n        [ -78,  -69],\\n        [ -70,   41],\\n        [   7,   96],\\n        [  42,   37],\\n        [  27,   67],\\n        [  53,   -4],\\n        [  66,   78],\\n        [ -14,   82],\\n        [ -75,   40],\\n        [  58,   88],\\n        [  81, -100],\\n        [  94,  -50],\\n        [ -97,   38],\\n        [  36,   32],\\n        [  11,   -2],\\n        [  12,  -38],\\n        [ -66,  -66],\\n        [ -38,   52],\\n        [ -96,   72],\\n        [ -94,  -99],\\n        [ -81,  100],\\n        [  77,   96],\\n        [  33,   95],\\n        [  48,   99],\\n        [  95,   13],\\n        [  57,  -66],\\n        [ -84,  -23],\\n        [ -54,  -87],\\n        [ -67,  -88],\\n        [  11,  -48],\\n        [ -38,   80],\\n        [  58,   49]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008996864780783653, "start": 1738500844.9993463, "stop": 1738500845.0002465, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "57bfa7645eef41a0ace5e2f76194148f", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_4.py::test_matrix_of_having_180_integers", "location": ["tests58_80_4.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_4.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001461561769247055, "start": 1738500845.0312545, "stop": 1738500845.0314012, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "57bfa7645eef41a0ace5e2f76194148f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
