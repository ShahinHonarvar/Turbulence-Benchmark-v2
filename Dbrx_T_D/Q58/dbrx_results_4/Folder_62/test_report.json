{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_4.py::test_matrix_of_one_integer", "location": ["tests58_62_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_4.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014446396380662918, "start": 1738500828.7831092, "stop": 1738500828.7832544, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "38634b43fa2b4462b525804910df3e13", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_4.py::test_matrix_of_one_integer", "location": ["tests58_62_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_4.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001758374273777008, "start": 1738500828.7834358, "stop": 1738500828.783612, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "38634b43fa2b4462b525804910df3e13", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_4.py::test_matrix_of_one_integer", "location": ["tests58_62_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_4.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.200908243656158e-05, "start": 1738500828.7839417, "stop": 1738500828.7840338, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "38634b43fa2b4462b525804910df3e13", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_4.py::test_matrix_of_having_186_integers", "location": ["tests58_62_4.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_4.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010010693222284317, "start": 1738500828.7879508, "stop": 1738500828.7880516, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "38634b43fa2b4462b525804910df3e13", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_4.py::test_matrix_of_having_186_integers", "location": ["tests58_62_4.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_4.py": 1, "Folder_62": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_62/tests58_62_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  92,   45],\\n        [  27,   97],\\n        [  55,   58],\\n        [ -97,   89],\\n        [   3,    8],\\n        [  62,  -47],\\n        [  23,   36],\\n        [ -44,  -12],\\n        [ -65, -100],\\n        [ -26,  -69],\\n        [  84, -100],\\n        [  78,   80],\\n        [ -46,   79],\\n        [  23,   52],\\n        [  19,  -11],\\n        [  24,  -30],\\n        [ -74,  -59],\\n        [  20,    0],\\n        [  48,    8],\\n        [  67,   35],\\n        [  -4,   49],\\n        [  64,   67],\\n        [  -6,  -12],\\n        [  31,   64],\\n        [  30,    3],\\n        [  89,  -43],\\n        [ -71,   43],\\n        [  19,  -32],\\n        [  12,  -85],\\n        [  85,   37],\\n        [ -15,   64],\\n        [  81,   40],\\n        [  68,   98],\\n        [ -70,   21],\\n        [ -42,   31],\\n        [ -68,  -76],\\n        [  63,   -9],\\n        [ -75,   44],\\n        [ -84,   99],\\n        [ -45,   49],\\n        [  65,   61],\\n        [  39,  -75],\\n        [  72,  -70],\\n        [ -26,  -50],\\n        [  90,   86],\\n        [  26,   43],\\n        [ -23,   24],\\n        [ -18,  -53],\\n        [ -64,   63],\\n        [ -96,   88],\\n        [ -45,  -88],\\n        [  58,    2],\\n        [  38,   28],\\n        [  25,   73],\\n        [ -96,   83],\\n        [ -57,  -95],\\n        [  45,   11],\\n        [ -86,  -87],\\n        [  92,  -77],\\n        [ -33,   92],\\n        [ -49,  -85],\\n        [   4,  -82],\\n        [  16,   78],\\n        [  88,   31],\\n        [  13,  -34],\\n        [  98,    2],\\n        [  15,   70],\\n        [  19,  -11],\\n        [ -20,  -59],\\n        [ -43,  -16],\\n        [ -79,   84],\\n        [  -7,  -51],\\n        [ -79,   73],\\n        [  65,   -1],\\n        [ -39,  -88],\\n        [  29,  -11],\\n        [  21,    5],\\n        [  12,   30],\\n        [  28,   88],\\n        [ -71,  -62],\\n        [ -97,  -24],\\n        [  21,  -22],\\n        [  71,  -26],\\n        [ -14,   -4],\\n        [ -22,  -13],\\n        [  34,  -38],\\n        [  61,   33],\\n        [ -32,  -42],\\n        [  64,  -92],\\n        [  66,   33],\\n        [ -16,   98],\\n        [  35,   84],\\n        [  26,   31]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  92,   45],\\n        [  27,   97],\\n        [  55,   58],\\n        [ -97,   89],\\n        [   3,    8],\\n        [  62,  -47],\\n        [  23,   36],\\n        [ -44,  -12],\\n        [ -65, -100],\\n        [ -26,  -69],\\n        [  84, -100],\\n        [  78,   80],\\n        [ -46,   79],\\n        [  23,   52],\\n        [  19,  -11],\\n        [  24,  -30],\\n        [ -74,  -59],\\n        [  20,    0],\\n        [  48,    8],\\n        [  67,   35],\\n        [  -4,   49],\\n        [  64,   67],\\n        [  -6,  -12],\\n        [  31,   64],\\n        [  30,    3],\\n        [  89,  -43],\\n        [ -71,   43],\\n        [  19,  -32],\\n        [  12,  -85],\\n        [  85,   37],\\n        [ -15,   64],\\n        [  81,   40],\\n        [  68,   98],\\n        [ -70,   21],\\n        [ -42,   31],\\n        [ -68,  -76],\\n        [  63,   -9],\\n        [ -75,   44],\\n        [ -84,   99],\\n        [ -45,   49],\\n        [  65,   61],\\n        [  39,  -75],\\n        [  72,  -70],\\n        [ -26,  -50],\\n        [  90,   86],\\n        [  26,   43],\\n        [ -23,   24],\\n        [ -18,  -53],\\n        [ -64,   63],\\n        [ -96,   88],\\n        [ -45,  -88],\\n        [  58,    2],\\n        [  38,   28],\\n        [  25,   73],\\n        [ -96,   83],\\n        [ -57,  -95],\\n        [  45,   11],\\n        [ -86,  -87],\\n        [  92,  -77],\\n        [ -33,   92],\\n        [ -49,  -85],\\n        [   4,  -82],\\n        [  16,   78],\\n        [  88,   31],\\n        [  13,  -34],\\n        [  98,    2],\\n        [  15,   70],\\n        [  19,  -11],\\n        [ -20,  -59],\\n        [ -43,  -16],\\n        [ -79,   84],\\n        [  -7,  -51],\\n        [ -79,   73],\\n        [  65,   -1],\\n        [ -39,  -88],\\n        [  29,  -11],\\n        [  21,    5],\\n        [  12,   30],\\n        [  28,   88],\\n        [ -71,  -62],\\n        [ -97,  -24],\\n        [  21,  -22],\\n        [  71,  -26],\\n        [ -14,   -4],\\n        [ -22,  -13],\\n        [  34,  -38],\\n        [  61,   33],\\n        [ -32,  -42],\\n        [  64,  -92],\\n        [  66,   33],\\n        [ -16,   98],\\n        [  35,   84],\\n        [  26,   31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_62/tests58_62_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  92,   45],\\n        [  27,   97],\\n        [  55,   58],\\n        [ -97,   89],\\n        [   3,    8],\\n        [  62,  -47],\\n        [  23,   36],\\n        [ -44,  -12],\\n        [ -65, -100],\\n        [ -26,  -69],\\n        [  84, -100],\\n        [  78,   80],\\n        [ -46,   79],\\n        [  23,   52],\\n        [  19,  -11],\\n        [  24,  -30],\\n        [ -74,  -59],\\n        [  20,    0],\\n        [  48,    8],\\n        [  67,   35],\\n        [  -4,   49],\\n        [  64,   67],\\n        [  -6,  -12],\\n        [  31,   64],\\n        [  30,    3],\\n        [  89,  -43],\\n        [ -71,   43],\\n        [  19,  -32],\\n        [  12,  -85],\\n        [  85,   37],\\n        [ -15,   64],\\n        [  81,   40],\\n        [  68,   98],\\n        [ -70,   21],\\n        [ -42,   31],\\n        [ -68,  -76],\\n        [  63,   -9],\\n        [ -75,   44],\\n        [ -84,   99],\\n        [ -45,   49],\\n        [  65,   61],\\n        [  39,  -75],\\n        [  72,  -70],\\n        [ -26,  -50],\\n        [  90,   86],\\n        [  26,   43],\\n        [ -23,   24],\\n        [ -18,  -53],\\n        [ -64,   63],\\n        [ -96,   88],\\n        [ -45,  -88],\\n        [  58,    2],\\n        [  38,   28],\\n        [  25,   73],\\n        [ -96,   83],\\n        [ -57,  -95],\\n        [  45,   11],\\n        [ -86,  -87],\\n        [  92,  -77],\\n        [ -33,   92],\\n        [ -49,  -85],\\n        [   4,  -82],\\n        [  16,   78],\\n        [  88,   31],\\n        [  13,  -34],\\n        [  98,    2],\\n        [  15,   70],\\n        [  19,  -11],\\n        [ -20,  -59],\\n        [ -43,  -16],\\n        [ -79,   84],\\n        [  -7,  -51],\\n        [ -79,   73],\\n        [  65,   -1],\\n        [ -39,  -88],\\n        [  29,  -11],\\n        [  21,    5],\\n        [  12,   30],\\n        [  28,   88],\\n        [ -71,  -62],\\n        [ -97,  -24],\\n        [  21,  -22],\\n        [  71,  -26],\\n        [ -14,   -4],\\n        [ -22,  -13],\\n        [  34,  -38],\\n        [  61,   33],\\n        [ -32,  -42],\\n        [  64,  -92],\\n        [  66,   33],\\n        [ -16,   98],\\n        [  35,   84],\\n        [  26,   31]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_62/tests58_62_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_62/tests58_62_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  92,   45],\\n        [  27,   97],\\n        [  55,   58],\\n        [ -97,   89],\\n        [   3,    8],\\n        [  62,  -47],\\n        [  23,   36],\\n        [ -44,  -12],\\n        [ -65, -100],\\n        [ -26,  -69],\\n        [  84, -100],\\n        [  78,   80],\\n        [ -46,   79],\\n        [  23,   52],\\n        [  19,  -11],\\n        [  24,  -30],\\n        [ -74,  -59],\\n        [  20,    0],\\n        [  48,    8],\\n        [  67,   35],\\n        [  -4,   49],\\n        [  64,   67],\\n        [  -6,  -12],\\n        [  31,   64],\\n        [  30,    3],\\n        [  89,  -43],\\n        [ -71,   43],\\n        [  19,  -32],\\n        [  12,  -85],\\n        [  85,   37],\\n        [ -15,   64],\\n        [  81,   40],\\n        [  68,   98],\\n        [ -70,   21],\\n        [ -42,   31],\\n        [ -68,  -76],\\n        [  63,   -9],\\n        [ -75,   44],\\n        [ -84,   99],\\n        [ -45,   49],\\n        [  65,   61],\\n        [  39,  -75],\\n        [  72,  -70],\\n        [ -26,  -50],\\n        [  90,   86],\\n        [  26,   43],\\n        [ -23,   24],\\n        [ -18,  -53],\\n        [ -64,   63],\\n        [ -96,   88],\\n        [ -45,  -88],\\n        [  58,    2],\\n        [  38,   28],\\n        [  25,   73],\\n        [ -96,   83],\\n        [ -57,  -95],\\n        [  45,   11],\\n        [ -86,  -87],\\n        [  92,  -77],\\n        [ -33,   92],\\n        [ -49,  -85],\\n        [   4,  -82],\\n        [  16,   78],\\n        [  88,   31],\\n        [  13,  -34],\\n        [  98,    2],\\n        [  15,   70],\\n        [  19,  -11],\\n        [ -20,  -59],\\n        [ -43,  -16],\\n        [ -79,   84],\\n        [  -7,  -51],\\n        [ -79,   73],\\n        [  65,   -1],\\n        [ -39,  -88],\\n        [  29,  -11],\\n        [  21,    5],\\n        [  12,   30],\\n        [  28,   88],\\n        [ -71,  -62],\\n        [ -97,  -24],\\n        [  21,  -22],\\n        [  71,  -26],\\n        [ -14,   -4],\\n        [ -22,  -13],\\n        [  34,  -38],\\n        [  61,   33],\\n        [ -32,  -42],\\n        [  64,  -92],\\n        [  66,   33],\\n        [ -16,   98],\\n        [  35,   84],\\n        [  26,   31]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013179006054997444, "start": 1738500828.7881587, "stop": 1738500828.789477, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "38634b43fa2b4462b525804910df3e13", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_4.py::test_matrix_of_having_186_integers", "location": ["tests58_62_4.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_4.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0003933478146791458, "start": 1738500828.807902, "stop": 1738500828.8082962, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "38634b43fa2b4462b525804910df3e13", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
