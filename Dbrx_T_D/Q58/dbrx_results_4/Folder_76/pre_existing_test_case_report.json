{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00013
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -35,  -39,  -79,  -12,   21,  -32,   14,  -58,   18,   20,\\n           12,  -84,   89,  -19,  -46,  -15,   47,   55,   -6,  -28,\\n          -57,   41,   23,    5,  -61,  -87,  -44,   51,   52,    6,\\n           62,  -84,   15,   72,  -13,   77, -100,   84,    2,   89,\\n          -14,  -24,   99,   28,   78,  -38,  -71,   -3,  -73,  -59,\\n          -88,    2,   10,  -59,   86,   65,  -87,   11,   69,   -4,\\n          -13,   80,  -47,  -15,  -46,  -60,   -3,    8,    1,   10,\\n          -73,  -48,   74,  -27,  -14,  -79,   48,   93,  -55,   -4,\\n           46,  -64,   51,   49,  -16,    4,  -64,   -3,  -73,  -26,\\n           43,   35,   91,  -16,   40,  -87,  -16,  -72,   31,  -46,\\n          -38,   -5,  -56,  -17,   46,  -72,  -15,   68,   78,  -60,\\n          -52,    8,  -63,  -85,   39,   44,  -80,  -67,   85,   84,\\n           53,  -52,   39,  -44,  -87,   62,  100,  -62,   32,   96,\\n          -11,  -40,  -31, -100,    4,   26,  -96,    7,   97,   72,\\n          -63,   75,   70,   84,   37,   54,   -7,  -34,   35,   63,\\n           67,   22,   97,   52,   -2,  -92,   -7,   50,  -96]]))",
    0.00078
  ]
}