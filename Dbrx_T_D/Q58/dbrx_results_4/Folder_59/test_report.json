{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_4.py::test_matrix_of_one_integer", "location": ["tests58_59_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012275204062461853, "start": 1738500826.2444263, "stop": 1738500826.2445493, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c0402b9187cc4aadb824bfaf2f880223", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_one_integer", "location": ["tests58_59_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015528220683336258, "start": 1738500826.2447236, "stop": 1738500826.2448788, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c0402b9187cc4aadb824bfaf2f880223", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_one_integer", "location": ["tests58_59_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.929094135761261e-05, "start": 1738500826.2451596, "stop": 1738500826.2452393, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c0402b9187cc4aadb824bfaf2f880223", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_having_76_integers", "location": ["tests58_59_4.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.020736277103424e-05, "start": 1738500826.2467308, "stop": 1738500826.2468112, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c0402b9187cc4aadb824bfaf2f880223", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_having_76_integers", "location": ["tests58_59_4.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   0,  -71],\\n        [ -36,  -85],\\n        [ -54, -100],\\n        [  90,   99],\\n        [ -69,  -54],\\n        [  62,  -15],\\n        [  42,   53],\\n        [ -72,  -93],\\n        [ -38,   15],\\n        [  54,  -33],\\n        [  49,   49],\\n        [ 100,   64],\\n        [  21,   79],\\n        [  56,  -81],\\n        [  58,   -6],\\n        [ -92,   53],\\n        [  26,   81],\\n        [  -9,   50],\\n        [  49,  -49],\\n        [  10,   83],\\n        [  36,   44],\\n        [ -51,   26],\\n        [ -21,   28],\\n        [ -62,   99],\\n        [  97,  -47],\\n        [ -56,   71],\\n        [  31,   48],\\n        [  58,  -17],\\n        [  38,   74],\\n        [  21,   35],\\n        [ -13,  -70],\\n        [   3,  -46],\\n        [  56,   66],\\n        [ -55,  -99],\\n        [ -87,   65],\\n        [   7,   80],\\n        [  78,   18],\\n        [  25,   37]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   0,  -71],\\n        [ -36,  -85],\\n        [ -54, -100],\\n        [  90,   99],\\n        [ -69,  -54],\\n        [  62,  -15],\\n        [  42,   53],\\n        [ -72,  -93],\\n        [ -38,   15],\\n        [  54,  -33],\\n        [  49,   49],\\n        [ 100,   64],\\n        [  21,   79],\\n        [  56,  -81],\\n        [  58,   -6],\\n        [ -92,   53],\\n        [  26,   81],\\n        [  -9,   50],\\n        [  49,  -49],\\n        [  10,   83],\\n        [  36,   44],\\n        [ -51,   26],\\n        [ -21,   28],\\n        [ -62,   99],\\n        [  97,  -47],\\n        [ -56,   71],\\n        [  31,   48],\\n        [  58,  -17],\\n        [  38,   74],\\n        [  21,   35],\\n        [ -13,  -70],\\n        [   3,  -46],\\n        [  56,   66],\\n        [ -55,  -99],\\n        [ -87,   65],\\n        [   7,   80],\\n        [  78,   18],\\n        [  25,   37]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[   0,  -71],\\n        [ -36,  -85],\\n        [ -54, -100],\\n        [  90,   99],\\n        [ -69,  -54],\\n        [  62,  -15],\\n        [  42,   53],\\n        [ -72,  -93],\\n        [ -38,   15],\\n        [  54,  -33],\\n        [  49,   49],\\n        [ 100,   64],\\n        [  21,   79],\\n        [  56,  -81],\\n        [  58,   -6],\\n        [ -92,   53],\\n        [  26,   81],\\n        [  -9,   50],\\n        [  49,  -49],\\n        [  10,   83],\\n        [  36,   44],\\n        [ -51,   26],\\n        [ -21,   28],\\n        [ -62,   99],\\n        [  97,  -47],\\n        [ -56,   71],\\n        [  31,   48],\\n        [  58,  -17],\\n        [  38,   74],\\n        [  21,   35],\\n        [ -13,  -70],\\n        [   3,  -46],\\n        [  56,   66],\\n        [ -55,  -99],\\n        [ -87,   65],\\n        [   7,   80],\\n        [  78,   18],\\n        [  25,   37]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_4/Folder_59/tests58_59_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[   0,  -71],\\n        [ -36,  -85],\\n        [ -54, -100],\\n        [  90,   99],\\n        [ -69,  -54],\\n        [  62,  -15],\\n        [  42,   53],\\n        [ -72,  -93],\\n        [ -38,   15],\\n        [  54,  -33],\\n        [  49,   49],\\n        [ 100,   64],\\n        [  21,   79],\\n        [  56,  -81],\\n        [  58,   -6],\\n        [ -92,   53],\\n        [  26,   81],\\n        [  -9,   50],\\n        [  49,  -49],\\n        [  10,   83],\\n        [  36,   44],\\n        [ -51,   26],\\n        [ -21,   28],\\n        [ -62,   99],\\n        [  97,  -47],\\n        [ -56,   71],\\n        [  31,   48],\\n        [  58,  -17],\\n        [  38,   74],\\n        [  21,   35],\\n        [ -13,  -70],\\n        [   3,  -46],\\n        [  56,   66],\\n        [ -55,  -99],\\n        [ -87,   65],\\n        [   7,   80],\\n        [  78,   18],\\n        [  25,   37]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005699610337615013, "start": 1738500826.2469056, "stop": 1738500826.2474756, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c0402b9187cc4aadb824bfaf2f880223", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_4.py::test_matrix_of_having_76_integers", "location": ["tests58_59_4.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_4.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.114202111959457e-05, "start": 1738500826.264335, "stop": 1738500826.2644262, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c0402b9187cc4aadb824bfaf2f880223", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
