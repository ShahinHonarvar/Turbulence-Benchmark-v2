{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_3.py::test_matrix_of_one_integer", "location": ["tests58_90_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_3.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011571589857339859, "start": 1738500766.367068, "stop": 1738500766.3671844, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "aea0ea5320aa498bb760f9fb75a994f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_3.py::test_matrix_of_one_integer", "location": ["tests58_90_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_3.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00040928833186626434, "start": 1738500766.3673368, "stop": 1738500766.3677464, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "aea0ea5320aa498bb760f9fb75a994f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_3.py::test_matrix_of_one_integer", "location": ["tests58_90_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_3.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0016317302361130714, "start": 1738500766.3680484, "stop": 1738500766.3696806, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "aea0ea5320aa498bb760f9fb75a994f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_3.py::test_matrix_of_having_176_integers", "location": ["tests58_90_3.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_3.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.811336010694504e-05, "start": 1738500766.3726342, "stop": 1738500766.3727226, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "aea0ea5320aa498bb760f9fb75a994f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_3.py::test_matrix_of_having_176_integers", "location": ["tests58_90_3.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_3.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_90/tests58_90_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-93, -61],\\n        [ 57, -32],\\n        [  6, -31],\\n        [ 74,  90],\\n        [-57, -28],\\n        [ 65,  95],\\n        [ 84, -54],\\n        [ 12, -42],\\n        [ 76,  71],\\n        [-69,  89],\\n        [-16,  64],\\n        [ 57, -49],\\n        [-95, -10],\\n        [ 89,  70],\\n        [ 43, -96],\\n        [ 58, -92],\\n        [ 33, -62],\\n        [ 35, -77],\\n        [ 36,  70],\\n        [-61, -74],\\n        [  8, -39],\\n        [ 54, -53],\\n        [-89, -20],\\n        [-71, -75],\\n        [ 76, -67],\\n        [-65, -12],\\n        [ 71, -33],\\n        [-82,  91],\\n        [-62, -34],\\n        [ 13, -58],\\n        [ 31,  70],\\n        [ 55, -77],\\n        [ -3, -28],\\n        [ 78,  20],\\n        [ 97, -62],\\n        [ 84, -76],\\n        [-49, -62],\\n        [-44,  -1],\\n        [ 76, -40],\\n        [-31, -92],\\n        [ 46, -26],\\n        [-19,   3],\\n        [ 62, -76],\\n        [-49,  81],\\n        [ 88,  58],\\n        [ 24,  -9],\\n        [-35,  99],\\n        [ 18, -10],\\n        [-62, -33],\\n        [ 30, -78],\\n        [ 58,  96],\\n        [ 74,  94],\\n        [ 33, -28],\\n        [ 24, -79],\\n        [-76,   3],\\n        [-67,  61],\\n        [100,  87],\\n        [ 11, -92],\\n        [-77,  72],\\n        [-80, -31],\\n        [-38, -82],\\n        [-31,  80],\\n        [-80,  83],\\n        [-88,  41],\\n        [ 65,  43],\\n        [-18,  26],\\n        [-57,  17],\\n        [-84, -12],\\n        [ 10,  82],\\n        [ 31,  -8],\\n        [-64, -78],\\n        [-86,  -1],\\n        [-57,  55],\\n        [-79, -88],\\n        [ 49,  15],\\n        [-85,  62],\\n        [ 72, -88],\\n        [ 37, -85],\\n        [-34, -93],\\n        [ 48, -45],\\n        [ 43, -40],\\n        [-93, -62],\\n        [ 36, 100],\\n        [-91, -12],\\n        [  6, -18],\\n        [-42, -59],\\n        [-74,   6],\\n        [-18,   0]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-93, -61],\\n        [ 57, -32],\\n        [  6, -31],\\n        [ 74,  90],\\n        [-57, -28],\\n        [ 65,  95],\\n        [ 84, -54],\\n        [ 12, -42],\\n        [ 76,  71],\\n        [-69,  89],\\n        [-16,  64],\\n        [ 57, -49],\\n        [-95, -10],\\n        [ 89,  70],\\n        [ 43, -96],\\n        [ 58, -92],\\n        [ 33, -62],\\n        [ 35, -77],\\n        [ 36,  70],\\n        [-61, -74],\\n        [  8, -39],\\n        [ 54, -53],\\n        [-89, -20],\\n        [-71, -75],\\n        [ 76, -67],\\n        [-65, -12],\\n        [ 71, -33],\\n        [-82,  91],\\n        [-62, -34],\\n        [ 13, -58],\\n        [ 31,  70],\\n        [ 55, -77],\\n        [ -3, -28],\\n        [ 78,  20],\\n        [ 97, -62],\\n        [ 84, -76],\\n        [-49, -62],\\n        [-44,  -1],\\n        [ 76, -40],\\n        [-31, -92],\\n        [ 46, -26],\\n        [-19,   3],\\n        [ 62, -76],\\n        [-49,  81],\\n        [ 88,  58],\\n        [ 24,  -9],\\n        [-35,  99],\\n        [ 18, -10],\\n        [-62, -33],\\n        [ 30, -78],\\n        [ 58,  96],\\n        [ 74,  94],\\n        [ 33, -28],\\n        [ 24, -79],\\n        [-76,   3],\\n        [-67,  61],\\n        [100,  87],\\n        [ 11, -92],\\n        [-77,  72],\\n        [-80, -31],\\n        [-38, -82],\\n        [-31,  80],\\n        [-80,  83],\\n        [-88,  41],\\n        [ 65,  43],\\n        [-18,  26],\\n        [-57,  17],\\n        [-84, -12],\\n        [ 10,  82],\\n        [ 31,  -8],\\n        [-64, -78],\\n        [-86,  -1],\\n        [-57,  55],\\n        [-79, -88],\\n        [ 49,  15],\\n        [-85,  62],\\n        [ 72, -88],\\n        [ 37, -85],\\n        [-34, -93],\\n        [ 48, -45],\\n        [ 43, -40],\\n        [-93, -62],\\n        [ 36, 100],\\n        [-91, -12],\\n        [  6, -18],\\n        [-42, -59],\\n        [-74,   6],\\n        [-18,   0]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_90/tests58_90_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-93, -61],\\n        [ 57, -32],\\n        [  6, -31],\\n        [ 74,  90],\\n        [-57, -28],\\n        [ 65,  95],\\n        [ 84, -54],\\n        [ 12, -42],\\n        [ 76,  71],\\n        [-69,  89],\\n        [-16,  64],\\n        [ 57, -49],\\n        [-95, -10],\\n        [ 89,  70],\\n        [ 43, -96],\\n        [ 58, -92],\\n        [ 33, -62],\\n        [ 35, -77],\\n        [ 36,  70],\\n        [-61, -74],\\n        [  8, -39],\\n        [ 54, -53],\\n        [-89, -20],\\n        [-71, -75],\\n        [ 76, -67],\\n        [-65, -12],\\n        [ 71, -33],\\n        [-82,  91],\\n        [-62, -34],\\n        [ 13, -58],\\n        [ 31,  70],\\n        [ 55, -77],\\n        [ -3, -28],\\n        [ 78,  20],\\n        [ 97, -62],\\n        [ 84, -76],\\n        [-49, -62],\\n        [-44,  -1],\\n        [ 76, -40],\\n        [-31, -92],\\n        [ 46, -26],\\n        [-19,   3],\\n        [ 62, -76],\\n        [-49,  81],\\n        [ 88,  58],\\n        [ 24,  -9],\\n        [-35,  99],\\n        [ 18, -10],\\n        [-62, -33],\\n        [ 30, -78],\\n        [ 58,  96],\\n        [ 74,  94],\\n        [ 33, -28],\\n        [ 24, -79],\\n        [-76,   3],\\n        [-67,  61],\\n        [100,  87],\\n        [ 11, -92],\\n        [-77,  72],\\n        [-80, -31],\\n        [-38, -82],\\n        [-31,  80],\\n        [-80,  83],\\n        [-88,  41],\\n        [ 65,  43],\\n        [-18,  26],\\n        [-57,  17],\\n        [-84, -12],\\n        [ 10,  82],\\n        [ 31,  -8],\\n        [-64, -78],\\n        [-86,  -1],\\n        [-57,  55],\\n        [-79, -88],\\n        [ 49,  15],\\n        [-85,  62],\\n        [ 72, -88],\\n        [ 37, -85],\\n        [-34, -93],\\n        [ 48, -45],\\n        [ 43, -40],\\n        [-93, -62],\\n        [ 36, 100],\\n        [-91, -12],\\n        [  6, -18],\\n        [-42, -59],\\n        [-74,   6],\\n        [-18,   0]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_90/tests58_90_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_90/tests58_90_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-93, -61],\\n        [ 57, -32],\\n        [  6, -31],\\n        [ 74,  90],\\n        [-57, -28],\\n        [ 65,  95],\\n        [ 84, -54],\\n        [ 12, -42],\\n        [ 76,  71],\\n        [-69,  89],\\n        [-16,  64],\\n        [ 57, -49],\\n        [-95, -10],\\n        [ 89,  70],\\n        [ 43, -96],\\n        [ 58, -92],\\n        [ 33, -62],\\n        [ 35, -77],\\n        [ 36,  70],\\n        [-61, -74],\\n        [  8, -39],\\n        [ 54, -53],\\n        [-89, -20],\\n        [-71, -75],\\n        [ 76, -67],\\n        [-65, -12],\\n        [ 71, -33],\\n        [-82,  91],\\n        [-62, -34],\\n        [ 13, -58],\\n        [ 31,  70],\\n        [ 55, -77],\\n        [ -3, -28],\\n        [ 78,  20],\\n        [ 97, -62],\\n        [ 84, -76],\\n        [-49, -62],\\n        [-44,  -1],\\n        [ 76, -40],\\n        [-31, -92],\\n        [ 46, -26],\\n        [-19,   3],\\n        [ 62, -76],\\n        [-49,  81],\\n        [ 88,  58],\\n        [ 24,  -9],\\n        [-35,  99],\\n        [ 18, -10],\\n        [-62, -33],\\n        [ 30, -78],\\n        [ 58,  96],\\n        [ 74,  94],\\n        [ 33, -28],\\n        [ 24, -79],\\n        [-76,   3],\\n        [-67,  61],\\n        [100,  87],\\n        [ 11, -92],\\n        [-77,  72],\\n        [-80, -31],\\n        [-38, -82],\\n        [-31,  80],\\n        [-80,  83],\\n        [-88,  41],\\n        [ 65,  43],\\n        [-18,  26],\\n        [-57,  17],\\n        [-84, -12],\\n        [ 10,  82],\\n        [ 31,  -8],\\n        [-64, -78],\\n        [-86,  -1],\\n        [-57,  55],\\n        [-79, -88],\\n        [ 49,  15],\\n        [-85,  62],\\n        [ 72, -88],\\n        [ 37, -85],\\n        [-34, -93],\\n        [ 48, -45],\\n        [ 43, -40],\\n        [-93, -62],\\n        [ 36, 100],\\n        [-91, -12],\\n        [  6, -18],\\n        [-42, -59],\\n        [-74,   6],\\n        [-18,   0]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011844579130411148, "start": 1738500766.3728223, "stop": 1738500766.374007, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "aea0ea5320aa498bb760f9fb75a994f9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_3.py::test_matrix_of_having_176_integers", "location": ["tests58_90_3.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_3.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012643169611692429, "start": 1738500766.40968, "stop": 1738500766.409807, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "aea0ea5320aa498bb760f9fb75a994f9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
