{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_84_3.py::test_matrix_of_one_integer", "location": ["tests58_84_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_3.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011633150279521942, "start": 1738500760.7030156, "stop": 1738500760.7031324, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c66c5df49c7142ed8a7c97fbfab876bf", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_3.py::test_matrix_of_one_integer", "location": ["tests58_84_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_3.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021956488490104675, "start": 1738500760.703284, "stop": 1738500760.7035038, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c66c5df49c7142ed8a7c97fbfab876bf", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_3.py::test_matrix_of_one_integer", "location": ["tests58_84_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_84_3.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.481500506401062e-05, "start": 1738500760.7037811, "stop": 1738500760.7038565, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "c66c5df49c7142ed8a7c97fbfab876bf", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_3.py::test_matrix_of_having_127_integers", "location": ["tests58_84_3.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_3.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0032892338931560516, "start": 1738500760.7053447, "stop": 1738500760.7086344, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c66c5df49c7142ed8a7c97fbfab876bf", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_3.py::test_matrix_of_having_127_integers", "location": ["tests58_84_3.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_3.py": 1, "Folder_84": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_84/tests58_84_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -56,   27,   70,  -19,  -75,   50,  -91,  -38,  -87,   39,\\n           23,  -90,   -1,   85,   83,   42,  -48,  -17,  -19,  -82,\\n           20,   79,  -34,   50,   21,   16,    4,   74,   83,   86,\\n         -100,   11,   34,  -84,   21,   67,  -56,   77,  -37,   76,\\n           28,   46,  -12,   38,  -95,   78,  -51,  -67,   71,  -49,\\n           33,  -18,  -61,  -16,   78,  -55,   60,   -6,   60,  -26,\\n           45,   -3,  -24,   42,  -69,   59,   24,  -30,   95,  -82,\\n           75,   66,  -84,   77,   45,  -35,  -12,   45,   65,  -76,\\n          -65,  -80,  -63,  -37,   75,  -67,  -64,   55,   25,   51,\\n          -46,  -49,   89,   66,  -57,   19,  -68,  -14,   87,  -40,\\n           71,   38,   30,  -58,   97,  -18,   90,  -82,   72,   68,\\n          -94,  -83,  -33,    4,   32,  -60,  -24,  -77,   35,  -95,\\n           41,  -93,  -68,   14,   47,  -87,  -13]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -56,   27,   70,  -19,  -75,   50,  -91,  -38,  -87,   39,\\n           23,  -90,   -1,   85,   83,   42,  -48,  -17,  -19,  -82,\\n           20,   79,  -34,   50,   21,   16,    4,   74,   83,   86,\\n         -100,   11,   34,  -84,   21,   67,  -56,   77,  -37,   76,\\n           28,   46,  -12,   38,  -95,   78,  -51,  -67,   71,  -49,\\n           33,  -18,  -61,  -16,   78,  -55,   60,   -6,   60,  -26,\\n           45,   -3,  -24,   42,  -69,   59,   24,  -30,   95,  -82,\\n           75,   66,  -84,   77,   45,  -35,  -12,   45,   65,  -76,\\n          -65,  -80,  -63,  -37,   75,  -67,  -64,   55,   25,   51,\\n          -46,  -49,   89,   66,  -57,   19,  -68,  -14,   87,  -40,\\n           71,   38,   30,  -58,   97,  -18,   90,  -82,   72,   68,\\n          -94,  -83,  -33,    4,   32,  -60,  -24,  -77,   35,  -95,\\n           41,  -93,  -68,   14,   47,  -87,  -13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_84/tests58_84_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_127_integers():", "        if 127 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(127 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(127)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -56,   27,   70,  -19,  -75,   50,  -91,  -38,  -87,   39,\\n           23,  -90,   -1,   85,   83,   42,  -48,  -17,  -19,  -82,\\n           20,   79,  -34,   50,   21,   16,    4,   74,   83,   86,\\n         -100,   11,   34,  -84,   21,   67,  -56,   77,  -37,   76,\\n           28,   46,  -12,   38,  -95,   78,  -51,  -67,   71,  -49,\\n           33,  -18,  -61,  -16,   78,  -55,   60,   -6,   60,  -26,\\n           45,   -3,  -24,   42,  -69,   59,   24,  -30,   95,  -82,\\n           75,   66,  -84,   77,   45,  -35,  -12,   45,   65,  -76,\\n          -65,  -80,  -63,  -37,   75,  -67,  -64,   55,   25,   51,\\n          -46,  -49,   89,   66,  -57,   19,  -68,  -14,   87,  -40,\\n           71,   38,   30,  -58,   97,  -18,   90,  -82,   72,   68,\\n          -94,  -83,  -33,    4,   32,  -60,  -24,  -77,   35,  -95,\\n           41,  -93,  -68,   14,   47,  -87,  -13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_84/tests58_84_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_84/tests58_84_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -56,   27,   70,  -19,  -75,   50,  -91,  -38,  -87,   39,\\n           23,  -90,   -1,   85,   83,   42,  -48,  -17,  -19,  -82,\\n           20,   79,  -34,   50,   21,   16,    4,   74,   83,   86,\\n         -100,   11,   34,  -84,   21,   67,  -56,   77,  -37,   76,\\n           28,   46,  -12,   38,  -95,   78,  -51,  -67,   71,  -49,\\n           33,  -18,  -61,  -16,   78,  -55,   60,   -6,   60,  -26,\\n           45,   -3,  -24,   42,  -69,   59,   24,  -30,   95,  -82,\\n           75,   66,  -84,   77,   45,  -35,  -12,   45,   65,  -76,\\n          -65,  -80,  -63,  -37,   75,  -67,  -64,   55,   25,   51,\\n          -46,  -49,   89,   66,  -57,   19,  -68,  -14,   87,  -40,\\n           71,   38,   30,  -58,   97,  -18,   90,  -82,   72,   68,\\n          -94,  -83,  -33,    4,   32,  -60,  -24,  -77,   35,  -95,\\n           41,  -93,  -68,   14,   47,  -87,  -13]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006033293902873993, "start": 1738500760.7087412, "stop": 1738500760.709345, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c66c5df49c7142ed8a7c97fbfab876bf", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_84_3.py::test_matrix_of_having_127_integers", "location": ["tests58_84_3.py", 28, "test_matrix_of_having_127_integers"], "keywords": {"test_matrix_of_having_127_integers": 1, "__wrapped__": 1, "tests58_84_3.py": 1, "Folder_84": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.767711162567139e-05, "start": 1738500760.7415168, "stop": 1738500760.7416153, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "c66c5df49c7142ed8a7c97fbfab876bf", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
