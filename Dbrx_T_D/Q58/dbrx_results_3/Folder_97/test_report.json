{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_97_3.py::test_matrix_of_one_integer", "location": ["tests58_97_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021027959883213043, "start": 1738500772.1094518, "stop": 1738500772.1096628, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "13782ccd300b47eeb20f38ef923777c9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_one_integer", "location": ["tests58_97_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006158249452710152, "start": 1738500772.1098177, "stop": 1738500772.1159763, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "13782ccd300b47eeb20f38ef923777c9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_one_integer", "location": ["tests58_97_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010391604155302048, "start": 1738500772.1163466, "stop": 1738500772.116451, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "13782ccd300b47eeb20f38ef923777c9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_having_120_integers", "location": ["tests58_97_3.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010346435010433197, "start": 1738500772.1177685, "stop": 1738500772.1178725, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "13782ccd300b47eeb20f38ef923777c9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_having_120_integers", "location": ["tests58_97_3.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -25,   95],\\n        [  21,  -12],\\n        [ -59,   92],\\n        [  27,  -66],\\n        [  35,  -13],\\n        [  53,   20],\\n        [  28,  -56],\\n        [  68,  -39],\\n        [ -60,  -76],\\n        [-100,    3],\\n        [ -23,  -22],\\n        [ -56,  -88],\\n        [ -51,   16],\\n        [   2,    2],\\n        [  15,   37],\\n        [ -11,   36],\\n        [  78,   33],\\n        [ -19,  100],\\n        [ -55,  -44],\\n        [ -97,   44],\\n        [  -8,  -31],\\n        [ -90,  -82],\\n        [ -77,   71],\\n        [ -72,   11],\\n        [  28,  -21],\\n        [ -99,  -25],\\n        [ -89,   12],\\n        [  69,   57],\\n        [ -64,  -16],\\n        [  98,   33],\\n        [  61,  -75],\\n        [ -69,  -60],\\n        [  95,   75],\\n        [ -80,  -49],\\n        [ -78,   10],\\n        [  70,   92],\\n        [ -47,  -85],\\n        [  87,  -25],\\n        [  84,    2],\\n        [  25,  -96],\\n        [  84,   16],\\n        [  64,  -31],\\n        [ -20,   -7],\\n        [  56,   22],\\n        [  47,   51],\\n        [ -39,   98],\\n        [ -52,   31],\\n        [  73,  -91],\\n        [ -43,   78],\\n        [ -70,  -24],\\n        [ -98,   27],\\n        [ -43,  -65],\\n        [ -76,   56],\\n        [  60,   67],\\n        [ -94,   59],\\n        [  76,  -92],\\n        [  84,   -5],\\n        [ -53,  -74],\\n        [  85,  -48],\\n        [ -12,    6]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -25,   95],\\n        [  21,  -12],\\n        [ -59,   92],\\n        [  27,  -66],\\n        [  35,  -13],\\n        [  53,   20],\\n        [  28,  -56],\\n        [  68,  -39],\\n        [ -60,  -76],\\n        [-100,    3],\\n        [ -23,  -22],\\n        [ -56,  -88],\\n        [ -51,   16],\\n        [   2,    2],\\n        [  15,   37],\\n        [ -11,   36],\\n        [  78,   33],\\n        [ -19,  100],\\n        [ -55,  -44],\\n        [ -97,   44],\\n        [  -8,  -31],\\n        [ -90,  -82],\\n        [ -77,   71],\\n        [ -72,   11],\\n        [  28,  -21],\\n        [ -99,  -25],\\n        [ -89,   12],\\n        [  69,   57],\\n        [ -64,  -16],\\n        [  98,   33],\\n        [  61,  -75],\\n        [ -69,  -60],\\n        [  95,   75],\\n        [ -80,  -49],\\n        [ -78,   10],\\n        [  70,   92],\\n        [ -47,  -85],\\n        [  87,  -25],\\n        [  84,    2],\\n        [  25,  -96],\\n        [  84,   16],\\n        [  64,  -31],\\n        [ -20,   -7],\\n        [  56,   22],\\n        [  47,   51],\\n        [ -39,   98],\\n        [ -52,   31],\\n        [  73,  -91],\\n        [ -43,   78],\\n        [ -70,  -24],\\n        [ -98,   27],\\n        [ -43,  -65],\\n        [ -76,   56],\\n        [  60,   67],\\n        [ -94,   59],\\n        [  76,  -92],\\n        [  84,   -5],\\n        [ -53,  -74],\\n        [  85,  -48],\\n        [ -12,    6]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_120_integers():", "        if 120 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(120 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(120)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -25,   95],\\n        [  21,  -12],\\n        [ -59,   92],\\n        [  27,  -66],\\n        [  35,  -13],\\n        [  53,   20],\\n        [  28,  -56],\\n        [  68,  -39],\\n        [ -60,  -76],\\n        [-100,    3],\\n        [ -23,  -22],\\n        [ -56,  -88],\\n        [ -51,   16],\\n        [   2,    2],\\n        [  15,   37],\\n        [ -11,   36],\\n        [  78,   33],\\n        [ -19,  100],\\n        [ -55,  -44],\\n        [ -97,   44],\\n        [  -8,  -31],\\n        [ -90,  -82],\\n        [ -77,   71],\\n        [ -72,   11],\\n        [  28,  -21],\\n        [ -99,  -25],\\n        [ -89,   12],\\n        [  69,   57],\\n        [ -64,  -16],\\n        [  98,   33],\\n        [  61,  -75],\\n        [ -69,  -60],\\n        [  95,   75],\\n        [ -80,  -49],\\n        [ -78,   10],\\n        [  70,   92],\\n        [ -47,  -85],\\n        [  87,  -25],\\n        [  84,    2],\\n        [  25,  -96],\\n        [  84,   16],\\n        [  64,  -31],\\n        [ -20,   -7],\\n        [  56,   22],\\n        [  47,   51],\\n        [ -39,   98],\\n        [ -52,   31],\\n        [  73,  -91],\\n        [ -43,   78],\\n        [ -70,  -24],\\n        [ -98,   27],\\n        [ -43,  -65],\\n        [ -76,   56],\\n        [  60,   67],\\n        [ -94,   59],\\n        [  76,  -92],\\n        [  84,   -5],\\n        [ -53,  -74],\\n        [  85,  -48],\\n        [ -12,    6]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_97/tests58_97_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -25,   95],\\n        [  21,  -12],\\n        [ -59,   92],\\n        [  27,  -66],\\n        [  35,  -13],\\n        [  53,   20],\\n        [  28,  -56],\\n        [  68,  -39],\\n        [ -60,  -76],\\n        [-100,    3],\\n        [ -23,  -22],\\n        [ -56,  -88],\\n        [ -51,   16],\\n        [   2,    2],\\n        [  15,   37],\\n        [ -11,   36],\\n        [  78,   33],\\n        [ -19,  100],\\n        [ -55,  -44],\\n        [ -97,   44],\\n        [  -8,  -31],\\n        [ -90,  -82],\\n        [ -77,   71],\\n        [ -72,   11],\\n        [  28,  -21],\\n        [ -99,  -25],\\n        [ -89,   12],\\n        [  69,   57],\\n        [ -64,  -16],\\n        [  98,   33],\\n        [  61,  -75],\\n        [ -69,  -60],\\n        [  95,   75],\\n        [ -80,  -49],\\n        [ -78,   10],\\n        [  70,   92],\\n        [ -47,  -85],\\n        [  87,  -25],\\n        [  84,    2],\\n        [  25,  -96],\\n        [  84,   16],\\n        [  64,  -31],\\n        [ -20,   -7],\\n        [  56,   22],\\n        [  47,   51],\\n        [ -39,   98],\\n        [ -52,   31],\\n        [  73,  -91],\\n        [ -43,   78],\\n        [ -70,  -24],\\n        [ -98,   27],\\n        [ -43,  -65],\\n        [ -76,   56],\\n        [  60,   67],\\n        [ -94,   59],\\n        [  76,  -92],\\n        [  84,   -5],\\n        [ -53,  -74],\\n        [  85,  -48],\\n        [ -12,    6]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.005707209929823875, "start": 1738500772.117987, "stop": 1738500772.1236947, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "13782ccd300b47eeb20f38ef923777c9", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_97_3.py::test_matrix_of_having_120_integers", "location": ["tests58_97_3.py", 28, "test_matrix_of_having_120_integers"], "keywords": {"test_matrix_of_having_120_integers": 1, "__wrapped__": 1, "tests58_97_3.py": 1, "Folder_97": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011514220386743546, "start": 1738500772.1606727, "stop": 1738500772.1607883, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "13782ccd300b47eeb20f38ef923777c9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
