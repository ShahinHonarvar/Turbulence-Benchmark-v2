{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_70_3.py::test_matrix_of_one_integer", "location": ["tests58_70_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_70_3.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001265769824385643, "start": 1738500748.6921113, "stop": 1738500748.6922383, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0ee478761653446ea15ce2d01dc3e04d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_70_3.py::test_matrix_of_one_integer", "location": ["tests58_70_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_70_3.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015334226191043854, "start": 1738500748.692397, "stop": 1738500748.6925507, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0ee478761653446ea15ce2d01dc3e04d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_70_3.py::test_matrix_of_one_integer", "location": ["tests58_70_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_70_3.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.882434874773026e-05, "start": 1738500748.692832, "stop": 1738500748.6929111, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0ee478761653446ea15ce2d01dc3e04d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_70_3.py::test_matrix_of_having_173_integers", "location": ["tests58_70_3.py", 28, "test_matrix_of_having_173_integers"], "keywords": {"test_matrix_of_having_173_integers": 1, "__wrapped__": 1, "tests58_70_3.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.188746869564056e-05, "start": 1738500748.6944456, "stop": 1738500748.6945276, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0ee478761653446ea15ce2d01dc3e04d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_70_3.py::test_matrix_of_having_173_integers", "location": ["tests58_70_3.py", 28, "test_matrix_of_having_173_integers"], "keywords": {"test_matrix_of_having_173_integers": 1, "__wrapped__": 1, "tests58_70_3.py": 1, "Folder_70": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_70/tests58_70_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -4,   22,  -65,  -13,   85,   62,  -53,   61,   29,\\n          -66,  -79,   15,   77,  -76,    1,  -42,  -44,  -46,  -37,\\n           78,   73,   99,  -18,  -94,   22,   20,    2,  -99,  -80,\\n          -23,   87,  -60,   96,   -5,  -71,  -67,  -17,  -10,   -6,\\n          -31,  -76,   82,  -43,  -63,  -98,  -21,   65,   99,    6,\\n          -72,  -13,  -39,  -44,   24,   74,  -93,   30,  -13,  -97,\\n           -7,   17,   93,  -45,   75,  -70,   82,  -30,  -39,   31,\\n           51,  -20,   26,   -7,  -84,  -42,  -46,    3,   21,   -3,\\n          -38,   85,  -26,   15,  -62,   92,  -18,  -63,  -99,  -86,\\n          -15,   68,   68,  -45,  -22,   25,  -30,  -72,   97,  -40,\\n           71,  -41,  -94,   -9,   34,   13,   84,    3,  -15,  -74,\\n          -25,   86,  100,   57,    9,  -80,  -94,  -67,   -2,   72,\\n           54,  -58,   58,  -72,  -36,  -59,   25,   97,   20, -100,\\n           53,   11,  -65,    0,  -26,  -75,  -65,  -87,   97,   82,\\n          -56,  -33,   64,   88,  -95,   36,  -13,   18,  -18,   31,\\n           68,   45,  -39,    5,   76,  -83,   88,  -26,   65,   -6,\\n          -72,   89,   16,  -30,  100,   78,  -60,  -18,   18,   82,\\n          -57,  -59,  -70]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_173_integers():", "        if 173 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(173 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(173)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -4,   22,  -65,  -13,   85,   62,  -53,   61,   29,\\n          -66,  -79,   15,   77,  -76,    1,  -42,  -44,  -46,  -37,\\n           78,   73,   99,  -18,  -94,   22,   20,    2,  -99,  -80,\\n          -23,   87,  -60,   96,   -5,  -71,  -67,  -17,  -10,   -6,\\n          -31,  -76,   82,  -43,  -63,  -98,  -21,   65,   99,    6,\\n          -72,  -13,  -39,  -44,   24,   74,  -93,   30,  -13,  -97,\\n           -7,   17,   93,  -45,   75,  -70,   82,  -30,  -39,   31,\\n           51,  -20,   26,   -7,  -84,  -42,  -46,    3,   21,   -3,\\n          -38,   85,  -26,   15,  -62,   92,  -18,  -63,  -99,  -86,\\n          -15,   68,   68,  -45,  -22,   25,  -30,  -72,   97,  -40,\\n           71,  -41,  -94,   -9,   34,   13,   84,    3,  -15,  -74,\\n          -25,   86,  100,   57,    9,  -80,  -94,  -67,   -2,   72,\\n           54,  -58,   58,  -72,  -36,  -59,   25,   97,   20, -100,\\n           53,   11,  -65,    0,  -26,  -75,  -65,  -87,   97,   82,\\n          -56,  -33,   64,   88,  -95,   36,  -13,   18,  -18,   31,\\n           68,   45,  -39,    5,   76,  -83,   88,  -26,   65,   -6,\\n          -72,   89,   16,  -30,  100,   78,  -60,  -18,   18,   82,\\n          -57,  -59,  -70]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_70/tests58_70_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_173_integers():", "        if 173 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(173 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(173)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -4,   22,  -65,  -13,   85,   62,  -53,   61,   29,\\n          -66,  -79,   15,   77,  -76,    1,  -42,  -44,  -46,  -37,\\n           78,   73,   99,  -18,  -94,   22,   20,    2,  -99,  -80,\\n          -23,   87,  -60,   96,   -5,  -71,  -67,  -17,  -10,   -6,\\n          -31,  -76,   82,  -43,  -63,  -98,  -21,   65,   99,    6,\\n          -72,  -13,  -39,  -44,   24,   74,  -93,   30,  -13,  -97,\\n           -7,   17,   93,  -45,   75,  -70,   82,  -30,  -39,   31,\\n           51,  -20,   26,   -7,  -84,  -42,  -46,    3,   21,   -3,\\n          -38,   85,  -26,   15,  -62,   92,  -18,  -63,  -99,  -86,\\n          -15,   68,   68,  -45,  -22,   25,  -30,  -72,   97,  -40,\\n           71,  -41,  -94,   -9,   34,   13,   84,    3,  -15,  -74,\\n          -25,   86,  100,   57,    9,  -80,  -94,  -67,   -2,   72,\\n           54,  -58,   58,  -72,  -36,  -59,   25,   97,   20, -100,\\n           53,   11,  -65,    0,  -26,  -75,  -65,  -87,   97,   82,\\n          -56,  -33,   64,   88,  -95,   36,  -13,   18,  -18,   31,\\n           68,   45,  -39,    5,   76,  -83,   88,  -26,   65,   -6,\\n          -72,   89,   16,  -30,  100,   78,  -60,  -18,   18,   82,\\n          -57,  -59,  -70]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_70/tests58_70_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_70/tests58_70_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  16,   -4,   22,  -65,  -13,   85,   62,  -53,   61,   29,\\n          -66,  -79,   15,   77,  -76,    1,  -42,  -44,  -46,  -37,\\n           78,   73,   99,  -18,  -94,   22,   20,    2,  -99,  -80,\\n          -23,   87,  -60,   96,   -5,  -71,  -67,  -17,  -10,   -6,\\n          -31,  -76,   82,  -43,  -63,  -98,  -21,   65,   99,    6,\\n          -72,  -13,  -39,  -44,   24,   74,  -93,   30,  -13,  -97,\\n           -7,   17,   93,  -45,   75,  -70,   82,  -30,  -39,   31,\\n           51,  -20,   26,   -7,  -84,  -42,  -46,    3,   21,   -3,\\n          -38,   85,  -26,   15,  -62,   92,  -18,  -63,  -99,  -86,\\n          -15,   68,   68,  -45,  -22,   25,  -30,  -72,   97,  -40,\\n           71,  -41,  -94,   -9,   34,   13,   84,    3,  -15,  -74,\\n          -25,   86,  100,   57,    9,  -80,  -94,  -67,   -2,   72,\\n           54,  -58,   58,  -72,  -36,  -59,   25,   97,   20, -100,\\n           53,   11,  -65,    0,  -26,  -75,  -65,  -87,   97,   82,\\n          -56,  -33,   64,   88,  -95,   36,  -13,   18,  -18,   31,\\n           68,   45,  -39,    5,   76,  -83,   88,  -26,   65,   -6,\\n          -72,   89,   16,  -30,  100,   78,  -60,  -18,   18,   82,\\n          -57,  -59,  -70]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006692903116345406, "start": 1738500748.6946163, "stop": 1738500748.695286, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0ee478761653446ea15ce2d01dc3e04d", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_70_3.py::test_matrix_of_having_173_integers", "location": ["tests58_70_3.py", 28, "test_matrix_of_having_173_integers"], "keywords": {"test_matrix_of_having_173_integers": 1, "__wrapped__": 1, "tests58_70_3.py": 1, "Folder_70": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011745467782020569, "start": 1738500748.7296731, "stop": 1738500748.729791, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0ee478761653446ea15ce2d01dc3e04d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
