{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_62_3.py::test_matrix_of_one_integer", "location": ["tests58_62_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_3.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011205580085515976, "start": 1738500741.9889162, "stop": 1738500741.9890287, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cff28e9c00834b60b66c18acea0f5a65", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_3.py::test_matrix_of_one_integer", "location": ["tests58_62_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_3.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008053062483668327, "start": 1738500741.9892, "stop": 1738500741.990006, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cff28e9c00834b60b66c18acea0f5a65", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_3.py::test_matrix_of_one_integer", "location": ["tests58_62_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_62_3.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.909070700407028e-05, "start": 1738500741.9903424, "stop": 1738500741.9904218, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "cff28e9c00834b60b66c18acea0f5a65", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_3.py::test_matrix_of_having_186_integers", "location": ["tests58_62_3.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_3.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011313054710626602, "start": 1738500741.992079, "stop": 1738500741.9921925, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cff28e9c00834b60b66c18acea0f5a65", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_3.py::test_matrix_of_having_186_integers", "location": ["tests58_62_3.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_3.py": 1, "Folder_62": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_62/tests58_62_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -79,   26],\\n        [ -50,    9],\\n        [  59,    8],\\n        [  32,  -31],\\n        [ -28,   96],\\n        [ -71,    9],\\n        [  16,   54],\\n        [ -56,  -55],\\n        [  96,   22],\\n        [  53,   79],\\n        [  52,   67],\\n        [   7,   69],\\n        [ -48,  -15],\\n        [  64,  -56],\\n        [ -48,   52],\\n        [  34,  -42],\\n        [ -65,  -74],\\n        [  59,   85],\\n        [ -79,  -13],\\n        [  60,   94],\\n        [ -63,  -34],\\n        [  43,   20],\\n        [  26,  -83],\\n        [  55,   95],\\n        [ -70,   16],\\n        [  12,   71],\\n        [ -89,   19],\\n        [ -43,  -23],\\n        [  45,  -78],\\n        [ -61,   68],\\n        [  -7,  -28],\\n        [ -58,   97],\\n        [ -49,  -62],\\n        [ -78,  -72],\\n        [ -43,   59],\\n        [  60,   61],\\n        [  79,   59],\\n        [ -76,   49],\\n        [  33,  -24],\\n        [  94,   48],\\n        [ -66,  -84],\\n        [ -64,   50],\\n        [ -79,  -13],\\n        [  26,   30],\\n        [ -85,  -13],\\n        [  10,   63],\\n        [  48,   89],\\n        [ -78,  -97],\\n        [  32,  -82],\\n        [  18,  -44],\\n        [  32,  -13],\\n        [  45,  -96],\\n        [  30,    4],\\n        [  25,  -83],\\n        [  75,   56],\\n        [   7,   97],\\n        [ -52,  -79],\\n        [ -51,  -29],\\n        [   9,    0],\\n        [  12,  -44],\\n        [  18,   30],\\n        [ -14,  -83],\\n        [  83,  -83],\\n        [ -41,   84],\\n        [  30,   92],\\n        [  30,  -48],\\n        [  67,  -72],\\n        [  90,   -8],\\n        [  -4,  -72],\\n        [  49,    6],\\n        [ -43,  -50],\\n        [ -47,  -48],\\n        [ -80,  -17],\\n        [  69,  -72],\\n        [  -9,   40],\\n        [  52,   26],\\n        [  16,   91],\\n        [ -44,    6],\\n        [  21,   -4],\\n        [  74,   21],\\n        [ -69,   71],\\n        [ -89,   90],\\n        [ -16,   62],\\n        [ -52,    1],\\n        [ -29,  -39],\\n        [ -73,   61],\\n        [  98,   92],\\n        [  34,  -86],\\n        [ -23, -100],\\n        [  85,   71],\\n        [  19,  -14],\\n        [ -82,   47],\\n        [ -27,  -46]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -79,   26],\\n        [ -50,    9],\\n        [  59,    8],\\n        [  32,  -31],\\n        [ -28,   96],\\n        [ -71,    9],\\n        [  16,   54],\\n        [ -56,  -55],\\n        [  96,   22],\\n        [  53,   79],\\n        [  52,   67],\\n        [   7,   69],\\n        [ -48,  -15],\\n        [  64,  -56],\\n        [ -48,   52],\\n        [  34,  -42],\\n        [ -65,  -74],\\n        [  59,   85],\\n        [ -79,  -13],\\n        [  60,   94],\\n        [ -63,  -34],\\n        [  43,   20],\\n        [  26,  -83],\\n        [  55,   95],\\n        [ -70,   16],\\n        [  12,   71],\\n        [ -89,   19],\\n        [ -43,  -23],\\n        [  45,  -78],\\n        [ -61,   68],\\n        [  -7,  -28],\\n        [ -58,   97],\\n        [ -49,  -62],\\n        [ -78,  -72],\\n        [ -43,   59],\\n        [  60,   61],\\n        [  79,   59],\\n        [ -76,   49],\\n        [  33,  -24],\\n        [  94,   48],\\n        [ -66,  -84],\\n        [ -64,   50],\\n        [ -79,  -13],\\n        [  26,   30],\\n        [ -85,  -13],\\n        [  10,   63],\\n        [  48,   89],\\n        [ -78,  -97],\\n        [  32,  -82],\\n        [  18,  -44],\\n        [  32,  -13],\\n        [  45,  -96],\\n        [  30,    4],\\n        [  25,  -83],\\n        [  75,   56],\\n        [   7,   97],\\n        [ -52,  -79],\\n        [ -51,  -29],\\n        [   9,    0],\\n        [  12,  -44],\\n        [  18,   30],\\n        [ -14,  -83],\\n        [  83,  -83],\\n        [ -41,   84],\\n        [  30,   92],\\n        [  30,  -48],\\n        [  67,  -72],\\n        [  90,   -8],\\n        [  -4,  -72],\\n        [  49,    6],\\n        [ -43,  -50],\\n        [ -47,  -48],\\n        [ -80,  -17],\\n        [  69,  -72],\\n        [  -9,   40],\\n        [  52,   26],\\n        [  16,   91],\\n        [ -44,    6],\\n        [  21,   -4],\\n        [  74,   21],\\n        [ -69,   71],\\n        [ -89,   90],\\n        [ -16,   62],\\n        [ -52,    1],\\n        [ -29,  -39],\\n        [ -73,   61],\\n        [  98,   92],\\n        [  34,  -86],\\n        [ -23, -100],\\n        [  85,   71],\\n        [  19,  -14],\\n        [ -82,   47],\\n        [ -27,  -46]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_62/tests58_62_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_186_integers():", "        if 186 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(186 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(186)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -79,   26],\\n        [ -50,    9],\\n        [  59,    8],\\n        [  32,  -31],\\n        [ -28,   96],\\n        [ -71,    9],\\n        [  16,   54],\\n        [ -56,  -55],\\n        [  96,   22],\\n        [  53,   79],\\n        [  52,   67],\\n        [   7,   69],\\n        [ -48,  -15],\\n        [  64,  -56],\\n        [ -48,   52],\\n        [  34,  -42],\\n        [ -65,  -74],\\n        [  59,   85],\\n        [ -79,  -13],\\n        [  60,   94],\\n        [ -63,  -34],\\n        [  43,   20],\\n        [  26,  -83],\\n        [  55,   95],\\n        [ -70,   16],\\n        [  12,   71],\\n        [ -89,   19],\\n        [ -43,  -23],\\n        [  45,  -78],\\n        [ -61,   68],\\n        [  -7,  -28],\\n        [ -58,   97],\\n        [ -49,  -62],\\n        [ -78,  -72],\\n        [ -43,   59],\\n        [  60,   61],\\n        [  79,   59],\\n        [ -76,   49],\\n        [  33,  -24],\\n        [  94,   48],\\n        [ -66,  -84],\\n        [ -64,   50],\\n        [ -79,  -13],\\n        [  26,   30],\\n        [ -85,  -13],\\n        [  10,   63],\\n        [  48,   89],\\n        [ -78,  -97],\\n        [  32,  -82],\\n        [  18,  -44],\\n        [  32,  -13],\\n        [  45,  -96],\\n        [  30,    4],\\n        [  25,  -83],\\n        [  75,   56],\\n        [   7,   97],\\n        [ -52,  -79],\\n        [ -51,  -29],\\n        [   9,    0],\\n        [  12,  -44],\\n        [  18,   30],\\n        [ -14,  -83],\\n        [  83,  -83],\\n        [ -41,   84],\\n        [  30,   92],\\n        [  30,  -48],\\n        [  67,  -72],\\n        [  90,   -8],\\n        [  -4,  -72],\\n        [  49,    6],\\n        [ -43,  -50],\\n        [ -47,  -48],\\n        [ -80,  -17],\\n        [  69,  -72],\\n        [  -9,   40],\\n        [  52,   26],\\n        [  16,   91],\\n        [ -44,    6],\\n        [  21,   -4],\\n        [  74,   21],\\n        [ -69,   71],\\n        [ -89,   90],\\n        [ -16,   62],\\n        [ -52,    1],\\n        [ -29,  -39],\\n        [ -73,   61],\\n        [  98,   92],\\n        [  34,  -86],\\n        [ -23, -100],\\n        [  85,   71],\\n        [  19,  -14],\\n        [ -82,   47],\\n        [ -27,  -46]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_62/tests58_62_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_62/tests58_62_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -79,   26],\\n        [ -50,    9],\\n        [  59,    8],\\n        [  32,  -31],\\n        [ -28,   96],\\n        [ -71,    9],\\n        [  16,   54],\\n        [ -56,  -55],\\n        [  96,   22],\\n        [  53,   79],\\n        [  52,   67],\\n        [   7,   69],\\n        [ -48,  -15],\\n        [  64,  -56],\\n        [ -48,   52],\\n        [  34,  -42],\\n        [ -65,  -74],\\n        [  59,   85],\\n        [ -79,  -13],\\n        [  60,   94],\\n        [ -63,  -34],\\n        [  43,   20],\\n        [  26,  -83],\\n        [  55,   95],\\n        [ -70,   16],\\n        [  12,   71],\\n        [ -89,   19],\\n        [ -43,  -23],\\n        [  45,  -78],\\n        [ -61,   68],\\n        [  -7,  -28],\\n        [ -58,   97],\\n        [ -49,  -62],\\n        [ -78,  -72],\\n        [ -43,   59],\\n        [  60,   61],\\n        [  79,   59],\\n        [ -76,   49],\\n        [  33,  -24],\\n        [  94,   48],\\n        [ -66,  -84],\\n        [ -64,   50],\\n        [ -79,  -13],\\n        [  26,   30],\\n        [ -85,  -13],\\n        [  10,   63],\\n        [  48,   89],\\n        [ -78,  -97],\\n        [  32,  -82],\\n        [  18,  -44],\\n        [  32,  -13],\\n        [  45,  -96],\\n        [  30,    4],\\n        [  25,  -83],\\n        [  75,   56],\\n        [   7,   97],\\n        [ -52,  -79],\\n        [ -51,  -29],\\n        [   9,    0],\\n        [  12,  -44],\\n        [  18,   30],\\n        [ -14,  -83],\\n        [  83,  -83],\\n        [ -41,   84],\\n        [  30,   92],\\n        [  30,  -48],\\n        [  67,  -72],\\n        [  90,   -8],\\n        [  -4,  -72],\\n        [  49,    6],\\n        [ -43,  -50],\\n        [ -47,  -48],\\n        [ -80,  -17],\\n        [  69,  -72],\\n        [  -9,   40],\\n        [  52,   26],\\n        [  16,   91],\\n        [ -44,    6],\\n        [  21,   -4],\\n        [  74,   21],\\n        [ -69,   71],\\n        [ -89,   90],\\n        [ -16,   62],\\n        [ -52,    1],\\n        [ -29,  -39],\\n        [ -73,   61],\\n        [  98,   92],\\n        [  34,  -86],\\n        [ -23, -100],\\n        [  85,   71],\\n        [  19,  -14],\\n        [ -82,   47],\\n        [ -27,  -46]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009243078529834747, "start": 1738500741.9923897, "stop": 1738500741.9933145, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cff28e9c00834b60b66c18acea0f5a65", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_62_3.py::test_matrix_of_having_186_integers", "location": ["tests58_62_3.py", 28, "test_matrix_of_having_186_integers"], "keywords": {"test_matrix_of_having_186_integers": 1, "__wrapped__": 1, "tests58_62_3.py": 1, "Folder_62": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.370781481266022e-05, "start": 1738500742.012559, "stop": 1738500742.012653, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "cff28e9c00834b60b66c18acea0f5a65", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
