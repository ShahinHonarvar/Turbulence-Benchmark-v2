{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_3.py::test_matrix_of_one_integer", "location": ["tests58_80_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_3.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011909287422895432, "start": 1738500757.5881073, "stop": 1738500757.588227, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dcd94b8a42094d71933ab659eeb97958", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_3.py::test_matrix_of_one_integer", "location": ["tests58_80_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_3.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00030936766415834427, "start": 1738500757.5883834, "stop": 1738500757.5886931, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dcd94b8a42094d71933ab659eeb97958", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_3.py::test_matrix_of_one_integer", "location": ["tests58_80_3.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_3.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.11619684100151e-05, "start": 1738500757.5906384, "stop": 1738500757.59072, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "dcd94b8a42094d71933ab659eeb97958", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_3.py::test_matrix_of_having_180_integers", "location": ["tests58_80_3.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_3.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011929124593734741, "start": 1738500757.591358, "stop": 1738500757.5914774, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dcd94b8a42094d71933ab659eeb97958", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_3.py::test_matrix_of_having_180_integers", "location": ["tests58_80_3.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_3.py": 1, "Folder_80": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_80/tests58_80_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  15,   73],\\n        [ -59,  -50],\\n        [ -19,  -81],\\n        [  49,   11],\\n        [ -81,  -68],\\n        [  65,  -33],\\n        [-100,   67],\\n        [  86,   33],\\n        [  -1,   44],\\n        [ -62,  -88],\\n        [ -95,   25],\\n        [   6,  -86],\\n        [   0,    3],\\n        [  -2,  -30],\\n        [  11,   45],\\n        [   3,  -65],\\n        [  78,   56],\\n        [  73,   78],\\n        [  34,  -59],\\n        [ -88,  -54],\\n        [  74,   29],\\n        [   5,   24],\\n        [  41,   59],\\n        [  83,   53],\\n        [   2,  -33],\\n        [  11,   55],\\n        [  15,  -48],\\n        [  94,   96],\\n        [ -54,   46],\\n        [ -64,  -62],\\n        [  67,   73],\\n        [  71,   42],\\n        [  31,   44],\\n        [  14,  -22],\\n        [ -51,  -85],\\n        [ -41,   54],\\n        [ -21,   44],\\n        [ -27,  -68],\\n        [  -8,   59],\\n        [  51,  -35],\\n        [ -11,   31],\\n        [ -76,   11],\\n        [  64,  -36],\\n        [ -52,  -43],\\n        [  27,   96],\\n        [ -64,   47],\\n        [ -52,   71],\\n        [  67,  -25],\\n        [-100,   69],\\n        [  83,  -38],\\n        [ -68,   81],\\n        [  58,  -53],\\n        [  -7,  -83],\\n        [  -8,  -39],\\n        [  29,  -45],\\n        [ -34,  -17],\\n        [  30,  -23],\\n        [  64,   81],\\n        [ -97,   72],\\n        [   9,   49],\\n        [  80,  -25],\\n        [ -42,    0],\\n        [  55,    3],\\n        [  47,  -51],\\n        [  53,  -93],\\n        [  25,  -21],\\n        [  86,   89],\\n        [ -78,  -71],\\n        [ -74,   68],\\n        [  48,    2],\\n        [  75,   -4],\\n        [  -9,  -67],\\n        [  50,  -59],\\n        [ -33,  -69],\\n        [  61,    1],\\n        [ -16,   58],\\n        [ -82,  -98],\\n        [   4,  -63],\\n        [  88, -100],\\n        [ -16,  -82],\\n        [   0,  -10],\\n        [  97,   16],\\n        [ -92,  -83],\\n        [  38,  -53],\\n        [ -98,   47],\\n        [ -56,  -23],\\n        [ -66,  -66],\\n        [  53,  -59],\\n        [ 100,   62],\\n        [  77,   34]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  15,   73],\\n        [ -59,  -50],\\n        [ -19,  -81],\\n        [  49,   11],\\n        [ -81,  -68],\\n        [  65,  -33],\\n        [-100,   67],\\n        [  86,   33],\\n        [  -1,   44],\\n        [ -62,  -88],\\n        [ -95,   25],\\n        [   6,  -86],\\n        [   0,    3],\\n        [  -2,  -30],\\n        [  11,   45],\\n        [   3,  -65],\\n        [  78,   56],\\n        [  73,   78],\\n        [  34,  -59],\\n        [ -88,  -54],\\n        [  74,   29],\\n        [   5,   24],\\n        [  41,   59],\\n        [  83,   53],\\n        [   2,  -33],\\n        [  11,   55],\\n        [  15,  -48],\\n        [  94,   96],\\n        [ -54,   46],\\n        [ -64,  -62],\\n        [  67,   73],\\n        [  71,   42],\\n        [  31,   44],\\n        [  14,  -22],\\n        [ -51,  -85],\\n        [ -41,   54],\\n        [ -21,   44],\\n        [ -27,  -68],\\n        [  -8,   59],\\n        [  51,  -35],\\n        [ -11,   31],\\n        [ -76,   11],\\n        [  64,  -36],\\n        [ -52,  -43],\\n        [  27,   96],\\n        [ -64,   47],\\n        [ -52,   71],\\n        [  67,  -25],\\n        [-100,   69],\\n        [  83,  -38],\\n        [ -68,   81],\\n        [  58,  -53],\\n        [  -7,  -83],\\n        [  -8,  -39],\\n        [  29,  -45],\\n        [ -34,  -17],\\n        [  30,  -23],\\n        [  64,   81],\\n        [ -97,   72],\\n        [   9,   49],\\n        [  80,  -25],\\n        [ -42,    0],\\n        [  55,    3],\\n        [  47,  -51],\\n        [  53,  -93],\\n        [  25,  -21],\\n        [  86,   89],\\n        [ -78,  -71],\\n        [ -74,   68],\\n        [  48,    2],\\n        [  75,   -4],\\n        [  -9,  -67],\\n        [  50,  -59],\\n        [ -33,  -69],\\n        [  61,    1],\\n        [ -16,   58],\\n        [ -82,  -98],\\n        [   4,  -63],\\n        [  88, -100],\\n        [ -16,  -82],\\n        [   0,  -10],\\n        [  97,   16],\\n        [ -92,  -83],\\n        [  38,  -53],\\n        [ -98,   47],\\n        [ -56,  -23],\\n        [ -66,  -66],\\n        [  53,  -59],\\n        [ 100,   62],\\n        [  77,   34]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_80/tests58_80_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  15,   73],\\n        [ -59,  -50],\\n        [ -19,  -81],\\n        [  49,   11],\\n        [ -81,  -68],\\n        [  65,  -33],\\n        [-100,   67],\\n        [  86,   33],\\n        [  -1,   44],\\n        [ -62,  -88],\\n        [ -95,   25],\\n        [   6,  -86],\\n        [   0,    3],\\n        [  -2,  -30],\\n        [  11,   45],\\n        [   3,  -65],\\n        [  78,   56],\\n        [  73,   78],\\n        [  34,  -59],\\n        [ -88,  -54],\\n        [  74,   29],\\n        [   5,   24],\\n        [  41,   59],\\n        [  83,   53],\\n        [   2,  -33],\\n        [  11,   55],\\n        [  15,  -48],\\n        [  94,   96],\\n        [ -54,   46],\\n        [ -64,  -62],\\n        [  67,   73],\\n        [  71,   42],\\n        [  31,   44],\\n        [  14,  -22],\\n        [ -51,  -85],\\n        [ -41,   54],\\n        [ -21,   44],\\n        [ -27,  -68],\\n        [  -8,   59],\\n        [  51,  -35],\\n        [ -11,   31],\\n        [ -76,   11],\\n        [  64,  -36],\\n        [ -52,  -43],\\n        [  27,   96],\\n        [ -64,   47],\\n        [ -52,   71],\\n        [  67,  -25],\\n        [-100,   69],\\n        [  83,  -38],\\n        [ -68,   81],\\n        [  58,  -53],\\n        [  -7,  -83],\\n        [  -8,  -39],\\n        [  29,  -45],\\n        [ -34,  -17],\\n        [  30,  -23],\\n        [  64,   81],\\n        [ -97,   72],\\n        [   9,   49],\\n        [  80,  -25],\\n        [ -42,    0],\\n        [  55,    3],\\n        [  47,  -51],\\n        [  53,  -93],\\n        [  25,  -21],\\n        [  86,   89],\\n        [ -78,  -71],\\n        [ -74,   68],\\n        [  48,    2],\\n        [  75,   -4],\\n        [  -9,  -67],\\n        [  50,  -59],\\n        [ -33,  -69],\\n        [  61,    1],\\n        [ -16,   58],\\n        [ -82,  -98],\\n        [   4,  -63],\\n        [  88, -100],\\n        [ -16,  -82],\\n        [   0,  -10],\\n        [  97,   16],\\n        [ -92,  -83],\\n        [  38,  -53],\\n        [ -98,   47],\\n        [ -56,  -23],\\n        [ -66,  -66],\\n        [  53,  -59],\\n        [ 100,   62],\\n        [  77,   34]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_3/Folder_80/tests58_80_3.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_3/Folder_80/tests58_80_3.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  15,   73],\\n        [ -59,  -50],\\n        [ -19,  -81],\\n        [  49,   11],\\n        [ -81,  -68],\\n        [  65,  -33],\\n        [-100,   67],\\n        [  86,   33],\\n        [  -1,   44],\\n        [ -62,  -88],\\n        [ -95,   25],\\n        [   6,  -86],\\n        [   0,    3],\\n        [  -2,  -30],\\n        [  11,   45],\\n        [   3,  -65],\\n        [  78,   56],\\n        [  73,   78],\\n        [  34,  -59],\\n        [ -88,  -54],\\n        [  74,   29],\\n        [   5,   24],\\n        [  41,   59],\\n        [  83,   53],\\n        [   2,  -33],\\n        [  11,   55],\\n        [  15,  -48],\\n        [  94,   96],\\n        [ -54,   46],\\n        [ -64,  -62],\\n        [  67,   73],\\n        [  71,   42],\\n        [  31,   44],\\n        [  14,  -22],\\n        [ -51,  -85],\\n        [ -41,   54],\\n        [ -21,   44],\\n        [ -27,  -68],\\n        [  -8,   59],\\n        [  51,  -35],\\n        [ -11,   31],\\n        [ -76,   11],\\n        [  64,  -36],\\n        [ -52,  -43],\\n        [  27,   96],\\n        [ -64,   47],\\n        [ -52,   71],\\n        [  67,  -25],\\n        [-100,   69],\\n        [  83,  -38],\\n        [ -68,   81],\\n        [  58,  -53],\\n        [  -7,  -83],\\n        [  -8,  -39],\\n        [  29,  -45],\\n        [ -34,  -17],\\n        [  30,  -23],\\n        [  64,   81],\\n        [ -97,   72],\\n        [   9,   49],\\n        [  80,  -25],\\n        [ -42,    0],\\n        [  55,    3],\\n        [  47,  -51],\\n        [  53,  -93],\\n        [  25,  -21],\\n        [  86,   89],\\n        [ -78,  -71],\\n        [ -74,   68],\\n        [  48,    2],\\n        [  75,   -4],\\n        [  -9,  -67],\\n        [  50,  -59],\\n        [ -33,  -69],\\n        [  61,    1],\\n        [ -16,   58],\\n        [ -82,  -98],\\n        [   4,  -63],\\n        [  88, -100],\\n        [ -16,  -82],\\n        [   0,  -10],\\n        [  97,   16],\\n        [ -92,  -83],\\n        [  38,  -53],\\n        [ -98,   47],\\n        [ -56,  -23],\\n        [ -66,  -66],\\n        [  53,  -59],\\n        [ 100,   62],\\n        [  77,   34]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.004123813472688198, "start": 1738500757.5915706, "stop": 1738500757.5956948, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dcd94b8a42094d71933ab659eeb97958", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_3.py::test_matrix_of_having_180_integers", "location": ["tests58_80_3.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_3.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.102079689502716e-05, "start": 1738500757.6256695, "stop": 1738500757.6257408, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "dcd94b8a42094d71933ab659eeb97958", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
