{
  "parameter(s)": [
    185
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.0004
  ],
  "test_matrix_of_having_185_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-32,  67,  99,  77,  37,  41,  62, -20, -93,  85,   4, -59, -23,\\n         -26,  14,  66, -71, -89,  -9,  42, -32,   1,  95, -25, -19,  91,\\n         -82,  85,  61, -22, -84,  75,  85, -28,   2,  83, -45, -64,  51,\\n         -21,  29,  92,  29, -99, -42,   2,  90, -92,  68,  60,  13, -58,\\n         -81,  16,  16,  42,  91,  12, -39, -85,  92, -73, -95,  37, -16,\\n          41, -48,  50, -65,  32, -35,  71,  69,  38, -67, -35,  61,  53,\\n          34,  34,  25, -37,  59, -31, -43,  -7, -58,  28, -37, -52,  20,\\n         -42, -29,  45,  -8, -21, 100,  46,  15, -14,   2,  30,  25,  91,\\n         -30,  33,  59,  63, -18, -60,  46,  27, -47,   4,  22,  37,  99,\\n         -90, -63, -70, -70, -80,   2,  47,  73,  12, -60, -91, 100, -23,\\n         -16,  65, -72, -67,  19,  48,  61,  55, -37, -89, -33,  45,   0,\\n          42,  -8, -71,  -5,   5,  60, -31, -92,  51, -65,  99, -45,  74,\\n          97,   6,  33, -53, -50,  -9, -48,  50, -30,  -6,  79,  74, -87,\\n         -70,  45,  35,  87, -84,  22, -94, -85,  58, -95, -85,  48,  62,\\n          -5, -84,  36]]))",
    0.00071
  ]
}