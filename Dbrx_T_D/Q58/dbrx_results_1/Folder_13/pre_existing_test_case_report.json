{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00052
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-35,  21,  47, -28,  -7,  45, -83,  69,  83,  97,  21, -66,  94,\\n          66, -19, -20, -60,  44, -83, -76, -47, -87, -18, -12,  -5, -83,\\n         100,  10, -51,  73, -25, -87, -40, -84, -19,  92,  27,  33,  16,\\n          13,  57, -55,  78,  60,  87, -54, -24,   2,  43, -41,  20, -21,\\n           7,  19, -27,  39,  23,  80, -57,  -4,  67,  47, -95,  68,  57,\\n         -83, -85, -12,  59, -14, -60,  45, -27, -78,  -6,  -8, -85,   5,\\n          12,  51,  57,  -3,  81, -16,  38,  17,  24, -44,  52,  -8, -13,\\n          83,  86, -88,  12, -10, -46,  69, -92,  71, -24, -93,  19,  55,\\n          -7,  67,  88,  46, -56, -56, -30,  78,  -4, -93, -22,  88, -65,\\n          58,  95, -67,  -9,  78, -79,  83,  30,  26, -10,  26,  53,   8,\\n         -31,  -2,  -6, -22, -88, -83,  18,  78, -77, -60, -64,  97,   3,\\n          58,  66,  64, -82,  55,  93,  24, -34,  52,  27, -88,  48, -88,\\n           6, -83,  78,  53, -99,  60, -89, -57,  63,  41, -74, -35, -20,\\n          15, -81,  68,  99, -68, -46]]))",
    0.00091
  ]
}