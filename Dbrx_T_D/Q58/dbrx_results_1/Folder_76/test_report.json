{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_76_1.py::test_matrix_of_one_integer", "location": ["tests58_76_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000400325283408165, "start": 1738500580.5193033, "stop": 1738500580.5197043, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ebfacc68e59b4e2d9b3b393cece82f8b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_1.py::test_matrix_of_one_integer", "location": ["tests58_76_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00041682180017232895, "start": 1738500580.5199716, "stop": 1738500580.5203886, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ebfacc68e59b4e2d9b3b393cece82f8b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_1.py::test_matrix_of_one_integer", "location": ["tests58_76_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.67270103096962e-05, "start": 1738500580.5206842, "stop": 1738500580.5207613, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "ebfacc68e59b4e2d9b3b393cece82f8b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_1.py::test_matrix_of_having_159_integers", "location": ["tests58_76_1.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024893414229154587, "start": 1738500580.5218477, "stop": 1738500580.522097, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ebfacc68e59b4e2d9b3b393cece82f8b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_1.py::test_matrix_of_having_159_integers", "location": ["tests58_76_1.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_76/tests58_76_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-62,  28,  95,  63,  51, -16,  99, -34,  58, -59, -20, -59,  44,\\n         -47,  84,   6, -91, -97,  -2, -65, -25,  41, -24, -78, -74, -85,\\n          89, -89, -34,  49,   3, -55, -34, -39,  18,  37, -80,  78,  60,\\n         -71, -72,  54,   5,  74, -70,  34, -97, -37,  35, -54, -51,  51,\\n          79,  35,  82, -68,  53,  50, -84,  -7,   1, -96, -36, -13, -31,\\n         -34,  73, -55,  20,  47,  69, 100, -65,  51, -96, -12,  65, -81,\\n           6,   4,  10, 100, -95,  -4, -81, -83, -17, -79, -43,  16,   4,\\n         -88,  93, -76,  22,  73,  77,   2, -24,  99, -84,  -7,   1, -17,\\n          43,   8,  11,  47, -12, -55, -33, -37,  96,  13,  42, -61,  52,\\n          33,  -6,  61, -57,  91,  11, -18,  62,  36, -88,  10,  79, -64,\\n         -56,   8,  87,  36,  31, -23,  44,  -2, -77, -22,  84,  79,  10,\\n         -78, -69,  94,  85, -69,  43,  64,  89, -94,   1,  76,  39,  32,\\n          52,  30,  56]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-62,  28,  95,  63,  51, -16,  99, -34,  58, -59, -20, -59,  44,\\n         -47,  84,   6, -91, -97,  -2, -65, -25,  41, -24, -78, -74, -85,\\n          89, -89, -34,  49,   3, -55, -34, -39,  18,  37, -80,  78,  60,\\n         -71, -72,  54,   5,  74, -70,  34, -97, -37,  35, -54, -51,  51,\\n          79,  35,  82, -68,  53,  50, -84,  -7,   1, -96, -36, -13, -31,\\n         -34,  73, -55,  20,  47,  69, 100, -65,  51, -96, -12,  65, -81,\\n           6,   4,  10, 100, -95,  -4, -81, -83, -17, -79, -43,  16,   4,\\n         -88,  93, -76,  22,  73,  77,   2, -24,  99, -84,  -7,   1, -17,\\n          43,   8,  11,  47, -12, -55, -33, -37,  96,  13,  42, -61,  52,\\n          33,  -6,  61, -57,  91,  11, -18,  62,  36, -88,  10,  79, -64,\\n         -56,   8,  87,  36,  31, -23,  44,  -2, -77, -22,  84,  79,  10,\\n         -78, -69,  94,  85, -69,  43,  64,  89, -94,   1,  76,  39,  32,\\n          52,  30,  56]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_76/tests58_76_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_159_integers():", "        if 159 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(159 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(159)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-62,  28,  95,  63,  51, -16,  99, -34,  58, -59, -20, -59,  44,\\n         -47,  84,   6, -91, -97,  -2, -65, -25,  41, -24, -78, -74, -85,\\n          89, -89, -34,  49,   3, -55, -34, -39,  18,  37, -80,  78,  60,\\n         -71, -72,  54,   5,  74, -70,  34, -97, -37,  35, -54, -51,  51,\\n          79,  35,  82, -68,  53,  50, -84,  -7,   1, -96, -36, -13, -31,\\n         -34,  73, -55,  20,  47,  69, 100, -65,  51, -96, -12,  65, -81,\\n           6,   4,  10, 100, -95,  -4, -81, -83, -17, -79, -43,  16,   4,\\n         -88,  93, -76,  22,  73,  77,   2, -24,  99, -84,  -7,   1, -17,\\n          43,   8,  11,  47, -12, -55, -33, -37,  96,  13,  42, -61,  52,\\n          33,  -6,  61, -57,  91,  11, -18,  62,  36, -88,  10,  79, -64,\\n         -56,   8,  87,  36,  31, -23,  44,  -2, -77, -22,  84,  79,  10,\\n         -78, -69,  94,  85, -69,  43,  64,  89, -94,   1,  76,  39,  32,\\n          52,  30,  56]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_76/tests58_76_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_76/tests58_76_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-62,  28,  95,  63,  51, -16,  99, -34,  58, -59, -20, -59,  44,\\n         -47,  84,   6, -91, -97,  -2, -65, -25,  41, -24, -78, -74, -85,\\n          89, -89, -34,  49,   3, -55, -34, -39,  18,  37, -80,  78,  60,\\n         -71, -72,  54,   5,  74, -70,  34, -97, -37,  35, -54, -51,  51,\\n          79,  35,  82, -68,  53,  50, -84,  -7,   1, -96, -36, -13, -31,\\n         -34,  73, -55,  20,  47,  69, 100, -65,  51, -96, -12,  65, -81,\\n           6,   4,  10, 100, -95,  -4, -81, -83, -17, -79, -43,  16,   4,\\n         -88,  93, -76,  22,  73,  77,   2, -24,  99, -84,  -7,   1, -17,\\n          43,   8,  11,  47, -12, -55, -33, -37,  96,  13,  42, -61,  52,\\n          33,  -6,  61, -57,  91,  11, -18,  62,  36, -88,  10,  79, -64,\\n         -56,   8,  87,  36,  31, -23,  44,  -2, -77, -22,  84,  79,  10,\\n         -78, -69,  94,  85, -69,  43,  64,  89, -94,   1,  76,  39,  32,\\n          52,  30,  56]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0008773030713200569, "start": 1738500580.5222013, "stop": 1738500580.523079, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ebfacc68e59b4e2d9b3b393cece82f8b", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_76_1.py::test_matrix_of_having_159_integers", "location": ["tests58_76_1.py", 28, "test_matrix_of_having_159_integers"], "keywords": {"test_matrix_of_having_159_integers": 1, "__wrapped__": 1, "tests58_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.08244401216507e-05, "start": 1738500580.5398874, "stop": 1738500580.5399785, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "ebfacc68e59b4e2d9b3b393cece82f8b", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
