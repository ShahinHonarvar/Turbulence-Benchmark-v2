{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_80_1.py::test_matrix_of_one_integer", "location": ["tests58_80_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010965019464492798, "start": 1738500584.2472503, "stop": 1738500584.2473605, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "44e4f68acca84e66b66c8571187633a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_one_integer", "location": ["tests58_80_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013482850044965744, "start": 1738500584.24751, "stop": 1738500584.2476451, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "44e4f68acca84e66b66c8571187633a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_one_integer", "location": ["tests58_80_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.908178329467773e-05, "start": 1738500584.2479157, "stop": 1738500584.2479851, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "44e4f68acca84e66b66c8571187633a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_having_180_integers", "location": ["tests58_80_1.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.801782339811325e-05, "start": 1738500584.2508984, "stop": 1738500584.2509768, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "44e4f68acca84e66b66c8571187633a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_having_180_integers", "location": ["tests58_80_1.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  39, -100],\\n        [ 100,   79],\\n        [  82,   60],\\n        [  93,  -50],\\n        [  90,  -23],\\n        [  41,  -20],\\n        [  91,  -41],\\n        [   5,  -29],\\n        [  57,   -3],\\n        [  31,   30],\\n        [ -74,  -35],\\n        [ -80,   42],\\n        [  95,  -53],\\n        [  51,   66],\\n        [  56,  -87],\\n        [ -68,    4],\\n        [  -7,    6],\\n        [  71,   54],\\n        [  25,   64],\\n        [  67,  -67],\\n        [  66,  -42],\\n        [ -18,  -95],\\n        [  12,   89],\\n        [ -57,  -20],\\n        [  47,   59],\\n        [  28,  -18],\\n        [  12,   51],\\n        [  80,   20],\\n        [ -30,  -56],\\n        [ -14,  -92],\\n        [  55,   90],\\n        [  12,   19],\\n        [  44,   40],\\n        [  71,  -73],\\n        [  32,   -3],\\n        [ -55,  -70],\\n        [ -65,   77],\\n        [ -93,  -29],\\n        [  24,   61],\\n        [ -18,   41],\\n        [  50,  -57],\\n        [ -12,  -62],\\n        [ -68,  -28],\\n        [ -50,  100],\\n        [ -34,   81],\\n        [  64,  -40],\\n        [ -37,   55],\\n        [  24,  -33],\\n        [  22,  -20],\\n        [  20,  -25],\\n        [ -52,   71],\\n        [  20,   60],\\n        [ -11,   59],\\n        [ -12,   16],\\n        [  80,   10],\\n        [   3,   83],\\n        [ -25,   49],\\n        [  32,  -67],\\n        [  -5,   55],\\n        [   2,   29],\\n        [ -63,  -21],\\n        [ -10,  -18],\\n        [ -39,  -41],\\n        [ -37,   78],\\n        [ -17,  -97],\\n        [ -81,  -30],\\n        [ -35,   71],\\n        [  52,   81],\\n        [  92,  -32],\\n        [ -67,  -99],\\n        [  -3,  -32],\\n        [  20,   85],\\n        [ -73,    7],\\n        [ -62,   29],\\n        [ -78,   78],\\n        [ -95,   70],\\n        [  26,   23],\\n        [ -79,  -28],\\n        [   9,  -72],\\n        [-100,  -43],\\n        [  83,   85],\\n        [  22,   83],\\n        [ -76,  -58],\\n        [  60,   41],\\n        [ -13,   81],\\n        [ -93,   25],\\n        [ -96,   69],\\n        [  40,  -65],\\n        [ -46,  -94],\\n        [ -53,  -34]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  39, -100],\\n        [ 100,   79],\\n        [  82,   60],\\n        [  93,  -50],\\n        [  90,  -23],\\n        [  41,  -20],\\n        [  91,  -41],\\n        [   5,  -29],\\n        [  57,   -3],\\n        [  31,   30],\\n        [ -74,  -35],\\n        [ -80,   42],\\n        [  95,  -53],\\n        [  51,   66],\\n        [  56,  -87],\\n        [ -68,    4],\\n        [  -7,    6],\\n        [  71,   54],\\n        [  25,   64],\\n        [  67,  -67],\\n        [  66,  -42],\\n        [ -18,  -95],\\n        [  12,   89],\\n        [ -57,  -20],\\n        [  47,   59],\\n        [  28,  -18],\\n        [  12,   51],\\n        [  80,   20],\\n        [ -30,  -56],\\n        [ -14,  -92],\\n        [  55,   90],\\n        [  12,   19],\\n        [  44,   40],\\n        [  71,  -73],\\n        [  32,   -3],\\n        [ -55,  -70],\\n        [ -65,   77],\\n        [ -93,  -29],\\n        [  24,   61],\\n        [ -18,   41],\\n        [  50,  -57],\\n        [ -12,  -62],\\n        [ -68,  -28],\\n        [ -50,  100],\\n        [ -34,   81],\\n        [  64,  -40],\\n        [ -37,   55],\\n        [  24,  -33],\\n        [  22,  -20],\\n        [  20,  -25],\\n        [ -52,   71],\\n        [  20,   60],\\n        [ -11,   59],\\n        [ -12,   16],\\n        [  80,   10],\\n        [   3,   83],\\n        [ -25,   49],\\n        [  32,  -67],\\n        [  -5,   55],\\n        [   2,   29],\\n        [ -63,  -21],\\n        [ -10,  -18],\\n        [ -39,  -41],\\n        [ -37,   78],\\n        [ -17,  -97],\\n        [ -81,  -30],\\n        [ -35,   71],\\n        [  52,   81],\\n        [  92,  -32],\\n        [ -67,  -99],\\n        [  -3,  -32],\\n        [  20,   85],\\n        [ -73,    7],\\n        [ -62,   29],\\n        [ -78,   78],\\n        [ -95,   70],\\n        [  26,   23],\\n        [ -79,  -28],\\n        [   9,  -72],\\n        [-100,  -43],\\n        [  83,   85],\\n        [  22,   83],\\n        [ -76,  -58],\\n        [  60,   41],\\n        [ -13,   81],\\n        [ -93,   25],\\n        [ -96,   69],\\n        [  40,  -65],\\n        [ -46,  -94],\\n        [ -53,  -34]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_180_integers():", "        if 180 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(180 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(180)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  39, -100],\\n        [ 100,   79],\\n        [  82,   60],\\n        [  93,  -50],\\n        [  90,  -23],\\n        [  41,  -20],\\n        [  91,  -41],\\n        [   5,  -29],\\n        [  57,   -3],\\n        [  31,   30],\\n        [ -74,  -35],\\n        [ -80,   42],\\n        [  95,  -53],\\n        [  51,   66],\\n        [  56,  -87],\\n        [ -68,    4],\\n        [  -7,    6],\\n        [  71,   54],\\n        [  25,   64],\\n        [  67,  -67],\\n        [  66,  -42],\\n        [ -18,  -95],\\n        [  12,   89],\\n        [ -57,  -20],\\n        [  47,   59],\\n        [  28,  -18],\\n        [  12,   51],\\n        [  80,   20],\\n        [ -30,  -56],\\n        [ -14,  -92],\\n        [  55,   90],\\n        [  12,   19],\\n        [  44,   40],\\n        [  71,  -73],\\n        [  32,   -3],\\n        [ -55,  -70],\\n        [ -65,   77],\\n        [ -93,  -29],\\n        [  24,   61],\\n        [ -18,   41],\\n        [  50,  -57],\\n        [ -12,  -62],\\n        [ -68,  -28],\\n        [ -50,  100],\\n        [ -34,   81],\\n        [  64,  -40],\\n        [ -37,   55],\\n        [  24,  -33],\\n        [  22,  -20],\\n        [  20,  -25],\\n        [ -52,   71],\\n        [  20,   60],\\n        [ -11,   59],\\n        [ -12,   16],\\n        [  80,   10],\\n        [   3,   83],\\n        [ -25,   49],\\n        [  32,  -67],\\n        [  -5,   55],\\n        [   2,   29],\\n        [ -63,  -21],\\n        [ -10,  -18],\\n        [ -39,  -41],\\n        [ -37,   78],\\n        [ -17,  -97],\\n        [ -81,  -30],\\n        [ -35,   71],\\n        [  52,   81],\\n        [  92,  -32],\\n        [ -67,  -99],\\n        [  -3,  -32],\\n        [  20,   85],\\n        [ -73,    7],\\n        [ -62,   29],\\n        [ -78,   78],\\n        [ -95,   70],\\n        [  26,   23],\\n        [ -79,  -28],\\n        [   9,  -72],\\n        [-100,  -43],\\n        [  83,   85],\\n        [  22,   83],\\n        [ -76,  -58],\\n        [  60,   41],\\n        [ -13,   81],\\n        [ -93,   25],\\n        [ -96,   69],\\n        [  40,  -65],\\n        [ -46,  -94],\\n        [ -53,  -34]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_80/tests58_80_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  39, -100],\\n        [ 100,   79],\\n        [  82,   60],\\n        [  93,  -50],\\n        [  90,  -23],\\n        [  41,  -20],\\n        [  91,  -41],\\n        [   5,  -29],\\n        [  57,   -3],\\n        [  31,   30],\\n        [ -74,  -35],\\n        [ -80,   42],\\n        [  95,  -53],\\n        [  51,   66],\\n        [  56,  -87],\\n        [ -68,    4],\\n        [  -7,    6],\\n        [  71,   54],\\n        [  25,   64],\\n        [  67,  -67],\\n        [  66,  -42],\\n        [ -18,  -95],\\n        [  12,   89],\\n        [ -57,  -20],\\n        [  47,   59],\\n        [  28,  -18],\\n        [  12,   51],\\n        [  80,   20],\\n        [ -30,  -56],\\n        [ -14,  -92],\\n        [  55,   90],\\n        [  12,   19],\\n        [  44,   40],\\n        [  71,  -73],\\n        [  32,   -3],\\n        [ -55,  -70],\\n        [ -65,   77],\\n        [ -93,  -29],\\n        [  24,   61],\\n        [ -18,   41],\\n        [  50,  -57],\\n        [ -12,  -62],\\n        [ -68,  -28],\\n        [ -50,  100],\\n        [ -34,   81],\\n        [  64,  -40],\\n        [ -37,   55],\\n        [  24,  -33],\\n        [  22,  -20],\\n        [  20,  -25],\\n        [ -52,   71],\\n        [  20,   60],\\n        [ -11,   59],\\n        [ -12,   16],\\n        [  80,   10],\\n        [   3,   83],\\n        [ -25,   49],\\n        [  32,  -67],\\n        [  -5,   55],\\n        [   2,   29],\\n        [ -63,  -21],\\n        [ -10,  -18],\\n        [ -39,  -41],\\n        [ -37,   78],\\n        [ -17,  -97],\\n        [ -81,  -30],\\n        [ -35,   71],\\n        [  52,   81],\\n        [  92,  -32],\\n        [ -67,  -99],\\n        [  -3,  -32],\\n        [  20,   85],\\n        [ -73,    7],\\n        [ -62,   29],\\n        [ -78,   78],\\n        [ -95,   70],\\n        [  26,   23],\\n        [ -79,  -28],\\n        [   9,  -72],\\n        [-100,  -43],\\n        [  83,   85],\\n        [  22,   83],\\n        [ -76,  -58],\\n        [  60,   41],\\n        [ -13,   81],\\n        [ -93,   25],\\n        [ -96,   69],\\n        [  40,  -65],\\n        [ -46,  -94],\\n        [ -53,  -34]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007951585575938225, "start": 1738500584.2510662, "stop": 1738500584.2518618, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "44e4f68acca84e66b66c8571187633a4", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_80_1.py::test_matrix_of_having_180_integers", "location": ["tests58_80_1.py", 28, "test_matrix_of_having_180_integers"], "keywords": {"test_matrix_of_having_180_integers": 1, "__wrapped__": 1, "tests58_80_1.py": 1, "Folder_80": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.407661855220795e-05, "start": 1738500584.287252, "stop": 1738500584.2873466, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "44e4f68acca84e66b66c8571187633a4", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
