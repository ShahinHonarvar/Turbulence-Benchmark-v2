{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011369772255420685, "start": 1738500517.7260199, "stop": 1738500517.7261338, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0078b465a53749c4b02995b6d8b0f2cd", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014080386608839035, "start": 1738500517.7262878, "stop": 1738500517.726429, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0078b465a53749c4b02995b6d8b0f2cd", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_one_integer", "location": ["tests58_6_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.080938667058945e-05, "start": 1738500517.7267044, "stop": 1738500517.726776, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "0078b465a53749c4b02995b6d8b0f2cd", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.431822061538696e-05, "start": 1738500517.7309086, "stop": 1738500517.7309935, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0078b465a53749c4b02995b6d8b0f2cd", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  49,  -61],\\n        [  53,  -31],\\n        [  37,  -67],\\n        [ -79,  -89],\\n        [ -18,  -91],\\n        [   1,   44],\\n        [ -86,   95],\\n        [  71,   -1],\\n        [ -30,  -78],\\n        [  44,   44],\\n        [  51,   12],\\n        [-100,   29],\\n        [  82,   40],\\n        [ -51,  -30],\\n        [  78,  -49],\\n        [  77,   28],\\n        [ -12,  -59],\\n        [ -87,    1],\\n        [  72,   64],\\n        [ -68,   41],\\n        [  62,    6],\\n        [ -87,  -28],\\n        [  35,  -71],\\n        [ -27,  -66],\\n        [ -50,  -70],\\n        [ -94,   40],\\n        [  64,   96],\\n        [  85,   79],\\n        [  16,  -31],\\n        [  15,  -76],\\n        [  61,  -84],\\n        [ -27,  -39],\\n        [ -79,  -79],\\n        [ -58,  -23],\\n        [ -73,   34],\\n        [ -84,  -35],\\n        [  80,  -89],\\n        [ -57,  -55],\\n        [ -71,  -18],\\n        [ -87,   30],\\n        [  18,   22],\\n        [  11,  -95],\\n        [  42,  -36],\\n        [  95,  -95],\\n        [  43,    2],\\n        [ -13,   25],\\n        [  96,  -67],\\n        [ -69,   83],\\n        [ -21,  -88],\\n        [ -82,   91],\\n        [ -95,   31],\\n        [ -75,   -3],\\n        [ -52,  -27],\\n        [  11,   79],\\n        [ -98,  -79],\\n        [ -35,   94],\\n        [  59,    1],\\n        [ -25,   12],\\n        [ -53,   87],\\n        [  82,   16],\\n        [ -34,  -54]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  49,  -61],\\n        [  53,  -31],\\n        [  37,  -67],\\n        [ -79,  -89],\\n        [ -18,  -91],\\n        [   1,   44],\\n        [ -86,   95],\\n        [  71,   -1],\\n        [ -30,  -78],\\n        [  44,   44],\\n        [  51,   12],\\n        [-100,   29],\\n        [  82,   40],\\n        [ -51,  -30],\\n        [  78,  -49],\\n        [  77,   28],\\n        [ -12,  -59],\\n        [ -87,    1],\\n        [  72,   64],\\n        [ -68,   41],\\n        [  62,    6],\\n        [ -87,  -28],\\n        [  35,  -71],\\n        [ -27,  -66],\\n        [ -50,  -70],\\n        [ -94,   40],\\n        [  64,   96],\\n        [  85,   79],\\n        [  16,  -31],\\n        [  15,  -76],\\n        [  61,  -84],\\n        [ -27,  -39],\\n        [ -79,  -79],\\n        [ -58,  -23],\\n        [ -73,   34],\\n        [ -84,  -35],\\n        [  80,  -89],\\n        [ -57,  -55],\\n        [ -71,  -18],\\n        [ -87,   30],\\n        [  18,   22],\\n        [  11,  -95],\\n        [  42,  -36],\\n        [  95,  -95],\\n        [  43,    2],\\n        [ -13,   25],\\n        [  96,  -67],\\n        [ -69,   83],\\n        [ -21,  -88],\\n        [ -82,   91],\\n        [ -95,   31],\\n        [ -75,   -3],\\n        [ -52,  -27],\\n        [  11,   79],\\n        [ -98,  -79],\\n        [ -35,   94],\\n        [  59,    1],\\n        [ -25,   12],\\n        [ -53,   87],\\n        [  82,   16],\\n        [ -34,  -54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_122_integers():", "        if 122 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(122 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(122)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  49,  -61],\\n        [  53,  -31],\\n        [  37,  -67],\\n        [ -79,  -89],\\n        [ -18,  -91],\\n        [   1,   44],\\n        [ -86,   95],\\n        [  71,   -1],\\n        [ -30,  -78],\\n        [  44,   44],\\n        [  51,   12],\\n        [-100,   29],\\n        [  82,   40],\\n        [ -51,  -30],\\n        [  78,  -49],\\n        [  77,   28],\\n        [ -12,  -59],\\n        [ -87,    1],\\n        [  72,   64],\\n        [ -68,   41],\\n        [  62,    6],\\n        [ -87,  -28],\\n        [  35,  -71],\\n        [ -27,  -66],\\n        [ -50,  -70],\\n        [ -94,   40],\\n        [  64,   96],\\n        [  85,   79],\\n        [  16,  -31],\\n        [  15,  -76],\\n        [  61,  -84],\\n        [ -27,  -39],\\n        [ -79,  -79],\\n        [ -58,  -23],\\n        [ -73,   34],\\n        [ -84,  -35],\\n        [  80,  -89],\\n        [ -57,  -55],\\n        [ -71,  -18],\\n        [ -87,   30],\\n        [  18,   22],\\n        [  11,  -95],\\n        [  42,  -36],\\n        [  95,  -95],\\n        [  43,    2],\\n        [ -13,   25],\\n        [  96,  -67],\\n        [ -69,   83],\\n        [ -21,  -88],\\n        [ -82,   91],\\n        [ -95,   31],\\n        [ -75,   -3],\\n        [ -52,  -27],\\n        [  11,   79],\\n        [ -98,  -79],\\n        [ -35,   94],\\n        [  59,    1],\\n        [ -25,   12],\\n        [ -53,   87],\\n        [  82,   16],\\n        [ -34,  -54]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_6/tests58_6_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  49,  -61],\\n        [  53,  -31],\\n        [  37,  -67],\\n        [ -79,  -89],\\n        [ -18,  -91],\\n        [   1,   44],\\n        [ -86,   95],\\n        [  71,   -1],\\n        [ -30,  -78],\\n        [  44,   44],\\n        [  51,   12],\\n        [-100,   29],\\n        [  82,   40],\\n        [ -51,  -30],\\n        [  78,  -49],\\n        [  77,   28],\\n        [ -12,  -59],\\n        [ -87,    1],\\n        [  72,   64],\\n        [ -68,   41],\\n        [  62,    6],\\n        [ -87,  -28],\\n        [  35,  -71],\\n        [ -27,  -66],\\n        [ -50,  -70],\\n        [ -94,   40],\\n        [  64,   96],\\n        [  85,   79],\\n        [  16,  -31],\\n        [  15,  -76],\\n        [  61,  -84],\\n        [ -27,  -39],\\n        [ -79,  -79],\\n        [ -58,  -23],\\n        [ -73,   34],\\n        [ -84,  -35],\\n        [  80,  -89],\\n        [ -57,  -55],\\n        [ -71,  -18],\\n        [ -87,   30],\\n        [  18,   22],\\n        [  11,  -95],\\n        [  42,  -36],\\n        [  95,  -95],\\n        [  43,    2],\\n        [ -13,   25],\\n        [  96,  -67],\\n        [ -69,   83],\\n        [ -21,  -88],\\n        [ -82,   91],\\n        [ -95,   31],\\n        [ -75,   -3],\\n        [ -52,  -27],\\n        [  11,   79],\\n        [ -98,  -79],\\n        [ -35,   94],\\n        [  59,    1],\\n        [ -25,   12],\\n        [ -53,   87],\\n        [  82,   16],\\n        [ -34,  -54]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006664823740720749, "start": 1738500517.7311628, "stop": 1738500517.7318301, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0078b465a53749c4b02995b6d8b0f2cd", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_6_1.py::test_matrix_of_having_122_integers", "location": ["tests58_6_1.py", 28, "test_matrix_of_having_122_integers"], "keywords": {"test_matrix_of_having_122_integers": 1, "__wrapped__": 1, "tests58_6_1.py": 1, "Folder_6": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010355841368436813, "start": 1738500517.7562585, "stop": 1738500517.7563624, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "0078b465a53749c4b02995b6d8b0f2cd", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
