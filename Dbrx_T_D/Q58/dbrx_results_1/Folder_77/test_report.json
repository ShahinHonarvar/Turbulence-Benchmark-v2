{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_77_1.py::test_matrix_of_one_integer", "location": ["tests58_77_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_1.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001162337139248848, "start": 1738500581.436237, "stop": 1738500581.4363534, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b6bd8f4a131541d7b832843949f7a304", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_1.py::test_matrix_of_one_integer", "location": ["tests58_77_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_1.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000133550725877285, "start": 1738500581.4365087, "stop": 1738500581.436643, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b6bd8f4a131541d7b832843949f7a304", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_1.py::test_matrix_of_one_integer", "location": ["tests58_77_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_77_1.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.983429193496704e-05, "start": 1738500581.4369242, "stop": 1738500581.4369943, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "b6bd8f4a131541d7b832843949f7a304", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_1.py::test_matrix_of_having_179_integers", "location": ["tests58_77_1.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_1.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.649604231119156e-05, "start": 1738500581.4377792, "stop": 1738500581.437856, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b6bd8f4a131541d7b832843949f7a304", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_1.py::test_matrix_of_having_179_integers", "location": ["tests58_77_1.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_1.py": 1, "Folder_77": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_77/tests58_77_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  19,   95,   11,  -45,  -61,    6,   41,   34,    2,  -95,\\n          -93,    1,  -28,   23,  -29,   25,  -18,  -76,  -38,   39,\\n           24,   99,  -18,   98,   44,   99,   61,  -24,   97,   26,\\n            1,   95,   12,  -56,  -49, -100,  -46,    5,   37,   -9,\\n           89,  -91, -100,  -41,   84,   59,   -9,   -5,    3,  -89,\\n           33,  -68,    0,  -14,   93,   70,   61,   58,   89,  -10,\\n           65,  -23,   72,  -66,  -22,   29,  -87,   87,  -23,   74,\\n          -65,   86,  -36,  -82,   64,   33,   80,   -4,   86,  -15,\\n          -72,  -44,  -88,  -71,    8,   92,  -26,   70,   11,   99,\\n         -100,  -50,   -4,    9,   83,   45,  -72,   73,   60,   74,\\n           42,   85,   22,  -40,  -73,  -60,  -59,   45,  -21,   96,\\n           96,  -42,  -89,  -16,   50,   28,   40,   62,  -81,   41,\\n          -31,   -2,  -88,  -70,   19,   77,   57,   68,    1,  -86,\\n            8,  -19,   17,  -72,   -3,  -85,   77,  -47,   57,  -10,\\n          -40,  -49,  -31,  -32,   37,   94,   26,   87,  -63,   93,\\n          -26,   -8,   26,  -90,   77,  -23,   94,  -31,   16,  -44,\\n           88,  -74,   61,  -59,   45,  -64,   -1,  -49,   39,  -19,\\n          -43,   30,  -86,   28,  -20,  -45,   10,  -58,   13]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  19,   95,   11,  -45,  -61,    6,   41,   34,    2,  -95,\\n          -93,    1,  -28,   23,  -29,   25,  -18,  -76,  -38,   39,\\n           24,   99,  -18,   98,   44,   99,   61,  -24,   97,   26,\\n            1,   95,   12,  -56,  -49, -100,  -46,    5,   37,   -9,\\n           89,  -91, -100,  -41,   84,   59,   -9,   -5,    3,  -89,\\n           33,  -68,    0,  -14,   93,   70,   61,   58,   89,  -10,\\n           65,  -23,   72,  -66,  -22,   29,  -87,   87,  -23,   74,\\n          -65,   86,  -36,  -82,   64,   33,   80,   -4,   86,  -15,\\n          -72,  -44,  -88,  -71,    8,   92,  -26,   70,   11,   99,\\n         -100,  -50,   -4,    9,   83,   45,  -72,   73,   60,   74,\\n           42,   85,   22,  -40,  -73,  -60,  -59,   45,  -21,   96,\\n           96,  -42,  -89,  -16,   50,   28,   40,   62,  -81,   41,\\n          -31,   -2,  -88,  -70,   19,   77,   57,   68,    1,  -86,\\n            8,  -19,   17,  -72,   -3,  -85,   77,  -47,   57,  -10,\\n          -40,  -49,  -31,  -32,   37,   94,   26,   87,  -63,   93,\\n          -26,   -8,   26,  -90,   77,  -23,   94,  -31,   16,  -44,\\n           88,  -74,   61,  -59,   45,  -64,   -1,  -49,   39,  -19,\\n          -43,   30,  -86,   28,  -20,  -45,   10,  -58,   13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_77/tests58_77_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_179_integers():", "        if 179 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(179 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(179)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[  19,   95,   11,  -45,  -61,    6,   41,   34,    2,  -95,\\n          -93,    1,  -28,   23,  -29,   25,  -18,  -76,  -38,   39,\\n           24,   99,  -18,   98,   44,   99,   61,  -24,   97,   26,\\n            1,   95,   12,  -56,  -49, -100,  -46,    5,   37,   -9,\\n           89,  -91, -100,  -41,   84,   59,   -9,   -5,    3,  -89,\\n           33,  -68,    0,  -14,   93,   70,   61,   58,   89,  -10,\\n           65,  -23,   72,  -66,  -22,   29,  -87,   87,  -23,   74,\\n          -65,   86,  -36,  -82,   64,   33,   80,   -4,   86,  -15,\\n          -72,  -44,  -88,  -71,    8,   92,  -26,   70,   11,   99,\\n         -100,  -50,   -4,    9,   83,   45,  -72,   73,   60,   74,\\n           42,   85,   22,  -40,  -73,  -60,  -59,   45,  -21,   96,\\n           96,  -42,  -89,  -16,   50,   28,   40,   62,  -81,   41,\\n          -31,   -2,  -88,  -70,   19,   77,   57,   68,    1,  -86,\\n            8,  -19,   17,  -72,   -3,  -85,   77,  -47,   57,  -10,\\n          -40,  -49,  -31,  -32,   37,   94,   26,   87,  -63,   93,\\n          -26,   -8,   26,  -90,   77,  -23,   94,  -31,   16,  -44,\\n           88,  -74,   61,  -59,   45,  -64,   -1,  -49,   39,  -19,\\n          -43,   30,  -86,   28,  -20,  -45,   10,  -58,   13]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_77/tests58_77_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_77/tests58_77_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  19,   95,   11,  -45,  -61,    6,   41,   34,    2,  -95,\\n          -93,    1,  -28,   23,  -29,   25,  -18,  -76,  -38,   39,\\n           24,   99,  -18,   98,   44,   99,   61,  -24,   97,   26,\\n            1,   95,   12,  -56,  -49, -100,  -46,    5,   37,   -9,\\n           89,  -91, -100,  -41,   84,   59,   -9,   -5,    3,  -89,\\n           33,  -68,    0,  -14,   93,   70,   61,   58,   89,  -10,\\n           65,  -23,   72,  -66,  -22,   29,  -87,   87,  -23,   74,\\n          -65,   86,  -36,  -82,   64,   33,   80,   -4,   86,  -15,\\n          -72,  -44,  -88,  -71,    8,   92,  -26,   70,   11,   99,\\n         -100,  -50,   -4,    9,   83,   45,  -72,   73,   60,   74,\\n           42,   85,   22,  -40,  -73,  -60,  -59,   45,  -21,   96,\\n           96,  -42,  -89,  -16,   50,   28,   40,   62,  -81,   41,\\n          -31,   -2,  -88,  -70,   19,   77,   57,   68,    1,  -86,\\n            8,  -19,   17,  -72,   -3,  -85,   77,  -47,   57,  -10,\\n          -40,  -49,  -31,  -32,   37,   94,   26,   87,  -63,   93,\\n          -26,   -8,   26,  -90,   77,  -23,   94,  -31,   16,  -44,\\n           88,  -74,   61,  -59,   45,  -64,   -1,  -49,   39,  -19,\\n          -43,   30,  -86,   28,  -20,  -45,   10,  -58,   13]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0037365788593888283, "start": 1738500581.4379451, "stop": 1738500581.441682, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b6bd8f4a131541d7b832843949f7a304", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_77_1.py::test_matrix_of_having_179_integers", "location": ["tests58_77_1.py", 28, "test_matrix_of_having_179_integers"], "keywords": {"test_matrix_of_having_179_integers": 1, "__wrapped__": 1, "tests58_77_1.py": 1, "Folder_77": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.35206189751625e-05, "start": 1738500581.476245, "stop": 1738500581.476339, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "b6bd8f4a131541d7b832843949f7a304", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
