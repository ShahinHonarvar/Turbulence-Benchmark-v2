{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018451455980539322, "start": 1738500563.3167164, "stop": 1738500563.3169014, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42da5313ea8b4a59beedeba325031562", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0007470306009054184, "start": 1738500563.3170617, "stop": 1738500563.317809, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42da5313ea8b4a59beedeba325031562", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_one_integer", "location": ["tests58_59_1.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.471868932247162e-05, "start": 1738500563.3182116, "stop": 1738500563.3182967, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "42da5313ea8b4a59beedeba325031562", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00037517957389354706, "start": 1738500563.3193643, "stop": 1738500563.3197398, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "42da5313ea8b4a59beedeba325031562", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -17,  -62],\\n        [  73,   47],\\n        [ -64,  -62],\\n        [  51,    8],\\n        [ -78,  -83],\\n        [  54,   90],\\n        [ -30,   81],\\n        [   0,  -58],\\n        [  29,   26],\\n        [ -14,  -62],\\n        [  -7,   92],\\n        [ -51,  -34],\\n        [  28,   76],\\n        [  44,  -98],\\n        [ -88,   -6],\\n        [  56,   89],\\n        [  60,  -65],\\n        [  80,  -56],\\n        [ -47,   58],\\n        [ -32,  -49],\\n        [  88,   70],\\n        [   4,  -45],\\n        [  13,    6],\\n        [ -49,   34],\\n        [  74,   22],\\n        [ -58,   58],\\n        [ -71,  -31],\\n        [-100,  -89],\\n        [ -66,  -74],\\n        [  77,   98],\\n        [  48,  -62],\\n        [  91,  -25],\\n        [ -64,  -83],\\n        [ -31,   36],\\n        [  72,   80],\\n        [  11,   55],\\n        [ -29,  -31],\\n        [  38,   66]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -17,  -62],\\n        [  73,   47],\\n        [ -64,  -62],\\n        [  51,    8],\\n        [ -78,  -83],\\n        [  54,   90],\\n        [ -30,   81],\\n        [   0,  -58],\\n        [  29,   26],\\n        [ -14,  -62],\\n        [  -7,   92],\\n        [ -51,  -34],\\n        [  28,   76],\\n        [  44,  -98],\\n        [ -88,   -6],\\n        [  56,   89],\\n        [  60,  -65],\\n        [  80,  -56],\\n        [ -47,   58],\\n        [ -32,  -49],\\n        [  88,   70],\\n        [   4,  -45],\\n        [  13,    6],\\n        [ -49,   34],\\n        [  74,   22],\\n        [ -58,   58],\\n        [ -71,  -31],\\n        [-100,  -89],\\n        [ -66,  -74],\\n        [  77,   98],\\n        [  48,  -62],\\n        [  91,  -25],\\n        [ -64,  -83],\\n        [ -31,   36],\\n        [  72,   80],\\n        [  11,   55],\\n        [ -29,  -31],\\n        [  38,   66]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_76_integers():", "        if 76 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(76 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(76)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[ -17,  -62],\\n        [  73,   47],\\n        [ -64,  -62],\\n        [  51,    8],\\n        [ -78,  -83],\\n        [  54,   90],\\n        [ -30,   81],\\n        [   0,  -58],\\n        [  29,   26],\\n        [ -14,  -62],\\n        [  -7,   92],\\n        [ -51,  -34],\\n        [  28,   76],\\n        [  44,  -98],\\n        [ -88,   -6],\\n        [  56,   89],\\n        [  60,  -65],\\n        [  80,  -56],\\n        [ -47,   58],\\n        [ -32,  -49],\\n        [  88,   70],\\n        [   4,  -45],\\n        [  13,    6],\\n        [ -49,   34],\\n        [  74,   22],\\n        [ -58,   58],\\n        [ -71,  -31],\\n        [-100,  -89],\\n        [ -66,  -74],\\n        [  77,   98],\\n        [  48,  -62],\\n        [  91,  -25],\\n        [ -64,  -83],\\n        [ -31,   36],\\n        [  72,   80],\\n        [  11,   55],\\n        [ -29,  -31],\\n        [  38,   66]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/dbrx_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q58/dbrx_results_1/Folder_59/tests58_59_1.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -17,  -62],\\n        [  73,   47],\\n        [ -64,  -62],\\n        [  51,    8],\\n        [ -78,  -83],\\n        [  54,   90],\\n        [ -30,   81],\\n        [   0,  -58],\\n        [  29,   26],\\n        [ -14,  -62],\\n        [  -7,   92],\\n        [ -51,  -34],\\n        [  28,   76],\\n        [  44,  -98],\\n        [ -88,   -6],\\n        [  56,   89],\\n        [  60,  -65],\\n        [  80,  -56],\\n        [ -47,   58],\\n        [ -32,  -49],\\n        [  88,   70],\\n        [   4,  -45],\\n        [  13,    6],\\n        [ -49,   34],\\n        [  74,   22],\\n        [ -58,   58],\\n        [ -71,  -31],\\n        [-100,  -89],\\n        [ -66,  -74],\\n        [  77,   98],\\n        [  48,  -62],\\n        [  91,  -25],\\n        [ -64,  -83],\\n        [ -31,   36],\\n        [  72,   80],\\n        [  11,   55],\\n        [ -29,  -31],\\n        [  38,   66]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018905028700828552, "start": 1738500563.3198552, "stop": 1738500563.321746, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "42da5313ea8b4a59beedeba325031562", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_59_1.py::test_matrix_of_having_76_integers", "location": ["tests58_59_1.py", 28, "test_matrix_of_having_76_integers"], "keywords": {"test_matrix_of_having_76_integers": 1, "__wrapped__": 1, "tests58_59_1.py": 1, "Folder_59": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019302871078252792, "start": 1738500563.3400645, "stop": 1738500563.340258, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "42da5313ea8b4a59beedeba325031562", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
