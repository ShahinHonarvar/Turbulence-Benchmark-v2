{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests12_46_2.py::test_result_is_in_range", "location": ["tests12_46_2.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_46_2.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.299349039793015e-05, "start": 1738463769.3892567, "stop": 1738463769.3893502, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "81c76502dc364905ae0a627c465b2db2", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_46_2.py::test_result_is_in_range", "location": ["tests12_46_2.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_46_2.py": 1, "Folder_46": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q12/dbrx_results_2/Folder_46/tests12_46_2.py", "lineno": 8, "message": "assert 90 in [91, 92, 93, 94, 95, 96, ...]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_range():", "        initial_list = [i for i in range(0,(99 + 1) * 1000)]", "        result = find_smallest_num(initial_list)", ">       assert result in initial_list[91:99+1]", "E       assert 90 in [91, 92, 93, 94, 95, 96, ...]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/dbrx_results_2/Folder_46/tests12_46_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_range():", "        initial_list = [i for i in range(0,(99 + 1) * 1000)]", "        result = find_smallest_num(initial_list)", ">       assert result in initial_list[91:99+1]", "E       assert 90 in [91, 92, 93, 94, 95, 96, ...]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/dbrx_results_2/Folder_46/tests12_46_2.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q12/dbrx_results_2/Folder_46/tests12_46_2.py", "lineno": 8, "message": "assert 90 in [91, 92, 93, 94, 95, 96, ...]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020717941224575043, "start": 1738463769.3894765, "stop": 1738463769.3915486, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "81c76502dc364905ae0a627c465b2db2", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_46_2.py::test_result_is_in_range", "location": ["tests12_46_2.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_46_2.py": 1, "Folder_46": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010424479842185974, "start": 1738463769.4005044, "stop": 1738463769.400609, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "81c76502dc364905ae0a627c465b2db2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
