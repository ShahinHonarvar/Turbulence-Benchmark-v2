{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests12_76_1.py::test_result_is_in_range", "location": ["tests12_76_1.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.282305836677551e-05, "start": 1738463528.4634802, "stop": 1738463528.4635735, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "824d20d447aa4928a35d72b69a6c47f2", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_76_1.py::test_result_is_in_range", "location": ["tests12_76_1.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q12/dbrx_results_1/Folder_76/tests12_76_1.py", "lineno": 8, "message": "assert 245 in [246, 247, 248, 249, 250, 251, ...]"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_range():", "        initial_list = [i for i in range(0,(750 + 1) * 1000)]", "        result = find_smallest_num(initial_list)", ">       assert result in initial_list[246:750+1]", "E       assert 245 in [246, 247, 248, 249, 250, 251, ...]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/dbrx_results_1/Folder_76/tests12_76_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_result_is_in_range():", "        initial_list = [i for i in range(0,(750 + 1) * 1000)]", "        result = find_smallest_num(initial_list)", ">       assert result in initial_list[246:750+1]", "E       assert 245 in [246, 247, 248, 249, 250, 251, ...]"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q12/dbrx_results_1/Folder_76/tests12_76_1.py", "lineno": 8, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q12/dbrx_results_1/Folder_76/tests12_76_1.py", "lineno": 8, "message": "assert 245 in [246, 247, 248, 249, 250, 251, ...]"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.012439219281077385, "start": 1738463528.463709, "stop": 1738463528.4761493, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "824d20d447aa4928a35d72b69a6c47f2", "node": "<WorkerController gw0>"}
{"nodeid": "tests12_76_1.py::test_result_is_in_range", "location": ["tests12_76_1.py", 4, "test_result_is_in_range"], "keywords": {"test_result_is_in_range": 1, "tests12_76_1.py": 1, "Folder_76": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010923575609922409, "start": 1738463528.4872746, "stop": 1738463528.4873846, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "824d20d447aa4928a35d72b69a6c47f2", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
