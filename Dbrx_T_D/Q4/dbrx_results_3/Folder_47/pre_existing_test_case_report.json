{
  "parameter(s)": [
    64,
    80
  ],
  "test_zero_range": [
    "passed",
    "",
    9e-05
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "assert [64, 65, 66, 67, 68, 69, ...] == [66, 67, 68, 69, 70, 71, ...]\n  At index 0 diff: 64 != 66\n  Left contains 2 more items, first extra item: 79\n  Full diff:\n  - [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80]\n  + [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80]\n  ?  ++++++++",
    0.00057
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [128, 130, 13...136, 138, ...] == [132, 134, 13...140, 142, ...]\n  At index 0 diff: 128 != 132\n  Left contains 2 more items, first extra item: 158\n  Full diff:\n    [\n  +  128,\n  +  130,\n     132,...\n  \n  ...Full output truncated (15 lines hidden), use '-vv' to show",
    0.00037
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 17 == ((80 - 64) - 1)\n +  where 17 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00019
  ]
}