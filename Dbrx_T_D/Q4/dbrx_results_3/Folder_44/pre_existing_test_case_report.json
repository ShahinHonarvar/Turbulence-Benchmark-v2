{
  "parameter(s)": [
    81,
    86
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    9e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "assert [81, 82, 83, 84, 85, 86] == [83, 84, 85, 86]\n  At index 0 diff: 81 != 83\n  Left contains 2 more items, first extra item: 85\n  Full diff:\n  - [83, 84, 85, 86]\n  + [81, 82, 83, 84, 85, 86]\n  ?  ++++++++",
    0.00037
  ],
  "test_even_range": [
    "failed",
    "assert [162, 164, 166, 168, 170, 172] == [166, 168, 170, 172]\n  At index 0 diff: 162 != 166\n  Left contains 2 more items, first extra item: 170\n  Full diff:\n  - [166, 168, 170, 172]\n  + [162, 164, 166, 168, 170, 172]\n  ?  ++++++++++",
    0.00044
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 6 == ((86 - 81) - 1)\n +  where 6 = sum([1, 1, 1, 1, 1, 1])\n +    where [1, 1, 1, 1, 1, 1] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}