{
  "parameter(s)": [
    10,
    76
  ],
  "test_zero_range": [
    "passed",
    "",
    0.00011
  ],
  "test_range_size": [
    "passed",
    "",
    8e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    5e-05
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [20, 22, 24, 26, 28, 30, ...] == [24, 26, 28, 30, 32, 34, ...]\n  At index 0 diff: 20 != 24\n  Left contains 3 more items, first extra item: 150\n  Full diff:\n    [\n  +  20,\n  +  22,\n     24,...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show",
    0.00056
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [10, 11, 12, 13, 14, 15, ...] == [12, 13, 14, 15, 16, 17, ...]\n  At index 0 diff: 10 != 12\n  Left contains 3 more items, first extra item: 75\n  Full diff:\n    [\n  +  10,\n  +  11,\n     12,...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show",
    0.00056
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 68 == ((76 - 10) - 1)\n +  where 68 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.0002
  ]
}