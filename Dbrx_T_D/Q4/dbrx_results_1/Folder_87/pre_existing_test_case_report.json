{
  "parameter(s)": [
    32,
    99
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    7e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_large_range": [
    "failed",
    "AssertionError: assert [32, 33, 34, 35, 36, 37, ...] == [34, 35, 36, 37, 38, 39, ...]\n  At index 0 diff: 32 != 34\n  Left contains 2 more items, first extra item: 98\n  Full diff:\n    [\n  +  32,\n  +  33,\n     34,...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show",
    0.00052
  ],
  "test_even_range": [
    "failed",
    "AssertionError: assert [64, 66, 68, 70, 72, 74, ...] == [68, 70, 72, 74, 76, 78, ...]\n  At index 0 diff: 64 != 68\n  Left contains 2 more items, first extra item: 196\n  Full diff:\n    [\n  +  64,\n  +  66,\n     68,...\n  \n  ...Full output truncated (66 lines hidden), use '-vv' to show",
    0.00057
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 68 == ((99 - 32) - 1)\n +  where 68 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}