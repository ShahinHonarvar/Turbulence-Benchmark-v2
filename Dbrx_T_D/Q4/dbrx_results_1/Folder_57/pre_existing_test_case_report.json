{
  "parameter(s)": [
    18,
    37
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    6e-05
  ],
  "test_range_sum": [
    "passed",
    "",
    6e-05
  ],
  "test_even_range": [
    "failed",
    "assert [36, 38, 40, 42, 44, 46, ...] == [40, 42, 44, 46, 48, 50, ...]\n  At index 0 diff: 36 != 40\n  Left contains 2 more items, first extra item: 72\n  Full diff:\n  - [40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74]\n  + [36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74]\n  ?  ++++++++",
    0.00066
  ],
  "test_large_range": [
    "failed",
    "assert [18, 19, 20, 21, 22, 23, ...] == [20, 21, 22, 23, 24, 25, ...]\n  At index 0 diff: 18 != 20\n  Left contains 2 more items, first extra item: 36\n  Full diff:\n  - [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n  + [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]\n  ?  ++++++++",
    0.00089
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 20 == ((37 - 18) - 1)\n +  where 20 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00018
  ]
}