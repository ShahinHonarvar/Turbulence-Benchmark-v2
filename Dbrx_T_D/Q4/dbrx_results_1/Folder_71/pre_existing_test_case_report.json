{
  "parameter(s)": [
    36,
    54
  ],
  "test_zero_range": [
    "passed",
    "",
    0.0001
  ],
  "test_range_size": [
    "passed",
    "",
    0.00012
  ],
  "test_range_sum": [
    "passed",
    "",
    8e-05
  ],
  "test_large_range": [
    "failed",
    "assert [36, 37, 38, 39, 40, 41, ...] == [38, 39, 40, 41, 42, 43, ...]\n  At index 0 diff: 36 != 38\n  Left contains one more item: 53\n  Full diff:\n  - [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n  ?                                                                ----\n  + [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]\n  ?  ++++++++",
    0.00066
  ],
  "test_even_range": [
    "failed",
    "assert [72, 74, 76, 78, 80, 82, ...] == [76, 78, 80, 82, 84, 86, ...]\n  At index 0 diff: 72 != 76\n  Left contains one more item: 106\n  Full diff:\n  - [76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108]\n  ?                                                                    -----\n  + [72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106]\n  ?  ++++++++",
    0.00103
  ],
  "test_ones_range_sum": [
    "failed",
    "assert 18 == ((54 - 36) - 1)\n +  where 18 = sum([1, 1, 1, 1, 1, 1, ...])\n +    where [1, 1, 1, 1, 1, 1, ...] = all_pos_ints_exclusive([1, 1, 1, 1, 1, 1, ...])",
    0.00025
  ]
}