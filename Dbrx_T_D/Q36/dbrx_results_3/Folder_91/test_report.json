{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests36_91_3.py::test_repeat_char", "location": ["tests36_91_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_91_3.py": 1, "Folder_91": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.778499275445938e-05, "start": 1738486433.087673, "stop": 1738486433.0877512, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d8dbb9eb1b1a408593ce49aaf5df94d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_91_3.py::test_repeat_char", "location": ["tests36_91_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_91_3.py": 1, "Folder_91": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q36/dbrx_results_3/Folder_91/tests36_91_3.py", "lineno": 11, "message": "AssertionError: assert 'm' == 'mmmmm'\n  \n  - mmmmm\n  + m"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (3 + 2)", "        if '$' < 'm' < '?':", "            assert not filter_chars(s)", "        else:", ">           assert filter_chars(s) == s", "E           AssertionError: assert 'm' == 'mmmmm'", "E             ", "E             - mmmmm", "E             + m"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/dbrx_results_3/Folder_91/tests36_91_3.py", "lineno": 11, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_repeat_char():", "        s = 'm' * (3 + 2)", "        if '$' < 'm' < '?':", "            assert not filter_chars(s)", "        else:", ">           assert filter_chars(s) == s", "E           AssertionError: assert 'm' == 'mmmmm'", "E             ", "E             - mmmmm", "E             + m"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/dbrx_results_3/Folder_91/tests36_91_3.py", "lineno": 11, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q36/dbrx_results_3/Folder_91/tests36_91_3.py", "lineno": 11, "message": "AssertionError: assert 'm' == 'mmmmm'\n  \n  - mmmmm\n  + m"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002618543803691864, "start": 1738486433.0878887, "stop": 1738486433.0881507, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d8dbb9eb1b1a408593ce49aaf5df94d9", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_91_3.py::test_repeat_char", "location": ["tests36_91_3.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_91_3.py": 1, "Folder_91": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.993301212787628e-05, "start": 1738486433.096096, "stop": 1738486433.0961664, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "d8dbb9eb1b1a408593ce49aaf5df94d9", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
