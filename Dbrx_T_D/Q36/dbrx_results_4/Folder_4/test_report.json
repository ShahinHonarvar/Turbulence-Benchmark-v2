{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests36_4_4.py::test_repeat_char", "location": ["tests36_4_4.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_4_4.py": 1, "Folder_4": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.909590542316437e-05, "start": 1738486439.8578997, "stop": 1738486439.857989, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f000ecbcfe4641999cbda1ff1e742abf", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_4_4.py::test_repeat_char", "location": ["tests36_4_4.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_4_4.py": 1, "Folder_4": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016030017286539078, "start": 1738486439.8581538, "stop": 1738486439.8583143, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f000ecbcfe4641999cbda1ff1e742abf", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_4_4.py::test_repeat_char", "location": ["tests36_4_4.py", 5, "test_repeat_char"], "keywords": {"test_repeat_char": 1, "tests36_4_4.py": 1, "Folder_4": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.9398974776268e-05, "start": 1738486439.8585477, "stop": 1738486439.8586276, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "f000ecbcfe4641999cbda1ff1e742abf", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_4_4.py::test_property_of_function", "location": ["tests36_4_4.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_4_4.py": 1, "Folder_4": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.52229243516922e-05, "start": 1738486439.8593447, "stop": 1738486439.85942, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f000ecbcfe4641999cbda1ff1e742abf", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_4_4.py::test_property_of_function", "location": ["tests36_4_4.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_4_4.py": 1, "Folder_4": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q36/dbrx_results_4/Folder_4/tests36_4_4.py", "lineno": 22, "message": "AssertionError: assert 106 == (134 - 27)\n +  where 106 = len('uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu')\n +    where 'uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu' = filter_chars('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')\n +  and   134 = len('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_property_of_function():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(67 * 2))", "        sliced_s = set(s[42 + 1:67])", "        c = 0", "        for char in sliced_s:", "            if '6' < char < 'g':", "                c += s.count(char)", "    ", ">       assert len(filter_chars(s)) == len(s) - c", "E       AssertionError: assert 106 == (134 - 27)", "E        +  where 106 = len('uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu')", "E        +    where 'uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu' = filter_chars('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')", "E        +  and   134 = len('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/dbrx_results_4/Folder_4/tests36_4_4.py", "lineno": 22, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_property_of_function():", "        s = ''.join(random.choice(string.ascii_letters) for _ in range(67 * 2))", "        sliced_s = set(s[42 + 1:67])", "        c = 0", "        for char in sliced_s:", "            if '6' < char < 'g':", "                c += s.count(char)", "    ", ">       assert len(filter_chars(s)) == len(s) - c", "E       AssertionError: assert 106 == (134 - 27)", "E        +  where 106 = len('uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu')", "E        +    where 'uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu' = filter_chars('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')", "E        +  and   134 = len('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q36/dbrx_results_4/Folder_4/tests36_4_4.py", "lineno": 22, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q36/dbrx_results_4/Folder_4/tests36_4_4.py", "lineno": 22, "message": "AssertionError: assert 106 == (134 - 27)\n +  where 106 = len('uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu')\n +    where 'uWovFdtOMLWtJbuMusfkqTlQMoFavPUZHBQykpxjwlliyjjwnhariLMJrbHKymoWZPPhrYBJsukWHJAJtitjZqzwewKpBOKVAdfaJdionu' = filter_chars('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')\n +  and   134 = len('uWovFdtOCMcLWctJRbuMusEfkqTlQMCoFDavPUZHBQGykDpxjwlCElNiyjRjcwnXhariLDMJNrGbHNKGymoWZPEPhrYBJRsuDkWHNJAJtitjZqGCzwDewKpBOKVAdfaJdEionu')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00028596632182598114, "start": 1738486439.8595228, "stop": 1738486439.859809, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f000ecbcfe4641999cbda1ff1e742abf", "node": "<WorkerController gw0>"}
{"nodeid": "tests36_4_4.py::test_property_of_function", "location": ["tests36_4_4.py", 13, "test_property_of_function"], "keywords": {"test_property_of_function": 1, "tests36_4_4.py": 1, "Folder_4": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.881076842546463e-05, "start": 1738486439.867577, "stop": 1738486439.8676465, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "f000ecbcfe4641999cbda1ff1e742abf", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
