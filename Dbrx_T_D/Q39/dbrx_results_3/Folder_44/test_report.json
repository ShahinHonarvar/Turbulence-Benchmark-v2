{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_44_3.py::test_strings_of_size_equal_to_73", "location": ["tests39_44_3.py", 5, "test_strings_of_size_equal_to_73"], "keywords": {"test_strings_of_size_equal_to_73": 1, "tests39_44_3.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.636751979589462e-05, "start": 1738487962.842467, "stop": 1738487962.8425436, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb2bced1492c467ab9ddacbe38a1869d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_44_3.py::test_strings_of_size_equal_to_73", "location": ["tests39_44_3.py", 5, "test_strings_of_size_equal_to_73"], "keywords": {"test_strings_of_size_equal_to_73": 1, "tests39_44_3.py": 1, "Folder_44": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q39/dbrx_results_3/Folder_44/tests39_44_3.py", "lineno": 10, "message": "AssertionError: assert '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' == [' ', '!', '#', '$', '%', '&', ...]\n +  where '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' = return_n_greatest_chars('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')\n +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_73():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=73))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' == [' ', '!', '#', '$', '%', '&', ...]", "E            +  where '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' = return_n_greatest_chars('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')", "E            +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/dbrx_results_3/Folder_44/tests39_44_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_73():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=73))", "        if 'ascending' == 'ascending':", ">           assert return_n_greatest_chars(s) == sorted(s)", "E           AssertionError: assert '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' == [' ', '!', '#', '$', '%', '&', ...]", "E            +  where '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' = return_n_greatest_chars('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')", "E            +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/dbrx_results_3/Folder_44/tests39_44_3.py", "lineno": 10, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q39/dbrx_results_3/Folder_44/tests39_44_3.py", "lineno": 10, "message": "AssertionError: assert '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' == [' ', '!', '#', '$', '%', '&', ...]\n +  where '~}|{zyxvutsrqponmlkjihfedca_][ZYXUTSRQPMLKIHGFEA@?=<;:98721/.-,+*)(&%$#! ' = return_n_greatest_chars('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')\n +  and   [' ', '!', '#', '$', '%', '&', ...] = sorted('#<L;n2&RqPUcIXo|}rf?T8zE%7aQAZyK,!i+H Sp{l]mtM-(._xkh[/*d$s9~:)FY=e@Gjuv1')"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023102201521396637, "start": 1738487962.8426678, "stop": 1738487962.842899, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb2bced1492c467ab9ddacbe38a1869d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_44_3.py::test_strings_of_size_equal_to_73", "location": ["tests39_44_3.py", 5, "test_strings_of_size_equal_to_73"], "keywords": {"test_strings_of_size_equal_to_73": 1, "tests39_44_3.py": 1, "Folder_44": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.861425936222076e-05, "start": 1738487962.8503776, "stop": 1738487962.8504462, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "fb2bced1492c467ab9ddacbe38a1869d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
