{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests39_42_4.py::test_strings_of_size_equal_to_59", "location": ["tests39_42_4.py", 5, "test_strings_of_size_equal_to_59"], "keywords": {"test_strings_of_size_equal_to_59": 1, "tests39_42_4.py": 1, "Folder_42": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.475633174180984e-05, "start": 1738488228.1737688, "stop": 1738488228.1738436, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88e01625f13e4e93bc419a8a827c898d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_42_4.py::test_strings_of_size_equal_to_59", "location": ["tests39_42_4.py", 5, "test_strings_of_size_equal_to_59"], "keywords": {"test_strings_of_size_equal_to_59": 1, "tests39_42_4.py": 1, "Folder_42": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q39/dbrx_results_4/Folder_42/tests39_42_4.py", "lineno": 12, "message": "AssertionError: assert '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' == ['~', '|', '{', 'x', 'v', 'u', ...]\n +  where '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' = return_n_greatest_chars('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO')\n +  and   ['~', '|', '{', 'x', 'v', 'u', ...] = sorted('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO', reverse=True)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_59():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=59))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' == ['~', '|', '{', 'x', 'v', 'u', ...]", "E            +  where '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' = return_n_greatest_chars('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO')", "E            +  and   ['~', '|', '{', 'x', 'v', 'u', ...] = sorted('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO', reverse=True)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/dbrx_results_4/Folder_42/tests39_42_4.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_strings_of_size_equal_to_59():", "        selection_range = string.ascii_letters + string.digits + ' ' + \"!#$%&()*+,-./:;<=>?@[]^_{|}~\"", "        s = ''.join(random.sample(selection_range, k=59))", "        if 'descending' == 'ascending':", "            assert return_n_greatest_chars(s) == sorted(s)", "        else:", ">           assert return_n_greatest_chars(s) == sorted(s, reverse=True)", "E           AssertionError: assert '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' == ['~', '|', '{', 'x', 'v', 'u', ...]", "E            +  where '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' = return_n_greatest_chars('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO')", "E            +  and   ['~', '|', '{', 'x', 'v', 'u', ...] = sorted('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO', reverse=True)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q39/dbrx_results_4/Folder_42/tests39_42_4.py", "lineno": 12, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Dbrx_T_D/Q39/dbrx_results_4/Folder_42/tests39_42_4.py", "lineno": 12, "message": "AssertionError: assert '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' == ['~', '|', '{', 'x', 'v', 'u', ...]\n +  where '~|{xvusrqpnmkjihgfedcba^ZYWVTPOMLJGFDCB?<;:6520/.-,+*(&%$#!' = return_n_greatest_chars('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO')\n +  and   ['~', '|', '{', 'x', 'v', 'u', ...] = sorted('g/GPVxed&j%.F#Z^bhLDT<{Y6i*50;k:2cq+aWs~mnC!,?vpr|$MB-fJ(uO', reverse=True)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00021446030586957932, "start": 1738488228.173953, "stop": 1738488228.1741679, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88e01625f13e4e93bc419a8a827c898d", "node": "<WorkerController gw0>"}
{"nodeid": "tests39_42_4.py::test_strings_of_size_equal_to_59", "location": ["tests39_42_4.py", 5, "test_strings_of_size_equal_to_59"], "keywords": {"test_strings_of_size_equal_to_59": 1, "tests39_42_4.py": 1, "Folder_42": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.118711411952972e-05, "start": 1738488228.182134, "stop": 1738488228.1822157, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "88e01625f13e4e93bc419a8a827c898d", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
