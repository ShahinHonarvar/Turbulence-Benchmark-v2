{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_of_length_two", "location": ["tests50_66_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013600700185634196, "start": 1729873451.2967026, "stop": 1729873451.2968395, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_66_4.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016148199938470498, "start": 1729873451.296863, "stop": 1729873451.297025, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_of_length_two", "location": ["tests50_66_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00012961099855601788, "start": 1729873451.2970457, "stop": 1729873451.297176, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_of_length_two", "location": ["tests50_66_4.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.825799937359989e-05, "start": 1729873451.2974389, "stop": 1729873451.2975075, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_66_4.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00017189199570566416, "start": 1729873451.2968585, "stop": 1729873451.297031, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_66_4.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_66_4.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017023600230459124, "start": 1729873451.2972908, "stop": 1729873451.2974615, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_4.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_66_4.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.830000297166407e-05, "start": 1729873451.2978225, "stop": 1729873451.2979114, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_4.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_66_4.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.543099829694256e-05, "start": 1729873451.2994905, "stop": 1729873451.2995763, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_66_4.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 8.150799840223044e-05, "start": 1729873451.2996645, "stop": 1729873451.299746, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_66_4.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.371199899353087e-05, "start": 1729873451.2999532, "stop": 1729873451.3000274, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_anagrams_of_size_n", "location": ["tests50_66_4.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.535300341667607e-05, "start": 1729873451.3002808, "stop": 1729873451.3003767, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_66_4.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.702299576019868e-05, "start": 1729873451.3014052, "stop": 1729873451.3015027, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_66_4.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024752900208113715, "start": 1729873451.3016067, "stop": 1729873451.3018546, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_66_4.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.94200017885305e-05, "start": 1729873451.3112302, "stop": 1729873451.3113303, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_66_4.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00034971899731317535, "start": 1729873451.2973142, "stop": 1729873451.2976642, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_66_4.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_66_4.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010863799980143085, "start": 1729873451.3165295, "stop": 1729873451.3166387, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_66_4.py::test_list_of_anagrams_of_size_n", "location": ["tests50_66_4.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 92 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 92 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 92 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 92 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_4/Folder_66/tests50_66_4.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023588299518451095, "start": 1729873451.3004942, "stop": 1729873451.3007305, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_4.py::test_list_of_anagrams_of_size_n", "location": ["tests50_66_4.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_66_4.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0005127390031702816, "start": 1729873451.3297646, "stop": 1729873451.3302784, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "8c350f1fc71c4656a8f75a9f2ae5a6e1", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
