{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests50_90_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_90_2.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001602789998287335, "start": 1729871533.0564735, "stop": 1729871533.0566347, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_of_length_two", "location": ["tests50_90_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015111600077943876, "start": 1729871533.056545, "stop": 1729871533.0566971, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_90_2.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014568400365533307, "start": 1729871533.056553, "stop": 1729871533.056699, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_90_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_90_2.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015346399595728144, "start": 1729871533.0569053, "stop": 1729871533.0570593, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_of_length_two", "location": ["tests50_90_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00015319899830501527, "start": 1729871533.0569365, "stop": 1729871533.05709, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_of_length_two", "location": ["tests50_90_2.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.06419993750751e-05, "start": 1729871533.057393, "stop": 1729871533.0574744, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_90_2.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.945699664764106e-05, "start": 1729871533.0573857, "stop": 1729871533.0574758, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw1", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_90_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_90_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.602600039215758e-05, "start": 1729871533.0593407, "stop": 1729871533.0594373, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_anagrams_of_size_n", "location": ["tests50_90_2.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011751100100809708, "start": 1729871533.0596056, "stop": 1729871533.0597236, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_90_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_90_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.000104315004136879, "start": 1729871533.059541, "stop": 1729871533.0596457, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_90_2.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.911200034664944e-05, "start": 1729871533.0599062, "stop": 1729871533.0599759, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_90_2.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 7.829000242054462e-05, "start": 1729871533.0611062, "stop": 1729871533.061185, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_90_2.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002442350014462136, "start": 1729871533.0612736, "stop": 1729871533.0615184, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_90_2.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000332180003169924, "start": 1729871533.0569518, "stop": 1729871533.0572844, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_90_2.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001415410006302409, "start": 1729871533.0743961, "stop": 1729871533.0745387, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_90_2.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_90_2.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012733499897876754, "start": 1729871533.0743845, "stop": 1729871533.0745122, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_90_2.py::test_list_of_anagrams_of_size_n", "location": ["tests50_90_2.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 177 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 177 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 177 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 177 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_2/Folder_90/tests50_90_2.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024956700508482754, "start": 1729871533.0598605, "stop": 1729871533.0601106, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_90_2.py::test_list_of_anagrams_of_size_n", "location": ["tests50_90_2.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_90_2.py": 1, "Folder_90": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013436900189844891, "start": 1729871533.0770867, "stop": 1729871533.0772219, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw1", "testrun_uid": "6bae8889401e4764ab35519ce9860de0", "node": "<WorkerController gw1>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
