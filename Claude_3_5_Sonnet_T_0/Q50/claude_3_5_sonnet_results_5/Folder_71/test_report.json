{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_of_length_two", "location": ["tests50_71_5.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015596400044159964, "start": 1729874613.7879126, "stop": 1729874613.7880695, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_71_5.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002621610037749633, "start": 1729874613.7878692, "stop": 1729874613.788132, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_71_5.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_71_5.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002354419993935153, "start": 1729874613.7879357, "stop": 1729874613.788172, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_of_length_two", "location": ["tests50_71_5.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00013555999612435699, "start": 1729874613.788303, "stop": 1729874613.788439, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_of_length_two", "location": ["tests50_71_5.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.64569956320338e-05, "start": 1729874613.788778, "stop": 1729874613.7888653, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_71_5.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00017195600230479613, "start": 1729874613.7884278, "stop": 1729874613.7886007, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_71_5.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_71_5.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010048900003312156, "start": 1729874613.788968, "stop": 1729874613.789069, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw0", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_71_5.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_71_5.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.88780050445348e-05, "start": 1729874613.7899597, "stop": 1729874613.7900488, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_71_5.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.338800009572878e-05, "start": 1729874613.7901456, "stop": 1729874613.7902393, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_71_5.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.660800136160105e-05, "start": 1729874613.790465, "stop": 1729874613.7905319, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_anagrams_of_size_n", "location": ["tests50_71_5.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010585600102785975, "start": 1729874613.790292, "stop": 1729874613.7903981, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_71_5.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.943500142777339e-05, "start": 1729874613.791288, "stop": 1729874613.7913778, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_71_5.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003177110047545284, "start": 1729874613.7883801, "stop": 1729874613.7886984, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_71_5.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001360549940727651, "start": 1729874613.7989354, "stop": 1729874613.799072, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw2", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_71_5.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023400899954140186, "start": 1729874613.7914734, "stop": 1729874613.791708, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_71_5.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011309800174785778, "start": 1729874613.8042402, "stop": 1729874613.804354, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw1", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_71_5.py::test_list_of_anagrams_of_size_n", "location": ["tests50_71_5.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 57 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 57 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 57 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 57 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_5/Folder_71/tests50_71_5.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.000241968002228532, "start": 1729874613.7905152, "stop": 1729874613.7907577, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_71_5.py::test_list_of_anagrams_of_size_n", "location": ["tests50_71_5.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_71_5.py": 1, "Folder_71": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016040299669839442, "start": 1729874613.8096223, "stop": 1729874613.8097835, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw0", "testrun_uid": "eb911c5683634987a2e6a8a44ae0be8f", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
