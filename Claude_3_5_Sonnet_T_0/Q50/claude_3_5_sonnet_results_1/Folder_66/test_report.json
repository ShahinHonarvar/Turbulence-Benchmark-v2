{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_66_1.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00013914000010117888, "start": 1729870131.3190584, "stop": 1729870131.319198, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_of_length_two", "location": ["tests50_66_1.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014185799955157563, "start": 1729870131.3190117, "stop": 1729870131.319154, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_of_length_two", "location": ["tests50_66_1.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001233930015587248, "start": 1729870131.3193877, "stop": 1729870131.3195117, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_of_length_two", "location": ["tests50_66_1.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.239800081355497e-05, "start": 1729870131.3197908, "stop": 1729870131.3198736, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_66_1.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001732869932311587, "start": 1729870131.3191593, "stop": 1729870131.3193333, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_1.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_66_1.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016126099944813177, "start": 1729870131.3196006, "stop": 1729870131.3197622, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_1.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_66_1.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 9.003599552670494e-05, "start": 1729870131.3201187, "stop": 1729870131.3202095, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_1.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_66_1.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00010378499428043142, "start": 1729870131.321696, "stop": 1729870131.3218002, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_66_1.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.798599785426632e-05, "start": 1729870131.3219113, "stop": 1729870131.3220096, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_66_1.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 6.92489993525669e-05, "start": 1729870131.3222532, "stop": 1729870131.3223226, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_anagrams_of_size_n", "location": ["tests50_66_1.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00011603299935813993, "start": 1729870131.322574, "stop": 1729870131.3226902, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_66_1.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.378199709113687e-05, "start": 1729870131.3236384, "stop": 1729870131.3237228, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_66_1.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002360340004088357, "start": 1729870131.3238204, "stop": 1729870131.3240569, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_66_1.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001378640008624643, "start": 1729870131.335075, "stop": 1729870131.3352134, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_66_1.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0003236170014133677, "start": 1729870131.3194416, "stop": 1729870131.3197658, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_66_1.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_66_1.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001331370003754273, "start": 1729870131.336558, "stop": 1729870131.3366916, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_66_1.py::test_list_of_anagrams_of_size_n", "location": ["tests50_66_1.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 92 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 92 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 92 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 92 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_66/tests50_66_1.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00023927599977469072, "start": 1729870131.322821, "stop": 1729870131.3230605, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_66_1.py::test_list_of_anagrams_of_size_n", "location": ["tests50_66_1.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_66_1.py": 1, "Folder_66": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013682099961442873, "start": 1729870131.3399816, "stop": 1729870131.3401191, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "49b20d29b051472a85b0d1ac0e99d2c7", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
