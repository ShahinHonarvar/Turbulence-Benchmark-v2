{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1204, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1204, "_consider_importhook"]}
{"pytest_version": "7.4.4", "$report_type": "SessionStart"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_of_length_two", "location": ["tests50_22_1.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014530100452248007, "start": 1729869683.4083636, "stop": 1729869683.4085093, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_22_1.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00014281900075729936, "start": 1729869683.4083598, "stop": 1729869683.408503, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_22_1.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_22_1.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015626400272594765, "start": 1729869683.4084642, "stop": 1729869683.4086208, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_of_length_two", "location": ["tests50_22_1.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00014402599481400102, "start": 1729869683.4087365, "stop": 1729869683.408881, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_of_length_two", "location": ["tests50_22_1.py", 6, "test_list_of_strings_of_length_two"], "keywords": {"test_list_of_strings_of_length_two": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.259899914264679e-05, "start": 1729869683.4091907, "stop": 1729869683.4092736, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_22_1.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00016568099817959592, "start": 1729869683.4088917, "stop": 1729869683.4090579, "extras": [], "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_22_1.py::test_list_of_many_strings_with_different_lengths", "location": ["tests50_22_1.py", 16, "test_list_of_many_strings_with_different_lengths"], "keywords": {"test_list_of_many_strings_with_different_lengths": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 8.521500421920791e-05, "start": 1729869683.4094188, "stop": 1729869683.4095044, "$report_type": "TestReport", "item_index": 2, "worker_id": "gw2", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_22_1.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_22_1.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 8.331099525094032e-05, "start": 1729869683.4105144, "stop": 1729869683.4105978, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_22_1.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 9.74830036284402e-05, "start": 1729869683.4106972, "stop": 1729869683.4107952, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_two_strings_of_different_lengths", "location": ["tests50_22_1.py", 11, "test_list_of_two_strings_of_different_lengths"], "keywords": {"test_list_of_two_strings_of_different_lengths": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 7.127200660761446e-05, "start": 1729869683.411043, "stop": 1729869683.4111142, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_anagrams_of_size_n", "location": ["tests50_22_1.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00012425699969753623, "start": 1729869683.4113326, "stop": 1729869683.4114573, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_22_1.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 9.429299825569615e-05, "start": 1729869683.41237, "stop": 1729869683.4124644, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_22_1.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_lowercase_char_1():", "        s = 'A' * 50", "        l = [s[:i] + 'a' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 58, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 58, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 'AAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00024385999859077856, "start": 1729869683.4125543, "stop": 1729869683.4127984, "extras": [], "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_including_one_same_lowercase_char_1", "location": ["tests50_22_1.py", 54, "test_list_of_strings_including_one_same_lowercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_lowercase_char_1": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011749099940061569, "start": 1729869683.4253936, "stop": 1729869683.4255114, "$report_type": "TestReport", "item_index": 6, "worker_id": "gw0", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw0>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_22_1.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_strings_including_one_same_uppercase_char_1():", "        s = 'a' * 50", "        l = [s[:i] + 'A' + s[i+1:] for i in range(len(s))]", ">       assert if_contains_anagrams(l)", "E       AssertionError: assert False", "E        +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 43, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 43, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.00033264500234508887, "start": 1729869683.4087472, "stop": 1729869683.4090803, "extras": [], "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_22_1.py::test_list_of_strings_including_one_same_uppercase_char_1", "location": ["tests50_22_1.py", 39, "test_list_of_strings_including_one_same_uppercase_char_1"], "keywords": {"test_list_of_strings_including_one_same_uppercase_char_1": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014610899961553514, "start": 1729869683.4260123, "stop": 1729869683.4261591, "$report_type": "TestReport", "item_index": 4, "worker_id": "gw1", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw1>"}
{"nodeid": "tests50_22_1.py::test_list_of_anagrams_of_size_n", "location": ["tests50_22_1.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 72 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 72 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def test_list_of_anagrams_of_size_n():", "        d = {3:'aBc', 4:'AbCd', 5:'aBCdE', 6:'AbCdEf'}", "        for i in range(3,7):", "            l = [''.join(j) for j in itertools.permutations(d[i])]", "            if i == 3:", "                if 72 < 16:", "                    assert if_contains_anagrams(l)", "                else:", "                    assert not if_contains_anagrams(l)", "            elif i == 4:", "                if 72 < 277:", ">                  assert if_contains_anagrams(l)", "E                  AssertionError: assert False", "E                   +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 33, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/Claude_T_0/Q50/claude_3_5_sonnet_results_1/Folder_22/tests50_22_1.py", "lineno": 33, "message": "AssertionError: assert False\n +  where False = if_contains_anagrams(['AbCd', 'AbdC', 'ACbd', 'ACdb', 'AdbC', 'AdCb', ...])"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0002732700013439171, "start": 1729869683.4115908, "stop": 1729869683.4118648, "extras": [], "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw2>"}
{"nodeid": "tests50_22_1.py::test_list_of_anagrams_of_size_n", "location": ["tests50_22_1.py", 21, "test_list_of_anagrams_of_size_n"], "keywords": {"test_list_of_anagrams_of_size_n": 1, "tests50_22_1.py": 1, "Folder_22": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001398719978169538, "start": 1729869683.428623, "stop": 1729869683.4287632, "$report_type": "TestReport", "item_index": 3, "worker_id": "gw2", "testrun_uid": "9a91099d004b4519a59e22f28d283ad3", "node": "<WorkerController gw2>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
