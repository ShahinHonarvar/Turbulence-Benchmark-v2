{
  "parameter(s)": [
    6,
    5,
    10
  ],
  "test_result_is_smaller": [
    "failed",
    "assert 5 == (6 - 6)\n +  where 6 = len('jHJ(\"g')",
    0.00027
  ],
  "test_result_is_larger": [
    "failed",
    "assert 0 == (6 - 1)",
    0.00045
  ],
  "test_result_is_in_given_string": [
    "failed",
    "assert '%' in \"'MGd(R\"\n +  where '%' = return_nth_smallest_ascii('5h8nI\\'MGd(R|tl,o?P.#:;9W*fAgbH~F<\"Kk)NZ>w04U!u/mv[X6@+Jaie13_`^DVC}LpSTcY7&z yxsB\\\\=r{%OE2jq$-')",
    0.00026
  ]
}