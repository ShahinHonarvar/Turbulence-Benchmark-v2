{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"category": "PytestAssertRewriteWarning", "filename": "/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1277, "message": "Module already imported so cannot be rewritten: anyio", "$report_type": "WarningMessage", "when": "config", "location": ["/data/miniconda3/envs/benchmark/lib/python3.12/site-packages/_pytest/config/__init__.py", 1277, "_consider_importhook"]}
{"pytest_version": "8.3.3", "$report_type": "SessionStart"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003810478374361992, "start": 1738438760.5221534, "stop": 1738438760.5225348, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bc1aa57e8fcb4043947b006a26e876a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0001634536311030388, "start": 1738438760.523028, "stop": 1738438760.5231917, "extras": [], "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bc1aa57e8fcb4043947b006a26e876a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_one_integer", "location": ["tests58_90_4.py", 18, "test_matrix_of_one_integer"], "keywords": {"test_matrix_of_one_integer": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017643999308347702, "start": 1738438760.5234807, "stop": 1738438760.5236576, "$report_type": "TestReport", "item_index": 0, "worker_id": "gw0", "testrun_uid": "bc1aa57e8fcb4043947b006a26e876a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003061024472117424, "start": 1738438760.524637, "stop": 1738438760.5249434, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bc1aa57e8fcb4043947b006a26e876a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_0/Q58/starcoder2_15B_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-76,  23],\\n        [ -2, -61],\\n        [-35,  40],\\n        [  1, -40],\\n        [ -1,  84],\\n        [-61, -73],\\n        [ 67, -88],\\n        [ 63,  93],\\n        [ 95,  90],\\n        [ 68,  86],\\n        [-97, -61],\\n        [ 16,  88],\\n        [-67,  43],\\n        [ 20,  64],\\n        [ 59, -18],\\n        [-84,  78],\\n        [ 27,  50],\\n        [ 45, -85],\\n        [ 90, -17],\\n        [-94,  15],\\n        [ -6,  -4],\\n        [ 10,  59],\\n        [-48,  58],\\n        [ 96, -80],\\n        [ 41, -92],\\n        [-27, -49],\\n        [-85, -20],\\n        [-86,  87],\\n        [ 90,  37],\\n        [-97, -15],\\n        [ 34,  22],\\n        [ 29,   4],\\n        [ 82,  35],\\n        [ 21,  75],\\n        [ 76,  49],\\n        [100,  45],\\n        [-52, -59],\\n        [-29,  72],\\n        [ -9, -82],\\n        [  4,  74],\\n        [-52,  52],\\n        [-55,  50],\\n        [-88,  52],\\n        [-95,  53],\\n        [  0, -70],\\n        [ 36, -62],\\n        [ 40,  90],\\n        [ 75,  44],\\n        [ 28,  61],\\n        [ 67,  81],\\n        [-43, -55],\\n        [ 62,  37],\\n        [ 38,  45],\\n        [-51, -77],\\n        [ 85,  10],\\n        [ 62,  68],\\n        [ 14,  77],\\n        [ 50,  -8],\\n        [ 18,  61],\\n        [  0, -91],\\n        [-81,   2],\\n        [ 47,   5],\\n        [ 77,  74],\\n        [  5,  54],\\n        [ 74,  42],\\n        [ -2, -61],\\n        [ 97,  31],\\n        [ 61, -33],\\n        [  2, -56],\\n        [100,   3],\\n        [ 63, -20],\\n        [-54,  27],\\n        [ 39,   4],\\n        [-78, -45],\\n        [ 67, -56],\\n        [ 57, -47],\\n        [ 66, -10],\\n        [-72,  82],\\n        [-37,  33],\\n        [ 75,  88],\\n        [-79,  23],\\n        [ 23,  -9],\\n        [ 86,  18],\\n        [-38, -97],\\n        [-41,  82],\\n        [ 77,  26],\\n        [-84,  22],\\n        [ 40, -19]]))"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-76,  23],\\n        [ -2, -61],\\n        [-35,  40],\\n        [  1, -40],\\n        [ -1,  84],\\n        [-61, -73],\\n        [ 67, -88],\\n        [ 63,  93],\\n        [ 95,  90],\\n        [ 68,  86],\\n        [-97, -61],\\n        [ 16,  88],\\n        [-67,  43],\\n        [ 20,  64],\\n        [ 59, -18],\\n        [-84,  78],\\n        [ 27,  50],\\n        [ 45, -85],\\n        [ 90, -17],\\n        [-94,  15],\\n        [ -6,  -4],\\n        [ 10,  59],\\n        [-48,  58],\\n        [ 96, -80],\\n        [ 41, -92],\\n        [-27, -49],\\n        [-85, -20],\\n        [-86,  87],\\n        [ 90,  37],\\n        [-97, -15],\\n        [ 34,  22],\\n        [ 29,   4],\\n        [ 82,  35],\\n        [ 21,  75],\\n        [ 76,  49],\\n        [100,  45],\\n        [-52, -59],\\n        [-29,  72],\\n        [ -9, -82],\\n        [  4,  74],\\n        [-52,  52],\\n        [-55,  50],\\n        [-88,  52],\\n        [-95,  53],\\n        [  0, -70],\\n        [ 36, -62],\\n        [ 40,  90],\\n        [ 75,  44],\\n        [ 28,  61],\\n        [ 67,  81],\\n        [-43, -55],\\n        [ 62,  37],\\n        [ 38,  45],\\n        [-51, -77],\\n        [ 85,  10],\\n        [ 62,  68],\\n        [ 14,  77],\\n        [ 50,  -8],\\n        [ 18,  61],\\n        [  0, -91],\\n        [-81,   2],\\n        [ 47,   5],\\n        [ 77,  74],\\n        [  5,  54],\\n        [ 74,  42],\\n        [ -2, -61],\\n        [ 97,  31],\\n        [ 61, -33],\\n        [  2, -56],\\n        [100,   3],\\n        [ 63, -20],\\n        [-54,  27],\\n        [ 39,   4],\\n        [-78, -45],\\n        [ 67, -56],\\n        [ 57, -47],\\n        [ 66, -10],\\n        [-72,  82],\\n        [-37,  33],\\n        [ 75,  88],\\n        [-79,  23],\\n        [ 23,  -9],\\n        [ 86,  18],\\n        [-38, -97],\\n        [-41,  82],\\n        [ 77,  26],\\n        [-84,  22],\\n        [ 40, -19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15B_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @ignore_warnings", "    def test_matrix_of_having_176_integers():", "        if 176 % 2 == 0:", "            input_matrix = [[random.randint(-100, 100) for _ in range(2)] for _ in range(176 // 2)]", "            input_matrix = np.asmatrix(input_matrix)", "        else:", "            input_matrix = [[random.randint(-100, 100) for _ in range(176)]]", "            input_matrix = np.asmatrix(input_matrix)", "    ", ">       assert submatrix_with_n_numbers(input_matrix) == 1", "E       assert 0 == 1", "E        +  where 0 = submatrix_with_n_numbers(matrix([[-76,  23],\\n        [ -2, -61],\\n        [-35,  40],\\n        [  1, -40],\\n        [ -1,  84],\\n        [-61, -73],\\n        [ 67, -88],\\n        [ 63,  93],\\n        [ 95,  90],\\n        [ 68,  86],\\n        [-97, -61],\\n        [ 16,  88],\\n        [-67,  43],\\n        [ 20,  64],\\n        [ 59, -18],\\n        [-84,  78],\\n        [ 27,  50],\\n        [ 45, -85],\\n        [ 90, -17],\\n        [-94,  15],\\n        [ -6,  -4],\\n        [ 10,  59],\\n        [-48,  58],\\n        [ 96, -80],\\n        [ 41, -92],\\n        [-27, -49],\\n        [-85, -20],\\n        [-86,  87],\\n        [ 90,  37],\\n        [-97, -15],\\n        [ 34,  22],\\n        [ 29,   4],\\n        [ 82,  35],\\n        [ 21,  75],\\n        [ 76,  49],\\n        [100,  45],\\n        [-52, -59],\\n        [-29,  72],\\n        [ -9, -82],\\n        [  4,  74],\\n        [-52,  52],\\n        [-55,  50],\\n        [-88,  52],\\n        [-95,  53],\\n        [  0, -70],\\n        [ 36, -62],\\n        [ 40,  90],\\n        [ 75,  44],\\n        [ 28,  61],\\n        [ 67,  81],\\n        [-43, -55],\\n        [ 62,  37],\\n        [ 38,  45],\\n        [-51, -77],\\n        [ 85,  10],\\n        [ 62,  68],\\n        [ 14,  77],\\n        [ 50,  -8],\\n        [ 18,  61],\\n        [  0, -91],\\n        [-81,   2],\\n        [ 47,   5],\\n        [ 77,  74],\\n        [  5,  54],\\n        [ 74,  42],\\n        [ -2, -61],\\n        [ 97,  31],\\n        [ 61, -33],\\n        [  2, -56],\\n        [100,   3],\\n        [ 63, -20],\\n        [-54,  27],\\n        [ 39,   4],\\n        [-78, -45],\\n        [ 67, -56],\\n        [ 57, -47],\\n        [ 66, -10],\\n        [-72,  82],\\n        [-37,  33],\\n        [ 75,  88],\\n        [-79,  23],\\n        [ 23,  -9],\\n        [ 86,  18],\\n        [-38, -97],\\n        [-41,  82],\\n        [ 77,  26],\\n        [-84,  22],\\n        [ 40, -19]]))"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "Q58/starcoder2_15B_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/data/ASE2024_GitHub/Turbulence-Benchmark-main/StarCoder2_15B_T_0/Q58/starcoder2_15B_results_4/Folder_90/tests58_90_4.py", "lineno": 38, "message": "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-76,  23],\\n        [ -2, -61],\\n        [-35,  40],\\n        [  1, -40],\\n        [ -1,  84],\\n        [-61, -73],\\n        [ 67, -88],\\n        [ 63,  93],\\n        [ 95,  90],\\n        [ 68,  86],\\n        [-97, -61],\\n        [ 16,  88],\\n        [-67,  43],\\n        [ 20,  64],\\n        [ 59, -18],\\n        [-84,  78],\\n        [ 27,  50],\\n        [ 45, -85],\\n        [ 90, -17],\\n        [-94,  15],\\n        [ -6,  -4],\\n        [ 10,  59],\\n        [-48,  58],\\n        [ 96, -80],\\n        [ 41, -92],\\n        [-27, -49],\\n        [-85, -20],\\n        [-86,  87],\\n        [ 90,  37],\\n        [-97, -15],\\n        [ 34,  22],\\n        [ 29,   4],\\n        [ 82,  35],\\n        [ 21,  75],\\n        [ 76,  49],\\n        [100,  45],\\n        [-52, -59],\\n        [-29,  72],\\n        [ -9, -82],\\n        [  4,  74],\\n        [-52,  52],\\n        [-55,  50],\\n        [-88,  52],\\n        [-95,  53],\\n        [  0, -70],\\n        [ 36, -62],\\n        [ 40,  90],\\n        [ 75,  44],\\n        [ 28,  61],\\n        [ 67,  81],\\n        [-43, -55],\\n        [ 62,  37],\\n        [ 38,  45],\\n        [-51, -77],\\n        [ 85,  10],\\n        [ 62,  68],\\n        [ 14,  77],\\n        [ 50,  -8],\\n        [ 18,  61],\\n        [  0, -91],\\n        [-81,   2],\\n        [ 47,   5],\\n        [ 77,  74],\\n        [  5,  54],\\n        [ 74,  42],\\n        [ -2, -61],\\n        [ 97,  31],\\n        [ 61, -33],\\n        [  2, -56],\\n        [100,   3],\\n        [ 63, -20],\\n        [-54,  27],\\n        [ 39,   4],\\n        [-78, -45],\\n        [ 67, -56],\\n        [ 57, -47],\\n        [ 66, -10],\\n        [-72,  82],\\n        [-37,  33],\\n        [ 75,  88],\\n        [-79,  23],\\n        [ 23,  -9],\\n        [ 86,  18],\\n        [-38, -97],\\n        [-41,  82],\\n        [ 77,  26],\\n        [-84,  22],\\n        [ 40, -19]]))"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0009223204106092453, "start": 1738438760.5252357, "stop": 1738438760.5261586, "extras": [], "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bc1aa57e8fcb4043947b006a26e876a5", "node": "<WorkerController gw0>"}
{"nodeid": "tests58_90_4.py::test_matrix_of_having_176_integers", "location": ["tests58_90_4.py", 28, "test_matrix_of_having_176_integers"], "keywords": {"test_matrix_of_having_176_integers": 1, "__wrapped__": 1, "tests58_90_4.py": 1, "Folder_90": 1, "": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000885235145688057, "start": 1738438760.543225, "stop": 1738438760.5441117, "$report_type": "TestReport", "item_index": 1, "worker_id": "gw0", "testrun_uid": "bc1aa57e8fcb4043947b006a26e876a5", "node": "<WorkerController gw0>"}
{"exitstatus": 2, "$report_type": "SessionFinish"}
