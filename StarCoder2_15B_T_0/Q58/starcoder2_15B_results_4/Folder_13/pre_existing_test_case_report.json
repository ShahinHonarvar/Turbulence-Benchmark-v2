{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-63, -48,  35, -11, -84,  91, -67, -66, -44,  52,  -1,  52, -58,\\n          -7,  46, -85,  -9, -70,  18,  -7,  41,  90, -62,  96, -98, -83,\\n          18,   7,   6,   7,  61,   3, -33, -85,  67,  65,   3,  99,  32,\\n         -53,  72,  96, -94,  90, -48,   3, -50, -78, -36, -55,  45,  41,\\n          69, -64,  50, -86,  73, -97, -64, -38, 100,  -8,  33,  50,  83,\\n         -64,  63,  44, -10, -12,   7, -52, -90,  37,  55, -47,  88,  76,\\n          -6,   3,  14,  92, -78,  83,  -5,  98,  59,  95,  38,  40, -76,\\n         -88, -99, -45,  16, -65,  99, -88,  51,  15, -84, -89, -27,  69,\\n           9,  17, -50,  59,  12,  62,  21,  78, -74, -46,  65,  31, -17,\\n          73,   9,  33,  95, -73, -26,  79, -27, -21, -94, -26,  80,  11,\\n          42,  31, -67,  -6, -74,  36, -67,  75,  28,  12, -26, -74,  21,\\n         -90,  25, -45,  91, -14,  93,  51,  82,  23,  40,  50,  75, -44,\\n          -6,   1,  74,  14,  -6, -42,  15,  -5, -14, -84, -85,  68,  -3,\\n         -46,  90, -80, -89, -15,   3]]))",
    0.00069
  ]
}