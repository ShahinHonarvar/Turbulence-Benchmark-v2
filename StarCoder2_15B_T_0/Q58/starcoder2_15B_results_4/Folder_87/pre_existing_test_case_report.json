{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00015
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ 95,  43],\\n        [-50,  49],\\n        [ 89, -50],\\n        [-44,  67],\\n        [-64,  71],\\n        [-72,  64],\\n        [ 51, -37],\\n        [-44,  49],\\n        [-80, -75],\\n        [ -8, -18],\\n        [ 44,  77],\\n        [-54,  36],\\n        [ -3, -37],\\n        [ 68, -50],\\n        [-14, -94],\\n        [ 40, -61],\\n        [ 91, -28],\\n        [ 54, -88],\\n        [-58, -12],\\n        [ 35,  76],\\n        [ 36,  99],\\n        [ 82,  32],\\n        [ 95,  78],\\n        [ -5,  24],\\n        [ 78,  19],\\n        [ 92, -39],\\n        [-24,  26],\\n        [ 47, -15],\\n        [ 43,  88],\\n        [-89, -17],\\n        [ -2, -61],\\n        [  6, -93],\\n        [ 55,  10],\\n        [ 48,  88],\\n        [-98, -47],\\n        [-51, -88],\\n        [-64,  78],\\n        [ 57, -14],\\n        [-69, -36],\\n        [ -4,   5],\\n        [ 40,  20],\\n        [ 35,  25],\\n        [-58,  96],\\n        [-44,  29],\\n        [-36, -51],\\n        [-98, -28],\\n        [ 13,   5],\\n        [ 98,  90]]))",
    0.00103
  ]
}