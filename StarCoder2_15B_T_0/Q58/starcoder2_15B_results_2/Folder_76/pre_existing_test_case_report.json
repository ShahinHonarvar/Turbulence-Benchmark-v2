{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -20,   49,  -86,  -62,  -86,   29,   41,   64,  -25,  -72,\\n          -84,   89,   81,  -61,   86,  -52,  -63,   55,  -32,  -43,\\n          -96,  -80,   63,    5,  -38,   65,  -32,  -68,   59,   10,\\n           -4,  100,  -23,  -18,   44,  -29,  -78,   20,   54,  -89,\\n           50,   18,   24,  -26,   28,  -93,   73,  -34,   28,  -25,\\n          -12,   96,   39,  -95,  -65,    6,   11,   88,   45,  -65,\\n           71,   54, -100,  -34,   92,   45,  -71,   87,   10,  -46,\\n           -3,   21,  -20,   71,   14,  -39,   68,  -20,   -5,   19,\\n          -69,  -62,  -62,  -72,  -85,  -41,   22,  100,   -1,  -12,\\n          -30,   57,  -67,  -81,  -15,  -72,  -99,  -69,   61,  -34,\\n          -95,   74,    6,  -58,  -45,   12,  -77,  -46,   84,  -57,\\n          -23,  -33,  -72,   11,   95,    4,   69,  -39,  -52,   81,\\n           47,   24,  -34, -100,   60,   81,   40,  -15,  -82,   22,\\n          -16,   -9,  -77,   -7,   44,  -72,  -62,  -63,  -20,  -74,\\n           91,  -95,   96,   60,  -89,  -96,  -56,   69,  -49,  -40,\\n          -98,  -69,   43,   61,   19,    2,   49,  -45,  -21]]))",
    0.00305
  ]
}