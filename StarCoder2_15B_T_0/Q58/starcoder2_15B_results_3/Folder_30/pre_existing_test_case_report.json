{
  "parameter(s)": [
    94
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00012
  ],
  "test_matrix_of_having_94_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[  38,  -17],\\n        [  80,   -6],\\n        [  97,  -52],\\n        [ -53,   65],\\n        [ -49,   38],\\n        [  66,  -53],\\n        [  85,  -90],\\n        [ -68,  -73],\\n        [ -60,   46],\\n        [ -53,  -51],\\n        [  56,  -13],\\n        [  58,   -5],\\n        [   8,  -88],\\n        [ -53,  -50],\\n        [  -2,  -89],\\n        [  96,   84],\\n        [ -83,  -76],\\n        [  71,   85],\\n        [ -44,  -12],\\n        [ -49,  -97],\\n        [  10,  -18],\\n        [  71,   77],\\n        [  83,   68],\\n        [  32,  -50],\\n        [  68,  -19],\\n        [  96, -100],\\n        [  41,  -97],\\n        [  92,  -19],\\n        [ -50,   60],\\n        [ -66,  -62],\\n        [ -14,   22],\\n        [ -67,  -61],\\n        [  68,   41],\\n        [  85,  -56],\\n        [  17,   23],\\n        [  10,   78],\\n        [  33,  -87],\\n        [ -58,  -72],\\n        [ -47,  -25],\\n        [ -11,   84],\\n        [ -73,   -8],\\n        [ -66,  -86],\\n        [ -14,  -79],\\n        [  20,  -11],\\n        [ -90,  -94],\\n        [ -93,  -10],\\n        [ -14,   10]]))",
    0.00064
  ]
}