{
  "parameter(s)": [
    175
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00037
  ],
  "test_matrix_of_having_175_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[-51, -73, -66,  26, -82,  15, -24, -14,  34,  42,  67,  82,  95,\\n          20,  36, -53,  75,   8,  68, -80,  46,  86,  31, -42, -89, -18,\\n         -40,  61,   2, -31,  29, -41,  19, -80,  98, -26,  45, -60,  20,\\n         -55,  42,  55,  -1,  -3,  11, -82,  96,  73,  99, -26,  93,  70,\\n         -79,  70, -70, -61,  99,  47,  91,  38,  86,  65, -13, -38, -81,\\n          23,  92,  26, -63,  22,  65, -21, -15,  -1,   2,  11, -34,  96,\\n          99,  28, -53,  47,  91,  16,  31,  15,  24, -11, -56,  65, -66,\\n          72, -73, -68, -16, -10, -98,  16,  87,  46, -43, -28, -17, -30,\\n         -99,  92, -84, -84,  93,  10,  95,  66,  -3, -74,  15, -13,  92,\\n          16, -39,  -8, -60,  84, -20, -27, -87,  39,  -7,  -3,  42,  99,\\n         -56,  47, -37, -19,  -8,  86, -33, -79, -29, -43, -48, -92, -16,\\n         -83, -15,  77,  22,  40,  72, -16,  -2,  62,  69, -89,  99, -55,\\n         -52, -14, -57,  46, -90, -94,  -2, -73,   7,  44,  99,  60,  -9,\\n           4,  76,   5,  88,  98,  22]]))",
    0.00068
  ]
}