{
  "parameter(s)": [
    159
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00017
  ],
  "test_matrix_of_having_159_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -63,  -14,   79,   71,   -7,   16,  100,   52,  -49,  -96,\\n           21,  -49,  -37,   30,  -62,   61,  -76,   33,  -83,  -58,\\n          -29,  -75,   73,  -96,  -26,    6,    8,  -60,   32,   70,\\n          -84,  -57,  -32,  -89,  -27,   70,  -21,  -17,   11,  -26,\\n          -27,   10,   86,  -27,   39,   96,   -8,   38,   -8,   95,\\n           15,  -73,   55,    6,   70,  -67,  -17,   72,  -11,   26,\\n           19,   98,  -83,   52,  -99,  -20,   15,  -73, -100,  -20,\\n          -28,  -80,  -89,   44,   67,  -16,    3,  -90,   23,   33,\\n          -57,  -67,  -90,  -12,   80,  -84,   -7,  -74,  -88,  -33,\\n            2,  -70,   96,  -14,  -17,  -79,  -80,   87,  -35,  100,\\n          -80, -100,  -33,   68,   42,  -50,  -15,   91,   93,  -33,\\n           81,  -32,   64,  -55,   97,   34,   90,   72,   18,  -67,\\n           53,   38,   -9,  -39,   41,  -86,  -31,  -68,   73,   28,\\n           90,  -11,  -15,   22,   76,    6,  -22,   85,   -3,   93,\\n           56,    9,   18,  -10,  -28,   64,   83,   95,   39,   38,\\n           65,  -28,   -1,  -31,   50,    0,   18,   32,  -14]]))",
    0.00065
  ]
}