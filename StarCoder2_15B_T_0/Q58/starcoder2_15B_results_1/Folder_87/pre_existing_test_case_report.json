{
  "parameter(s)": [
    96
  ],
  "test_matrix_of_one_integer": [
    "passed",
    "",
    0.00011
  ],
  "test_matrix_of_having_96_integers": [
    "failed",
    "assert 0 == 1\n +  where 0 = submatrix_with_n_numbers(matrix([[ -69,   34],\\n        [ -16,   23],\\n        [ -12,  -88],\\n        [ -97,   -7],\\n        [ -34,   65],\\n        [ -89,  -33],\\n        [ -32,   -9],\\n        [  55,   -6],\\n        [   0,   42],\\n        [  -1,   93],\\n        [ -22,   75],\\n        [  -2,   95],\\n        [  77,  -59],\\n        [ -91,  -21],\\n        [ -49,   57],\\n        [  92,  -85],\\n        [  48,   34],\\n        [ -88,   95],\\n        [   2,   -5],\\n        [ -44,   74],\\n        [ -73,   39],\\n        [   4,  -71],\\n        [-100,  -91],\\n        [ -29,   94],\\n        [   0,    2],\\n        [ -88,  -43],\\n        [ -13,   63],\\n        [  88,   26],\\n        [   6,   47],\\n        [ -46,    9],\\n        [  79,  -33],\\n        [ -38,    0],\\n        [ -11,  -71],\\n        [  37,   60],\\n        [ -28,   -1],\\n        [ -97,  -19],\\n        [  16,   49],\\n        [ -98,   -9],\\n        [  59,  -91],\\n        [  65,  -86],\\n        [   9,  -27],\\n        [ -97,  -89],\\n        [ -30,   44],\\n        [  78,   51],\\n        [  32,    0],\\n        [  98,  -72],\\n        [ -95,  -49],\\n        [  92,   -8]]))",
    0.00059
  ]
}