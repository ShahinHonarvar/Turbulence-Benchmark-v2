{
  "parameter(s)": [
    34,
    90,
    14,
    39
  ],
  "test_string_of_distinct_chars": [
    "passed",
    "",
    0.00017
  ],
  "test_string_of_similar_chars": [
    "passed",
    "",
    0.00023
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  a  a  a  ', '  a  a  a  a  a  ', '  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  ', ...}\n +  where {'  a  a  a  a  ', '  a  a  a  a  a  ', '  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  ', ...} = palindromes_of_specific_lengths(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00027
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert {'           ...       ', ...} == set()\n  Extra items in the left set:\n  '                                  '\n  '                                    '\n  '              '\n  '                    '\n  '                                '\n  '               '...\n  \n  ...Full output truncated (51 lines hidden), use '-vv' to show",
    0.00085
  ],
  "test_string_of_similar_nums": [
    "failed",
    "AssertionError: assert not {'00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', ...}\n +  where {'00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', ...} = palindromes_of_specific_lengths('000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000')",
    0.00045
  ]
}