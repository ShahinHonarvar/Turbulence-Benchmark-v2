{
  "parameter(s)": [
    44
  ],
  "test_string_of_many_chars": [
    "passed",
    "",
    0.00018
  ],
  "test_string_of_spaces_and_letters": [
    "failed",
    "AssertionError: assert not {'  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', ...}\n +  where {'  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', '  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  ', ...} = palindrome_of_length_at_least_n(' a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a  a ')",
    0.00389
  ],
  "test_string_of_similar_chars_of_length_44": [
    "failed",
    "AssertionError: assert set() == {'aaaaaaaaaaa...aaaaaaaaaaaa'}\n  Extra items in the right set:\n  'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n  Full diff:\n  - {'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}\n  + set()",
    0.00043
  ],
  "test_string_of_spaces": [
    "failed",
    "AssertionError: assert not {'                                            ', '                                             ', '                                              ', '                                               ', '                                                ', '                                                 ', ...}\n +  where {'                                            ', '                                             ', '                                              ', '                                               ', '                                                ', '                                                 ', ...} = palindrome_of_length_at_least_n('                                                                                        ')",
    0.00041
  ]
}